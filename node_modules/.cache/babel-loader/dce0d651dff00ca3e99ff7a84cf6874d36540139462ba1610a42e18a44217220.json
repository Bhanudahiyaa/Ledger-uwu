{"ast":null,"code":"var __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\n\n// src/parser/json.ts\nimport { getCoords } from \"@turf/invariant\";\nimport { flattenEach } from \"@turf/meta\";\nimport { geojsonRewind } from \"../utils/util\";\nfunction json(data, cfg) {\n  const {\n    x,\n    y,\n    x1,\n    y1,\n    coordinates,\n    geometry\n  } = cfg;\n  const resultData = [];\n  if (!Array.isArray(data)) {\n    return {\n      dataArray: []\n    };\n  }\n  if (geometry) {\n    data.filter(item => {\n      return item[geometry] && item[geometry].type && item[geometry].coordinates && item[geometry].coordinates.length > 0;\n    }).forEach((col, index) => {\n      const rewindGeometry = geojsonRewind(col[geometry]);\n      flattenEach(rewindGeometry, currentFeature => {\n        const coord = getCoords(currentFeature);\n        const dataItem = __spreadProps(__spreadValues({}, col), {\n          _id: index,\n          coordinates: coord\n        });\n        resultData.push(dataItem);\n      });\n    });\n    return {\n      dataArray: resultData\n    };\n  }\n  for (let featureIndex = 0; featureIndex < data.length; featureIndex++) {\n    const col = data[featureIndex];\n    let coords = [];\n    if (coordinates) {\n      let type = \"Polygon\";\n      if (!Array.isArray(coordinates[0])) {\n        type = \"Point\";\n      }\n      if (Array.isArray(coordinates[0]) && !Array.isArray(coordinates[0][0])) {\n        type = \"LineString\";\n      }\n      const rewindGeometry = geojsonRewind({\n        type,\n        coordinates: col[coordinates]\n      });\n      coords = rewindGeometry.coordinates;\n    } else if (x && y && x1 && y1) {\n      const from = [parseFloat(col[x]), parseFloat(col[y])];\n      const to = [parseFloat(col[x1]), parseFloat(col[y1])];\n      coords = [from, to];\n    } else if (x && y) {\n      coords = [parseFloat(col[x]), parseFloat(col[y])];\n    }\n    const dataItem = __spreadProps(__spreadValues({}, col), {\n      _id: featureIndex,\n      coordinates: coords\n    });\n    resultData.push(dataItem);\n  }\n  return {\n    dataArray: resultData\n  };\n}\nexport { json as default };","map":{"version":3,"names":["__defProp","Object","defineProperty","__defProps","defineProperties","__getOwnPropDescs","getOwnPropertyDescriptors","__getOwnPropSymbols","getOwnPropertySymbols","__hasOwnProp","prototype","hasOwnProperty","__propIsEnum","propertyIsEnumerable","__defNormalProp","obj","key","value","enumerable","configurable","writable","__spreadValues","a","b","prop","call","__spreadProps","getCoords","flattenEach","geojsonRewind","json","data","cfg","x","y","x1","y1","coordinates","geometry","resultData","Array","isArray","dataArray","filter","item","type","length","forEach","col","index","rewindGeometry","currentFeature","coord","dataItem","_id","push","featureIndex","coords","from","parseFloat","to","default"],"sources":["/Users/bhanudahiya/Desktop/ledger-IQ/node_modules/@antv/l7-source/es/parser/json.js"],"sourcesContent":["var __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\n\n// src/parser/json.ts\nimport { getCoords } from \"@turf/invariant\";\nimport { flattenEach } from \"@turf/meta\";\nimport { geojsonRewind } from \"../utils/util\";\nfunction json(data, cfg) {\n  const { x, y, x1, y1, coordinates, geometry } = cfg;\n  const resultData = [];\n  if (!Array.isArray(data)) {\n    return {\n      dataArray: []\n    };\n  }\n  if (geometry) {\n    data.filter((item) => {\n      return item[geometry] && item[geometry].type && item[geometry].coordinates && item[geometry].coordinates.length > 0;\n    }).forEach((col, index) => {\n      const rewindGeometry = geojsonRewind(col[geometry]);\n      flattenEach(rewindGeometry, (currentFeature) => {\n        const coord = getCoords(currentFeature);\n        const dataItem = __spreadProps(__spreadValues({}, col), {\n          _id: index,\n          coordinates: coord\n        });\n        resultData.push(dataItem);\n      });\n    });\n    return {\n      dataArray: resultData\n    };\n  }\n  for (let featureIndex = 0; featureIndex < data.length; featureIndex++) {\n    const col = data[featureIndex];\n    let coords = [];\n    if (coordinates) {\n      let type = \"Polygon\";\n      if (!Array.isArray(coordinates[0])) {\n        type = \"Point\";\n      }\n      if (Array.isArray(coordinates[0]) && !Array.isArray(coordinates[0][0])) {\n        type = \"LineString\";\n      }\n      const rewindGeometry = geojsonRewind({\n        type,\n        coordinates: col[coordinates]\n      });\n      coords = rewindGeometry.coordinates;\n    } else if (x && y && x1 && y1) {\n      const from = [parseFloat(col[x]), parseFloat(col[y])];\n      const to = [parseFloat(col[x1]), parseFloat(col[y1])];\n      coords = [from, to];\n    } else if (x && y) {\n      coords = [parseFloat(col[x]), parseFloat(col[y])];\n    }\n    const dataItem = __spreadProps(__spreadValues({}, col), {\n      _id: featureIndex,\n      coordinates: coords\n    });\n    resultData.push(dataItem);\n  }\n  return {\n    dataArray: resultData\n  };\n}\nexport {\n  json as default\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}