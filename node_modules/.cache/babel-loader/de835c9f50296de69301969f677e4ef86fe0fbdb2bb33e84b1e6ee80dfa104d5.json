{"ast":null,"code":"import { __awaiter, __decorate, __metadata } from \"tslib\";\nimport { singleton, inject } from 'mana-syringe';\nimport { IModelContribution } from '../interface';\nimport { DisposableCollection, Disposable } from '../../common/disposable';\nimport { disposableSubscribe } from '../../common/event-helper';\nimport { IGraphProvider } from '../../xflow-main/graph/graph-provider';\nimport * as MODELS from '../constant';\nlet GraphModelContribution = class GraphModelContribution {\n  constructor() {\n    /** 获取画布实例 */\n    this.getGraphInstance = () => __awaiter(this, void 0, void 0, function* () {\n      const graphInstance = yield this.graphProvider.getGraphInstance();\n      const graphConfig = yield this.graphProvider.getGraphOptions();\n      return {\n        graph: graphInstance,\n        config: graphConfig\n      };\n    });\n  }\n  registerModel(registry) {\n    /** X6 GRAPH META */\n    registry.registerModel({\n      id: MODELS.GRAPH_META.id,\n      getInitialValue: () => ({\n        flowId: '-1'\n      }),\n      watchChange: self => __awaiter(this, void 0, void 0, function* () {\n        return Disposable.create(() => {\n          self.setValue({\n            flowId: '-1'\n          });\n        });\n      })\n    });\n    /** Graph 多选状态 */\n    registry.registerModel({\n      id: MODELS.GRAPH_ENABLE_MULTI_SELECT.id,\n      getInitialValue: () => ({\n        isEnable: false\n      }),\n      watchChange: self => __awaiter(this, void 0, void 0, function* () {\n        return Disposable.create(() => {\n          self.setValue({\n            isEnable: false\n          });\n        });\n      })\n    });\n    /** Graph 全屏 */\n    registry.registerModel({\n      id: MODELS.GRAPH_FULLSCREEN.id,\n      getInitialValue: () => false,\n      watchChange: (self, modelService) => __awaiter(this, void 0, void 0, function* () {\n        const handleFullScreenChange = () => __awaiter(this, void 0, void 0, function* () {\n          const fullscreen = !!document.fullscreenElement;\n          const fullscreenModel = yield MODELS.GRAPH_FULLSCREEN.getModel(modelService);\n          fullscreenModel.setValue(fullscreen);\n        });\n        document.addEventListener('fullscreenchange', handleFullScreenChange, false);\n        return Disposable.create(() => {\n          document.removeEventListener('fullscreenchange', handleFullScreenChange);\n          self.setValue(false);\n        });\n      })\n    });\n    /** 选中Cells状态 */\n    registry.registerModel({\n      id: MODELS.SELECTED_CELLS.id,\n      getInitialValue: () => [],\n      watchChange: self => __awaiter(this, void 0, void 0, function* () {\n        const {\n          graph\n        } = yield this.getGraphInstance();\n        const onChange = e => {\n          const {\n            selected\n          } = e;\n          self.setValue(selected);\n        };\n        graph.on('selection:changed', onChange);\n        return Disposable.create(() => graph.off('selection:changed', onChange));\n      })\n    });\n    /** 选中Cell状态 */\n    registry.registerModel({\n      id: MODELS.SELECTED_CELL.id,\n      watchChange: (self, modelService) => __awaiter(this, void 0, void 0, function* () {\n        const cellsModel = yield MODELS.SELECTED_CELLS.getModel(modelService);\n        return cellsModel.watch((cells = []) => {\n          self.setValue([...cells].pop() || null);\n        });\n      })\n    });\n    /** 选中节点列表状态 */\n    registry.registerModel({\n      id: MODELS.SELECTED_NODES.id,\n      getInitialValue: () => [],\n      watchChange: (self, modelService) => __awaiter(this, void 0, void 0, function* () {\n        const model = yield MODELS.SELECTED_CELLS.getModel(modelService);\n        return model.watch((cells = []) => {\n          const nodes = cells.filter(cell => cell.isNode());\n          self.setValue(nodes);\n        });\n      })\n    });\n    /** 选中节点状态 */\n    registry.registerModel({\n      id: MODELS.SELECTED_NODE.id,\n      watchChange: (self, modelService) => __awaiter(this, void 0, void 0, function* () {\n        const model = yield MODELS.SELECTED_NODES.getModel(modelService);\n        const disposable = model.watch(nodes => {\n          self.setValue([...nodes].pop() || null);\n        });\n        return disposable;\n      })\n    });\n    /** 是否选中节点状态 */\n    registry.registerModel({\n      id: MODELS.IS_NODE_SELECTED.id,\n      watchChange: (self, modelService) => __awaiter(this, void 0, void 0, function* () {\n        const model = yield MODELS.SELECTED_NODES.getModel(modelService);\n        const disposable = model.watch(nodes => {\n          self.setValue(nodes.length > 0);\n        });\n        return disposable;\n      })\n    });\n    /** 画布选中节点是否是Group */\n    registry.registerModel({\n      id: MODELS.IS_GROUP_SELECTED.id,\n      getInitialValue: () => false,\n      watchChange: (self, modelService) => __awaiter(this, void 0, void 0, function* () {\n        const model = yield MODELS.SELECTED_CELLS.getModel(modelService);\n        const disposable = model.watch(cells => {\n          const isGroup = cells.every(cell => {\n            return cell && cell.getProp('isGroup') === true;\n          });\n          self.setValue(isGroup);\n        });\n        return disposable;\n      })\n    });\n    /** 画布选中节点是否是Group */\n    registry.registerModel({\n      id: MODELS.SELECTED_GROUPS.id,\n      getInitialValue: () => [],\n      watchChange: (self, modelService) => __awaiter(this, void 0, void 0, function* () {\n        const model = yield MODELS.SELECTED_NODES.getModel(modelService);\n        const disposable = model.watch(cells => {\n          const groups = cells.filter(cell => {\n            return cell && cell.getProp('isGroup') === true;\n          });\n          self.setValue(groups);\n        });\n        return disposable;\n      })\n    });\n    /** 画布选中节点是否是普通节点 */\n    registry.registerModel({\n      id: MODELS.IS_NORMAL_NODES_SELECTED.id,\n      getInitialValue: () => false,\n      watchChange: (self, modelService) => __awaiter(this, void 0, void 0, function* () {\n        const model = yield MODELS.SELECTED_CELLS.getModel(modelService);\n        const disposable = model.watch(cells => {\n          const isNormalNodesSelected = cells.every(cell => {\n            const isNotGroup = !(cell && cell.getProp('isGroup'));\n            const isNotGroupChild = !(cell && cell.getProp('group'));\n            return isNotGroup && isNotGroupChild;\n          });\n          const isNodeSelected = cells.length > 0 && isNormalNodesSelected;\n          self.setValue(isNodeSelected);\n        });\n        return disposable;\n      })\n    });\n    /** 画布缩放状态 */\n    registry.registerModel({\n      id: MODELS.GRAPH_SCALE.id,\n      getInitialValue: () => ({\n        zoomFactor: -1\n      }),\n      watchChange: self => __awaiter(this, void 0, void 0, function* () {\n        const {\n          graph\n        } = yield this.getGraphInstance();\n        const onChange = e => {\n          const factor = graph.zoom();\n          self.setValue(Object.assign(Object.assign({}, e), {\n            zoomFactor: factor\n          }));\n        };\n        graph.on('scale', onChange);\n        return Disposable.create(() => graph.off('scale', onChange));\n      })\n    });\n    /** 画布右键菜单状态 */\n    registry.registerModel({\n      id: MODELS.CONTEXTMENU_TARGET.id,\n      watchChange: self => __awaiter(this, void 0, void 0, function* () {\n        const {\n          graph,\n          config\n        } = yield this.getGraphInstance();\n        const onContextMenu = type => e => {\n          const {\n            x,\n            y\n          } = e;\n          const pagePoint = graph.localToClient({\n            x,\n            y\n          });\n          const clientRect = config.rootContainer.getBoundingClientRect();\n          const anchor = {\n            x: pagePoint.x - ((clientRect === null || clientRect === void 0 ? void 0 : clientRect.x) || 0),\n            y: pagePoint.y - ((clientRect === null || clientRect === void 0 ? void 0 : clientRect.y) || 0)\n          };\n          self.setValue({\n            type,\n            anchor,\n            data: e,\n            cell: e.cell\n          });\n        };\n        const toDispose = new DisposableCollection();\n        toDispose.pushAll([disposableSubscribe(graph, 'node:contextmenu', onContextMenu('node')), disposableSubscribe(graph, 'edge:contextmenu', onContextMenu('edge')), disposableSubscribe(graph, 'blank:contextmenu', onContextMenu('blank'))]);\n        return toDispose;\n      })\n    });\n    /** 画布历史Redo */\n    registry.registerModel({\n      id: MODELS.HISTORY_REDOABLE.id,\n      getInitialValue: () => false,\n      watchChange: self => __awaiter(this, void 0, void 0, function* () {\n        const {\n          graph\n        } = yield this.getGraphInstance();\n        const onChange = () => {\n          const canRedo = graph.history.canRedo();\n          self.setValue(canRedo);\n        };\n        if (graph.history) {\n          graph.history.on('change', onChange);\n        }\n        return Disposable.create(() => graph.history.off('change', onChange));\n      })\n    });\n    /** 画布历史undo */\n    registry.registerModel({\n      id: MODELS.HISTORY_UNDOABLE.id,\n      getInitialValue: () => false,\n      watchChange: self => __awaiter(this, void 0, void 0, function* () {\n        const {\n          graph\n        } = yield this.getGraphInstance();\n        const onChange = () => {\n          const canUndo = graph.history.canUndo();\n          self.setValue(canUndo);\n        };\n        if (graph.history) {\n          graph.history.on('change', onChange);\n        }\n        return Disposable.create(() => graph.history.off('change', onChange));\n      })\n    });\n  }\n};\n__decorate([inject(IGraphProvider), __metadata(\"design:type\", Object)], GraphModelContribution.prototype, \"graphProvider\", void 0);\nGraphModelContribution = __decorate([singleton({\n  contrib: IModelContribution\n})], GraphModelContribution);\nexport { GraphModelContribution };","map":{"version":3,"names":["singleton","inject","IModelContribution","DisposableCollection","Disposable","disposableSubscribe","IGraphProvider","MODELS","GraphModelContribution","constructor","getGraphInstance","__awaiter","graphInstance","graphProvider","graphConfig","getGraphOptions","graph","config","registerModel","registry","id","GRAPH_META","getInitialValue","flowId","watchChange","self","create","setValue","GRAPH_ENABLE_MULTI_SELECT","isEnable","GRAPH_FULLSCREEN","modelService","handleFullScreenChange","fullscreen","document","fullscreenElement","fullscreenModel","getModel","addEventListener","removeEventListener","SELECTED_CELLS","onChange","e","selected","on","off","SELECTED_CELL","cellsModel","watch","cells","pop","SELECTED_NODES","model","nodes","filter","cell","isNode","SELECTED_NODE","disposable","IS_NODE_SELECTED","length","IS_GROUP_SELECTED","isGroup","every","getProp","SELECTED_GROUPS","groups","IS_NORMAL_NODES_SELECTED","isNormalNodesSelected","isNotGroup","isNotGroupChild","isNodeSelected","GRAPH_SCALE","zoomFactor","factor","zoom","Object","assign","CONTEXTMENU_TARGET","onContextMenu","type","x","y","pagePoint","localToClient","clientRect","rootContainer","getBoundingClientRect","anchor","data","toDispose","pushAll","HISTORY_REDOABLE","canRedo","history","HISTORY_UNDOABLE","canUndo","__decorate","contrib"],"sources":["../../../src/model-service/contributions/graph-model.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}