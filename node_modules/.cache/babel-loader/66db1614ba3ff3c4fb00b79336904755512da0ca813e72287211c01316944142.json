{"ast":null,"code":"// src/device/DeviceFramebuffer.ts\nimport { Format, TextureUsage } from \"@antv/g-device-api\";\nimport { isTexture2D } from \"./DeviceTexture2D\";\nvar DeviceFramebuffer = class {\n  constructor(device, options) {\n    this.device = device;\n    this.options = options;\n    this.createColorRenderTarget();\n    this.createDepthRenderTarget();\n  }\n  createColorRenderTarget(resize = false) {\n    const {\n      width,\n      height,\n      color\n    } = this.options;\n    if (color) {\n      if (isTexture2D(color)) {\n        if (resize) {\n          color.resize({\n            width,\n            height\n          });\n        }\n        this.colorTexture = color.get();\n        this.colorRenderTarget = this.device.createRenderTargetFromTexture(this.colorTexture);\n        this.width = color[\"width\"];\n        this.height = color[\"height\"];\n      } else if (width && height) {\n        this.colorTexture = this.device.createTexture({\n          format: Format.U8_RGBA_RT,\n          usage: TextureUsage.RENDER_TARGET,\n          width,\n          height\n        });\n        this.colorRenderTarget = this.device.createRenderTargetFromTexture(this.colorTexture);\n        this.width = width;\n        this.height = height;\n      }\n    }\n  }\n  createDepthRenderTarget(resize = false) {\n    const {\n      width,\n      height,\n      depth\n    } = this.options;\n    if (depth) {\n      if (isTexture2D(depth)) {\n        if (resize) {\n          depth.resize({\n            width,\n            height\n          });\n        }\n        this.depthTexture = depth.get();\n        this.depthRenderTarget = this.device.createRenderTargetFromTexture(this.depthTexture);\n        this.width = depth[\"width\"];\n        this.height = depth[\"height\"];\n      } else if (width && height) {\n        this.depthTexture = this.device.createTexture({\n          format: Format.D24_S8,\n          usage: TextureUsage.RENDER_TARGET,\n          width,\n          height\n        });\n        this.depthRenderTarget = this.device.createRenderTargetFromTexture(this.depthTexture);\n        this.width = width;\n        this.height = height;\n      }\n    }\n  }\n  get() {\n    return this.colorRenderTarget;\n  }\n  destroy() {\n    var _a, _b;\n    (_a = this.colorRenderTarget) == null ? void 0 : _a.destroy();\n    (_b = this.depthRenderTarget) == null ? void 0 : _b.destroy();\n  }\n  resize({\n    width,\n    height\n  }) {\n    if (this.width !== width || this.height !== height) {\n      this.destroy();\n      this.colorTexture.destroyed = true;\n      this.depthTexture.destroyed = true;\n      this.options.width = width;\n      this.options.height = height;\n      this.createColorRenderTarget(true);\n      this.createDepthRenderTarget(true);\n    }\n  }\n};\nexport { DeviceFramebuffer as default };","map":{"version":3,"names":["Format","TextureUsage","isTexture2D","DeviceFramebuffer","constructor","device","options","createColorRenderTarget","createDepthRenderTarget","resize","width","height","color","colorTexture","get","colorRenderTarget","createRenderTargetFromTexture","createTexture","format","U8_RGBA_RT","usage","RENDER_TARGET","depth","depthTexture","depthRenderTarget","D24_S8","destroy","_a","_b","destroyed","default"],"sources":["/Users/bhanudahiya/Desktop/ledger-IQ/node_modules/@antv/l7-renderer/es/device/DeviceFramebuffer.js"],"sourcesContent":["// src/device/DeviceFramebuffer.ts\nimport { Format, TextureUsage } from \"@antv/g-device-api\";\nimport { isTexture2D } from \"./DeviceTexture2D\";\nvar DeviceFramebuffer = class {\n  constructor(device, options) {\n    this.device = device;\n    this.options = options;\n    this.createColorRenderTarget();\n    this.createDepthRenderTarget();\n  }\n  createColorRenderTarget(resize = false) {\n    const { width, height, color } = this.options;\n    if (color) {\n      if (isTexture2D(color)) {\n        if (resize) {\n          color.resize({ width, height });\n        }\n        this.colorTexture = color.get();\n        this.colorRenderTarget = this.device.createRenderTargetFromTexture(this.colorTexture);\n        this.width = color[\"width\"];\n        this.height = color[\"height\"];\n      } else if (width && height) {\n        this.colorTexture = this.device.createTexture({\n          format: Format.U8_RGBA_RT,\n          usage: TextureUsage.RENDER_TARGET,\n          width,\n          height\n        });\n        this.colorRenderTarget = this.device.createRenderTargetFromTexture(this.colorTexture);\n        this.width = width;\n        this.height = height;\n      }\n    }\n  }\n  createDepthRenderTarget(resize = false) {\n    const { width, height, depth } = this.options;\n    if (depth) {\n      if (isTexture2D(depth)) {\n        if (resize) {\n          depth.resize({ width, height });\n        }\n        this.depthTexture = depth.get();\n        this.depthRenderTarget = this.device.createRenderTargetFromTexture(this.depthTexture);\n        this.width = depth[\"width\"];\n        this.height = depth[\"height\"];\n      } else if (width && height) {\n        this.depthTexture = this.device.createTexture({\n          format: Format.D24_S8,\n          usage: TextureUsage.RENDER_TARGET,\n          width,\n          height\n        });\n        this.depthRenderTarget = this.device.createRenderTargetFromTexture(this.depthTexture);\n        this.width = width;\n        this.height = height;\n      }\n    }\n  }\n  get() {\n    return this.colorRenderTarget;\n  }\n  destroy() {\n    var _a, _b;\n    (_a = this.colorRenderTarget) == null ? void 0 : _a.destroy();\n    (_b = this.depthRenderTarget) == null ? void 0 : _b.destroy();\n  }\n  resize({ width, height }) {\n    if (this.width !== width || this.height !== height) {\n      this.destroy();\n      this.colorTexture.destroyed = true;\n      this.depthTexture.destroyed = true;\n      this.options.width = width;\n      this.options.height = height;\n      this.createColorRenderTarget(true);\n      this.createDepthRenderTarget(true);\n    }\n  }\n};\nexport {\n  DeviceFramebuffer as default\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}