{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { TransformProvider } from \"./transform-provider\";\nconst defaultOptions = {\n  panStep: 100,\n  bearingStep: 15,\n  pitchStep: 10\n};\n\n/**\n * The `KeyboardHandler` allows the user to zoom, rotate, and pan the map using\n * the following keyboard shortcuts:\n *\n * - `=` / `+`: Increase the zoom level by 1.\n * - `Shift-=` / `Shift-+`: Increase the zoom level by 2.\n * - `-`: Decrease the zoom level by 1.\n * - `Shift--`: Decrease the zoom level by 2.\n * - Arrow keys: Pan by 100 pixels.\n * - `Shift+⇢`: Increase the rotation by 15 degrees.\n * - `Shift+⇠`: Decrease the rotation by 15 degrees.\n * - `Shift+⇡`: Increase the pitch by 10 degrees.\n * - `Shift+⇣`: Decrease the pitch by 10 degrees.\n *\n * @group Handlers\n */\nexport class KeyboardHandler {\n  /** @internal */\n  constructor(map) {\n    _defineProperty(this, \"_tr\", void 0);\n    _defineProperty(this, \"_enabled\", void 0);\n    _defineProperty(this, \"_active\", void 0);\n    _defineProperty(this, \"_panStep\", void 0);\n    _defineProperty(this, \"_bearingStep\", void 0);\n    _defineProperty(this, \"_pitchStep\", void 0);\n    _defineProperty(this, \"_rotationDisabled\", void 0);\n    this._tr = new TransformProvider(map);\n    const stepOptions = defaultOptions;\n    this._panStep = stepOptions.panStep;\n    this._bearingStep = stepOptions.bearingStep;\n    this._pitchStep = stepOptions.pitchStep;\n    this._rotationDisabled = false;\n  }\n  reset() {\n    this._active = false;\n  }\n  keydown(e) {\n    if (e.altKey || e.ctrlKey || e.metaKey) return;\n    let zoomDir = 0;\n    let bearingDir = 0;\n    let pitchDir = 0;\n    let xDir = 0;\n    let yDir = 0;\n    switch (e.keyCode) {\n      case 61:\n      case 107:\n      case 171:\n      case 187:\n        zoomDir = 1;\n        break;\n      case 189:\n      case 109:\n      case 173:\n        zoomDir = -1;\n        break;\n      case 37:\n        if (e.shiftKey) {\n          bearingDir = -1;\n        } else {\n          e.preventDefault();\n          xDir = -1;\n        }\n        break;\n      case 39:\n        if (e.shiftKey) {\n          bearingDir = 1;\n        } else {\n          e.preventDefault();\n          xDir = 1;\n        }\n        break;\n      case 38:\n        if (e.shiftKey) {\n          pitchDir = 1;\n        } else {\n          e.preventDefault();\n          yDir = -1;\n        }\n        break;\n      case 40:\n        if (e.shiftKey) {\n          pitchDir = -1;\n        } else {\n          e.preventDefault();\n          yDir = 1;\n        }\n        break;\n      default:\n        return;\n    }\n    if (this._rotationDisabled) {\n      bearingDir = 0;\n      pitchDir = 0;\n    }\n    return {\n      cameraAnimation: map => {\n        const tr = this._tr;\n        map.easeTo({\n          duration: 300,\n          easeId: 'keyboardHandler',\n          easing: easeOut,\n          zoom: zoomDir ? Math.round(tr.zoom) + zoomDir * (e.shiftKey ? 2 : 1) : tr.zoom,\n          bearing: tr.bearing + bearingDir * this._bearingStep,\n          pitch: tr.pitch + pitchDir * this._pitchStep,\n          offset: [-xDir * this._panStep, -yDir * this._panStep],\n          center: tr.center\n        }, {\n          originalEvent: e\n        });\n      }\n    };\n  }\n\n  /**\n   * Enables the \"keyboard rotate and zoom\" interaction.\n   *\n   * @example\n   * ```ts\n   * map.keyboard.enable();\n   * ```\n   */\n  enable() {\n    this._enabled = true;\n  }\n\n  /**\n   * Disables the \"keyboard rotate and zoom\" interaction.\n   *\n   * @example\n   * ```ts\n   * map.keyboard.disable();\n   * ```\n   */\n  disable() {\n    this._enabled = false;\n    this.reset();\n  }\n\n  /**\n   * Returns a Boolean indicating whether the \"keyboard rotate and zoom\"\n   * interaction is enabled.\n   *\n   * @returns `true` if the \"keyboard rotate and zoom\"\n   * interaction is enabled.\n   */\n  isEnabled() {\n    return this._enabled;\n  }\n\n  /**\n   * Returns true if the handler is enabled and has detected the start of a\n   * zoom/rotate gesture.\n   *\n   * @returns `true` if the handler is enabled and has detected the\n   * start of a zoom/rotate gesture.\n   */\n  isActive() {\n    return this._active;\n  }\n\n  /**\n   * Disables the \"keyboard pan/rotate\" interaction, leaving the\n   * \"keyboard zoom\" interaction enabled.\n   *\n   * @example\n   * ```ts\n   * map.keyboard.disableRotation();\n   * ```\n   */\n  disableRotation() {\n    this._rotationDisabled = true;\n  }\n\n  /**\n   * Enables the \"keyboard pan/rotate\" interaction.\n   *\n   * @example\n   * ```ts\n   * map.keyboard.enable();\n   * map.keyboard.enableRotation();\n   * ```\n   */\n  enableRotation() {\n    this._rotationDisabled = false;\n  }\n}\nfunction easeOut(t) {\n  return t * (2 - t);\n}","map":{"version":3,"names":["_defineProperty","TransformProvider","defaultOptions","panStep","bearingStep","pitchStep","KeyboardHandler","constructor","map","_tr","stepOptions","_panStep","_bearingStep","_pitchStep","_rotationDisabled","reset","_active","keydown","e","altKey","ctrlKey","metaKey","zoomDir","bearingDir","pitchDir","xDir","yDir","keyCode","shiftKey","preventDefault","cameraAnimation","tr","easeTo","duration","easeId","easing","easeOut","zoom","Math","round","bearing","pitch","offset","center","originalEvent","enable","_enabled","disable","isEnabled","isActive","disableRotation","enableRotation","t"],"sources":["/Users/bhanudahiya/Desktop/ledger-IQ/node_modules/@antv/l7-map/es/map/handler/keyboard.js"],"sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { TransformProvider } from \"./transform-provider\";\nconst defaultOptions = {\n  panStep: 100,\n  bearingStep: 15,\n  pitchStep: 10\n};\n\n/**\n * The `KeyboardHandler` allows the user to zoom, rotate, and pan the map using\n * the following keyboard shortcuts:\n *\n * - `=` / `+`: Increase the zoom level by 1.\n * - `Shift-=` / `Shift-+`: Increase the zoom level by 2.\n * - `-`: Decrease the zoom level by 1.\n * - `Shift--`: Decrease the zoom level by 2.\n * - Arrow keys: Pan by 100 pixels.\n * - `Shift+⇢`: Increase the rotation by 15 degrees.\n * - `Shift+⇠`: Decrease the rotation by 15 degrees.\n * - `Shift+⇡`: Increase the pitch by 10 degrees.\n * - `Shift+⇣`: Decrease the pitch by 10 degrees.\n *\n * @group Handlers\n */\nexport class KeyboardHandler {\n  /** @internal */\n  constructor(map) {\n    _defineProperty(this, \"_tr\", void 0);\n    _defineProperty(this, \"_enabled\", void 0);\n    _defineProperty(this, \"_active\", void 0);\n    _defineProperty(this, \"_panStep\", void 0);\n    _defineProperty(this, \"_bearingStep\", void 0);\n    _defineProperty(this, \"_pitchStep\", void 0);\n    _defineProperty(this, \"_rotationDisabled\", void 0);\n    this._tr = new TransformProvider(map);\n    const stepOptions = defaultOptions;\n    this._panStep = stepOptions.panStep;\n    this._bearingStep = stepOptions.bearingStep;\n    this._pitchStep = stepOptions.pitchStep;\n    this._rotationDisabled = false;\n  }\n  reset() {\n    this._active = false;\n  }\n  keydown(e) {\n    if (e.altKey || e.ctrlKey || e.metaKey) return;\n    let zoomDir = 0;\n    let bearingDir = 0;\n    let pitchDir = 0;\n    let xDir = 0;\n    let yDir = 0;\n    switch (e.keyCode) {\n      case 61:\n      case 107:\n      case 171:\n      case 187:\n        zoomDir = 1;\n        break;\n      case 189:\n      case 109:\n      case 173:\n        zoomDir = -1;\n        break;\n      case 37:\n        if (e.shiftKey) {\n          bearingDir = -1;\n        } else {\n          e.preventDefault();\n          xDir = -1;\n        }\n        break;\n      case 39:\n        if (e.shiftKey) {\n          bearingDir = 1;\n        } else {\n          e.preventDefault();\n          xDir = 1;\n        }\n        break;\n      case 38:\n        if (e.shiftKey) {\n          pitchDir = 1;\n        } else {\n          e.preventDefault();\n          yDir = -1;\n        }\n        break;\n      case 40:\n        if (e.shiftKey) {\n          pitchDir = -1;\n        } else {\n          e.preventDefault();\n          yDir = 1;\n        }\n        break;\n      default:\n        return;\n    }\n    if (this._rotationDisabled) {\n      bearingDir = 0;\n      pitchDir = 0;\n    }\n    return {\n      cameraAnimation: map => {\n        const tr = this._tr;\n        map.easeTo({\n          duration: 300,\n          easeId: 'keyboardHandler',\n          easing: easeOut,\n          zoom: zoomDir ? Math.round(tr.zoom) + zoomDir * (e.shiftKey ? 2 : 1) : tr.zoom,\n          bearing: tr.bearing + bearingDir * this._bearingStep,\n          pitch: tr.pitch + pitchDir * this._pitchStep,\n          offset: [-xDir * this._panStep, -yDir * this._panStep],\n          center: tr.center\n        }, {\n          originalEvent: e\n        });\n      }\n    };\n  }\n\n  /**\n   * Enables the \"keyboard rotate and zoom\" interaction.\n   *\n   * @example\n   * ```ts\n   * map.keyboard.enable();\n   * ```\n   */\n  enable() {\n    this._enabled = true;\n  }\n\n  /**\n   * Disables the \"keyboard rotate and zoom\" interaction.\n   *\n   * @example\n   * ```ts\n   * map.keyboard.disable();\n   * ```\n   */\n  disable() {\n    this._enabled = false;\n    this.reset();\n  }\n\n  /**\n   * Returns a Boolean indicating whether the \"keyboard rotate and zoom\"\n   * interaction is enabled.\n   *\n   * @returns `true` if the \"keyboard rotate and zoom\"\n   * interaction is enabled.\n   */\n  isEnabled() {\n    return this._enabled;\n  }\n\n  /**\n   * Returns true if the handler is enabled and has detected the start of a\n   * zoom/rotate gesture.\n   *\n   * @returns `true` if the handler is enabled and has detected the\n   * start of a zoom/rotate gesture.\n   */\n  isActive() {\n    return this._active;\n  }\n\n  /**\n   * Disables the \"keyboard pan/rotate\" interaction, leaving the\n   * \"keyboard zoom\" interaction enabled.\n   *\n   * @example\n   * ```ts\n   * map.keyboard.disableRotation();\n   * ```\n   */\n  disableRotation() {\n    this._rotationDisabled = true;\n  }\n\n  /**\n   * Enables the \"keyboard pan/rotate\" interaction.\n   *\n   * @example\n   * ```ts\n   * map.keyboard.enable();\n   * map.keyboard.enableRotation();\n   * ```\n   */\n  enableRotation() {\n    this._rotationDisabled = false;\n  }\n}\nfunction easeOut(t) {\n  return t * (2 - t);\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}