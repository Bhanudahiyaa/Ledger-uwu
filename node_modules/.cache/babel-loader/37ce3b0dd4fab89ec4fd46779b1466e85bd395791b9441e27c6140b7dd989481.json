{"ast":null,"code":"import * as d3Force from 'd3-force';\nimport { getEdgeTerminal } from '../../util';\n// https://github.com/john-guerra/forceInABox/blob/master/src/forceInABox.js\nexport default function forceInABox() {\n  function constant(_) {\n    return () => _;\n  }\n  let groupBy = d => {\n    return d.cluster;\n  };\n  let forceNodeSize = constant(1);\n  let forceCharge = constant(-1);\n  let forceLinkDistance = constant(100);\n  let forceLinkStrength = constant(0.1);\n  let offset = [0, 0];\n  let nodes = [];\n  let nodesMap = {};\n  let links = [];\n  let centerX = 100;\n  let centerY = 100;\n  let foci = {\n    none: {\n      x: 0,\n      y: 0\n    }\n  };\n  let templateNodes = [];\n  let templateForce;\n  let template = 'force';\n  let enableGrouping = true;\n  let strength = 0.1;\n  function force(alpha) {\n    if (!enableGrouping) {\n      return force;\n    }\n    templateForce.tick();\n    getFocisFromTemplate();\n    for (let i = 0, n = nodes.length, node, k = alpha * strength; i < n; ++i) {\n      node = nodes[i];\n      node.vx += (foci[groupBy(node)].x - node.x) * k;\n      node.vy += (foci[groupBy(node)].y - node.y) * k;\n    }\n  }\n  function initialize() {\n    if (!nodes) return;\n    initializeWithForce();\n  }\n  function initializeWithForce() {\n    if (!nodes || !nodes.length) {\n      return;\n    }\n    if (groupBy(nodes[0]) === undefined) {\n      throw Error(\"Couldnt find the grouping attribute for the nodes. Make sure to set it up with forceInABox.groupBy('clusterAttr') before calling .links()\");\n    }\n    // checkLinksAsObjects();\n    const net = getGroupsGraph();\n    templateForce = d3Force.forceSimulation(net.nodes).force('x', d3Force.forceX(centerX).strength(0.1)).force('y', d3Force.forceY(centerY).strength(0.1)).force('collide', d3Force.forceCollide(d => d.r).iterations(4)).force('charge', d3Force.forceManyBody().strength(forceCharge)).force('links', d3Force.forceLink(net.nodes.length ? net.links : []).distance(forceLinkDistance).strength(forceLinkStrength));\n    templateNodes = templateForce.nodes();\n    getFocisFromTemplate();\n  }\n  function getGroupsGraph() {\n    const gnodes = [];\n    const glinks = [];\n    const dNodes = {};\n    let clustersList = [];\n    let clustersCounts = {};\n    let clustersLinks = [];\n    clustersCounts = computeClustersNodeCounts(nodes);\n    clustersLinks = computeClustersLinkCounts(links);\n    clustersList = Object.keys(clustersCounts);\n    clustersList.forEach((key, index) => {\n      const val = clustersCounts[key];\n      // Uses approx meta-node size\n      gnodes.push({\n        id: key,\n        size: val.count,\n        r: Math.sqrt(val.sumforceNodeSize / Math.PI)\n      });\n      dNodes[key] = index;\n    });\n    clustersLinks.forEach(l => {\n      const sourceTerminal = getEdgeTerminal(l, 'source');\n      const targetTerminal = getEdgeTerminal(l, 'target');\n      const source = dNodes[sourceTerminal];\n      const target = dNodes[targetTerminal];\n      if (source !== undefined && target !== undefined) {\n        glinks.push({\n          source,\n          target,\n          count: l.count\n        });\n      }\n    });\n    return {\n      nodes: gnodes,\n      links: glinks\n    };\n  }\n  function computeClustersNodeCounts(nodes) {\n    const clustersCounts = {};\n    nodes.forEach(d => {\n      const key = groupBy(d);\n      if (!clustersCounts[key]) {\n        clustersCounts[key] = {\n          count: 0,\n          sumforceNodeSize: 0\n        };\n      }\n    });\n    nodes.forEach(d => {\n      const key = groupBy(d);\n      const nodeSize = forceNodeSize(d);\n      const tmpCount = clustersCounts[key];\n      tmpCount.count = tmpCount.count + 1;\n      tmpCount.sumforceNodeSize = tmpCount.sumforceNodeSize + Math.PI * (nodeSize * nodeSize) * 1.3;\n      clustersCounts[key] = tmpCount;\n    });\n    return clustersCounts;\n  }\n  function computeClustersLinkCounts(links) {\n    const dClusterLinks = {};\n    const clusterLinks = [];\n    links.forEach(l => {\n      const key = getLinkKey(l);\n      let count = 0;\n      if (dClusterLinks[key] !== undefined) {\n        count = dClusterLinks[key];\n      }\n      count += 1;\n      dClusterLinks[key] = count;\n    });\n    // @ts-ignore\n    const entries = Object.entries(dClusterLinks);\n    entries.forEach(([key, count]) => {\n      const source = key.split('~')[0];\n      const target = key.split('~')[1];\n      if (source !== undefined && target !== undefined) {\n        clusterLinks.push({\n          source,\n          target,\n          count\n        });\n      }\n    });\n    return clusterLinks;\n  }\n  function getFocisFromTemplate() {\n    foci = {\n      none: {\n        x: 0,\n        y: 0\n      }\n    };\n    templateNodes.forEach(d => {\n      foci[d.id] = {\n        x: d.x - offset[0],\n        y: d.y - offset[1]\n      };\n    });\n    return foci;\n  }\n  function getLinkKey(l) {\n    const source = getEdgeTerminal(l, 'source');\n    const target = getEdgeTerminal(l, 'target');\n    const sourceID = groupBy(nodesMap[source]);\n    const targetID = groupBy(nodesMap[target]);\n    return sourceID <= targetID ? `${sourceID}~${targetID}` : `${targetID}~${sourceID}`;\n  }\n  function genNodesMap(nodes) {\n    nodesMap = {};\n    nodes.forEach(node => {\n      nodesMap[node.id] = node;\n    });\n  }\n  function setTemplate(x) {\n    if (!arguments.length) return template;\n    template = x;\n    initialize();\n    return force;\n  }\n  function setGroupBy(x) {\n    if (!arguments.length) return groupBy;\n    if (typeof x === 'string') {\n      groupBy = d => {\n        return d[x];\n      };\n      return force;\n    }\n    groupBy = x;\n    return force;\n  }\n  function setEnableGrouping(x) {\n    if (!arguments.length) return enableGrouping;\n    enableGrouping = x;\n    return force;\n  }\n  function setStrength(x) {\n    if (!arguments.length) return strength;\n    strength = x;\n    return force;\n  }\n  function setCenterX(_) {\n    if (arguments.length) {\n      centerX = _;\n      return force;\n    }\n    return centerX;\n  }\n  function setCenterY(_) {\n    if (arguments.length) {\n      centerY = _;\n      return force;\n    }\n    return centerY;\n  }\n  function setNodes(_) {\n    if (arguments.length) {\n      genNodesMap(_ || []);\n      nodes = _ || [];\n      return force;\n    }\n    return nodes;\n  }\n  function setLinks(_) {\n    if (arguments.length) {\n      links = _ || [];\n      initialize();\n      return force;\n    }\n    return links;\n  }\n  function setForceNodeSize(_) {\n    if (arguments.length) {\n      if (typeof _ === 'function') {\n        forceNodeSize = _;\n      } else {\n        forceNodeSize = constant(+_);\n      }\n      initialize();\n      return force;\n    }\n    return forceNodeSize;\n  }\n  function setForceCharge(_) {\n    if (arguments.length) {\n      if (typeof _ === 'function') {\n        forceCharge = _;\n      } else {\n        forceCharge = constant(+_);\n      }\n      initialize();\n      return force;\n    }\n    return forceCharge;\n  }\n  function setForceLinkDistance(_) {\n    if (arguments.length) {\n      if (typeof _ === 'function') {\n        forceLinkDistance = _;\n      } else {\n        forceLinkDistance = constant(+_);\n      }\n      initialize();\n      return force;\n    }\n    return forceLinkDistance;\n  }\n  function setForceLinkStrength(_) {\n    if (arguments.length) {\n      if (typeof _ === 'function') {\n        forceLinkStrength = _;\n      } else {\n        forceLinkStrength = constant(+_);\n      }\n      initialize();\n      return force;\n    }\n    return forceLinkStrength;\n  }\n  function setOffset(_) {\n    if (arguments.length) {\n      offset = _;\n      return force;\n    }\n    return offset;\n  }\n  force.initialize = _ => {\n    nodes = _;\n    initialize();\n  };\n  force.template = setTemplate;\n  force.groupBy = setGroupBy;\n  force.enableGrouping = setEnableGrouping;\n  force.strength = setStrength;\n  force.centerX = setCenterX;\n  force.centerY = setCenterY;\n  force.nodes = setNodes;\n  force.links = setLinks;\n  force.forceNodeSize = setForceNodeSize;\n  // Legacy support\n  force.nodeSize = force.forceNodeSize;\n  force.forceCharge = setForceCharge;\n  force.forceLinkDistance = setForceLinkDistance;\n  force.forceLinkStrength = setForceLinkStrength;\n  force.offset = setOffset;\n  force.getFocis = getFocisFromTemplate;\n  return force;\n}","map":{"version":3,"names":["d3Force","getEdgeTerminal","forceInABox","constant","_","groupBy","d","cluster","forceNodeSize","forceCharge","forceLinkDistance","forceLinkStrength","offset","nodes","nodesMap","links","centerX","centerY","foci","none","x","y","templateNodes","templateForce","template","enableGrouping","strength","force","alpha","tick","getFocisFromTemplate","i","n","length","node","k","vx","vy","initialize","initializeWithForce","undefined","Error","net","getGroupsGraph","forceSimulation","forceX","forceY","forceCollide","r","iterations","forceManyBody","forceLink","distance","gnodes","glinks","dNodes","clustersList","clustersCounts","clustersLinks","computeClustersNodeCounts","computeClustersLinkCounts","Object","keys","forEach","key","index","val","push","id","size","count","Math","sqrt","sumforceNodeSize","PI","l","sourceTerminal","targetTerminal","source","target","nodeSize","tmpCount","dClusterLinks","clusterLinks","getLinkKey","entries","split","sourceID","targetID","genNodesMap","setTemplate","arguments","setGroupBy","setEnableGrouping","setStrength","setCenterX","setCenterY","setNodes","setLinks","setForceNodeSize","setForceCharge","setForceLinkDistance","setForceLinkStrength","setOffset","getFocis"],"sources":["../../../src/layout/force/force-in-a-box.ts"],"sourcesContent":[null],"mappings":"AAAA,OAAO,KAAKA,OAAO,MAAM,UAAU;AACnC,SAASC,eAAe,QAAQ,YAAY;AAW5C;AACA,eAAc,SAAUC,WAAWA,CAAA;EACjC,SAASC,QAAQA,CAACC,CAAM;IACtB,OAAO,MAAMA,CAAC;EAChB;EAEA,IAAIC,OAAO,GAAIC,CAAQ,IAAI;IACzB,OAAOA,CAAC,CAACC,OAAO;EAClB,CAAC;EACD,IAAIC,aAAa,GAA0CL,QAAQ,CAAC,CAAC,CAAC;EACtE,IAAIM,WAAW,GAA0CN,QAAQ,CAAC,CAAC,CAAC,CAAC;EACrE,IAAIO,iBAAiB,GAA0CP,QAAQ,CAAC,GAAG,CAAC;EAC5E,IAAIQ,iBAAiB,GAA0CR,QAAQ,CAAC,GAAG,CAAC;EAC5E,IAAIS,MAAM,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;EAEnB,IAAIC,KAAK,GAAY,EAAE;EACvB,IAAIC,QAAQ,GAAQ,EAAE;EACtB,IAAIC,KAAK,GAAU,EAAE;EACrB,IAAIC,OAAO,GAAG,GAAG;EACjB,IAAIC,OAAO,GAAG,GAAG;EACjB,IAAIC,IAAI,GAAQ;IACdC,IAAI,EAAE;MACJC,CAAC,EAAE,CAAC;MACJC,CAAC,EAAE;;GAEN;EACD,IAAIC,aAAa,GAAY,EAAE;EAC/B,IAAIC,aAAkB;EACtB,IAAIC,QAAQ,GAAG,OAAO;EACtB,IAAIC,cAAc,GAAG,IAAI;EACzB,IAAIC,QAAQ,GAAG,GAAG;EAElB,SAASC,KAAKA,CAACC,KAAa;IAC1B,IAAI,CAACH,cAAc,EAAE;MACnB,OAAOE,KAAK;;IAEdJ,aAAa,CAACM,IAAI,EAAE;IACpBC,oBAAoB,EAAE;IAEtB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEC,CAAC,GAAGnB,KAAK,CAACoB,MAAM,EAAEC,IAAI,EAAEC,CAAC,GAAGP,KAAK,GAAGF,QAAQ,EAAEK,CAAC,GAAGC,CAAC,EAAE,EAAED,CAAC,EAAE;MACxEG,IAAI,GAAGrB,KAAK,CAACkB,CAAC,CAAC;MACfG,IAAI,CAACE,EAAE,IAAI,CAAClB,IAAI,CAACb,OAAO,CAAC6B,IAAI,CAAC,CAAC,CAACd,CAAC,GAAGc,IAAI,CAACd,CAAC,IAAIe,CAAC;MAC/CD,IAAI,CAACG,EAAE,IAAI,CAACnB,IAAI,CAACb,OAAO,CAAC6B,IAAI,CAAC,CAAC,CAACb,CAAC,GAAGa,IAAI,CAACb,CAAC,IAAIc,CAAC;;EAEnD;EAEA,SAASG,UAAUA,CAAA;IACjB,IAAI,CAACzB,KAAK,EAAE;IACZ0B,mBAAmB,EAAE;EACvB;EAEA,SAASA,mBAAmBA,CAAA;IAC1B,IAAI,CAAC1B,KAAK,IAAI,CAACA,KAAK,CAACoB,MAAM,EAAE;MAC3B;;IAGF,IAAI5B,OAAO,CAACQ,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK2B,SAAS,EAAE;MACnC,MAAMC,KAAK,CACT,2IAA2I,CAC5I;;IAGH;IAEA,MAAMC,GAAG,GAAGC,cAAc,EAAE;IAC5BpB,aAAa,GAAGvB,OAAO,CACpB4C,eAAe,CAACF,GAAG,CAAC7B,KAAK,CAAC,CAC1Bc,KAAK,CAAC,GAAG,EAAE3B,OAAO,CAAC6C,MAAM,CAAC7B,OAAO,CAAC,CAACU,QAAQ,CAAC,GAAG,CAAC,CAAC,CACjDC,KAAK,CAAC,GAAG,EAAE3B,OAAO,CAAC8C,MAAM,CAAC7B,OAAO,CAAC,CAACS,QAAQ,CAAC,GAAG,CAAC,CAAC,CACjDC,KAAK,CAAC,SAAS,EAAE3B,OAAO,CAAC+C,YAAY,CAAEzC,CAAM,IAAKA,CAAC,CAAC0C,CAAC,CAAC,CAACC,UAAU,CAAC,CAAC,CAAC,CAAC,CACrEtB,KAAK,CAAC,QAAQ,EAAE3B,OAAO,CAACkD,aAAa,EAAE,CAACxB,QAAQ,CAACjB,WAAW,CAAC,CAAC,CAC9DkB,KAAK,CACJ,OAAO,EACP3B,OAAO,CACJmD,SAAS,CAACT,GAAG,CAAC7B,KAAK,CAACoB,MAAM,GAAGS,GAAG,CAAC3B,KAAK,GAAG,EAAE,CAAC,CAC5CqC,QAAQ,CAAC1C,iBAAiB,CAAC,CAC3BgB,QAAQ,CAACf,iBAAiB,CAAC,CAC/B;IAEHW,aAAa,GAAGC,aAAa,CAACV,KAAK,EAAE;IAErCiB,oBAAoB,EAAE;EACxB;EAEA,SAASa,cAAcA,CAAA;IACrB,MAAMU,MAAM,GAAQ,EAAE;IACtB,MAAMC,MAAM,GAAQ,EAAE;IACtB,MAAMC,MAAM,GAAQ,EAAE;IACtB,IAAIC,YAAY,GAAG,EAAE;IACrB,IAAIC,cAAc,GAAQ,EAAE;IAC5B,IAAIC,aAAa,GAAQ,EAAE;IAE3BD,cAAc,GAAGE,yBAAyB,CAAC9C,KAAK,CAAC;IACjD6C,aAAa,GAAGE,yBAAyB,CAAC7C,KAAK,CAAC;IAEhDyC,YAAY,GAAGK,MAAM,CAACC,IAAI,CAACL,cAAc,CAAC;IAE1CD,YAAY,CAACO,OAAO,CAAC,CAACC,GAAG,EAAEC,KAAK,KAAI;MAClC,MAAMC,GAAG,GAAGT,cAAc,CAACO,GAAG,CAAC;MAC/B;MACAX,MAAM,CAACc,IAAI,CAAC;QACVC,EAAE,EAAEJ,GAAG;QACPK,IAAI,EAAEH,GAAG,CAACI,KAAK;QACftB,CAAC,EAAEuB,IAAI,CAACC,IAAI,CAACN,GAAG,CAACO,gBAAgB,GAAGF,IAAI,CAACG,EAAE;OAC5C,CAAC;MACFnB,MAAM,CAACS,GAAG,CAAC,GAAGC,KAAK;IACrB,CAAC,CAAC;IAEFP,aAAa,CAACK,OAAO,CAAEY,CAAM,IAAI;MAC/B,MAAMC,cAAc,GAAG3E,eAAe,CAAC0E,CAAC,EAAE,QAAQ,CAAC;MACnD,MAAME,cAAc,GAAG5E,eAAe,CAAC0E,CAAC,EAAE,QAAQ,CAAC;MACnD,MAAMG,MAAM,GAAGvB,MAAM,CAACqB,cAAc,CAAC;MACrC,MAAMG,MAAM,GAAGxB,MAAM,CAACsB,cAAc,CAAC;MACrC,IAAIC,MAAM,KAAKtC,SAAS,IAAIuC,MAAM,KAAKvC,SAAS,EAAE;QAChDc,MAAM,CAACa,IAAI,CAAC;UACVW,MAAM;UACNC,MAAM;UACNT,KAAK,EAAEK,CAAC,CAACL;SACV,CAAC;;IAEN,CAAC,CAAC;IAEF,OAAO;MACLzD,KAAK,EAAEwC,MAAM;MACbtC,KAAK,EAAEuC;KACR;EACH;EAEA,SAASK,yBAAyBA,CAAC9C,KAAU;IAC3C,MAAM4C,cAAc,GAAQ,EAAE;IAE9B5C,KAAK,CAACkD,OAAO,CAAEzD,CAAM,IAAI;MACvB,MAAM0D,GAAG,GAAG3D,OAAO,CAACC,CAAC,CAAC;MACtB,IAAI,CAACmD,cAAc,CAACO,GAAG,CAAC,EAAE;QACxBP,cAAc,CAACO,GAAG,CAAC,GAAG;UACpBM,KAAK,EAAE,CAAC;UACRG,gBAAgB,EAAE;SACnB;;IAEL,CAAC,CAAC;IACF5D,KAAK,CAACkD,OAAO,CAAEzD,CAAM,IAAI;MACvB,MAAM0D,GAAG,GAAG3D,OAAO,CAACC,CAAC,CAAC;MACtB,MAAM0E,QAAQ,GAAGxE,aAAa,CAACF,CAAC,CAAC;MACjC,MAAM2E,QAAQ,GAAGxB,cAAc,CAACO,GAAG,CAAC;MACpCiB,QAAQ,CAACX,KAAK,GAAGW,QAAQ,CAACX,KAAK,GAAG,CAAC;MACnCW,QAAQ,CAACR,gBAAgB,GACvBQ,QAAQ,CAACR,gBAAgB,GAAGF,IAAI,CAACG,EAAE,IAAIM,QAAQ,GAAGA,QAAQ,CAAC,GAAG,GAAG;MACnEvB,cAAc,CAACO,GAAG,CAAC,GAAGiB,QAAQ;IAChC,CAAC,CAAC;IAEF,OAAOxB,cAAc;EACvB;EAEA,SAASG,yBAAyBA,CAAC7C,KAAU;IAC3C,MAAMmE,aAAa,GAAQ,EAAE;IAC7B,MAAMC,YAAY,GAAQ,EAAE;IAC5BpE,KAAK,CAACgD,OAAO,CAAEY,CAAM,IAAI;MACvB,MAAMX,GAAG,GAAGoB,UAAU,CAACT,CAAC,CAAC;MACzB,IAAIL,KAAK,GAAG,CAAC;MACb,IAAIY,aAAa,CAAClB,GAAG,CAAC,KAAKxB,SAAS,EAAE;QACpC8B,KAAK,GAAGY,aAAa,CAAClB,GAAG,CAAC;;MAE5BM,KAAK,IAAI,CAAC;MACVY,aAAa,CAAClB,GAAG,CAAC,GAAGM,KAAK;IAC5B,CAAC,CAAC;IAEF;IACA,MAAMe,OAAO,GAAGxB,MAAM,CAACwB,OAAO,CAACH,aAAa,CAAC;IAE7CG,OAAO,CAACtB,OAAO,CAAC,CAAC,CAACC,GAAG,EAAEM,KAAK,CAAM,KAAI;MACpC,MAAMQ,MAAM,GAAGd,GAAG,CAACsB,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MAChC,MAAMP,MAAM,GAAGf,GAAG,CAACsB,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MAChC,IAAIR,MAAM,KAAKtC,SAAS,IAAIuC,MAAM,KAAKvC,SAAS,EAAE;QAChD2C,YAAY,CAAChB,IAAI,CAAC;UAChBW,MAAM;UACNC,MAAM;UACNT;SACD,CAAC;;IAEN,CAAC,CAAC;IAEF,OAAOa,YAAY;EACrB;EAEA,SAASrD,oBAAoBA,CAAA;IAC3BZ,IAAI,GAAG;MACLC,IAAI,EAAE;QACJC,CAAC,EAAE,CAAC;QACJC,CAAC,EAAE;;KAEN;IACDC,aAAa,CAACyC,OAAO,CAAEzD,CAAC,IAAI;MAC1BY,IAAI,CAACZ,CAAC,CAAC8D,EAAE,CAAC,GAAG;QACXhD,CAAC,EAAEd,CAAC,CAACc,CAAC,GAAGR,MAAM,CAAC,CAAC,CAAC;QAClBS,CAAC,EAAEf,CAAC,CAACe,CAAC,GAAGT,MAAM,CAAC,CAAC;OAClB;IACH,CAAC,CAAC;IACF,OAAOM,IAAI;EACb;EAEA,SAASkE,UAAUA,CAACT,CAAM;IACxB,MAAMG,MAAM,GAAG7E,eAAe,CAAC0E,CAAC,EAAE,QAAQ,CAAC;IAC3C,MAAMI,MAAM,GAAG9E,eAAe,CAAC0E,CAAC,EAAE,QAAQ,CAAC;IAC3C,MAAMY,QAAQ,GAAGlF,OAAO,CAACS,QAAQ,CAACgE,MAAM,CAAC,CAAC;IAC1C,MAAMU,QAAQ,GAAGnF,OAAO,CAACS,QAAQ,CAACiE,MAAM,CAAC,CAAC;IAE1C,OAAOQ,QAAQ,IAAIC,QAAQ,GACvB,GAAGD,QAAQ,IAAIC,QAAQ,EAAE,GACzB,GAAGA,QAAQ,IAAID,QAAQ,EAAE;EAC/B;EAEA,SAASE,WAAWA,CAAC5E,KAAU;IAC7BC,QAAQ,GAAG,EAAE;IACbD,KAAK,CAACkD,OAAO,CAAE7B,IAAS,IAAI;MAC1BpB,QAAQ,CAACoB,IAAI,CAACkC,EAAE,CAAC,GAAGlC,IAAI;IAC1B,CAAC,CAAC;EACJ;EAEA,SAASwD,WAAWA,CAACtE,CAAM;IACzB,IAAI,CAACuE,SAAS,CAAC1D,MAAM,EAAE,OAAOT,QAAQ;IACtCA,QAAQ,GAAGJ,CAAC;IACZkB,UAAU,EAAE;IACZ,OAAOX,KAAK;EACd;EAEA,SAASiE,UAAUA,CAACxE,CAAM;IACxB,IAAI,CAACuE,SAAS,CAAC1D,MAAM,EAAE,OAAO5B,OAAO;IACrC,IAAI,OAAOe,CAAC,KAAK,QAAQ,EAAE;MACzBf,OAAO,GAAIC,CAAM,IAAI;QACnB,OAAOA,CAAC,CAACc,CAAC,CAAC;MACb,CAAC;MACD,OAAOO,KAAK;;IAEdtB,OAAO,GAAGe,CAAC;IACX,OAAOO,KAAK;EACd;EAEA,SAASkE,iBAAiBA,CAACzE,CAAM;IAC/B,IAAI,CAACuE,SAAS,CAAC1D,MAAM,EAAE,OAAOR,cAAc;IAC5CA,cAAc,GAAGL,CAAC;IAClB,OAAOO,KAAK;EACd;EAEA,SAASmE,WAAWA,CAAC1E,CAAM;IACzB,IAAI,CAACuE,SAAS,CAAC1D,MAAM,EAAE,OAAOP,QAAQ;IACtCA,QAAQ,GAAGN,CAAC;IACZ,OAAOO,KAAK;EACd;EAEA,SAASoE,UAAUA,CAAC3F,CAAM;IACxB,IAAIuF,SAAS,CAAC1D,MAAM,EAAE;MACpBjB,OAAO,GAAGZ,CAAC;MACX,OAAOuB,KAAK;;IAGd,OAAOX,OAAO;EAChB;EAEA,SAASgF,UAAUA,CAAC5F,CAAM;IACxB,IAAIuF,SAAS,CAAC1D,MAAM,EAAE;MACpBhB,OAAO,GAAGb,CAAC;MACX,OAAOuB,KAAK;;IAGd,OAAOV,OAAO;EAChB;EAEA,SAASgF,QAAQA,CAAC7F,CAAM;IACtB,IAAIuF,SAAS,CAAC1D,MAAM,EAAE;MACpBwD,WAAW,CAACrF,CAAC,IAAI,EAAE,CAAC;MACpBS,KAAK,GAAGT,CAAC,IAAI,EAAE;MACf,OAAOuB,KAAK;;IAEd,OAAOd,KAAK;EACd;EAEA,SAASqF,QAAQA,CAAC9F,CAAM;IACtB,IAAIuF,SAAS,CAAC1D,MAAM,EAAE;MACpBlB,KAAK,GAAGX,CAAC,IAAI,EAAE;MACfkC,UAAU,EAAE;MACZ,OAAOX,KAAK;;IAEd,OAAOZ,KAAK;EACd;EAEA,SAASoF,gBAAgBA,CAAC/F,CAAM;IAC9B,IAAIuF,SAAS,CAAC1D,MAAM,EAAE;MACpB,IAAI,OAAO7B,CAAC,KAAK,UAAU,EAAE;QAC3BI,aAAa,GAAGJ,CAAC;OAClB,MAAM;QACLI,aAAa,GAAGL,QAAQ,CAAC,CAACC,CAAC,CAAC;;MAE9BkC,UAAU,EAAE;MACZ,OAAOX,KAAK;;IAGd,OAAOnB,aAAa;EACtB;EAEA,SAAS4F,cAAcA,CAAChG,CAAM;IAC5B,IAAIuF,SAAS,CAAC1D,MAAM,EAAE;MACpB,IAAI,OAAO7B,CAAC,KAAK,UAAU,EAAE;QAC3BK,WAAW,GAAGL,CAAC;OAChB,MAAM;QACLK,WAAW,GAAGN,QAAQ,CAAC,CAACC,CAAC,CAAC;;MAE5BkC,UAAU,EAAE;MACZ,OAAOX,KAAK;;IAGd,OAAOlB,WAAW;EACpB;EAEA,SAAS4F,oBAAoBA,CAACjG,CAAM;IAClC,IAAIuF,SAAS,CAAC1D,MAAM,EAAE;MACpB,IAAI,OAAO7B,CAAC,KAAK,UAAU,EAAE;QAC3BM,iBAAiB,GAAGN,CAAC;OACtB,MAAM;QACLM,iBAAiB,GAAGP,QAAQ,CAAC,CAACC,CAAC,CAAC;;MAElCkC,UAAU,EAAE;MACZ,OAAOX,KAAK;;IAGd,OAAOjB,iBAAiB;EAC1B;EAEA,SAAS4F,oBAAoBA,CAAClG,CAAM;IAClC,IAAIuF,SAAS,CAAC1D,MAAM,EAAE;MACpB,IAAI,OAAO7B,CAAC,KAAK,UAAU,EAAE;QAC3BO,iBAAiB,GAAGP,CAAC;OACtB,MAAM;QACLO,iBAAiB,GAAGR,QAAQ,CAAC,CAACC,CAAC,CAAC;;MAElCkC,UAAU,EAAE;MACZ,OAAOX,KAAK;;IAGd,OAAOhB,iBAAiB;EAC1B;EAEA,SAAS4F,SAASA,CAACnG,CAAM;IACvB,IAAIuF,SAAS,CAAC1D,MAAM,EAAE;MACpBrB,MAAM,GAAGR,CAAC;MACV,OAAOuB,KAAK;;IAGd,OAAOf,MAAM;EACf;EAEAe,KAAK,CAACW,UAAU,GAAIlC,CAAM,IAAI;IAC5BS,KAAK,GAAGT,CAAC;IACTkC,UAAU,EAAE;EACd,CAAC;EAEDX,KAAK,CAACH,QAAQ,GAAGkE,WAAW;EAE5B/D,KAAK,CAACtB,OAAO,GAAGuF,UAAU;EAE1BjE,KAAK,CAACF,cAAc,GAAGoE,iBAAiB;EAExClE,KAAK,CAACD,QAAQ,GAAGoE,WAAW;EAE5BnE,KAAK,CAACX,OAAO,GAAG+E,UAAU;EAE1BpE,KAAK,CAACV,OAAO,GAAG+E,UAAU;EAE1BrE,KAAK,CAACd,KAAK,GAAGoF,QAAQ;EAEtBtE,KAAK,CAACZ,KAAK,GAAGmF,QAAQ;EAEtBvE,KAAK,CAACnB,aAAa,GAAG2F,gBAAgB;EAEtC;EACAxE,KAAK,CAACqD,QAAQ,GAAGrD,KAAK,CAACnB,aAAa;EAEpCmB,KAAK,CAAClB,WAAW,GAAG2F,cAAc;EAElCzE,KAAK,CAACjB,iBAAiB,GAAG2F,oBAAoB;EAE9C1E,KAAK,CAAChB,iBAAiB,GAAG2F,oBAAoB;EAE9C3E,KAAK,CAACf,MAAM,GAAG2F,SAAS;EAExB5E,KAAK,CAAC6E,QAAQ,GAAG1E,oBAAoB;EAErC,OAAOH,KAAK;AACd","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}