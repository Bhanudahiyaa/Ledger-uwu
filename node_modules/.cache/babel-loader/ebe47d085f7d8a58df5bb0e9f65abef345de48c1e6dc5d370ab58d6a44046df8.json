{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { DOM } from \"../util/dom\";\n\n/**\n * An options object sent to the enable function of some of the handlers\n */\n\n/**\n * The `TwoFingersTouchHandler`s allows the user to zoom, pitch and rotate the map using two fingers\n *\n */\nclass TwoFingersTouchHandler {\n  /** @internal */\n  constructor() {\n    _defineProperty(this, \"_enabled\", void 0);\n    _defineProperty(this, \"_active\", void 0);\n    _defineProperty(this, \"_firstTwoTouches\", void 0);\n    _defineProperty(this, \"_vector\", void 0);\n    _defineProperty(this, \"_startVector\", void 0);\n    _defineProperty(this, \"_aroundCenter\", void 0);\n    this.reset();\n  }\n  reset() {\n    this._active = false;\n    delete this._firstTwoTouches;\n  }\n  touchstart(e, points, mapTouches) {\n    //log('touchstart', points, e.target.innerHTML, e.targetTouches.length ? e.targetTouches[0].target.innerHTML: undefined);\n    if (this._firstTwoTouches || mapTouches.length < 2) return;\n    this._firstTwoTouches = [mapTouches[0].identifier, mapTouches[1].identifier];\n\n    // implemented by child classes\n    this._start([points[0], points[1]]);\n  }\n  touchmove(e, points, mapTouches) {\n    if (!this._firstTwoTouches) return;\n    e.preventDefault();\n    const [idA, idB] = this._firstTwoTouches;\n    const a = getTouchById(mapTouches, points, idA);\n    const b = getTouchById(mapTouches, points, idB);\n    if (!a || !b) return;\n    const pinchAround = this._aroundCenter ? null : a.add(b).div(2);\n\n    // implemented by child classes\n    return this._move([a, b], pinchAround, e);\n  }\n  touchend(e, points, mapTouches) {\n    if (!this._firstTwoTouches) return;\n    const [idA, idB] = this._firstTwoTouches;\n    const a = getTouchById(mapTouches, points, idA);\n    const b = getTouchById(mapTouches, points, idB);\n    if (a && b) return;\n    if (this._active) DOM.suppressClick();\n    this.reset();\n  }\n  touchcancel() {\n    this.reset();\n  }\n\n  /**\n   * Enables the \"drag to pitch\" interaction.\n   *\n   * @example\n   * ```ts\n   * map.touchPitch.enable();\n   * ```\n   */\n  enable(options) {\n    this._enabled = true;\n    this._aroundCenter = !!options && options.around === 'center';\n  }\n\n  /**\n   * Disables the \"drag to pitch\" interaction.\n   *\n   * @example\n   * ```ts\n   * map.touchPitch.disable();\n   * ```\n   */\n  disable() {\n    this._enabled = false;\n    this.reset();\n  }\n\n  /**\n   * Returns a Boolean indicating whether the \"drag to pitch\" interaction is enabled.\n   *\n   * @returns  `true` if the \"drag to pitch\" interaction is enabled.\n   */\n  isEnabled() {\n    return !!this._enabled;\n  }\n\n  /**\n   * Returns a Boolean indicating whether the \"drag to pitch\" interaction is active, i.e. currently being used.\n   *\n   * @returns `true` if the \"drag to pitch\" interaction is active.\n   */\n  isActive() {\n    return !!this._active;\n  }\n}\nfunction getTouchById(mapTouches, points, identifier) {\n  for (let i = 0; i < mapTouches.length; i++) {\n    if (mapTouches[i].identifier === identifier) return points[i];\n  }\n  return undefined;\n}\n\n/* ZOOM */\n\nconst ZOOM_THRESHOLD = 0.1;\nfunction getZoomDelta(distance, lastDistance) {\n  return Math.log(distance / lastDistance) / Math.LN2;\n}\n\n/**\n * The `TwoFingersTouchHandler`s allows the user to zoom the map two fingers\n *\n * @group Handlers\n */\nexport class TwoFingersTouchZoomHandler extends TwoFingersTouchHandler {\n  constructor(...args) {\n    super(...args);\n    _defineProperty(this, \"_distance\", void 0);\n    _defineProperty(this, \"_startDistance\", void 0);\n  }\n  reset() {\n    super.reset();\n    delete this._distance;\n    delete this._startDistance;\n  }\n  _start(points) {\n    this._startDistance = this._distance = points[0].dist(points[1]);\n  }\n  _move(points, pinchAround) {\n    const lastDistance = this._distance;\n    this._distance = points[0].dist(points[1]);\n    if (!this._active && Math.abs(getZoomDelta(this._distance, this._startDistance)) < ZOOM_THRESHOLD) return;\n    this._active = true;\n    return {\n      zoomDelta: getZoomDelta(this._distance, lastDistance),\n      pinchAround\n    };\n  }\n}\n\n/* ROTATE */\n\nconst ROTATION_THRESHOLD = 25; // pixels along circumference of touch circle\n\nfunction getBearingDelta(a, b) {\n  return a.angleWith(b) * 180 / Math.PI;\n}\n\n/**\n * The `TwoFingersTouchHandler`s allows the user to rotate the map two fingers\n *\n * @group Handlers\n */\nexport class TwoFingersTouchRotateHandler extends TwoFingersTouchHandler {\n  constructor(...args) {\n    super(...args);\n    _defineProperty(this, \"_minDiameter\", void 0);\n  }\n  reset() {\n    super.reset();\n    delete this._minDiameter;\n    delete this._startVector;\n    delete this._vector;\n  }\n  _start(points) {\n    this._startVector = this._vector = points[0].sub(points[1]);\n    this._minDiameter = points[0].dist(points[1]);\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  _move(points, pinchAround, _e) {\n    const lastVector = this._vector;\n    this._vector = points[0].sub(points[1]);\n    if (!this._active && this._isBelowThreshold(this._vector)) return;\n    this._active = true;\n    return {\n      bearingDelta: getBearingDelta(this._vector, lastVector),\n      pinchAround\n    };\n  }\n  _isBelowThreshold(vector) {\n    /*\n     * The threshold before a rotation actually happens is configured in\n     * pixels along the circumference of the circle formed by the two fingers.\n     * This makes the threshold in degrees larger when the fingers are close\n     * together and smaller when the fingers are far apart.\n     *\n     * Use the smallest diameter from the whole gesture to reduce sensitivity\n     * when pinching in and out.\n     */\n\n    this._minDiameter = Math.min(this._minDiameter, vector.mag());\n    const circumference = Math.PI * this._minDiameter;\n    const threshold = ROTATION_THRESHOLD / circumference * 360;\n    const bearingDeltaSinceStart = getBearingDelta(vector, this._startVector);\n    return Math.abs(bearingDeltaSinceStart) < threshold;\n  }\n}\n\n/* PITCH */\n\nfunction isVertical(vector) {\n  return Math.abs(vector.y) > Math.abs(vector.x);\n}\nconst ALLOWED_SINGLE_TOUCH_TIME = 100;\n\n/**\n * The `TwoFingersTouchPitchHandler` allows the user to pitch the map by dragging up and down with two fingers.\n *\n * @group Handlers\n */\nexport class TwoFingersTouchPitchHandler extends TwoFingersTouchHandler {\n  constructor(map) {\n    super();\n    _defineProperty(this, \"_valid\", void 0);\n    _defineProperty(this, \"_firstMove\", void 0);\n    _defineProperty(this, \"_lastPoints\", void 0);\n    _defineProperty(this, \"_map\", void 0);\n    _defineProperty(this, \"_currentTouchCount\", 0);\n    this._map = map;\n  }\n  reset() {\n    super.reset();\n    this._valid = undefined;\n    delete this._firstMove;\n    delete this._lastPoints;\n  }\n  touchstart(e, points, mapTouches) {\n    super.touchstart(e, points, mapTouches);\n    this._currentTouchCount = mapTouches.length;\n  }\n  _start(points) {\n    this._lastPoints = points;\n    if (isVertical(points[0].sub(points[1]))) {\n      // fingers are more horizontal than vertical\n      this._valid = false;\n    }\n  }\n  _move(points, center, e) {\n    // If cooperative gestures is enabled, we need a 3-finger minimum for this gesture to register\n    if (this._map.cooperativeGestures.isEnabled() && this._currentTouchCount < 3) {\n      return;\n    }\n    const vectorA = points[0].sub(this._lastPoints[0]);\n    const vectorB = points[1].sub(this._lastPoints[1]);\n    this._valid = this.gestureBeginsVertically(vectorA, vectorB, e.timeStamp);\n    if (!this._valid) return;\n    this._lastPoints = points;\n    this._active = true;\n    const yDeltaAverage = (vectorA.y + vectorB.y) / 2;\n    const degreesPerPixelMoved = -0.5;\n    return {\n      pitchDelta: yDeltaAverage * degreesPerPixelMoved\n    };\n  }\n  gestureBeginsVertically(vectorA, vectorB, timeStamp) {\n    if (this._valid !== undefined) return this._valid;\n    const threshold = 2;\n    const movedA = vectorA.mag() >= threshold;\n    const movedB = vectorB.mag() >= threshold;\n\n    // neither finger has moved a meaningful amount, wait\n    if (!movedA && !movedB) return;\n\n    // One finger has moved and the other has not.\n    // If enough time has passed, decide it is not a pitch.\n    if (!movedA || !movedB) {\n      if (this._firstMove === undefined) {\n        this._firstMove = timeStamp;\n      }\n      if (timeStamp - this._firstMove < ALLOWED_SINGLE_TOUCH_TIME) {\n        // still waiting for a movement from the second finger\n        return undefined;\n      } else {\n        return false;\n      }\n    }\n    const isSameDirection = vectorA.y > 0 === vectorB.y > 0;\n    return isVertical(vectorA) && isVertical(vectorB) && isSameDirection;\n  }\n}","map":{"version":3,"names":["_defineProperty","DOM","TwoFingersTouchHandler","constructor","reset","_active","_firstTwoTouches","touchstart","e","points","mapTouches","length","identifier","_start","touchmove","preventDefault","idA","idB","a","getTouchById","b","pinchAround","_aroundCenter","add","div","_move","touchend","suppressClick","touchcancel","enable","options","_enabled","around","disable","isEnabled","isActive","i","undefined","ZOOM_THRESHOLD","getZoomDelta","distance","lastDistance","Math","log","LN2","TwoFingersTouchZoomHandler","args","_distance","_startDistance","dist","abs","zoomDelta","ROTATION_THRESHOLD","getBearingDelta","angleWith","PI","TwoFingersTouchRotateHandler","_minDiameter","_startVector","_vector","sub","_e","lastVector","_isBelowThreshold","bearingDelta","vector","min","mag","circumference","threshold","bearingDeltaSinceStart","isVertical","y","x","ALLOWED_SINGLE_TOUCH_TIME","TwoFingersTouchPitchHandler","map","_map","_valid","_firstMove","_lastPoints","_currentTouchCount","center","cooperativeGestures","vectorA","vectorB","gestureBeginsVertically","timeStamp","yDeltaAverage","degreesPerPixelMoved","pitchDelta","movedA","movedB","isSameDirection"],"sources":["/Users/bhanudahiya/Desktop/ledger-IQ/node_modules/@antv/l7-map/es/map/handler/two_fingers_touch.js"],"sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { DOM } from \"../util/dom\";\n\n/**\n * An options object sent to the enable function of some of the handlers\n */\n\n/**\n * The `TwoFingersTouchHandler`s allows the user to zoom, pitch and rotate the map using two fingers\n *\n */\nclass TwoFingersTouchHandler {\n  /** @internal */\n  constructor() {\n    _defineProperty(this, \"_enabled\", void 0);\n    _defineProperty(this, \"_active\", void 0);\n    _defineProperty(this, \"_firstTwoTouches\", void 0);\n    _defineProperty(this, \"_vector\", void 0);\n    _defineProperty(this, \"_startVector\", void 0);\n    _defineProperty(this, \"_aroundCenter\", void 0);\n    this.reset();\n  }\n  reset() {\n    this._active = false;\n    delete this._firstTwoTouches;\n  }\n  touchstart(e, points, mapTouches) {\n    //log('touchstart', points, e.target.innerHTML, e.targetTouches.length ? e.targetTouches[0].target.innerHTML: undefined);\n    if (this._firstTwoTouches || mapTouches.length < 2) return;\n    this._firstTwoTouches = [mapTouches[0].identifier, mapTouches[1].identifier];\n\n    // implemented by child classes\n    this._start([points[0], points[1]]);\n  }\n  touchmove(e, points, mapTouches) {\n    if (!this._firstTwoTouches) return;\n    e.preventDefault();\n    const [idA, idB] = this._firstTwoTouches;\n    const a = getTouchById(mapTouches, points, idA);\n    const b = getTouchById(mapTouches, points, idB);\n    if (!a || !b) return;\n    const pinchAround = this._aroundCenter ? null : a.add(b).div(2);\n\n    // implemented by child classes\n    return this._move([a, b], pinchAround, e);\n  }\n  touchend(e, points, mapTouches) {\n    if (!this._firstTwoTouches) return;\n    const [idA, idB] = this._firstTwoTouches;\n    const a = getTouchById(mapTouches, points, idA);\n    const b = getTouchById(mapTouches, points, idB);\n    if (a && b) return;\n    if (this._active) DOM.suppressClick();\n    this.reset();\n  }\n  touchcancel() {\n    this.reset();\n  }\n\n  /**\n   * Enables the \"drag to pitch\" interaction.\n   *\n   * @example\n   * ```ts\n   * map.touchPitch.enable();\n   * ```\n   */\n  enable(options) {\n    this._enabled = true;\n    this._aroundCenter = !!options && options.around === 'center';\n  }\n\n  /**\n   * Disables the \"drag to pitch\" interaction.\n   *\n   * @example\n   * ```ts\n   * map.touchPitch.disable();\n   * ```\n   */\n  disable() {\n    this._enabled = false;\n    this.reset();\n  }\n\n  /**\n   * Returns a Boolean indicating whether the \"drag to pitch\" interaction is enabled.\n   *\n   * @returns  `true` if the \"drag to pitch\" interaction is enabled.\n   */\n  isEnabled() {\n    return !!this._enabled;\n  }\n\n  /**\n   * Returns a Boolean indicating whether the \"drag to pitch\" interaction is active, i.e. currently being used.\n   *\n   * @returns `true` if the \"drag to pitch\" interaction is active.\n   */\n  isActive() {\n    return !!this._active;\n  }\n}\nfunction getTouchById(mapTouches, points, identifier) {\n  for (let i = 0; i < mapTouches.length; i++) {\n    if (mapTouches[i].identifier === identifier) return points[i];\n  }\n  return undefined;\n}\n\n/* ZOOM */\n\nconst ZOOM_THRESHOLD = 0.1;\nfunction getZoomDelta(distance, lastDistance) {\n  return Math.log(distance / lastDistance) / Math.LN2;\n}\n\n/**\n * The `TwoFingersTouchHandler`s allows the user to zoom the map two fingers\n *\n * @group Handlers\n */\nexport class TwoFingersTouchZoomHandler extends TwoFingersTouchHandler {\n  constructor(...args) {\n    super(...args);\n    _defineProperty(this, \"_distance\", void 0);\n    _defineProperty(this, \"_startDistance\", void 0);\n  }\n  reset() {\n    super.reset();\n    delete this._distance;\n    delete this._startDistance;\n  }\n  _start(points) {\n    this._startDistance = this._distance = points[0].dist(points[1]);\n  }\n  _move(points, pinchAround) {\n    const lastDistance = this._distance;\n    this._distance = points[0].dist(points[1]);\n    if (!this._active && Math.abs(getZoomDelta(this._distance, this._startDistance)) < ZOOM_THRESHOLD) return;\n    this._active = true;\n    return {\n      zoomDelta: getZoomDelta(this._distance, lastDistance),\n      pinchAround\n    };\n  }\n}\n\n/* ROTATE */\n\nconst ROTATION_THRESHOLD = 25; // pixels along circumference of touch circle\n\nfunction getBearingDelta(a, b) {\n  return a.angleWith(b) * 180 / Math.PI;\n}\n\n/**\n * The `TwoFingersTouchHandler`s allows the user to rotate the map two fingers\n *\n * @group Handlers\n */\nexport class TwoFingersTouchRotateHandler extends TwoFingersTouchHandler {\n  constructor(...args) {\n    super(...args);\n    _defineProperty(this, \"_minDiameter\", void 0);\n  }\n  reset() {\n    super.reset();\n    delete this._minDiameter;\n    delete this._startVector;\n    delete this._vector;\n  }\n  _start(points) {\n    this._startVector = this._vector = points[0].sub(points[1]);\n    this._minDiameter = points[0].dist(points[1]);\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  _move(points, pinchAround, _e) {\n    const lastVector = this._vector;\n    this._vector = points[0].sub(points[1]);\n    if (!this._active && this._isBelowThreshold(this._vector)) return;\n    this._active = true;\n    return {\n      bearingDelta: getBearingDelta(this._vector, lastVector),\n      pinchAround\n    };\n  }\n  _isBelowThreshold(vector) {\n    /*\n     * The threshold before a rotation actually happens is configured in\n     * pixels along the circumference of the circle formed by the two fingers.\n     * This makes the threshold in degrees larger when the fingers are close\n     * together and smaller when the fingers are far apart.\n     *\n     * Use the smallest diameter from the whole gesture to reduce sensitivity\n     * when pinching in and out.\n     */\n\n    this._minDiameter = Math.min(this._minDiameter, vector.mag());\n    const circumference = Math.PI * this._minDiameter;\n    const threshold = ROTATION_THRESHOLD / circumference * 360;\n    const bearingDeltaSinceStart = getBearingDelta(vector, this._startVector);\n    return Math.abs(bearingDeltaSinceStart) < threshold;\n  }\n}\n\n/* PITCH */\n\nfunction isVertical(vector) {\n  return Math.abs(vector.y) > Math.abs(vector.x);\n}\nconst ALLOWED_SINGLE_TOUCH_TIME = 100;\n\n/**\n * The `TwoFingersTouchPitchHandler` allows the user to pitch the map by dragging up and down with two fingers.\n *\n * @group Handlers\n */\nexport class TwoFingersTouchPitchHandler extends TwoFingersTouchHandler {\n  constructor(map) {\n    super();\n    _defineProperty(this, \"_valid\", void 0);\n    _defineProperty(this, \"_firstMove\", void 0);\n    _defineProperty(this, \"_lastPoints\", void 0);\n    _defineProperty(this, \"_map\", void 0);\n    _defineProperty(this, \"_currentTouchCount\", 0);\n    this._map = map;\n  }\n  reset() {\n    super.reset();\n    this._valid = undefined;\n    delete this._firstMove;\n    delete this._lastPoints;\n  }\n  touchstart(e, points, mapTouches) {\n    super.touchstart(e, points, mapTouches);\n    this._currentTouchCount = mapTouches.length;\n  }\n  _start(points) {\n    this._lastPoints = points;\n    if (isVertical(points[0].sub(points[1]))) {\n      // fingers are more horizontal than vertical\n      this._valid = false;\n    }\n  }\n  _move(points, center, e) {\n    // If cooperative gestures is enabled, we need a 3-finger minimum for this gesture to register\n    if (this._map.cooperativeGestures.isEnabled() && this._currentTouchCount < 3) {\n      return;\n    }\n    const vectorA = points[0].sub(this._lastPoints[0]);\n    const vectorB = points[1].sub(this._lastPoints[1]);\n    this._valid = this.gestureBeginsVertically(vectorA, vectorB, e.timeStamp);\n    if (!this._valid) return;\n    this._lastPoints = points;\n    this._active = true;\n    const yDeltaAverage = (vectorA.y + vectorB.y) / 2;\n    const degreesPerPixelMoved = -0.5;\n    return {\n      pitchDelta: yDeltaAverage * degreesPerPixelMoved\n    };\n  }\n  gestureBeginsVertically(vectorA, vectorB, timeStamp) {\n    if (this._valid !== undefined) return this._valid;\n    const threshold = 2;\n    const movedA = vectorA.mag() >= threshold;\n    const movedB = vectorB.mag() >= threshold;\n\n    // neither finger has moved a meaningful amount, wait\n    if (!movedA && !movedB) return;\n\n    // One finger has moved and the other has not.\n    // If enough time has passed, decide it is not a pitch.\n    if (!movedA || !movedB) {\n      if (this._firstMove === undefined) {\n        this._firstMove = timeStamp;\n      }\n      if (timeStamp - this._firstMove < ALLOWED_SINGLE_TOUCH_TIME) {\n        // still waiting for a movement from the second finger\n        return undefined;\n      } else {\n        return false;\n      }\n    }\n    const isSameDirection = vectorA.y > 0 === vectorB.y > 0;\n    return isVertical(vectorA) && isVertical(vectorB) && isSameDirection;\n  }\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}