{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { generateCatRamp, generateColorRamp, generateCustomRamp, generateLinearRamp, generateQuantizeRamp } from '@antv/l7-utils';\nexport default class TextureService {\n  constructor(layer) {\n    _defineProperty(this, \"layer\", void 0);\n    _defineProperty(this, \"rendererService\", void 0);\n    _defineProperty(this, \"colorTexture\", void 0);\n    _defineProperty(this, \"key\", void 0);\n    this.layer = layer;\n    const container = this.layer.getContainer();\n    this.rendererService = container.rendererService;\n  }\n  getColorTexture(colorRamp, domain) {\n    // TODO 支持传入图片\n    const currentkey = this.getTextureKey(colorRamp, domain);\n    if (this.key === currentkey) {\n      return this.colorTexture;\n    } else {\n      this.createColorTexture(colorRamp, domain);\n    }\n    this.key = currentkey;\n    return this.colorTexture;\n  }\n  createColorTexture(colorRamp, domain) {\n    const {\n      createTexture2D\n    } = this.rendererService;\n    const imageData = this.getColorRampBar(colorRamp, domain);\n    const texture = createTexture2D({\n      data: new Uint8Array(imageData.data),\n      width: imageData.width,\n      height: imageData.height,\n      flipY: false,\n      unorm: true\n    });\n    this.colorTexture = texture;\n    return texture;\n  }\n  setColorTexture(texture, colorRamp, domain) {\n    this.key = this.getTextureKey(colorRamp, domain);\n    this.colorTexture = texture;\n  }\n  destroy() {\n    var _this$colorTexture;\n    (_this$colorTexture = this.colorTexture) === null || _this$colorTexture === void 0 || _this$colorTexture.destroy();\n  }\n  getColorRampBar(colorRamp, domain) {\n    switch (colorRamp.type) {\n      case 'cat':\n        return generateCatRamp(colorRamp);\n      case 'quantize':\n        return generateQuantizeRamp(colorRamp);\n      case 'custom':\n        return generateCustomRamp(colorRamp, domain);\n      case 'linear':\n        return generateLinearRamp(colorRamp, domain);\n      default:\n        return generateColorRamp(colorRamp);\n    }\n  }\n  getTextureKey(colorRamp, domain) {\n    var _colorRamp$positions;\n    return `${colorRamp.colors.join('_')}_${colorRamp === null || colorRamp === void 0 || (_colorRamp$positions = colorRamp.positions) === null || _colorRamp$positions === void 0 ? void 0 : _colorRamp$positions.join('_')}_${colorRamp.type}_${domain === null || domain === void 0 ? void 0 : domain.join('_')}`;\n  }\n}","map":{"version":3,"names":["_defineProperty","generateCatRamp","generateColorRamp","generateCustomRamp","generateLinearRamp","generateQuantizeRamp","TextureService","constructor","layer","container","getContainer","rendererService","getColorTexture","colorRamp","domain","currentkey","getTextureKey","key","colorTexture","createColorTexture","createTexture2D","imageData","getColorRampBar","texture","data","Uint8Array","width","height","flipY","unorm","setColorTexture","destroy","_this$colorTexture","type","_colorRamp$positions","colors","join","positions"],"sources":["/Users/bhanudahiya/Desktop/ledger-IQ/node_modules/@antv/l7-layers/es/core/TextureService.js"],"sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { generateCatRamp, generateColorRamp, generateCustomRamp, generateLinearRamp, generateQuantizeRamp } from '@antv/l7-utils';\nexport default class TextureService {\n  constructor(layer) {\n    _defineProperty(this, \"layer\", void 0);\n    _defineProperty(this, \"rendererService\", void 0);\n    _defineProperty(this, \"colorTexture\", void 0);\n    _defineProperty(this, \"key\", void 0);\n    this.layer = layer;\n    const container = this.layer.getContainer();\n    this.rendererService = container.rendererService;\n  }\n  getColorTexture(colorRamp, domain) {\n    // TODO 支持传入图片\n    const currentkey = this.getTextureKey(colorRamp, domain);\n    if (this.key === currentkey) {\n      return this.colorTexture;\n    } else {\n      this.createColorTexture(colorRamp, domain);\n    }\n    this.key = currentkey;\n    return this.colorTexture;\n  }\n  createColorTexture(colorRamp, domain) {\n    const {\n      createTexture2D\n    } = this.rendererService;\n    const imageData = this.getColorRampBar(colorRamp, domain);\n    const texture = createTexture2D({\n      data: new Uint8Array(imageData.data),\n      width: imageData.width,\n      height: imageData.height,\n      flipY: false,\n      unorm: true\n    });\n    this.colorTexture = texture;\n    return texture;\n  }\n  setColorTexture(texture, colorRamp, domain) {\n    this.key = this.getTextureKey(colorRamp, domain);\n    this.colorTexture = texture;\n  }\n  destroy() {\n    var _this$colorTexture;\n    (_this$colorTexture = this.colorTexture) === null || _this$colorTexture === void 0 || _this$colorTexture.destroy();\n  }\n  getColorRampBar(colorRamp, domain) {\n    switch (colorRamp.type) {\n      case 'cat':\n        return generateCatRamp(colorRamp);\n      case 'quantize':\n        return generateQuantizeRamp(colorRamp);\n      case 'custom':\n        return generateCustomRamp(colorRamp, domain);\n      case 'linear':\n        return generateLinearRamp(colorRamp, domain);\n      default:\n        return generateColorRamp(colorRamp);\n    }\n  }\n  getTextureKey(colorRamp, domain) {\n    var _colorRamp$positions;\n    return `${colorRamp.colors.join('_')}_${colorRamp === null || colorRamp === void 0 || (_colorRamp$positions = colorRamp.positions) === null || _colorRamp$positions === void 0 ? void 0 : _colorRamp$positions.join('_')}_${colorRamp.type}_${domain === null || domain === void 0 ? void 0 : domain.join('_')}`;\n  }\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}