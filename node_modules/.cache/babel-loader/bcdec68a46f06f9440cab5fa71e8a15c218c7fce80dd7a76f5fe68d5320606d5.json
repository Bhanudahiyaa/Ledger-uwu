{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { lodashUtil } from '@antv/l7-utils';\nimport { MaskOperation } from \"../layer/ILayerService\";\nimport WarnInfo from \"./warnInfo\";\nconst {\n  merge\n} = lodashUtil;\n/**\n * 场景默认配置项\n */\nconst defaultSceneConfig = {\n  id: 'map',\n  logoPosition: 'bottomleft',\n  logoVisible: true,\n  antialias: true,\n  stencil: true,\n  preserveDrawingBuffer: false,\n  pickBufferScale: 1.0,\n  fitBoundsOptions: {\n    animate: false\n  }\n};\n\n/**\n * 图层基类默认样式属性\n */\nconst defaultLayerConfig = {\n  colors: ['rgb(103,0,31)', 'rgb(178,24,43)', 'rgb(214,96,77)', 'rgb(244,165,130)', 'rgb(253,219,199)', 'rgb(247,247,247)', 'rgb(209,229,240)', 'rgb(146,197,222)', 'rgb(67,147,195)', 'rgb(33,102,172)', 'rgb(5,48,97)'],\n  size: 10,\n  shape: 'circle',\n  scales: {},\n  shape2d: ['circle', 'triangle', 'square', 'pentagon', 'hexagon', 'octogon', 'hexagram', 'rhombus', 'vesica'],\n  shape3d: ['cylinder', 'triangleColumn', 'hexagonColumn', 'squareColumn'],\n  minZoom: -1,\n  maxZoom: 24,\n  visible: true,\n  autoFit: false,\n  pickingBuffer: 0,\n  enablePropagation: false,\n  zIndex: 0,\n  blend: 'normal',\n  maskLayers: [],\n  enableMask: true,\n  maskOperation: MaskOperation.AND,\n  pickedFeatureID: -1,\n  enableMultiPassRenderer: false,\n  enablePicking: true,\n  active: false,\n  activeColor: '#2f54eb',\n  enableHighlight: false,\n  enableSelect: false,\n  highlightColor: '#2f54eb',\n  activeMix: 0,\n  selectColor: 'blue',\n  selectMix: 0,\n  enableLighting: false,\n  animateOption: {\n    enable: false,\n    interval: 0.2,\n    duration: 4,\n    trailLength: 0.15\n  },\n  forward: true // 默认是正方向\n};\n\n// @see https://github.com/epoberezkin/ajv#options\n// const ajv = new Ajv({\n//   allErrors: true,\n//   verbose: true,\n// });\n\nexport default class GlobalConfigService {\n  constructor() {\n    /**\n     * 全部场景配置项缓存\n     */\n    _defineProperty(this, \"sceneConfigCache\", {});\n    /**\n     * 场景配置项校验器\n     */\n    // private sceneConfigValidator: Ajv.ValidateFunction;\n    /**\n     * 地图配置项校验器\n     */\n    // private mapConfigValidator: Ajv.ValidateFunction;\n    /**\n     * 全部图层配置项缓存\n     */\n    _defineProperty(this, \"layerConfigCache\", {});\n    /**\n     * 数据映射缓存\n     */\n    _defineProperty(this, \"layerAttributeConfigCache\", {});\n  }\n  /**\n   * 保存每一种 Layer 配置项的校验器\n   */\n  // private layerConfigValidatorCache: {\n  //   [layerName: string]: Ajv.ValidateFunction;\n  // } = {};\n\n  getSceneConfig(sceneId) {\n    return this.sceneConfigCache[sceneId];\n  }\n  getSceneWarninfo(id) {\n    return WarnInfo[id];\n  }\n  setSceneConfig(sceneId, config) {\n    this.sceneConfigCache[sceneId] = _objectSpread(_objectSpread({}, defaultSceneConfig), config);\n  }\n\n  // public validateSceneConfig(data: object) {\n  //   return this.validate(this.sceneConfigValidator, data);\n  // }\n\n  // public validateMapConfig(data: object) {\n  //   return this.validate(this.mapConfigValidator, data);\n  // }\n\n  getLayerConfig(layerId) {\n    // @ts-ignore\n    return this.layerConfigCache[layerId];\n  }\n  setLayerConfig(sceneId, layerId, config) {\n    // @ts-ignore\n    this.layerConfigCache[layerId] = _objectSpread({}, merge({}, this.sceneConfigCache[sceneId], defaultLayerConfig, config));\n  }\n  getAttributeConfig(layerId) {\n    return this.layerAttributeConfigCache[layerId];\n  }\n  setAttributeConfig(layerId, attr) {\n    // TODO\n    this.layerAttributeConfigCache[layerId] = _objectSpread(_objectSpread({}, this.layerAttributeConfigCache[layerId]), attr);\n  }\n  clean() {\n    this.sceneConfigCache = {};\n    this.layerConfigCache = {};\n  }\n\n  // @postConstruct()\n  // private registerSceneConfigSchemaValidator() {\n  //   this.sceneConfigValidator = ajv.compile(sceneConfigSchema);\n  //   this.mapConfigValidator = ajv.compile(mapConfigSchema);\n  // }\n\n  // private validate(\n  //   validateFunc: Ajv.ValidateFunction | undefined,\n  //   data: object,\n  // ) {\n  //   if (validateFunc) {\n  //     const valid = validateFunc(data);\n  //     if (!valid) {\n  //       return {\n  //         valid,\n  //         errors: validateFunc.errors,\n  //         errorText: ajv.errorsText(validateFunc.errors),\n  //       };\n  //     }\n  //   }\n  //   return {\n  //     valid: true,\n  //     errors: null,\n  //     errorText: null,\n  //   };\n  // }\n}","map":{"version":3,"names":["_objectSpread","_defineProperty","lodashUtil","MaskOperation","WarnInfo","merge","defaultSceneConfig","id","logoPosition","logoVisible","antialias","stencil","preserveDrawingBuffer","pickBufferScale","fitBoundsOptions","animate","defaultLayerConfig","colors","size","shape","scales","shape2d","shape3d","minZoom","maxZoom","visible","autoFit","pickingBuffer","enablePropagation","zIndex","blend","maskLayers","enableMask","maskOperation","AND","pickedFeatureID","enableMultiPassRenderer","enablePicking","active","activeColor","enableHighlight","enableSelect","highlightColor","activeMix","selectColor","selectMix","enableLighting","animateOption","enable","interval","duration","trailLength","forward","GlobalConfigService","constructor","getSceneConfig","sceneId","sceneConfigCache","getSceneWarninfo","setSceneConfig","config","getLayerConfig","layerId","layerConfigCache","setLayerConfig","getAttributeConfig","layerAttributeConfigCache","setAttributeConfig","attr","clean"],"sources":["/Users/bhanudahiya/Desktop/ledger-IQ/node_modules/@antv/l7-core/es/services/config/ConfigService.js"],"sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { lodashUtil } from '@antv/l7-utils';\nimport { MaskOperation } from \"../layer/ILayerService\";\nimport WarnInfo from \"./warnInfo\";\nconst {\n  merge\n} = lodashUtil;\n/**\n * 场景默认配置项\n */\nconst defaultSceneConfig = {\n  id: 'map',\n  logoPosition: 'bottomleft',\n  logoVisible: true,\n  antialias: true,\n  stencil: true,\n  preserveDrawingBuffer: false,\n  pickBufferScale: 1.0,\n  fitBoundsOptions: {\n    animate: false\n  }\n};\n\n/**\n * 图层基类默认样式属性\n */\nconst defaultLayerConfig = {\n  colors: ['rgb(103,0,31)', 'rgb(178,24,43)', 'rgb(214,96,77)', 'rgb(244,165,130)', 'rgb(253,219,199)', 'rgb(247,247,247)', 'rgb(209,229,240)', 'rgb(146,197,222)', 'rgb(67,147,195)', 'rgb(33,102,172)', 'rgb(5,48,97)'],\n  size: 10,\n  shape: 'circle',\n  scales: {},\n  shape2d: ['circle', 'triangle', 'square', 'pentagon', 'hexagon', 'octogon', 'hexagram', 'rhombus', 'vesica'],\n  shape3d: ['cylinder', 'triangleColumn', 'hexagonColumn', 'squareColumn'],\n  minZoom: -1,\n  maxZoom: 24,\n  visible: true,\n  autoFit: false,\n  pickingBuffer: 0,\n  enablePropagation: false,\n  zIndex: 0,\n  blend: 'normal',\n  maskLayers: [],\n  enableMask: true,\n  maskOperation: MaskOperation.AND,\n  pickedFeatureID: -1,\n  enableMultiPassRenderer: false,\n  enablePicking: true,\n  active: false,\n  activeColor: '#2f54eb',\n  enableHighlight: false,\n  enableSelect: false,\n  highlightColor: '#2f54eb',\n  activeMix: 0,\n  selectColor: 'blue',\n  selectMix: 0,\n  enableLighting: false,\n  animateOption: {\n    enable: false,\n    interval: 0.2,\n    duration: 4,\n    trailLength: 0.15\n  },\n  forward: true // 默认是正方向\n};\n\n// @see https://github.com/epoberezkin/ajv#options\n// const ajv = new Ajv({\n//   allErrors: true,\n//   verbose: true,\n// });\n\nexport default class GlobalConfigService {\n  constructor() {\n    /**\n     * 全部场景配置项缓存\n     */\n    _defineProperty(this, \"sceneConfigCache\", {});\n    /**\n     * 场景配置项校验器\n     */\n    // private sceneConfigValidator: Ajv.ValidateFunction;\n    /**\n     * 地图配置项校验器\n     */\n    // private mapConfigValidator: Ajv.ValidateFunction;\n    /**\n     * 全部图层配置项缓存\n     */\n    _defineProperty(this, \"layerConfigCache\", {});\n    /**\n     * 数据映射缓存\n     */\n    _defineProperty(this, \"layerAttributeConfigCache\", {});\n  }\n  /**\n   * 保存每一种 Layer 配置项的校验器\n   */\n  // private layerConfigValidatorCache: {\n  //   [layerName: string]: Ajv.ValidateFunction;\n  // } = {};\n\n  getSceneConfig(sceneId) {\n    return this.sceneConfigCache[sceneId];\n  }\n  getSceneWarninfo(id) {\n    return WarnInfo[id];\n  }\n  setSceneConfig(sceneId, config) {\n    this.sceneConfigCache[sceneId] = _objectSpread(_objectSpread({}, defaultSceneConfig), config);\n  }\n\n  // public validateSceneConfig(data: object) {\n  //   return this.validate(this.sceneConfigValidator, data);\n  // }\n\n  // public validateMapConfig(data: object) {\n  //   return this.validate(this.mapConfigValidator, data);\n  // }\n\n  getLayerConfig(layerId) {\n    // @ts-ignore\n    return this.layerConfigCache[layerId];\n  }\n  setLayerConfig(sceneId, layerId, config) {\n    // @ts-ignore\n    this.layerConfigCache[layerId] = _objectSpread({}, merge({}, this.sceneConfigCache[sceneId], defaultLayerConfig, config));\n  }\n  getAttributeConfig(layerId) {\n    return this.layerAttributeConfigCache[layerId];\n  }\n  setAttributeConfig(layerId, attr) {\n    // TODO\n    this.layerAttributeConfigCache[layerId] = _objectSpread(_objectSpread({}, this.layerAttributeConfigCache[layerId]), attr);\n  }\n  clean() {\n    this.sceneConfigCache = {};\n    this.layerConfigCache = {};\n  }\n\n  // @postConstruct()\n  // private registerSceneConfigSchemaValidator() {\n  //   this.sceneConfigValidator = ajv.compile(sceneConfigSchema);\n  //   this.mapConfigValidator = ajv.compile(mapConfigSchema);\n  // }\n\n  // private validate(\n  //   validateFunc: Ajv.ValidateFunction | undefined,\n  //   data: object,\n  // ) {\n  //   if (validateFunc) {\n  //     const valid = validateFunc(data);\n  //     if (!valid) {\n  //       return {\n  //         valid,\n  //         errors: validateFunc.errors,\n  //         errorText: ajv.errorsText(validateFunc.errors),\n  //       };\n  //     }\n  //   }\n  //   return {\n  //     valid: true,\n  //     errors: null,\n  //     errorText: null,\n  //   };\n  // }\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}