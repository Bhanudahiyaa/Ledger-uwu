{"ast":null,"code":"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { NodeView, Scheduler } from '@antv/x6';\nimport { Portal } from './portal';\nimport { Wrap } from './wrap';\nexport class ReactShapeView extends NodeView {\n  targetId() {\n    return `${this.graph.view.cid}:${this.cell.id}`;\n  }\n  init() {\n    super.init();\n    this.cell.on('removed', () => {\n      Portal.disconnect(this.targetId());\n    });\n  }\n  getComponentContainer() {\n    return this.selectors && (this.cell.prop('useForeignObject') === false ? this.selectors.content : this.selectors.foContent);\n  }\n  confirmUpdate(flag) {\n    const ret = super.confirmUpdate(flag);\n    return this.handleAction(ret, ReactShapeView.action, () => {\n      if (Scheduler) {\n        Scheduler.scheduleTask(() => {\n          this.renderReactComponent();\n        });\n      } else {\n        this.renderReactComponent();\n      }\n    });\n  }\n  renderReactComponent() {\n    this.unmountReactComponent();\n    const root = this.getComponentContainer();\n    const node = this.cell;\n    const graph = this.graph;\n    if (root) {\n      const component = this.graph.hook.getReactComponent(node);\n      const elem = React.createElement(Wrap, {\n        graph,\n        node,\n        component\n      });\n      if (Portal.isActive()) {\n        Portal.connect(this.targetId(), ReactDOM.createPortal(elem, root));\n      } else {\n        ReactDOM.render(elem, root);\n      }\n    }\n  }\n  unmountReactComponent() {\n    const root = this.getComponentContainer();\n    if (root) {\n      ReactDOM.unmountComponentAtNode(root);\n    }\n    return root;\n  }\n  unmount() {\n    Portal.disconnect(this.targetId());\n    this.unmountReactComponent();\n    super.unmount();\n    return this;\n  }\n}\n(function (ReactShapeView) {\n  ReactShapeView.action = 'react';\n  ReactShapeView.config({\n    bootstrap: [ReactShapeView.action],\n    actions: {\n      component: ReactShapeView.action\n    }\n  });\n  NodeView.registry.register('react-shape-view', ReactShapeView, true);\n})(ReactShapeView || (ReactShapeView = {}));","map":{"version":3,"names":["React","ReactDOM","NodeView","Scheduler","Portal","Wrap","ReactShapeView","targetId","graph","view","cid","cell","id","init","on","disconnect","getComponentContainer","selectors","prop","content","foContent","confirmUpdate","flag","ret","handleAction","action","scheduleTask","renderReactComponent","unmountReactComponent","root","node","component","hook","getReactComponent","elem","createElement","isActive","connect","createPortal","render","unmountComponentAtNode","unmount","config","bootstrap","actions","registry","register"],"sources":["/Users/bhanudahiya/Desktop/ledger-IQ/node_modules/@antv/x6-react-shape/src/view.ts"],"sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { NodeView, Scheduler } from '@antv/x6'\nimport { ReactShape } from './node'\nimport { Portal } from './portal'\nimport { Wrap } from './wrap'\n\nexport class ReactShapeView extends NodeView<ReactShape> {\n  protected targetId() {\n    return `${this.graph.view.cid}:${this.cell.id}`\n  }\n\n  protected init() {\n    super.init()\n    this.cell.on('removed', () => {\n      Portal.disconnect(this.targetId())\n    })\n  }\n\n  getComponentContainer() {\n    return (\n      this.selectors &&\n      (this.cell.prop('useForeignObject') === false\n        ? (this.selectors.content as SVGElement)\n        : (this.selectors.foContent as HTMLDivElement))\n    )\n  }\n\n  confirmUpdate(flag: number) {\n    const ret = super.confirmUpdate(flag)\n    return this.handleAction(ret, ReactShapeView.action, () => {\n      if (Scheduler) {\n        Scheduler.scheduleTask(() => {\n          this.renderReactComponent()\n        })\n      } else {\n        this.renderReactComponent()\n      }\n    })\n  }\n\n  protected renderReactComponent() {\n    this.unmountReactComponent()\n    const root = this.getComponentContainer()\n    const node = this.cell\n    const graph = this.graph\n\n    if (root) {\n      const component = this.graph.hook.getReactComponent(node)\n      const elem = React.createElement(Wrap, { graph, node, component })\n      if (Portal.isActive()) {\n        Portal.connect(this.targetId(), ReactDOM.createPortal(elem, root))\n      } else {\n        ReactDOM.render(elem, root)\n      }\n    }\n  }\n\n  protected unmountReactComponent() {\n    const root = this.getComponentContainer()\n    if (root) {\n      ReactDOM.unmountComponentAtNode(root)\n    }\n    return root\n  }\n\n  unmount() {\n    Portal.disconnect(this.targetId())\n    this.unmountReactComponent()\n    super.unmount()\n    return this\n  }\n}\n\nexport namespace ReactShapeView {\n  export const action = 'react' as any\n\n  ReactShapeView.config({\n    bootstrap: [action],\n    actions: {\n      component: action,\n    },\n  })\n\n  NodeView.registry.register('react-shape-view', ReactShapeView, true)\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}