{"ast":null,"code":"// src/utils/bandOperation/math.ts\nfunction mathematical(symbol, n1, n2) {\n  switch (symbol) {\n    case \"+\":\n      return n1 + n2;\n    case \"-\":\n      return n1 - n2;\n    case \"*\":\n      return n1 * n2;\n    case \"/\":\n      return n1 / n2;\n    case \"%\":\n      return n1 % n2;\n    case \"^\":\n      return Math.pow(n1, n2);\n    case \"abs\":\n      return Math.abs(n1);\n    case \"floor\":\n      return Math.floor(n1);\n    case \"round\":\n      return Math.round(n1);\n    case \"ceil\":\n      return Math.ceil(n1);\n    case \"sin\":\n      return Math.sin(n1);\n    case \"cos\":\n      return Math.cos(n1);\n    case \"atan\":\n      return n2 === -1 ? Math.atan(n1) : Math.atan2(n1, n2);\n    case \"min\":\n      return Math.min(n1, n2);\n    case \"max\":\n      return Math.max(n1, n2);\n    case \"log10\":\n      return Math.log(n1);\n    case \"log2\":\n      return Math.log2(n1);\n    default:\n      console.warn(\"Calculate symbol err! Return default 0\");\n      return 0;\n  }\n}\nfunction calculate(express, bandsData) {\n  const {\n    width,\n    height\n  } = bandsData[0];\n  const dataArray = bandsData.map(band => band.rasterData);\n  const length = width * height;\n  const rasterData = [];\n  const originExp = JSON.stringify(express);\n  for (let i = 0; i < length; i++) {\n    const exp = JSON.parse(originExp);\n    const expResult = spellExpress(exp, dataArray, i);\n    if (typeof expResult === \"number\") {\n      rasterData.push(expResult);\n    } else {\n      const result = calculateExpress(exp);\n      rasterData.push(result);\n    }\n  }\n  return rasterData;\n}\nfunction spellExpress(express, dataArray, index) {\n  if (express.length === 2 && express[0] === \"band\" && typeof express[1] === \"number\") {\n    try {\n      return dataArray[express[1]][index];\n    } catch (err) {\n      console.warn(\"Raster Data err!\");\n      return 0;\n    }\n  }\n  express.map((e, i) => {\n    if (Array.isArray(e) && e.length > 0) {\n      switch (e[0]) {\n        case \"band\":\n          try {\n            express[i] = dataArray[e[1]][index];\n          } catch (err) {\n            console.warn(\"Raster Data err!\");\n            express[i] = 0;\n          }\n          break;\n        default:\n          spellExpress(e, dataArray, index);\n      }\n    }\n  });\n}\nfunction formatExpress(express) {\n  const [symbol1, symbol2 = -1, symbol3 = -1] = express;\n  if (symbol1 === void 0) {\n    console.warn(\"Express err!\");\n    return [\"+\", 0, 0];\n  }\n  const symbol = symbol1.replace(/\\s+/g, \"\");\n  return [symbol, symbol2, symbol3];\n}\nfunction calculateExpress(express) {\n  const formatExp = formatExpress(express);\n  const str = formatExp[0];\n  let left = formatExp[1];\n  let right = formatExp[2];\n  if (Array.isArray(left)) {\n    left = calculateExpress(express[1]);\n  }\n  if (Array.isArray(right)) {\n    right = calculateExpress(express[2]);\n  }\n  return mathematical(str, left, right);\n}\nexport { calculate, calculateExpress, formatExpress, mathematical, spellExpress };","map":{"version":3,"names":["mathematical","symbol","n1","n2","Math","pow","abs","floor","round","ceil","sin","cos","atan","atan2","min","max","log","log2","console","warn","calculate","express","bandsData","width","height","dataArray","map","band","rasterData","length","originExp","JSON","stringify","i","exp","parse","expResult","spellExpress","push","result","calculateExpress","index","err","e","Array","isArray","formatExpress","symbol1","symbol2","symbol3","replace","formatExp","str","left","right"],"sources":["/Users/bhanudahiya/Desktop/ledger-IQ/node_modules/@antv/l7-source/es/utils/bandOperation/math.js"],"sourcesContent":["// src/utils/bandOperation/math.ts\nfunction mathematical(symbol, n1, n2) {\n  switch (symbol) {\n    case \"+\":\n      return n1 + n2;\n    case \"-\":\n      return n1 - n2;\n    case \"*\":\n      return n1 * n2;\n    case \"/\":\n      return n1 / n2;\n    case \"%\":\n      return n1 % n2;\n    case \"^\":\n      return Math.pow(n1, n2);\n    case \"abs\":\n      return Math.abs(n1);\n    case \"floor\":\n      return Math.floor(n1);\n    case \"round\":\n      return Math.round(n1);\n    case \"ceil\":\n      return Math.ceil(n1);\n    case \"sin\":\n      return Math.sin(n1);\n    case \"cos\":\n      return Math.cos(n1);\n    case \"atan\":\n      return n2 === -1 ? Math.atan(n1) : Math.atan2(n1, n2);\n    case \"min\":\n      return Math.min(n1, n2);\n    case \"max\":\n      return Math.max(n1, n2);\n    case \"log10\":\n      return Math.log(n1);\n    case \"log2\":\n      return Math.log2(n1);\n    default:\n      console.warn(\"Calculate symbol err! Return default 0\");\n      return 0;\n  }\n}\nfunction calculate(express, bandsData) {\n  const { width, height } = bandsData[0];\n  const dataArray = bandsData.map((band) => band.rasterData);\n  const length = width * height;\n  const rasterData = [];\n  const originExp = JSON.stringify(express);\n  for (let i = 0; i < length; i++) {\n    const exp = JSON.parse(originExp);\n    const expResult = spellExpress(exp, dataArray, i);\n    if (typeof expResult === \"number\") {\n      rasterData.push(expResult);\n    } else {\n      const result = calculateExpress(exp);\n      rasterData.push(result);\n    }\n  }\n  return rasterData;\n}\nfunction spellExpress(express, dataArray, index) {\n  if (express.length === 2 && express[0] === \"band\" && typeof express[1] === \"number\") {\n    try {\n      return dataArray[express[1]][index];\n    } catch (err) {\n      console.warn(\"Raster Data err!\");\n      return 0;\n    }\n  }\n  express.map((e, i) => {\n    if (Array.isArray(e) && e.length > 0) {\n      switch (e[0]) {\n        case \"band\":\n          try {\n            express[i] = dataArray[e[1]][index];\n          } catch (err) {\n            console.warn(\"Raster Data err!\");\n            express[i] = 0;\n          }\n          break;\n        default:\n          spellExpress(e, dataArray, index);\n      }\n    }\n  });\n}\nfunction formatExpress(express) {\n  const [symbol1, symbol2 = -1, symbol3 = -1] = express;\n  if (symbol1 === void 0) {\n    console.warn(\"Express err!\");\n    return [\"+\", 0, 0];\n  }\n  const symbol = symbol1.replace(/\\s+/g, \"\");\n  return [symbol, symbol2, symbol3];\n}\nfunction calculateExpress(express) {\n  const formatExp = formatExpress(express);\n  const str = formatExp[0];\n  let left = formatExp[1];\n  let right = formatExp[2];\n  if (Array.isArray(left)) {\n    left = calculateExpress(express[1]);\n  }\n  if (Array.isArray(right)) {\n    right = calculateExpress(express[2]);\n  }\n  return mathematical(str, left, right);\n}\nexport {\n  calculate,\n  calculateExpress,\n  formatExpress,\n  mathematical,\n  spellExpress\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}