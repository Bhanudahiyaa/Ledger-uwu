{"ast":null,"code":"// src/geo.ts\nimport bbox from \"@turf/bbox\";\nimport { degreesToRadians, featureCollection, lineString, radiansToLength } from \"@turf/helpers\";\nimport { isNumber } from \"./math\";\nvar originShift = 2 * Math.PI * 6378137 / 2;\nfunction lngLatInExtent(lngLat, bounds) {\n  const [minLng, minLat, maxLng, maxLat] = bounds;\n  return lngLat.lng > minLng && lngLat.lng <= maxLng && lngLat.lat > minLat && lngLat.lat <= maxLat;\n}\nfunction extent(data) {\n  const dataExtent = [Infinity, Infinity, -Infinity, -Infinity];\n  data.forEach(item => {\n    const {\n      coordinates\n    } = item;\n    caculExtent(dataExtent, coordinates);\n  });\n  return dataExtent;\n}\nfunction caculExtent(dataExtent, coords) {\n  if (Array.isArray(coords[0])) {\n    coords.forEach(coord => {\n      caculExtent(dataExtent, coord);\n    });\n  } else {\n    if (dataExtent[0] > coords[0]) {\n      dataExtent[0] = coords[0];\n    }\n    if (dataExtent[1] > coords[1]) {\n      dataExtent[1] = coords[1];\n    }\n    if (dataExtent[2] < coords[0]) {\n      dataExtent[2] = coords[0];\n    }\n    if (dataExtent[3] < coords[1]) {\n      dataExtent[3] = coords[1];\n    }\n  }\n  return dataExtent;\n}\nfunction tranfrormCoord(data, cb) {\n  return transform(data, cb);\n}\nfunction transform(item, cb) {\n  if (Array.isArray(item[0])) {\n    return item.map(coord => {\n      return transform(coord, cb);\n    });\n  }\n  return cb(item);\n}\nfunction lngLatToMeters(lnglat, validate = true, accuracy = {\n  enable: true,\n  decimal: 1\n}) {\n  lnglat = validateLngLat(lnglat, validate);\n  const lng = lnglat[0];\n  const lat = lnglat[1];\n  let x = lng * originShift / 180;\n  let y = Math.log(Math.tan((90 + lat) * Math.PI / 360)) / (Math.PI / 180);\n  y = y * originShift / 180;\n  if (accuracy.enable) {\n    x = Number(x.toFixed(accuracy.decimal));\n    y = Number(y.toFixed(accuracy.decimal));\n  }\n  return lnglat.length === 3 ? [x, y, lnglat[2]] : [x, y];\n}\nfunction metersToLngLat(meters, decimal = 6) {\n  const x = meters[0];\n  const y = meters[1];\n  let lng = x / originShift * 180;\n  let lat = y / originShift * 180;\n  lat = 180 / Math.PI * (2 * Math.atan(Math.exp(lat * Math.PI / 180)) - Math.PI / 2);\n  if (decimal !== void 0 && decimal !== null) {\n    lng = Number(lng.toFixed(decimal));\n    lat = Number(lat.toFixed(decimal));\n  }\n  return meters.length === 3 ? [lng, lat, meters[2]] : [lng, lat];\n}\nfunction longitude(lng) {\n  if (lng === void 0 || lng === null) {\n    throw new Error(\"lng is required\");\n  }\n  if (lng > 180 || lng < -180) {\n    lng = lng % 360;\n    if (lng > 180) {\n      lng = -360 + lng;\n    }\n    if (lng < -180) {\n      lng = 360 + lng;\n    }\n    if (lng === 0) {\n      lng = 0;\n    }\n  }\n  return lng;\n}\nfunction latitude(lat) {\n  if (lat === void 0 || lat === null) {\n    throw new Error(\"lat is required\");\n  }\n  if (lat > 90 || lat < -90) {\n    lat = lat % 180;\n    if (lat > 90) {\n      lat = -180 + lat;\n    }\n    if (lat < -90) {\n      lat = 180 + lat;\n    }\n    if (lat === 0) {\n      lat = 0;\n    }\n  }\n  return lat;\n}\nfunction validateLngLat(lnglat, validate) {\n  if (validate === false) {\n    return lnglat;\n  }\n  const lng = longitude(lnglat[0]);\n  let lat = latitude(lnglat[1]);\n  if (lat > 85) {\n    lat = 85;\n  }\n  if (lat < -85) {\n    lat = -85;\n  }\n  return lnglat.length === 3 ? [lng, lat, lnglat[2]] : [lng, lat];\n}\nfunction aProjectFlat(lnglat) {\n  const maxs = 85.0511287798;\n  const lat = Math.max(Math.min(maxs, lnglat[1]), -maxs);\n  const scale = 256 << 20;\n  let d = Math.PI / 180;\n  let x = lnglat[0] * d;\n  let y = lat * d;\n  y = Math.log(Math.tan(Math.PI / 4 + y / 2));\n  const a = 0.5 / Math.PI;\n  const b = 0.5;\n  const c = -0.5 / Math.PI;\n  d = 0.5;\n  x = scale * (a * x + b);\n  y = scale * (c * y + d);\n  return [Math.floor(x), Math.floor(y)];\n}\nfunction unProjectFlat(px) {\n  const a = 0.5 / Math.PI;\n  const b = 0.5;\n  const c = -0.5 / Math.PI;\n  let d = 0.5;\n  const scale = 256 << 20;\n  let [x, y] = px;\n  x = (x / scale - b) / a;\n  y = (y / scale - d) / c;\n  y = (Math.atan(Math.pow(Math.E, y)) - Math.PI / 4) * 2;\n  d = Math.PI / 180;\n  const lat = y / d;\n  const lng = x / d;\n  return [lng, lat];\n}\nfunction amap2Project(lng, lat) {\n  const r = 85.0511287798;\n  const Rg = Math.PI / 180;\n  const Tg = 6378137;\n  lat = Math.max(Math.min(r, lat), -r);\n  lng *= Rg;\n  lat *= Rg;\n  lat = Math.log(Math.tan(Math.PI / 4 + lat / 2));\n  return [lng * Tg, lat * Tg];\n}\nfunction amap2UnProject(x, y) {\n  const Rg = Math.PI / 180;\n  const Tg = 6378137;\n  const lng = x / Tg / Rg;\n  const lat = 2 * (Math.atan(Math.exp(y / Tg)) - Math.PI / 4) / Rg;\n  return [lng, lat];\n}\nfunction lnglatDistance(coordinates1, coordinates2, units) {\n  const dLat = degreesToRadians(coordinates2[1] - coordinates1[1]);\n  const dLon = degreesToRadians(coordinates2[0] - coordinates1[0]);\n  const lat1 = degreesToRadians(coordinates1[1]);\n  const lat2 = degreesToRadians(coordinates2[1]);\n  const a = Math.pow(Math.sin(dLat / 2), 2) + Math.pow(Math.sin(dLon / 2), 2) * Math.cos(lat1) * Math.cos(lat2);\n  return radiansToLength(2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a)),\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  units = \"meters\");\n}\nfunction project(lnglat) {\n  const d = Math.PI / 180;\n  const max = 85.0511287798;\n  const earthRadius = 6378137;\n  const lat = Math.max(Math.min(max, lnglat[1]), -max);\n  const sin = Math.sin(lat * d);\n  const x = earthRadius * lnglat[0] * d;\n  const y = earthRadius * Math.log((1 + sin) / (1 - sin)) / 2;\n  return [x, y];\n}\nfunction padBounds(b, bufferRatio) {\n  const heightBuffer = Math.abs(b[1][1] - b[0][1]) * bufferRatio;\n  const widthBuffer = Math.abs(b[1][0] - b[0][0]) * bufferRatio;\n  return [[b[0][0] - widthBuffer, b[0][1] - heightBuffer], [b[1][0] + widthBuffer, b[1][1] + heightBuffer]];\n}\nfunction boundsContains(b1, b2) {\n  return b1[0][0] <= b2[0][0] && b1[0][1] <= b2[0][1] && b1[1][0] >= b2[1][0] && b1[1][1] >= b2[1][1];\n}\nfunction bBoxToBounds(b1) {\n  return [[b1[0], b1[1]], [b1[2], b1[3]]];\n}\nfunction normalize(v) {\n  const len = calDistance(v, [0, 0]);\n  return [v[0] / len, v[1] / len];\n}\nfunction calDistance(p1, p2) {\n  return Math.sqrt(Math.pow(p1[0] - p2[0], 2) + Math.pow(p1[1] - p2[1], 2));\n}\nfunction dotMul(v1, v2) {\n  return v1[0] * v2[0] + v1[1] * v2[1];\n}\nfunction getMod(v) {\n  return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n}\nfunction calAngle(v1, v2) {\n  return Math.acos(dotMul(v1, v2) / (getMod(v1) * getMod(v2))) * 180 / Math.PI;\n}\nfunction getAngle(v1, v2) {\n  if (v2[0] > 0) {\n    if (v2[1] > 0) {\n      return 90 - Math.atan(v2[1] / v2[0]) * 180 / Math.PI;\n    } else {\n      return 90 + Math.atan(-v2[1] / v2[0]) * 180 / Math.PI;\n    }\n  } else {\n    if (v2[1] < 0) {\n      return 180 + (90 - Math.atan(v2[1] / v2[0]) * 180 / Math.PI);\n    } else {\n      return 270 + Math.atan(v2[1] / -v2[0]) * 180 / Math.PI;\n    }\n  }\n}\nfunction flow(coords, time = 100) {\n  if (!coords || coords.length < 2) {\n    return;\n  }\n  const originVec2 = [0, 1];\n  let totalDis = 0;\n  const path = [];\n  for (let i = 0; i < coords.length - 1; i++) {\n    const p1 = coords[i];\n    const p2 = coords[i + 1];\n    const dis = calDistance(p1, p2);\n    totalDis += dis;\n    const direct = [p1[0] - p2[0], p1[1] - p2[1]];\n    let rotation = getAngle(originVec2, direct);\n    if (i > 0) {\n      const lastRotation = path[i - 1].rotation;\n      if (lastRotation - rotation > 360 - lastRotation + rotation) {\n        rotation = rotation + 360;\n      }\n    }\n    path.push({\n      start: p1,\n      end: p2,\n      dis,\n      rotation,\n      duration: 0\n    });\n  }\n  path.map(point => {\n    point.duration = time * (point.dis / totalDis);\n  });\n  return path;\n}\nfunction calculateCentroid(coord) {\n  if (isNumber(coord[0])) {\n    return coord;\n  } else if (isNumber(coord[0][0])) {\n    throw new Error(\"当前数据不支持标注\");\n  } else if (isNumber(coord[0][0][0])) {\n    const coords = coord;\n    let xSum = 0;\n    let ySum = 0;\n    let len = 0;\n    coords.forEach(coor => {\n      coor.forEach(pos => {\n        xSum += pos[0];\n        ySum += pos[1];\n        len++;\n      });\n    });\n    return [xSum / len, ySum / len, 0];\n  } else {\n    throw new Error(\"当前数据不支持标注\");\n  }\n}\nfunction calculatePointsCenterAndRadius(points) {\n  let maxX = points[0];\n  let maxY = points[1];\n  let minX = points[0];\n  let minY = points[1];\n  let xCount = 0;\n  let yCount = 0;\n  let pCount = 0;\n  for (let i = 0; i < points.length; i += 2) {\n    const x = points[i];\n    const y = points[i + 1];\n    if (x && y) {\n      maxX = Math.max(x, maxX);\n      maxY = Math.max(y, maxY);\n      minX = Math.min(x, minX);\n      minY = Math.min(y, minY);\n      xCount += x;\n      yCount += y;\n      pCount++;\n    }\n  }\n  return {\n    center: [xCount / pCount, yCount / pCount],\n    radius: Math.sqrt(Math.pow(maxX - minX, 2) + Math.pow(maxY - minY, 2)) / 2\n  };\n}\nfunction getBBoxFromPoints(pointList) {\n  return bbox(featureCollection([lineString(pointList)]));\n}\nexport { aProjectFlat, amap2Project, amap2UnProject, bBoxToBounds, boundsContains, calAngle, calDistance, calculateCentroid, calculatePointsCenterAndRadius, extent, flow, getAngle, getBBoxFromPoints, latitude, lngLatInExtent, lngLatToMeters, lnglatDistance, longitude, metersToLngLat, normalize, padBounds, project, tranfrormCoord, unProjectFlat, validateLngLat };","map":{"version":3,"names":["bbox","degreesToRadians","featureCollection","lineString","radiansToLength","isNumber","originShift","Math","PI","lngLatInExtent","lngLat","bounds","minLng","minLat","maxLng","maxLat","lng","lat","extent","data","dataExtent","Infinity","forEach","item","coordinates","caculExtent","coords","Array","isArray","coord","tranfrormCoord","cb","transform","map","lngLatToMeters","lnglat","validate","accuracy","enable","decimal","validateLngLat","x","y","log","tan","Number","toFixed","length","metersToLngLat","meters","atan","exp","longitude","Error","latitude","aProjectFlat","maxs","max","min","scale","d","a","b","c","floor","unProjectFlat","px","pow","E","amap2Project","r","Rg","Tg","amap2UnProject","lnglatDistance","coordinates1","coordinates2","units","dLat","dLon","lat1","lat2","sin","cos","atan2","sqrt","project","earthRadius","padBounds","bufferRatio","heightBuffer","abs","widthBuffer","boundsContains","b1","b2","bBoxToBounds","normalize","v","len","calDistance","p1","p2","dotMul","v1","v2","getMod","calAngle","acos","getAngle","flow","time","originVec2","totalDis","path","i","dis","direct","rotation","lastRotation","push","start","end","duration","point","calculateCentroid","xSum","ySum","coor","pos","calculatePointsCenterAndRadius","points","maxX","maxY","minX","minY","xCount","yCount","pCount","center","radius","getBBoxFromPoints","pointList"],"sources":["/Users/bhanudahiya/Desktop/ledger-IQ/node_modules/@antv/l7-utils/es/geo.js"],"sourcesContent":["// src/geo.ts\nimport bbox from \"@turf/bbox\";\nimport { degreesToRadians, featureCollection, lineString, radiansToLength } from \"@turf/helpers\";\nimport { isNumber } from \"./math\";\nvar originShift = 2 * Math.PI * 6378137 / 2;\nfunction lngLatInExtent(lngLat, bounds) {\n  const [minLng, minLat, maxLng, maxLat] = bounds;\n  return lngLat.lng > minLng && lngLat.lng <= maxLng && lngLat.lat > minLat && lngLat.lat <= maxLat;\n}\nfunction extent(data) {\n  const dataExtent = [Infinity, Infinity, -Infinity, -Infinity];\n  data.forEach((item) => {\n    const { coordinates } = item;\n    caculExtent(dataExtent, coordinates);\n  });\n  return dataExtent;\n}\nfunction caculExtent(dataExtent, coords) {\n  if (Array.isArray(coords[0])) {\n    coords.forEach((coord) => {\n      caculExtent(dataExtent, coord);\n    });\n  } else {\n    if (dataExtent[0] > coords[0]) {\n      dataExtent[0] = coords[0];\n    }\n    if (dataExtent[1] > coords[1]) {\n      dataExtent[1] = coords[1];\n    }\n    if (dataExtent[2] < coords[0]) {\n      dataExtent[2] = coords[0];\n    }\n    if (dataExtent[3] < coords[1]) {\n      dataExtent[3] = coords[1];\n    }\n  }\n  return dataExtent;\n}\nfunction tranfrormCoord(data, cb) {\n  return transform(data, cb);\n}\nfunction transform(item, cb) {\n  if (Array.isArray(item[0])) {\n    return item.map((coord) => {\n      return transform(coord, cb);\n    });\n  }\n  return cb(item);\n}\nfunction lngLatToMeters(lnglat, validate = true, accuracy = { enable: true, decimal: 1 }) {\n  lnglat = validateLngLat(lnglat, validate);\n  const lng = lnglat[0];\n  const lat = lnglat[1];\n  let x = lng * originShift / 180;\n  let y = Math.log(Math.tan((90 + lat) * Math.PI / 360)) / (Math.PI / 180);\n  y = y * originShift / 180;\n  if (accuracy.enable) {\n    x = Number(x.toFixed(accuracy.decimal));\n    y = Number(y.toFixed(accuracy.decimal));\n  }\n  return lnglat.length === 3 ? [x, y, lnglat[2]] : [x, y];\n}\nfunction metersToLngLat(meters, decimal = 6) {\n  const x = meters[0];\n  const y = meters[1];\n  let lng = x / originShift * 180;\n  let lat = y / originShift * 180;\n  lat = 180 / Math.PI * (2 * Math.atan(Math.exp(lat * Math.PI / 180)) - Math.PI / 2);\n  if (decimal !== void 0 && decimal !== null) {\n    lng = Number(lng.toFixed(decimal));\n    lat = Number(lat.toFixed(decimal));\n  }\n  return meters.length === 3 ? [lng, lat, meters[2]] : [lng, lat];\n}\nfunction longitude(lng) {\n  if (lng === void 0 || lng === null) {\n    throw new Error(\"lng is required\");\n  }\n  if (lng > 180 || lng < -180) {\n    lng = lng % 360;\n    if (lng > 180) {\n      lng = -360 + lng;\n    }\n    if (lng < -180) {\n      lng = 360 + lng;\n    }\n    if (lng === 0) {\n      lng = 0;\n    }\n  }\n  return lng;\n}\nfunction latitude(lat) {\n  if (lat === void 0 || lat === null) {\n    throw new Error(\"lat is required\");\n  }\n  if (lat > 90 || lat < -90) {\n    lat = lat % 180;\n    if (lat > 90) {\n      lat = -180 + lat;\n    }\n    if (lat < -90) {\n      lat = 180 + lat;\n    }\n    if (lat === 0) {\n      lat = 0;\n    }\n  }\n  return lat;\n}\nfunction validateLngLat(lnglat, validate) {\n  if (validate === false) {\n    return lnglat;\n  }\n  const lng = longitude(lnglat[0]);\n  let lat = latitude(lnglat[1]);\n  if (lat > 85) {\n    lat = 85;\n  }\n  if (lat < -85) {\n    lat = -85;\n  }\n  return lnglat.length === 3 ? [lng, lat, lnglat[2]] : [lng, lat];\n}\nfunction aProjectFlat(lnglat) {\n  const maxs = 85.0511287798;\n  const lat = Math.max(Math.min(maxs, lnglat[1]), -maxs);\n  const scale = 256 << 20;\n  let d = Math.PI / 180;\n  let x = lnglat[0] * d;\n  let y = lat * d;\n  y = Math.log(Math.tan(Math.PI / 4 + y / 2));\n  const a = 0.5 / Math.PI;\n  const b = 0.5;\n  const c = -0.5 / Math.PI;\n  d = 0.5;\n  x = scale * (a * x + b);\n  y = scale * (c * y + d);\n  return [Math.floor(x), Math.floor(y)];\n}\nfunction unProjectFlat(px) {\n  const a = 0.5 / Math.PI;\n  const b = 0.5;\n  const c = -0.5 / Math.PI;\n  let d = 0.5;\n  const scale = 256 << 20;\n  let [x, y] = px;\n  x = (x / scale - b) / a;\n  y = (y / scale - d) / c;\n  y = (Math.atan(Math.pow(Math.E, y)) - Math.PI / 4) * 2;\n  d = Math.PI / 180;\n  const lat = y / d;\n  const lng = x / d;\n  return [lng, lat];\n}\nfunction amap2Project(lng, lat) {\n  const r = 85.0511287798;\n  const Rg = Math.PI / 180;\n  const Tg = 6378137;\n  lat = Math.max(Math.min(r, lat), -r);\n  lng *= Rg;\n  lat *= Rg;\n  lat = Math.log(Math.tan(Math.PI / 4 + lat / 2));\n  return [lng * Tg, lat * Tg];\n}\nfunction amap2UnProject(x, y) {\n  const Rg = Math.PI / 180;\n  const Tg = 6378137;\n  const lng = x / Tg / Rg;\n  const lat = 2 * (Math.atan(Math.exp(y / Tg)) - Math.PI / 4) / Rg;\n  return [lng, lat];\n}\nfunction lnglatDistance(coordinates1, coordinates2, units) {\n  const dLat = degreesToRadians(coordinates2[1] - coordinates1[1]);\n  const dLon = degreesToRadians(coordinates2[0] - coordinates1[0]);\n  const lat1 = degreesToRadians(coordinates1[1]);\n  const lat2 = degreesToRadians(coordinates2[1]);\n  const a = Math.pow(Math.sin(dLat / 2), 2) + Math.pow(Math.sin(dLon / 2), 2) * Math.cos(lat1) * Math.cos(lat2);\n  return radiansToLength(\n    2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a)),\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    units = \"meters\"\n  );\n}\nfunction project(lnglat) {\n  const d = Math.PI / 180;\n  const max = 85.0511287798;\n  const earthRadius = 6378137;\n  const lat = Math.max(Math.min(max, lnglat[1]), -max);\n  const sin = Math.sin(lat * d);\n  const x = earthRadius * lnglat[0] * d;\n  const y = earthRadius * Math.log((1 + sin) / (1 - sin)) / 2;\n  return [x, y];\n}\nfunction padBounds(b, bufferRatio) {\n  const heightBuffer = Math.abs(b[1][1] - b[0][1]) * bufferRatio;\n  const widthBuffer = Math.abs(b[1][0] - b[0][0]) * bufferRatio;\n  return [\n    [b[0][0] - widthBuffer, b[0][1] - heightBuffer],\n    [b[1][0] + widthBuffer, b[1][1] + heightBuffer]\n  ];\n}\nfunction boundsContains(b1, b2) {\n  return b1[0][0] <= b2[0][0] && b1[0][1] <= b2[0][1] && b1[1][0] >= b2[1][0] && b1[1][1] >= b2[1][1];\n}\nfunction bBoxToBounds(b1) {\n  return [\n    [b1[0], b1[1]],\n    [b1[2], b1[3]]\n  ];\n}\nfunction normalize(v) {\n  const len = calDistance(v, [0, 0]);\n  return [v[0] / len, v[1] / len];\n}\nfunction calDistance(p1, p2) {\n  return Math.sqrt(Math.pow(p1[0] - p2[0], 2) + Math.pow(p1[1] - p2[1], 2));\n}\nfunction dotMul(v1, v2) {\n  return v1[0] * v2[0] + v1[1] * v2[1];\n}\nfunction getMod(v) {\n  return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n}\nfunction calAngle(v1, v2) {\n  return Math.acos(dotMul(v1, v2) / (getMod(v1) * getMod(v2))) * 180 / Math.PI;\n}\nfunction getAngle(v1, v2) {\n  if (v2[0] > 0) {\n    if (v2[1] > 0) {\n      return 90 - Math.atan(v2[1] / v2[0]) * 180 / Math.PI;\n    } else {\n      return 90 + Math.atan(-v2[1] / v2[0]) * 180 / Math.PI;\n    }\n  } else {\n    if (v2[1] < 0) {\n      return 180 + (90 - Math.atan(v2[1] / v2[0]) * 180 / Math.PI);\n    } else {\n      return 270 + Math.atan(v2[1] / -v2[0]) * 180 / Math.PI;\n    }\n  }\n}\nfunction flow(coords, time = 100) {\n  if (!coords || coords.length < 2) {\n    return;\n  }\n  const originVec2 = [0, 1];\n  let totalDis = 0;\n  const path = [];\n  for (let i = 0; i < coords.length - 1; i++) {\n    const p1 = coords[i];\n    const p2 = coords[i + 1];\n    const dis = calDistance(p1, p2);\n    totalDis += dis;\n    const direct = [p1[0] - p2[0], p1[1] - p2[1]];\n    let rotation = getAngle(originVec2, direct);\n    if (i > 0) {\n      const lastRotation = path[i - 1].rotation;\n      if (lastRotation - rotation > 360 - lastRotation + rotation) {\n        rotation = rotation + 360;\n      }\n    }\n    path.push({\n      start: p1,\n      end: p2,\n      dis,\n      rotation,\n      duration: 0\n    });\n  }\n  path.map((point) => {\n    point.duration = time * (point.dis / totalDis);\n  });\n  return path;\n}\nfunction calculateCentroid(coord) {\n  if (isNumber(coord[0])) {\n    return coord;\n  } else if (isNumber(coord[0][0])) {\n    throw new Error(\"当前数据不支持标注\");\n  } else if (isNumber(coord[0][0][0])) {\n    const coords = coord;\n    let xSum = 0;\n    let ySum = 0;\n    let len = 0;\n    coords.forEach((coor) => {\n      coor.forEach((pos) => {\n        xSum += pos[0];\n        ySum += pos[1];\n        len++;\n      });\n    });\n    return [xSum / len, ySum / len, 0];\n  } else {\n    throw new Error(\"当前数据不支持标注\");\n  }\n}\nfunction calculatePointsCenterAndRadius(points) {\n  let maxX = points[0];\n  let maxY = points[1];\n  let minX = points[0];\n  let minY = points[1];\n  let xCount = 0;\n  let yCount = 0;\n  let pCount = 0;\n  for (let i = 0; i < points.length; i += 2) {\n    const x = points[i];\n    const y = points[i + 1];\n    if (x && y) {\n      maxX = Math.max(x, maxX);\n      maxY = Math.max(y, maxY);\n      minX = Math.min(x, minX);\n      minY = Math.min(y, minY);\n      xCount += x;\n      yCount += y;\n      pCount++;\n    }\n  }\n  return {\n    center: [xCount / pCount, yCount / pCount],\n    radius: Math.sqrt(Math.pow(maxX - minX, 2) + Math.pow(maxY - minY, 2)) / 2\n  };\n}\nfunction getBBoxFromPoints(pointList) {\n  return bbox(featureCollection([lineString(pointList)]));\n}\nexport {\n  aProjectFlat,\n  amap2Project,\n  amap2UnProject,\n  bBoxToBounds,\n  boundsContains,\n  calAngle,\n  calDistance,\n  calculateCentroid,\n  calculatePointsCenterAndRadius,\n  extent,\n  flow,\n  getAngle,\n  getBBoxFromPoints,\n  latitude,\n  lngLatInExtent,\n  lngLatToMeters,\n  lnglatDistance,\n  longitude,\n  metersToLngLat,\n  normalize,\n  padBounds,\n  project,\n  tranfrormCoord,\n  unProjectFlat,\n  validateLngLat\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}