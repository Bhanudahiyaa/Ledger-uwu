{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport { vec3 } from 'gl-matrix';\nexport var Plane = /*#__PURE__*/function () {\n  /**\n   * lookup table for p-vertex & n-vertex when doing frustum culling\n   */\n  function Plane(distance, normal) {\n    _classCallCheck(this, Plane);\n    this.distance = void 0;\n    this.normal = void 0;\n    this.pnVertexFlag = void 0;\n    this.distance = distance || 0;\n    this.normal = normal || vec3.fromValues(0, 1, 0);\n    this.updatePNVertexFlag();\n  }\n  _createClass(Plane, [{\n    key: \"updatePNVertexFlag\",\n    value: function updatePNVertexFlag() {\n      this.pnVertexFlag = (Number(this.normal[0] >= 0) << 8) + (Number(this.normal[1] >= 0) << 4) + Number(this.normal[2] >= 0);\n    }\n  }, {\n    key: \"distanceToPoint\",\n    value: function distanceToPoint(point) {\n      return vec3.dot(point, this.normal) - this.distance;\n    }\n  }, {\n    key: \"normalize\",\n    value: function normalize() {\n      var invLen = 1 / vec3.len(this.normal);\n      vec3.scale(this.normal, this.normal, invLen);\n      this.distance *= invLen;\n    }\n  }, {\n    key: \"intersectsLine\",\n    value: function intersectsLine(start, end, point) {\n      var d0 = this.distanceToPoint(start);\n      var d1 = this.distanceToPoint(end);\n      var t = d0 / (d0 - d1);\n      var intersects = t >= 0 && t <= 1;\n      if (intersects && point) {\n        vec3.lerp(point, start, end, t);\n      }\n      return intersects;\n    }\n  }]);\n  return Plane;\n}();","map":{"version":3,"names":["vec3","Plane","distance","normal","_classCallCheck","pnVertexFlag","fromValues","updatePNVertexFlag","_createClass","key","value","Number","distanceToPoint","point","dot","normalize","invLen","len","scale","intersectsLine","start","end","d0","d1","t","intersects","lerp"],"sources":["/Users/bhanudahiya/Desktop/ledger-IQ/node_modules/@antv/g-webgpu-core/src/shape/Plane.ts"],"sourcesContent":["import { vec3 } from 'gl-matrix';\n\nexport class Plane {\n  public distance: number;\n  public normal: vec3;\n\n  /**\n   * lookup table for p-vertex & n-vertex when doing frustum culling\n   */\n  public pnVertexFlag: number;\n\n  constructor(distance?: number, normal?: vec3) {\n    this.distance = distance || 0;\n    this.normal = normal || vec3.fromValues(0, 1, 0);\n    this.updatePNVertexFlag();\n  }\n\n  public updatePNVertexFlag() {\n    this.pnVertexFlag =\n      (Number(this.normal[0] >= 0) << 8) +\n      (Number(this.normal[1] >= 0) << 4) +\n      Number(this.normal[2] >= 0);\n  }\n\n  public distanceToPoint(point: vec3) {\n    return vec3.dot(point, this.normal) - this.distance;\n  }\n\n  public normalize() {\n    const invLen = 1 / vec3.len(this.normal);\n    vec3.scale(this.normal, this.normal, invLen);\n    this.distance *= invLen;\n  }\n\n  public intersectsLine(start: vec3, end: vec3, point?: vec3) {\n    const d0 = this.distanceToPoint(start);\n    const d1 = this.distanceToPoint(end);\n    const t = d0 / (d0 - d1);\n    const intersects = t >= 0 && t <= 1;\n    if (intersects && point) {\n      vec3.lerp(point, start, end, t);\n    }\n    return intersects;\n  }\n}\n"],"mappings":";;AAAA,SAASA,IAAT,QAAqB,WAArB;AAEA,WAAaC,KAAb;EAIE;AACF;AACA;EAGE,SAAAA,MAAYC,QAAZ,EAA+BC,MAA/B,EAA8C;IAAAC,eAAA,OAAAH,KAAA;IAAA,KARvCC,QAQuC;IAAA,KAPvCC,MAOuC;IAAA,KAFvCE,YAEuC;IAC5C,KAAKH,QAAL,GAAgBA,QAAQ,IAAI,CAA5B;IACA,KAAKC,MAAL,GAAcA,MAAM,IAAIH,IAAI,CAACM,UAAL,CAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,CAAxB;IACA,KAAKC,kBAAL;EACD;EAbHC,YAAA,CAAAP,KAAA;IAAAQ,GAAA;IAAAC,KAAA,WAAAH,mBAAA,EAe8B;MAC1B,KAAKF,YAAL,GACE,CAACM,MAAM,CAAC,KAAKR,MAAL,CAAY,CAAZ,KAAkB,CAAnB,CAAN,IAA+B,CAAhC,KACCQ,MAAM,CAAC,KAAKR,MAAL,CAAY,CAAZ,KAAkB,CAAnB,CAAN,IAA+B,CADhC,IAEAQ,MAAM,CAAC,KAAKR,MAAL,CAAY,CAAZ,KAAkB,CAAnB,CAHR;IAID;EApBH;IAAAM,GAAA;IAAAC,KAAA,WAAAE,gBAsByBC,KAtBzB,EAsBsC;MAClC,OAAOb,IAAI,CAACc,GAAL,CAASD,KAAT,EAAgB,KAAKV,MAArB,IAA+B,KAAKD,QAA3C;IACD;EAxBH;IAAAO,GAAA;IAAAC,KAAA,WAAAK,UAAA,EA0BqB;MACjB,IAAMC,MAAM,GAAG,IAAIhB,IAAI,CAACiB,GAAL,CAAS,KAAKd,MAAd,CAAnB;MACAH,IAAI,CAACkB,KAAL,CAAW,KAAKf,MAAhB,EAAwB,KAAKA,MAA7B,EAAqCa,MAArC;MACA,KAAKd,QAAL,IAAiBc,MAAjB;IACD;EA9BH;IAAAP,GAAA;IAAAC,KAAA,WAAAS,eAgCwBC,KAhCxB,EAgCqCC,GAhCrC,EAgCgDR,KAhChD,EAgC8D;MAC1D,IAAMS,EAAE,GAAG,KAAKV,eAAL,CAAqBQ,KAArB,CAAX;MACA,IAAMG,EAAE,GAAG,KAAKX,eAAL,CAAqBS,GAArB,CAAX;MACA,IAAMG,CAAC,GAAGF,EAAE,IAAIA,EAAE,GAAGC,EAAT,CAAZ;MACA,IAAME,UAAU,GAAGD,CAAC,IAAI,CAAL,IAAUA,CAAC,IAAI,CAAlC;MACA,IAAIC,UAAU,IAAIZ,KAAlB,EAAyB;QACvBb,IAAI,CAAC0B,IAAL,CAAUb,KAAV,EAAiBO,KAAjB,EAAwBC,GAAxB,EAA6BG,CAA7B;MACD;MACD,OAAOC,UAAP;IACD;EAzCH;EAAA,OAAAxB,KAAA;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}