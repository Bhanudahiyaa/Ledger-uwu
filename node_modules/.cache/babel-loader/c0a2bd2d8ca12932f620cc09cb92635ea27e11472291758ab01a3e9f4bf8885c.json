{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport React from 'react';\nimport { createComponentModel, Disposable, MODELS, useXFlowApp } from '@antv/xflow-core';\nimport { nodeService } from './utils';\nimport { isArray } from 'lodash';\nexport var NsPanelData;\n(function (NsPanelData) {\n  NsPanelData.id = 'NODE_PANEL_DATA';\n})(NsPanelData || (NsPanelData = {}));\n/** 节点查找 */\nconst DefaultsearchService = (nodeList = [], keyword) => __awaiter(void 0, void 0, void 0, function* () {\n  const list = nodeList.filter(i => {\n    var _a, _b;\n    return i.isDirectory || ((_a = i.label) === null || _a === void 0 ? void 0 : _a.includes(keyword)) || ((_b = i.name) === null || _b === void 0 ? void 0 : _b.includes(keyword));\n  });\n  return list;\n});\nexport const usePanelData = props => {\n  const {\n    searchService = DefaultsearchService\n  } = props;\n  const registerNode = props.registerNode ? isArray(props.registerNode) ? props.registerNode : [props.registerNode] : [];\n  let nodes = [];\n  registerNode.forEach(item => {\n    nodes = nodes.concat(item.nodes.map(node => Object.assign(Object.assign({}, node), {\n      parentKey: item.key\n    })));\n  });\n  const {\n    modelService\n  } = useXFlowApp();\n  /** 使用model */\n  const [state, setState, panelModel] = createComponentModel({\n    searchList: [],\n    nodeList: [],\n    defaultExpandAll: false,\n    keyword: ''\n  });\n  /** 注册成为全局状态，方便其他组件联动 */\n  React.useEffect(() => {\n    if (modelService.findDeferredModel(NsPanelData.id)) {\n      return;\n    }\n    modelService.registerModel({\n      id: NsPanelData.id,\n      modelFactory: () => panelModel,\n      watchChange: self => __awaiter(void 0, void 0, void 0, function* () {\n        const graphMetaModel = yield MODELS.GRAPH_META.getModel(modelService); //useContext(MODELS.GRAPH_META.id)\n        const fetch = () => __awaiter(void 0, void 0, void 0, function* () {\n          const listData = yield nodeService(nodes);\n          return {\n            listData\n          };\n        });\n        const graphMetaDisposable = graphMetaModel.watch(() => __awaiter(void 0, void 0, void 0, function* () {\n          const data = yield fetch();\n          self.setValue({\n            nodeList: data.listData,\n            defaultExpandAll: false,\n            keyword: '',\n            searchList: []\n          });\n        }));\n        return Disposable.create(() => {\n          graphMetaDisposable.dispose();\n        });\n      })\n    });\n    /* eslint-disable-next-line  */\n  }, []);\n  /** 搜索 */\n  const onKeywordChange = React.useCallback(keyword => __awaiter(void 0, void 0, void 0, function* () {\n    if (!searchService) {\n      return;\n    }\n    if (keyword) {\n      // @ts-ignore\n      const list = yield searchService(state.nodeList, keyword);\n      setState(modelState => {\n        modelState.keyword = keyword;\n        modelState.searchList = list;\n      });\n    } else {\n      setState(modelState => {\n        modelState.keyword = '';\n        modelState.searchList = [];\n      });\n    }\n  }), [searchService, state.nodeList, setState]);\n  return {\n    state,\n    setState,\n    onKeywordChange\n  };\n};","map":{"version":3,"names":["React","createComponentModel","Disposable","MODELS","useXFlowApp","nodeService","isArray","NsPanelData","id","DefaultsearchService","nodeList","keyword","__awaiter","list","filter","i","_a","_b","isDirectory","label","includes","name","usePanelData","props","searchService","registerNode","nodes","forEach","item","concat","map","node","Object","assign","parentKey","key","modelService","state","setState","panelModel","searchList","defaultExpandAll","useEffect","findDeferredModel","registerModel","modelFactory","watchChange","self","graphMetaModel","GRAPH_META","getModel","fetch","listData","graphMetaDisposable","watch","data","setValue","create","dispose","onKeywordChange","useCallback","modelState"],"sources":["../../src/flowchart-node-panel/service.tsx"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}