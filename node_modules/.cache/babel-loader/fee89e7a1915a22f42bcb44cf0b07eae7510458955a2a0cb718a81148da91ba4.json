{"ast":null,"code":"// src/lineAtOffset/line.ts\nfunction pathLineAtOffset(coords, offset) {\n  let totalDistance = 0;\n  const cachePoints = [];\n  for (let i = 0; i < coords.length - 1; i++) {\n    const p1 = coords[i];\n    const p2 = coords[i + 1];\n    const distance = calDistance(p1, p2);\n    const lastTotalDistance = totalDistance;\n    totalDistance += distance;\n    cachePoints.push({\n      p1,\n      p2,\n      totalDistance,\n      distance,\n      lastTotalDistance\n    });\n  }\n  const offsetDistance = totalDistance * offset;\n  let lng;\n  let lat;\n  for (const point of cachePoints) {\n    const currentDistance = point.totalDistance;\n    if (currentDistance > offsetDistance) {\n      const p1 = point.p1;\n      const p2 = point.p2;\n      const radius = (offsetDistance - point.lastTotalDistance) / point.distance;\n      const offsetPoint = mixPoint(p2, p1, radius);\n      lng = offsetPoint[0];\n      lat = offsetPoint[1];\n      break;\n    }\n  }\n  return {\n    lng,\n    lat,\n    height: 0\n  };\n}\nfunction mixPoint(p1, p2, r) {\n  return [p1[0] * r + p2[0] * (1 - r), p1[1] * r + p2[1] * (1 - r)];\n}\nfunction calDistance(p1, p2) {\n  return Math.sqrt(Math.pow(p1[0] - p2[0], 2) + Math.pow(p1[1] - p2[1], 2));\n}\nexport { pathLineAtOffset };","map":{"version":3,"names":["pathLineAtOffset","coords","offset","totalDistance","cachePoints","i","length","p1","p2","distance","calDistance","lastTotalDistance","push","offsetDistance","lng","lat","point","currentDistance","radius","offsetPoint","mixPoint","height","r","Math","sqrt","pow"],"sources":["/Users/bhanudahiya/Desktop/ledger-IQ/node_modules/@antv/l7-utils/es/lineAtOffset/line.js"],"sourcesContent":["// src/lineAtOffset/line.ts\nfunction pathLineAtOffset(coords, offset) {\n  let totalDistance = 0;\n  const cachePoints = [];\n  for (let i = 0; i < coords.length - 1; i++) {\n    const p1 = coords[i];\n    const p2 = coords[i + 1];\n    const distance = calDistance(p1, p2);\n    const lastTotalDistance = totalDistance;\n    totalDistance += distance;\n    cachePoints.push({\n      p1,\n      p2,\n      totalDistance,\n      distance,\n      lastTotalDistance\n    });\n  }\n  const offsetDistance = totalDistance * offset;\n  let lng;\n  let lat;\n  for (const point of cachePoints) {\n    const currentDistance = point.totalDistance;\n    if (currentDistance > offsetDistance) {\n      const p1 = point.p1;\n      const p2 = point.p2;\n      const radius = (offsetDistance - point.lastTotalDistance) / point.distance;\n      const offsetPoint = mixPoint(p2, p1, radius);\n      lng = offsetPoint[0];\n      lat = offsetPoint[1];\n      break;\n    }\n  }\n  return {\n    lng,\n    lat,\n    height: 0\n  };\n}\nfunction mixPoint(p1, p2, r) {\n  return [p1[0] * r + p2[0] * (1 - r), p1[1] * r + p2[1] * (1 - r)];\n}\nfunction calDistance(p1, p2) {\n  return Math.sqrt(Math.pow(p1[0] - p2[0], 2) + Math.pow(p1[1] - p2[1], 2));\n}\nexport {\n  pathLineAtOffset\n};\n"],"mappings":"AAAA;AACA,SAASA,gBAAgBA,CAACC,MAAM,EAAEC,MAAM,EAAE;EACxC,IAAIC,aAAa,GAAG,CAAC;EACrB,MAAMC,WAAW,GAAG,EAAE;EACtB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,MAAM,CAACK,MAAM,GAAG,CAAC,EAAED,CAAC,EAAE,EAAE;IAC1C,MAAME,EAAE,GAAGN,MAAM,CAACI,CAAC,CAAC;IACpB,MAAMG,EAAE,GAAGP,MAAM,CAACI,CAAC,GAAG,CAAC,CAAC;IACxB,MAAMI,QAAQ,GAAGC,WAAW,CAACH,EAAE,EAAEC,EAAE,CAAC;IACpC,MAAMG,iBAAiB,GAAGR,aAAa;IACvCA,aAAa,IAAIM,QAAQ;IACzBL,WAAW,CAACQ,IAAI,CAAC;MACfL,EAAE;MACFC,EAAE;MACFL,aAAa;MACbM,QAAQ;MACRE;IACF,CAAC,CAAC;EACJ;EACA,MAAME,cAAc,GAAGV,aAAa,GAAGD,MAAM;EAC7C,IAAIY,GAAG;EACP,IAAIC,GAAG;EACP,KAAK,MAAMC,KAAK,IAAIZ,WAAW,EAAE;IAC/B,MAAMa,eAAe,GAAGD,KAAK,CAACb,aAAa;IAC3C,IAAIc,eAAe,GAAGJ,cAAc,EAAE;MACpC,MAAMN,EAAE,GAAGS,KAAK,CAACT,EAAE;MACnB,MAAMC,EAAE,GAAGQ,KAAK,CAACR,EAAE;MACnB,MAAMU,MAAM,GAAG,CAACL,cAAc,GAAGG,KAAK,CAACL,iBAAiB,IAAIK,KAAK,CAACP,QAAQ;MAC1E,MAAMU,WAAW,GAAGC,QAAQ,CAACZ,EAAE,EAAED,EAAE,EAAEW,MAAM,CAAC;MAC5CJ,GAAG,GAAGK,WAAW,CAAC,CAAC,CAAC;MACpBJ,GAAG,GAAGI,WAAW,CAAC,CAAC,CAAC;MACpB;IACF;EACF;EACA,OAAO;IACLL,GAAG;IACHC,GAAG;IACHM,MAAM,EAAE;EACV,CAAC;AACH;AACA,SAASD,QAAQA,CAACb,EAAE,EAAEC,EAAE,EAAEc,CAAC,EAAE;EAC3B,OAAO,CAACf,EAAE,CAAC,CAAC,CAAC,GAAGe,CAAC,GAAGd,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,GAAGc,CAAC,CAAC,EAAEf,EAAE,CAAC,CAAC,CAAC,GAAGe,CAAC,GAAGd,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,GAAGc,CAAC,CAAC,CAAC;AACnE;AACA,SAASZ,WAAWA,CAACH,EAAE,EAAEC,EAAE,EAAE;EAC3B,OAAOe,IAAI,CAACC,IAAI,CAACD,IAAI,CAACE,GAAG,CAAClB,EAAE,CAAC,CAAC,CAAC,GAAGC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAGe,IAAI,CAACE,GAAG,CAAClB,EAAE,CAAC,CAAC,CAAC,GAAGC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AAC3E;AACA,SACER,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}