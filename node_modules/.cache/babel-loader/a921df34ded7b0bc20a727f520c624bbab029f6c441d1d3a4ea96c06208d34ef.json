{"ast":null,"code":"import { Base } from './base';\nexport class KnobManager extends Base {\n  constructor() {\n    super(...arguments);\n    this.widgets = new Map();\n  }\n  get isSelectionEnabled() {\n    return this.options.selecting.enabled === true;\n  }\n  init() {\n    this.startListening();\n  }\n  startListening() {\n    this.graph.on('node:mouseup', this.onNodeMouseUp, this);\n    this.graph.on('node:selected', this.onNodeSelected, this);\n    this.graph.on('node:unselected', this.onNodeUnSelected, this);\n  }\n  stopListening() {\n    this.graph.off('node:mouseup', this.onNodeMouseUp, this);\n    this.graph.off('node:selected', this.onNodeSelected, this);\n    this.graph.off('node:unselected', this.onNodeUnSelected, this);\n  }\n  onNodeMouseUp({\n    node\n  }) {\n    if (!this.isSelectionEnabled) {\n      const widgets = this.graph.hook.createKnob(node, {\n        clearAll: true\n      });\n      if (widgets) {\n        this.widgets.set(node, widgets);\n      }\n    }\n  }\n  onNodeSelected({\n    node\n  }) {\n    if (this.isSelectionEnabled) {\n      const widgets = this.graph.hook.createKnob(node, {\n        clearAll: false\n      });\n      if (widgets) {\n        this.widgets.set(node, widgets);\n      }\n    }\n  }\n  onNodeUnSelected({\n    node\n  }) {\n    if (this.isSelectionEnabled) {\n      const widgets = this.widgets.get(node);\n      if (widgets) {\n        widgets.forEach(widget => widget.dispose());\n      }\n      this.widgets.delete(node);\n    }\n  }\n}","map":{"version":3,"names":["Base","KnobManager","constructor","widgets","Map","isSelectionEnabled","options","selecting","enabled","init","startListening","graph","on","onNodeMouseUp","onNodeSelected","onNodeUnSelected","stopListening","off","node","hook","createKnob","clearAll","set","get","forEach","widget","dispose","delete"],"sources":["/Users/bhanudahiya/Desktop/ledger-IQ/node_modules/@antv/x6/src/graph/knob.ts"],"sourcesContent":["import { Node } from '../model/node'\nimport { Knob } from '../addon/knob'\nimport { Base } from './base'\nimport { EventArgs } from './events'\n\nexport class KnobManager extends Base {\n  protected widgets: Map<Node, Knob[]> = new Map()\n\n  protected get isSelectionEnabled() {\n    return this.options.selecting.enabled === true\n  }\n\n  protected init() {\n    this.startListening()\n  }\n\n  protected startListening() {\n    this.graph.on('node:mouseup', this.onNodeMouseUp, this)\n    this.graph.on('node:selected', this.onNodeSelected, this)\n    this.graph.on('node:unselected', this.onNodeUnSelected, this)\n  }\n\n  protected stopListening() {\n    this.graph.off('node:mouseup', this.onNodeMouseUp, this)\n    this.graph.off('node:selected', this.onNodeSelected, this)\n    this.graph.off('node:unselected', this.onNodeUnSelected, this)\n  }\n\n  protected onNodeMouseUp({ node }: EventArgs['node:mouseup']) {\n    if (!this.isSelectionEnabled) {\n      const widgets = this.graph.hook.createKnob(node, { clearAll: true })\n      if (widgets) {\n        this.widgets.set(node, widgets)\n      }\n    }\n  }\n\n  protected onNodeSelected({ node }: EventArgs['node:selected']) {\n    if (this.isSelectionEnabled) {\n      const widgets = this.graph.hook.createKnob(node, { clearAll: false })\n      if (widgets) {\n        this.widgets.set(node, widgets)\n      }\n    }\n  }\n\n  protected onNodeUnSelected({ node }: EventArgs['node:unselected']) {\n    if (this.isSelectionEnabled) {\n      const widgets = this.widgets.get(node)\n      if (widgets) {\n        widgets.forEach((widget) => widget.dispose())\n      }\n      this.widgets.delete(node)\n    }\n  }\n}\n"],"mappings":"AAEA,SAASA,IAAI,QAAQ,QAAQ;AAG7B,OAAM,MAAOC,WAAY,SAAQD,IAAI;EAArCE,YAAA;;IACY,KAAAC,OAAO,GAAsB,IAAIC,GAAG,EAAE;EAiDlD;EA/CE,IAAcC,kBAAkBA,CAAA;IAC9B,OAAO,IAAI,CAACC,OAAO,CAACC,SAAS,CAACC,OAAO,KAAK,IAAI;EAChD;EAEUC,IAAIA,CAAA;IACZ,IAAI,CAACC,cAAc,EAAE;EACvB;EAEUA,cAAcA,CAAA;IACtB,IAAI,CAACC,KAAK,CAACC,EAAE,CAAC,cAAc,EAAE,IAAI,CAACC,aAAa,EAAE,IAAI,CAAC;IACvD,IAAI,CAACF,KAAK,CAACC,EAAE,CAAC,eAAe,EAAE,IAAI,CAACE,cAAc,EAAE,IAAI,CAAC;IACzD,IAAI,CAACH,KAAK,CAACC,EAAE,CAAC,iBAAiB,EAAE,IAAI,CAACG,gBAAgB,EAAE,IAAI,CAAC;EAC/D;EAEUC,aAAaA,CAAA;IACrB,IAAI,CAACL,KAAK,CAACM,GAAG,CAAC,cAAc,EAAE,IAAI,CAACJ,aAAa,EAAE,IAAI,CAAC;IACxD,IAAI,CAACF,KAAK,CAACM,GAAG,CAAC,eAAe,EAAE,IAAI,CAACH,cAAc,EAAE,IAAI,CAAC;IAC1D,IAAI,CAACH,KAAK,CAACM,GAAG,CAAC,iBAAiB,EAAE,IAAI,CAACF,gBAAgB,EAAE,IAAI,CAAC;EAChE;EAEUF,aAAaA,CAAC;IAAEK;EAAI,CAA6B;IACzD,IAAI,CAAC,IAAI,CAACb,kBAAkB,EAAE;MAC5B,MAAMF,OAAO,GAAG,IAAI,CAACQ,KAAK,CAACQ,IAAI,CAACC,UAAU,CAACF,IAAI,EAAE;QAAEG,QAAQ,EAAE;MAAI,CAAE,CAAC;MACpE,IAAIlB,OAAO,EAAE;QACX,IAAI,CAACA,OAAO,CAACmB,GAAG,CAACJ,IAAI,EAAEf,OAAO,CAAC;;;EAGrC;EAEUW,cAAcA,CAAC;IAAEI;EAAI,CAA8B;IAC3D,IAAI,IAAI,CAACb,kBAAkB,EAAE;MAC3B,MAAMF,OAAO,GAAG,IAAI,CAACQ,KAAK,CAACQ,IAAI,CAACC,UAAU,CAACF,IAAI,EAAE;QAAEG,QAAQ,EAAE;MAAK,CAAE,CAAC;MACrE,IAAIlB,OAAO,EAAE;QACX,IAAI,CAACA,OAAO,CAACmB,GAAG,CAACJ,IAAI,EAAEf,OAAO,CAAC;;;EAGrC;EAEUY,gBAAgBA,CAAC;IAAEG;EAAI,CAAgC;IAC/D,IAAI,IAAI,CAACb,kBAAkB,EAAE;MAC3B,MAAMF,OAAO,GAAG,IAAI,CAACA,OAAO,CAACoB,GAAG,CAACL,IAAI,CAAC;MACtC,IAAIf,OAAO,EAAE;QACXA,OAAO,CAACqB,OAAO,CAAEC,MAAM,IAAKA,MAAM,CAACC,OAAO,EAAE,CAAC;;MAE/C,IAAI,CAACvB,OAAO,CAACwB,MAAM,CAACT,IAAI,CAAC;;EAE7B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}