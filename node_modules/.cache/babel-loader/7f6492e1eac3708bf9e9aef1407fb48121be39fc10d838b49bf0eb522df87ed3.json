{"ast":null,"code":"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport classnames from 'classnames';\nimport { ConfigProvider, Tooltip } from 'antd';\nimport merge from 'lodash/merge';\nimport { createGraphConfig } from '@antv/xflow-core';\nimport { Shape } from '@antv/x6';\nimport { NODE_HEIGHT, ASPECTRATIONODE, setNodeRender, setGroupRender } from '../flowchart-node-panel';\nimport { movedNode, resizeNode, changePortsVisible, addTools, removeTools, setProps } from './utils';\n/** 临时边 */\nconst TEMP_EGDE = 'flowchart-connecting-edge';\n/** 自定义React节点 */\nconst ANT_PREFIX = 'ant';\nexport var NsAddEdgeEvent;\n(function (NsAddEdgeEvent) {\n  NsAddEdgeEvent.EVENT_NAME = 'ADD_FLOWCHART_EDGE_CMD_EVENT';\n})(NsAddEdgeEvent || (NsAddEdgeEvent = {}));\nconst defaultEdgeConfig = {\n  attrs: {\n    line: {\n      stroke: '#A2B1C3',\n      targetMarker: {\n        name: 'block',\n        width: 12,\n        height: 8\n      },\n      strokeDasharray: '5 5',\n      strokeWidth: 1\n    }\n  }\n};\nconst XFlowEdge = Shape.Edge.registry.register('xflow', Shape.Edge.define({\n  zIndex: 1,\n  highlight: true,\n  name: TEMP_EGDE,\n  label: '',\n  anchor: {\n    name: 'midSide',\n    args: {\n      dx: 10\n    }\n  },\n  attrs: defaultEdgeConfig.attrs,\n  data: {\n    label: ''\n  }\n}), true);\nexport const useGraphConfig = createGraphConfig((config, proxy) => {\n  const {\n    config: canvasConfig = {},\n    useConfig,\n    mode = 'edit',\n    showPortsOnNodeSelected = false,\n    edgeConfig = {}\n  } = proxy.getValue();\n  config.setEdgeTypeParser(edge => edge === null || edge === void 0 ? void 0 : edge.renderKey);\n  /** 这里比较黑，props 共享*/\n  setProps(Object.assign(Object.assign({}, proxy.getValue()), {\n    graphConfig: config\n  }));\n  setNodeRender(config);\n  setGroupRender(config);\n  config.setX6Config(merge({\n    grid: true,\n    history: true,\n    resizing: {\n      enabled: true,\n      minWidth: NODE_HEIGHT,\n      minHeight: NODE_HEIGHT,\n      preserveAspectRatio: shape => {\n        const {\n          data\n        } = shape;\n        return ASPECTRATIONODE.includes(data.name);\n      }\n    },\n    snapline: {\n      enabled: true\n    },\n    connecting: {\n      router: 'manhattan',\n      connector: {\n        name: 'rounded',\n        args: {\n          radius: 8\n        }\n      },\n      anchor: 'center',\n      connectionPoint: 'anchor',\n      allowBlank: false,\n      snap: {\n        radius: 20\n      },\n      createEdge() {\n        const tempEdge = new XFlowEdge({});\n        this.once('edge:connected', args => {\n          const {\n            edge,\n            isNew\n          } = args;\n          /** 没有edge:connected时，会导致graph.once的事件没有执行 */\n          if (isNew && edge && edge.isEdge() && tempEdge === edge) {\n            const targetNode = edge.getTargetCell();\n            if (targetNode && targetNode.isNode()) {\n              const targetPortId = edge.getTargetPortId();\n              const sourcePortId = edge.getSourcePortId();\n              const sourceCellId = edge.getSourceCellId();\n              const targetCellId = edge.getTargetCellId();\n              const customEdgeConfig = typeof edgeConfig === 'function' ? edgeConfig(edge) : edgeConfig;\n              this.trigger(NsAddEdgeEvent.EVENT_NAME, Object.assign({\n                targetPortId,\n                sourcePortId,\n                source: sourceCellId,\n                target: targetCellId,\n                edge: edge,\n                tempEdgeId: tempEdge.id\n              }, merge(defaultEdgeConfig, customEdgeConfig)));\n            }\n          }\n        });\n        return tempEdge;\n      },\n      validateEdge: args => {\n        var _a;\n        const {\n          edge\n        } = args;\n        return !!((_a = edge === null || edge === void 0 ? void 0 : edge.target) === null || _a === void 0 ? void 0 : _a.port);\n      },\n      // 是否触发交互事件\n      validateMagnet() {\n        // 所有锚点均可触发\n        return true;\n      },\n      // 显示可用的链接桩\n      validateConnection({\n        sourceView,\n        targetView,\n        targetMagnet\n      }) {\n        // 不允许连接到自己\n        if (sourceView === targetView) {\n          return false;\n        }\n        const node = targetView.cell;\n        // 判断目标链接桩是否可连接\n        if (targetMagnet) {\n          const portId = targetMagnet.getAttribute('port');\n          const port = node.getPort(portId);\n          return !(port && port.connected);\n        }\n        return;\n      }\n    },\n    highlighting: {\n      nodeAvailable: {\n        name: 'className',\n        args: {\n          className: 'available'\n        }\n      },\n      magnetAvailable: {\n        name: 'className',\n        args: {\n          className: 'available'\n        }\n      },\n      magnetAdsorbed: {\n        name: 'className',\n        args: {\n          className: 'adsorbed'\n        }\n      }\n    },\n    onPortRendered(args) {\n      const {\n        port\n      } = args;\n      const {\n        contentSelectors\n      } = args;\n      const container = contentSelectors && contentSelectors.content;\n      const placement = port.group;\n      const clz = classnames('xflow-port', {\n        connected: port.connected\n      });\n      if (container) {\n        ReactDOM.render(React.createElement(ConfigProvider, {\n          prefixCls: ANT_PREFIX\n        }, React.createElement(Tooltip, {\n          title: port.tooltip,\n          placement: placement\n        }, React.createElement(\"span\", {\n          className: clz\n        }))), container);\n      }\n    }\n  }, canvasConfig));\n  /** 内交互，上层通过实例绑定 */\n  config.setEvents([{\n    eventName: 'node:selected',\n    callback: () => {\n      mode === 'edit' && changePortsVisible(false);\n    }\n  }, {\n    eventName: 'edge:dblclick',\n    callback: e => {\n      addTools(e);\n    }\n  }, {\n    eventName: 'edge:mouseleave',\n    callback: (e, cmds) => {\n      removeTools(e, cmds);\n    }\n  }, {\n    eventName: 'node:mouseenter',\n    callback: e => {\n      mode === 'edit' && changePortsVisible(true, e, showPortsOnNodeSelected);\n    }\n  }, {\n    eventName: 'node:mouseleave',\n    callback: e => {\n      changePortsVisible(false, e);\n    }\n  }, {\n    eventName: 'node:moved',\n    callback: (e, cmds) => {\n      movedNode(e, cmds);\n    }\n  }, {\n    eventName: 'node:resized',\n    callback: (e, cmds) => {\n      resizeNode(e, cmds);\n    }\n  }]);\n  if (typeof useConfig === 'function') {\n    useConfig(config);\n  }\n});","map":{"version":3,"names":["React","ReactDOM","classnames","ConfigProvider","Tooltip","merge","createGraphConfig","Shape","NODE_HEIGHT","ASPECTRATIONODE","setNodeRender","setGroupRender","movedNode","resizeNode","changePortsVisible","addTools","removeTools","setProps","TEMP_EGDE","ANT_PREFIX","NsAddEdgeEvent","EVENT_NAME","defaultEdgeConfig","attrs","line","stroke","targetMarker","name","width","height","strokeDasharray","strokeWidth","XFlowEdge","Edge","registry","register","define","zIndex","highlight","label","anchor","args","dx","data","useGraphConfig","config","proxy","canvasConfig","useConfig","mode","showPortsOnNodeSelected","edgeConfig","getValue","setEdgeTypeParser","edge","renderKey","Object","assign","graphConfig","setX6Config","grid","history","resizing","enabled","minWidth","minHeight","preserveAspectRatio","shape","includes","snapline","connecting","router","connector","radius","connectionPoint","allowBlank","snap","createEdge","tempEdge","once","isNew","isEdge","targetNode","getTargetCell","isNode","targetPortId","getTargetPortId","sourcePortId","getSourcePortId","sourceCellId","getSourceCellId","targetCellId","getTargetCellId","customEdgeConfig","trigger","source","target","tempEdgeId","id","validateEdge","_a","port","validateMagnet","validateConnection","sourceView","targetView","targetMagnet","node","cell","portId","getAttribute","getPort","connected","highlighting","nodeAvailable","className","magnetAvailable","magnetAdsorbed","onPortRendered","contentSelectors","container","content","placement","group","clz","render","createElement","prefixCls","title","tooltip","setEvents","eventName","callback","e","cmds"],"sources":["../../src/flowchart-canvas/config-graph.tsx"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}