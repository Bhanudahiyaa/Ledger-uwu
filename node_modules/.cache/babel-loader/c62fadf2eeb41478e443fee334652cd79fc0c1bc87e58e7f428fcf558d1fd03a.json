{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { AttributeType, gl } from '@antv/l7-core';\nimport { rgb2arr } from '@antv/l7-utils';\nimport BaseModel from \"../../core/BaseModel\";\nimport { SimpleLineTriangulation } from \"../../core/triangulation\";\n/* babel-plugin-inline-import '../shaders/simple/simpleline_frag.glsl' */\nconst simple_line_frag = \"\\nlayout(std140) uniform commonUniorm {\\n  vec4 u_sourceColor;\\n  vec4 u_targetColor;\\n  vec4 u_dash_array;\\n  float u_vertexScale: 1.0;\\n  float u_linearColor: 0;\\n};\\nin float v_distanceScale;\\nin vec4 v_color;\\n//dash\\nin vec4 v_dash_array;\\n\\nout vec4 outputColor;\\nvoid main() {\\n  if(u_dash_array!=vec4(0.0)){\\n    float dashLength = mod(v_distanceScale, v_dash_array.x + v_dash_array.y + v_dash_array.z + v_dash_array.w);\\n    if(!(dashLength < v_dash_array.x || (dashLength > (v_dash_array.x + v_dash_array.y) && dashLength <  v_dash_array.x + v_dash_array.y + v_dash_array.z))) {\\n      // \\u865A\\u7EBF\\u90E8\\u5206\\n      discard;\\n    };\\n  }\\n  if(u_linearColor==1.0){\\n    outputColor = mix(u_sourceColor, u_targetColor, v_distanceScale);\\n    outputColor.a *= v_color.a; // \\u5168\\u5C40\\u900F\\u660E\\u5EA6\\n  }\\n  else{\\n    outputColor = v_color;\\n  }\\n}\\n\";\n/* babel-plugin-inline-import '../shaders/simple/simpleline_vert.glsl' */\nconst simple_line_vert = \"layout(location = ATTRIBUTE_LOCATION_POSITION) in vec3 a_Position;\\nlayout(location = ATTRIBUTE_LOCATION_POSITION_64LOW) in vec2 a_Position64Low;\\nlayout(location = ATTRIBUTE_LOCATION_COLOR) in vec4 a_Color;\\nlayout(location = ATTRIBUTE_LOCATION_SIZE) in vec4 a_SizeDistanceAndTotalDistance;\\n\\nlayout(std140) uniform commonUniorm {\\n  vec4 u_sourceColor;\\n  vec4 u_targetColor;\\n  vec4 u_dash_array;\\n  float u_vertexScale: 1.0;\\n  float u_linearColor: 0;\\n};\\n\\n#pragma include \\\"projection\\\"\\n#pragma include \\\"picking\\\"\\n\\nout vec4 v_color;\\nout float v_distanceScale;\\nout vec4 v_dash_array;\\n\\nvoid main() {\\n  //dash\\u8F93\\u51FA\\n  v_dash_array = pow(2.0, 20.0 - u_Zoom) * u_dash_array / a_SizeDistanceAndTotalDistance.a;\\n\\n  v_color = a_Color;\\n  v_distanceScale = a_SizeDistanceAndTotalDistance.b / a_SizeDistanceAndTotalDistance.a;\\n  v_color.a = v_color.a * opacity;\\n  vec4 project_pos = project_position(vec4(a_Position.xy, 0, 1.0), a_Position64Low);\\n\\n  float h = float(a_Position.z) * u_vertexScale; // \\u7EBF\\u9876\\u70B9\\u7684\\u9AD8\\u5EA6 - \\u517C\\u5BB9\\u4E0D\\u5B58\\u5728\\u7B2C\\u4E09\\u4E2A\\u6570\\u503C\\u7684\\u60C5\\u51B5\\n\\n  float lineHeight = a_SizeDistanceAndTotalDistance.y;\\n  // \\u517C\\u5BB9 mapbox \\u5728\\u7EBF\\u9AD8\\u5EA6\\u4E0A\\u7684\\u6548\\u679C\\u8868\\u73B0\\u57FA\\u672C\\u4E00\\u81F4\\n  if (\\n    u_CoordinateSystem == COORDINATE_SYSTEM_LNGLAT ||\\n    u_CoordinateSystem == COORDINATE_SYSTEM_LNGLAT_OFFSET\\n  ) {\\n    // \\u4FDD\\u6301\\u9AD8\\u5EA6\\u76F8\\u5BF9\\u4E0D\\u53D8\\n    h *= 2.0 / pow(2.0, 20.0 - u_Zoom);\\n  }\\n\\n  gl_Position = project_common_position_to_clipspace(vec4(project_pos.xy, lineHeight + h, 1.0));\\n  gl_PointSize = 10.0;\\n\\n}\\n\";\nexport default class SimpleLineModel extends BaseModel {\n  get attributeLocation() {\n    return Object.assign(super.attributeLocation, {\n      MAX: super.attributeLocation.MAX,\n      SIZE: 9\n    });\n  }\n  getCommonUniformsInfo() {\n    const {\n      sourceColor,\n      targetColor,\n      lineType = 'solid',\n      dashArray = [10, 5, 0, 0],\n      vertexHeightScale = 20.0\n    } = this.layer.getLayerConfig();\n    let u_dash_array = dashArray;\n    if (lineType !== 'dash') {\n      u_dash_array = [0, 0, 0, 0];\n    }\n    if (u_dash_array.length === 2) {\n      u_dash_array.push(0, 0);\n    }\n    // 转化渐变色\n    let useLinearColor = 0; // 默认不生效\n    let sourceColorArr = [0, 0, 0, 0];\n    let targetColorArr = [0, 0, 0, 0];\n    if (sourceColor && targetColor) {\n      sourceColorArr = rgb2arr(sourceColor);\n      targetColorArr = rgb2arr(targetColor);\n      useLinearColor = 1;\n    }\n    const commonOptions = {\n      u_sourceColor: sourceColorArr,\n      u_targetColor: targetColorArr,\n      u_dash_array,\n      // 顶点高度 scale\n      u_vertexScale: vertexHeightScale,\n      // 渐变色支持参数\n      u_linearColor: useLinearColor\n    };\n    const commonBufferInfo = this.getUniformsBufferInfo(commonOptions);\n    return commonBufferInfo;\n  }\n  initModels() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      return _this.buildModels();\n    })();\n  }\n  getShaders() {\n    return {\n      frag: simple_line_frag,\n      vert: simple_line_vert,\n      type: 'lineSimpleNormal'\n    };\n  }\n  buildModels() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      _this2.initUniformsBuffer();\n      const {\n        frag,\n        vert,\n        type\n      } = _this2.getShaders();\n      const model = yield _this2.layer.buildLayerModel({\n        moduleName: type,\n        vertexShader: vert,\n        fragmentShader: frag,\n        triangulation: SimpleLineTriangulation,\n        defines: _this2.getDefines(),\n        inject: _this2.getInject(),\n        primitive: gl.LINES,\n        depth: {\n          enable: false\n        },\n        pick: false\n      });\n      return [model];\n    })();\n  }\n  registerBuiltinAttributes() {\n    // 注册 Position 属性 64 位地位部分，经纬度数据开启双精度，避免大于 20层级以上出现数据偏移\n    this.registerPosition64LowAttribute();\n\n    //size.x,size,y,distance,totalDistance\n    this.styleAttributeService.registerStyleAttribute({\n      name: 'sizeDistanceAndTotalDistance',\n      type: AttributeType.Attribute,\n      descriptor: {\n        name: 'a_SizeDistanceAndTotalDistance',\n        shaderLocation: this.attributeLocation.SIZE,\n        buffer: {\n          usage: gl.STATIC_DRAW,\n          data: [],\n          type: gl.FLOAT\n        },\n        size: 4,\n        update: (feature, featureIdx, vertex) => {\n          const {\n            size = 1\n          } = feature;\n          const a_Size = Array.isArray(size) ? [size[0], size[1]] : [size, 0];\n          return [a_Size[0], a_Size[1], vertex[3], vertex[5]];\n        }\n      }\n    });\n  }\n}","map":{"version":3,"names":["_asyncToGenerator","AttributeType","gl","rgb2arr","BaseModel","SimpleLineTriangulation","simple_line_frag","simple_line_vert","SimpleLineModel","attributeLocation","Object","assign","MAX","SIZE","getCommonUniformsInfo","sourceColor","targetColor","lineType","dashArray","vertexHeightScale","layer","getLayerConfig","u_dash_array","length","push","useLinearColor","sourceColorArr","targetColorArr","commonOptions","u_sourceColor","u_targetColor","u_vertexScale","u_linearColor","commonBufferInfo","getUniformsBufferInfo","initModels","_this","buildModels","getShaders","frag","vert","type","_this2","initUniformsBuffer","model","buildLayerModel","moduleName","vertexShader","fragmentShader","triangulation","defines","getDefines","inject","getInject","primitive","LINES","depth","enable","pick","registerBuiltinAttributes","registerPosition64LowAttribute","styleAttributeService","registerStyleAttribute","name","Attribute","descriptor","shaderLocation","buffer","usage","STATIC_DRAW","data","FLOAT","size","update","feature","featureIdx","vertex","a_Size","Array","isArray"],"sources":["/Users/bhanudahiya/Desktop/ledger-IQ/node_modules/@antv/l7-layers/es/line/models/simple_line.js"],"sourcesContent":["import _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { AttributeType, gl } from '@antv/l7-core';\nimport { rgb2arr } from '@antv/l7-utils';\nimport BaseModel from \"../../core/BaseModel\";\nimport { SimpleLineTriangulation } from \"../../core/triangulation\";\n/* babel-plugin-inline-import '../shaders/simple/simpleline_frag.glsl' */\nconst simple_line_frag = \"\\nlayout(std140) uniform commonUniorm {\\n  vec4 u_sourceColor;\\n  vec4 u_targetColor;\\n  vec4 u_dash_array;\\n  float u_vertexScale: 1.0;\\n  float u_linearColor: 0;\\n};\\nin float v_distanceScale;\\nin vec4 v_color;\\n//dash\\nin vec4 v_dash_array;\\n\\nout vec4 outputColor;\\nvoid main() {\\n  if(u_dash_array!=vec4(0.0)){\\n    float dashLength = mod(v_distanceScale, v_dash_array.x + v_dash_array.y + v_dash_array.z + v_dash_array.w);\\n    if(!(dashLength < v_dash_array.x || (dashLength > (v_dash_array.x + v_dash_array.y) && dashLength <  v_dash_array.x + v_dash_array.y + v_dash_array.z))) {\\n      // \\u865A\\u7EBF\\u90E8\\u5206\\n      discard;\\n    };\\n  }\\n  if(u_linearColor==1.0){\\n    outputColor = mix(u_sourceColor, u_targetColor, v_distanceScale);\\n    outputColor.a *= v_color.a; // \\u5168\\u5C40\\u900F\\u660E\\u5EA6\\n  }\\n  else{\\n    outputColor = v_color;\\n  }\\n}\\n\";\n/* babel-plugin-inline-import '../shaders/simple/simpleline_vert.glsl' */\nconst simple_line_vert = \"layout(location = ATTRIBUTE_LOCATION_POSITION) in vec3 a_Position;\\nlayout(location = ATTRIBUTE_LOCATION_POSITION_64LOW) in vec2 a_Position64Low;\\nlayout(location = ATTRIBUTE_LOCATION_COLOR) in vec4 a_Color;\\nlayout(location = ATTRIBUTE_LOCATION_SIZE) in vec4 a_SizeDistanceAndTotalDistance;\\n\\nlayout(std140) uniform commonUniorm {\\n  vec4 u_sourceColor;\\n  vec4 u_targetColor;\\n  vec4 u_dash_array;\\n  float u_vertexScale: 1.0;\\n  float u_linearColor: 0;\\n};\\n\\n#pragma include \\\"projection\\\"\\n#pragma include \\\"picking\\\"\\n\\nout vec4 v_color;\\nout float v_distanceScale;\\nout vec4 v_dash_array;\\n\\nvoid main() {\\n  //dash\\u8F93\\u51FA\\n  v_dash_array = pow(2.0, 20.0 - u_Zoom) * u_dash_array / a_SizeDistanceAndTotalDistance.a;\\n\\n  v_color = a_Color;\\n  v_distanceScale = a_SizeDistanceAndTotalDistance.b / a_SizeDistanceAndTotalDistance.a;\\n  v_color.a = v_color.a * opacity;\\n  vec4 project_pos = project_position(vec4(a_Position.xy, 0, 1.0), a_Position64Low);\\n\\n  float h = float(a_Position.z) * u_vertexScale; // \\u7EBF\\u9876\\u70B9\\u7684\\u9AD8\\u5EA6 - \\u517C\\u5BB9\\u4E0D\\u5B58\\u5728\\u7B2C\\u4E09\\u4E2A\\u6570\\u503C\\u7684\\u60C5\\u51B5\\n\\n  float lineHeight = a_SizeDistanceAndTotalDistance.y;\\n  // \\u517C\\u5BB9 mapbox \\u5728\\u7EBF\\u9AD8\\u5EA6\\u4E0A\\u7684\\u6548\\u679C\\u8868\\u73B0\\u57FA\\u672C\\u4E00\\u81F4\\n  if (\\n    u_CoordinateSystem == COORDINATE_SYSTEM_LNGLAT ||\\n    u_CoordinateSystem == COORDINATE_SYSTEM_LNGLAT_OFFSET\\n  ) {\\n    // \\u4FDD\\u6301\\u9AD8\\u5EA6\\u76F8\\u5BF9\\u4E0D\\u53D8\\n    h *= 2.0 / pow(2.0, 20.0 - u_Zoom);\\n  }\\n\\n  gl_Position = project_common_position_to_clipspace(vec4(project_pos.xy, lineHeight + h, 1.0));\\n  gl_PointSize = 10.0;\\n\\n}\\n\";\nexport default class SimpleLineModel extends BaseModel {\n  get attributeLocation() {\n    return Object.assign(super.attributeLocation, {\n      MAX: super.attributeLocation.MAX,\n      SIZE: 9\n    });\n  }\n  getCommonUniformsInfo() {\n    const {\n      sourceColor,\n      targetColor,\n      lineType = 'solid',\n      dashArray = [10, 5, 0, 0],\n      vertexHeightScale = 20.0\n    } = this.layer.getLayerConfig();\n    let u_dash_array = dashArray;\n    if (lineType !== 'dash') {\n      u_dash_array = [0, 0, 0, 0];\n    }\n    if (u_dash_array.length === 2) {\n      u_dash_array.push(0, 0);\n    }\n    // 转化渐变色\n    let useLinearColor = 0; // 默认不生效\n    let sourceColorArr = [0, 0, 0, 0];\n    let targetColorArr = [0, 0, 0, 0];\n    if (sourceColor && targetColor) {\n      sourceColorArr = rgb2arr(sourceColor);\n      targetColorArr = rgb2arr(targetColor);\n      useLinearColor = 1;\n    }\n    const commonOptions = {\n      u_sourceColor: sourceColorArr,\n      u_targetColor: targetColorArr,\n      u_dash_array,\n      // 顶点高度 scale\n      u_vertexScale: vertexHeightScale,\n      // 渐变色支持参数\n      u_linearColor: useLinearColor\n    };\n    const commonBufferInfo = this.getUniformsBufferInfo(commonOptions);\n    return commonBufferInfo;\n  }\n  initModels() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      return _this.buildModels();\n    })();\n  }\n  getShaders() {\n    return {\n      frag: simple_line_frag,\n      vert: simple_line_vert,\n      type: 'lineSimpleNormal'\n    };\n  }\n  buildModels() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      _this2.initUniformsBuffer();\n      const {\n        frag,\n        vert,\n        type\n      } = _this2.getShaders();\n      const model = yield _this2.layer.buildLayerModel({\n        moduleName: type,\n        vertexShader: vert,\n        fragmentShader: frag,\n        triangulation: SimpleLineTriangulation,\n        defines: _this2.getDefines(),\n        inject: _this2.getInject(),\n        primitive: gl.LINES,\n        depth: {\n          enable: false\n        },\n        pick: false\n      });\n      return [model];\n    })();\n  }\n  registerBuiltinAttributes() {\n    // 注册 Position 属性 64 位地位部分，经纬度数据开启双精度，避免大于 20层级以上出现数据偏移\n    this.registerPosition64LowAttribute();\n\n    //size.x,size,y,distance,totalDistance\n    this.styleAttributeService.registerStyleAttribute({\n      name: 'sizeDistanceAndTotalDistance',\n      type: AttributeType.Attribute,\n      descriptor: {\n        name: 'a_SizeDistanceAndTotalDistance',\n        shaderLocation: this.attributeLocation.SIZE,\n        buffer: {\n          usage: gl.STATIC_DRAW,\n          data: [],\n          type: gl.FLOAT\n        },\n        size: 4,\n        update: (feature, featureIdx, vertex) => {\n          const {\n            size = 1\n          } = feature;\n          const a_Size = Array.isArray(size) ? [size[0], size[1]] : [size, 0];\n          return [a_Size[0], a_Size[1], vertex[3], vertex[5]];\n        }\n      }\n    });\n  }\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}