{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { IDebugLog, ILayerStage, ScaleTypes, StyleScaleType } from '@antv/l7-core';\nimport { lodashUtil } from '@antv/l7-utils';\nimport { extent } from 'd3-array';\nimport * as d3interpolate from 'd3-interpolate';\nimport * as d3 from 'd3-scale';\nimport identity from \"../utils/identityScale\";\nconst {\n  isNil,\n  isString,\n  uniq\n} = lodashUtil;\nconst dateRegex = /^(?:(?!0000)[0-9]{4}([-/.]+)(?:(?:0?[1-9]|1[0-2])\\1(?:0?[1-9]|1[0-9]|2[0-8])|(?:0?[13-9]|1[0-2])\\1(?:29|30)|(?:0?[13578]|1[02])\\1(?:31))|(?:[0-9]{2}(?:0[48]|[2468][048]|[13579][26])|(?:0[48]|[2468][048]|[13579][26])00)([-/.]?)0?2\\2(?:29))(\\s+([01]|([01][0-9]|2[0-3])):([0-9]|[0-5][0-9]):([0-9]|[0-5][0-9]))?$/;\nconst scaleMap = {\n  [ScaleTypes.LINEAR]: d3.scaleLinear,\n  [ScaleTypes.POWER]: d3.scalePow,\n  [ScaleTypes.LOG]: d3.scaleLog,\n  [ScaleTypes.IDENTITY]: identity,\n  [ScaleTypes.SEQUENTIAL]: d3.scaleSequential,\n  [ScaleTypes.TIME]: d3.scaleTime,\n  [ScaleTypes.QUANTILE]: d3.scaleQuantile,\n  [ScaleTypes.QUANTIZE]: d3.scaleQuantize,\n  [ScaleTypes.THRESHOLD]: d3.scaleThreshold,\n  [ScaleTypes.CAT]: d3.scaleOrdinal,\n  [ScaleTypes.DIVERGING]: d3.scaleDiverging\n};\n/**\n * 根据 Source 原始数据为指定字段创建 Scale，保存在 StyleAttribute 上，供下游插件使用\n */\nexport default class FeatureScalePlugin {\n  constructor() {\n    _defineProperty(this, \"scaleOptions\", {});\n  }\n  apply(layer, {\n    styleAttributeService\n  }) {\n    var _this = this;\n    layer.hooks.init.tapPromise('FeatureScalePlugin', /*#__PURE__*/_asyncToGenerator(function* () {\n      var _layer$getSource;\n      layer.log(IDebugLog.ScaleInitStart, ILayerStage.INIT);\n      _this.scaleOptions = layer.getScaleOptions();\n      const attributes = styleAttributeService.getLayerStyleAttributes();\n      const dataArray = (_layer$getSource = layer.getSource()) === null || _layer$getSource === void 0 ? void 0 : _layer$getSource.data.dataArray;\n      if (Array.isArray(dataArray) && dataArray.length === 0) {\n        return;\n      } else {\n        _this.caculateScalesForAttributes(attributes || [], dataArray);\n      }\n      layer.log(IDebugLog.ScaleInitEnd, ILayerStage.INIT);\n    }));\n\n    // 检测数据是否需要更新\n    layer.hooks.beforeRenderData.tapPromise('FeatureScalePlugin', /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator(function* (flag) {\n        if (!flag) {\n          return flag;\n        }\n        layer.log(IDebugLog.ScaleInitStart, ILayerStage.UPDATE);\n        _this.scaleOptions = layer.getScaleOptions();\n        const attributes = styleAttributeService.getLayerStyleAttributes();\n        const dataArray = layer.getSource().data.dataArray;\n        if (Array.isArray(dataArray) && dataArray.length === 0) {\n          return true;\n        }\n        _this.caculateScalesForAttributes(attributes || [], dataArray);\n        layer.log(IDebugLog.ScaleInitEnd, ILayerStage.UPDATE);\n        layer.layerModelNeedUpdate = true;\n        return true;\n      });\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n    layer.hooks.beforeRender.tap('FeatureScalePlugin', () => {\n      if (layer.layerModelNeedUpdate) {\n        return;\n      }\n      this.scaleOptions = layer.getScaleOptions();\n      const attributes = styleAttributeService.getLayerStyleAttributes();\n      const dataArray = layer.getSource().data.dataArray;\n      if (Array.isArray(dataArray) && dataArray.length === 0) {\n        return;\n      }\n      if (attributes) {\n        const attributesToRescale = attributes.filter(attribute => attribute.needRescale);\n        if (attributesToRescale.length) {\n          this.caculateScalesForAttributes(attributesToRescale, dataArray);\n        }\n      }\n    });\n  }\n  isNumber(n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n  }\n  caculateScalesForAttributes(attributes, dataArray) {\n    attributes.forEach(attribute => {\n      if (attribute.scale) {\n        // 创建Scale\n        const attributeScale = attribute.scale;\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        const fieldValue = attribute.scale.field;\n        attributeScale.names = this.parseFields(isNil(fieldValue) ? [] : fieldValue);\n        const scales = [];\n        // 为每个字段创建 Scale\n        attributeScale.names.forEach(field => {\n          var _attribute$scale;\n          scales.push(this.createScale(field, attribute.name, (_attribute$scale = attribute.scale) === null || _attribute$scale === void 0 ? void 0 : _attribute$scale.values, dataArray));\n        });\n\n        // 为scales 设置值区间 Range\n        if (scales.some(scale => scale.type === StyleScaleType.VARIABLE)) {\n          attributeScale.type = StyleScaleType.VARIABLE;\n          scales.forEach(scale => {\n            // 如果设置了回调, 这不需要设置range\n            if (!attributeScale.callback && attributeScale.values !== 'text') {\n              var _scale$option;\n              switch ((_scale$option = scale.option) === null || _scale$option === void 0 ? void 0 : _scale$option.type) {\n                case ScaleTypes.LOG:\n                case ScaleTypes.LINEAR:\n                case ScaleTypes.POWER:\n                  if (attributeScale.values && attributeScale.values.length > 2) {\n                    const tick = scale.scale.ticks(attributeScale.values.length);\n                    scale.scale.domain(tick);\n                  }\n                  attributeScale.values ? scale.scale.range(attributeScale.values) : scale.scale.range(scale.option.domain);\n                  break;\n                case ScaleTypes.QUANTILE:\n                case ScaleTypes.QUANTIZE:\n                case ScaleTypes.THRESHOLD:\n                  scale.scale.range(attributeScale.values); //\n                  break;\n                case ScaleTypes.IDENTITY:\n                  // 不做处理xe\n                  break;\n                case ScaleTypes.CAT:\n                  attributeScale.values ? scale.scale.range(attributeScale.values) : scale.scale.range(scale.option.domain);\n                  break;\n                case ScaleTypes.DIVERGING:\n                case ScaleTypes.SEQUENTIAL:\n                  scale.scale.interpolator(\n                  // @ts-ignore\n                  d3interpolate.interpolateRgbBasis(attributeScale.values));\n                  break;\n              }\n            }\n            if (attributeScale.values === 'text') {\n              var _scale$option2;\n              scale.scale.range((_scale$option2 = scale.option) === null || _scale$option2 === void 0 ? void 0 : _scale$option2.domain);\n            }\n          });\n        } else {\n          // 设置attribute 常量值 常量直接在value取值\n          attributeScale.type = StyleScaleType.CONSTANT;\n          attributeScale.defaultValues = scales.map((scale, index) => {\n            return scale.scale(attributeScale.names[index]);\n          });\n        }\n        attributeScale.scalers = scales.map(scale => {\n          return {\n            field: scale.field,\n            func: scale.scale,\n            option: scale.option\n          };\n        });\n        attribute.needRescale = false;\n      }\n    });\n  }\n\n  /**\n   * @example\n   * 'w*h' => ['w', 'h']\n   * 'w' => ['w']\n   */\n  parseFields(field) {\n    if (Array.isArray(field)) {\n      return field;\n    }\n    if (isString(field)) {\n      return field.split('*');\n    }\n    return [field];\n  }\n  createScale(field, name, values, data) {\n    var _this$scaleOptions$na, _find;\n    // scale 支持根据视觉通道和字段\n    const scaleOption = this.scaleOptions[name] && ((_this$scaleOptions$na = this.scaleOptions[name]) === null || _this$scaleOptions$na === void 0 ? void 0 : _this$scaleOptions$na.field) === field ? this.scaleOptions[name] // TODO  zi\n    : this.scaleOptions[field];\n    const styleScale = {\n      field,\n      scale: undefined,\n      type: StyleScaleType.VARIABLE,\n      option: scaleOption\n    };\n    if (!data || !data.length) {\n      if (scaleOption && scaleOption.type) {\n        styleScale.scale = this.createDefaultScale(scaleOption);\n      } else {\n        styleScale.scale = d3.scaleOrdinal([field]);\n        styleScale.type = StyleScaleType.CONSTANT;\n      }\n      return styleScale;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const firstValue = (_find = data.find(d => !isNil(d[field]))) === null || _find === void 0 ? void 0 : _find[field];\n    // 常量 Scale\n    if (this.isNumber(field) || isNil(firstValue) && !scaleOption) {\n      styleScale.scale = d3.scaleOrdinal([field]);\n      styleScale.type = StyleScaleType.CONSTANT;\n    } else {\n      // 根据数据类型判断 默认等分位，时间，和枚举类型\n      let type = scaleOption && scaleOption.type || this.getDefaultType(firstValue);\n      if (values === 'text') {\n        // text 为内置变 如果是文本则为cat\n        type = ScaleTypes.CAT;\n      }\n      if (values === undefined) {\n        type = ScaleTypes.IDENTITY;\n      }\n      const cfg = this.createScaleConfig(type, field, scaleOption, data);\n      styleScale.scale = this.createDefaultScale(cfg);\n      styleScale.option = cfg;\n    }\n    return styleScale;\n  }\n  getDefaultType(firstValue) {\n    let type = ScaleTypes.LINEAR;\n    if (typeof firstValue === 'string') {\n      type = dateRegex.test(firstValue) ? ScaleTypes.TIME : ScaleTypes.CAT;\n    }\n    return type;\n  }\n  // 生成Scale 默认配置\n  createScaleConfig(type, field, scaleOption, data) {\n    const cfg = _objectSpread(_objectSpread({}, scaleOption), {}, {\n      type\n    });\n    if (cfg !== null && cfg !== void 0 && cfg.domain) return cfg;\n\n    // quantile domain 需要根据ID 进行去重\n    let values = [];\n    if (type === ScaleTypes.QUANTILE) {\n      // 根据 obejct 属性 _id 进行去重\n      const idMap = new Map();\n      data === null || data === void 0 || data.forEach(obj => {\n        idMap.set(obj._id, obj[field]);\n      });\n      values = Array.from(idMap.values());\n    } else {\n      values = (data === null || data === void 0 ? void 0 : data.map(item => item[field])) || [];\n    }\n    if (type === ScaleTypes.CAT || type === ScaleTypes.IDENTITY) {\n      cfg.domain = uniq(values);\n    } else if (type === ScaleTypes.QUANTILE) {\n      cfg.domain = values;\n    } else if (type === ScaleTypes.DIVERGING) {\n      const minMax = extent(values);\n      const neutral = (scaleOption === null || scaleOption === void 0 ? void 0 : scaleOption.neutral) !== undefined ? scaleOption === null || scaleOption === void 0 ? void 0 : scaleOption.neutral : (minMax[0] + minMax[1]) / 2;\n      cfg.domain = [minMax[0], neutral, minMax[1]];\n    } else {\n      // linear/Power/log\n      cfg.domain = extent(values);\n    }\n    return cfg;\n  }\n\n  // 创建Scale 实例\n  createDefaultScale({\n    type,\n    domain,\n    unknown,\n    clamp,\n    nice\n  }) {\n    // @ts-ignore\n    const scale = scaleMap[type]();\n    if (domain && scale.domain) {\n      scale.domain(domain);\n    }\n    if (unknown) {\n      scale.unknown(unknown);\n    }\n    if (clamp !== undefined && scale.clamp) {\n      scale.clamp(clamp);\n    }\n    if (nice !== undefined && scale.nice) {\n      scale.nice(nice);\n    }\n    // TODO 其他属性支持\n    return scale;\n  }\n}","map":{"version":3,"names":["_objectSpread","_asyncToGenerator","_defineProperty","IDebugLog","ILayerStage","ScaleTypes","StyleScaleType","lodashUtil","extent","d3interpolate","d3","identity","isNil","isString","uniq","dateRegex","scaleMap","LINEAR","scaleLinear","POWER","scalePow","LOG","scaleLog","IDENTITY","SEQUENTIAL","scaleSequential","TIME","scaleTime","QUANTILE","scaleQuantile","QUANTIZE","scaleQuantize","THRESHOLD","scaleThreshold","CAT","scaleOrdinal","DIVERGING","scaleDiverging","FeatureScalePlugin","constructor","apply","layer","styleAttributeService","_this","hooks","init","tapPromise","_layer$getSource","log","ScaleInitStart","INIT","scaleOptions","getScaleOptions","attributes","getLayerStyleAttributes","dataArray","getSource","data","Array","isArray","length","caculateScalesForAttributes","ScaleInitEnd","beforeRenderData","_ref2","flag","UPDATE","layerModelNeedUpdate","_x","arguments","beforeRender","tap","attributesToRescale","filter","attribute","needRescale","isNumber","n","isNaN","parseFloat","isFinite","forEach","scale","attributeScale","fieldValue","field","names","parseFields","scales","_attribute$scale","push","createScale","name","values","some","type","VARIABLE","callback","_scale$option","option","tick","ticks","domain","range","interpolator","interpolateRgbBasis","_scale$option2","CONSTANT","defaultValues","map","index","scalers","func","split","_this$scaleOptions$na","_find","scaleOption","styleScale","undefined","createDefaultScale","firstValue","find","d","getDefaultType","cfg","createScaleConfig","test","idMap","Map","obj","set","_id","from","item","minMax","neutral","unknown","clamp","nice"],"sources":["/Users/bhanudahiya/Desktop/ledger-IQ/node_modules/@antv/l7-layers/es/plugins/FeatureScalePlugin.js"],"sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { IDebugLog, ILayerStage, ScaleTypes, StyleScaleType } from '@antv/l7-core';\nimport { lodashUtil } from '@antv/l7-utils';\nimport { extent } from 'd3-array';\nimport * as d3interpolate from 'd3-interpolate';\nimport * as d3 from 'd3-scale';\nimport identity from \"../utils/identityScale\";\nconst {\n  isNil,\n  isString,\n  uniq\n} = lodashUtil;\nconst dateRegex = /^(?:(?!0000)[0-9]{4}([-/.]+)(?:(?:0?[1-9]|1[0-2])\\1(?:0?[1-9]|1[0-9]|2[0-8])|(?:0?[13-9]|1[0-2])\\1(?:29|30)|(?:0?[13578]|1[02])\\1(?:31))|(?:[0-9]{2}(?:0[48]|[2468][048]|[13579][26])|(?:0[48]|[2468][048]|[13579][26])00)([-/.]?)0?2\\2(?:29))(\\s+([01]|([01][0-9]|2[0-3])):([0-9]|[0-5][0-9]):([0-9]|[0-5][0-9]))?$/;\nconst scaleMap = {\n  [ScaleTypes.LINEAR]: d3.scaleLinear,\n  [ScaleTypes.POWER]: d3.scalePow,\n  [ScaleTypes.LOG]: d3.scaleLog,\n  [ScaleTypes.IDENTITY]: identity,\n  [ScaleTypes.SEQUENTIAL]: d3.scaleSequential,\n  [ScaleTypes.TIME]: d3.scaleTime,\n  [ScaleTypes.QUANTILE]: d3.scaleQuantile,\n  [ScaleTypes.QUANTIZE]: d3.scaleQuantize,\n  [ScaleTypes.THRESHOLD]: d3.scaleThreshold,\n  [ScaleTypes.CAT]: d3.scaleOrdinal,\n  [ScaleTypes.DIVERGING]: d3.scaleDiverging\n};\n/**\n * 根据 Source 原始数据为指定字段创建 Scale，保存在 StyleAttribute 上，供下游插件使用\n */\nexport default class FeatureScalePlugin {\n  constructor() {\n    _defineProperty(this, \"scaleOptions\", {});\n  }\n  apply(layer, {\n    styleAttributeService\n  }) {\n    var _this = this;\n    layer.hooks.init.tapPromise('FeatureScalePlugin', /*#__PURE__*/_asyncToGenerator(function* () {\n      var _layer$getSource;\n      layer.log(IDebugLog.ScaleInitStart, ILayerStage.INIT);\n      _this.scaleOptions = layer.getScaleOptions();\n      const attributes = styleAttributeService.getLayerStyleAttributes();\n      const dataArray = (_layer$getSource = layer.getSource()) === null || _layer$getSource === void 0 ? void 0 : _layer$getSource.data.dataArray;\n      if (Array.isArray(dataArray) && dataArray.length === 0) {\n        return;\n      } else {\n        _this.caculateScalesForAttributes(attributes || [], dataArray);\n      }\n      layer.log(IDebugLog.ScaleInitEnd, ILayerStage.INIT);\n    }));\n\n    // 检测数据是否需要更新\n    layer.hooks.beforeRenderData.tapPromise('FeatureScalePlugin', /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator(function* (flag) {\n        if (!flag) {\n          return flag;\n        }\n        layer.log(IDebugLog.ScaleInitStart, ILayerStage.UPDATE);\n        _this.scaleOptions = layer.getScaleOptions();\n        const attributes = styleAttributeService.getLayerStyleAttributes();\n        const dataArray = layer.getSource().data.dataArray;\n        if (Array.isArray(dataArray) && dataArray.length === 0) {\n          return true;\n        }\n        _this.caculateScalesForAttributes(attributes || [], dataArray);\n        layer.log(IDebugLog.ScaleInitEnd, ILayerStage.UPDATE);\n        layer.layerModelNeedUpdate = true;\n        return true;\n      });\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n    layer.hooks.beforeRender.tap('FeatureScalePlugin', () => {\n      if (layer.layerModelNeedUpdate) {\n        return;\n      }\n      this.scaleOptions = layer.getScaleOptions();\n      const attributes = styleAttributeService.getLayerStyleAttributes();\n      const dataArray = layer.getSource().data.dataArray;\n      if (Array.isArray(dataArray) && dataArray.length === 0) {\n        return;\n      }\n      if (attributes) {\n        const attributesToRescale = attributes.filter(attribute => attribute.needRescale);\n        if (attributesToRescale.length) {\n          this.caculateScalesForAttributes(attributesToRescale, dataArray);\n        }\n      }\n    });\n  }\n  isNumber(n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n  }\n  caculateScalesForAttributes(attributes, dataArray) {\n    attributes.forEach(attribute => {\n      if (attribute.scale) {\n        // 创建Scale\n        const attributeScale = attribute.scale;\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        const fieldValue = attribute.scale.field;\n        attributeScale.names = this.parseFields(isNil(fieldValue) ? [] : fieldValue);\n        const scales = [];\n        // 为每个字段创建 Scale\n        attributeScale.names.forEach(field => {\n          var _attribute$scale;\n          scales.push(this.createScale(field, attribute.name, (_attribute$scale = attribute.scale) === null || _attribute$scale === void 0 ? void 0 : _attribute$scale.values, dataArray));\n        });\n\n        // 为scales 设置值区间 Range\n        if (scales.some(scale => scale.type === StyleScaleType.VARIABLE)) {\n          attributeScale.type = StyleScaleType.VARIABLE;\n          scales.forEach(scale => {\n            // 如果设置了回调, 这不需要设置range\n            if (!attributeScale.callback && attributeScale.values !== 'text') {\n              var _scale$option;\n              switch ((_scale$option = scale.option) === null || _scale$option === void 0 ? void 0 : _scale$option.type) {\n                case ScaleTypes.LOG:\n                case ScaleTypes.LINEAR:\n                case ScaleTypes.POWER:\n                  if (attributeScale.values && attributeScale.values.length > 2) {\n                    const tick = scale.scale.ticks(attributeScale.values.length);\n                    scale.scale.domain(tick);\n                  }\n                  attributeScale.values ? scale.scale.range(attributeScale.values) : scale.scale.range(scale.option.domain);\n                  break;\n                case ScaleTypes.QUANTILE:\n                case ScaleTypes.QUANTIZE:\n                case ScaleTypes.THRESHOLD:\n                  scale.scale.range(attributeScale.values); //\n                  break;\n                case ScaleTypes.IDENTITY:\n                  // 不做处理xe\n                  break;\n                case ScaleTypes.CAT:\n                  attributeScale.values ? scale.scale.range(attributeScale.values) : scale.scale.range(scale.option.domain);\n                  break;\n                case ScaleTypes.DIVERGING:\n                case ScaleTypes.SEQUENTIAL:\n                  scale.scale.interpolator(\n                  // @ts-ignore\n                  d3interpolate.interpolateRgbBasis(attributeScale.values));\n                  break;\n              }\n            }\n            if (attributeScale.values === 'text') {\n              var _scale$option2;\n              scale.scale.range((_scale$option2 = scale.option) === null || _scale$option2 === void 0 ? void 0 : _scale$option2.domain);\n            }\n          });\n        } else {\n          // 设置attribute 常量值 常量直接在value取值\n          attributeScale.type = StyleScaleType.CONSTANT;\n          attributeScale.defaultValues = scales.map((scale, index) => {\n            return scale.scale(attributeScale.names[index]);\n          });\n        }\n        attributeScale.scalers = scales.map(scale => {\n          return {\n            field: scale.field,\n            func: scale.scale,\n            option: scale.option\n          };\n        });\n        attribute.needRescale = false;\n      }\n    });\n  }\n\n  /**\n   * @example\n   * 'w*h' => ['w', 'h']\n   * 'w' => ['w']\n   */\n  parseFields(field) {\n    if (Array.isArray(field)) {\n      return field;\n    }\n    if (isString(field)) {\n      return field.split('*');\n    }\n    return [field];\n  }\n  createScale(field, name, values, data) {\n    var _this$scaleOptions$na, _find;\n    // scale 支持根据视觉通道和字段\n    const scaleOption = this.scaleOptions[name] && ((_this$scaleOptions$na = this.scaleOptions[name]) === null || _this$scaleOptions$na === void 0 ? void 0 : _this$scaleOptions$na.field) === field ? this.scaleOptions[name] // TODO  zi\n    : this.scaleOptions[field];\n    const styleScale = {\n      field,\n      scale: undefined,\n      type: StyleScaleType.VARIABLE,\n      option: scaleOption\n    };\n    if (!data || !data.length) {\n      if (scaleOption && scaleOption.type) {\n        styleScale.scale = this.createDefaultScale(scaleOption);\n      } else {\n        styleScale.scale = d3.scaleOrdinal([field]);\n        styleScale.type = StyleScaleType.CONSTANT;\n      }\n      return styleScale;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const firstValue = (_find = data.find(d => !isNil(d[field]))) === null || _find === void 0 ? void 0 : _find[field];\n    // 常量 Scale\n    if (this.isNumber(field) || isNil(firstValue) && !scaleOption) {\n      styleScale.scale = d3.scaleOrdinal([field]);\n      styleScale.type = StyleScaleType.CONSTANT;\n    } else {\n      // 根据数据类型判断 默认等分位，时间，和枚举类型\n      let type = scaleOption && scaleOption.type || this.getDefaultType(firstValue);\n      if (values === 'text') {\n        // text 为内置变 如果是文本则为cat\n        type = ScaleTypes.CAT;\n      }\n      if (values === undefined) {\n        type = ScaleTypes.IDENTITY;\n      }\n      const cfg = this.createScaleConfig(type, field, scaleOption, data);\n      styleScale.scale = this.createDefaultScale(cfg);\n      styleScale.option = cfg;\n    }\n    return styleScale;\n  }\n  getDefaultType(firstValue) {\n    let type = ScaleTypes.LINEAR;\n    if (typeof firstValue === 'string') {\n      type = dateRegex.test(firstValue) ? ScaleTypes.TIME : ScaleTypes.CAT;\n    }\n    return type;\n  }\n  // 生成Scale 默认配置\n  createScaleConfig(type, field, scaleOption, data) {\n    const cfg = _objectSpread(_objectSpread({}, scaleOption), {}, {\n      type\n    });\n    if (cfg !== null && cfg !== void 0 && cfg.domain) return cfg;\n\n    // quantile domain 需要根据ID 进行去重\n    let values = [];\n    if (type === ScaleTypes.QUANTILE) {\n      // 根据 obejct 属性 _id 进行去重\n      const idMap = new Map();\n      data === null || data === void 0 || data.forEach(obj => {\n        idMap.set(obj._id, obj[field]);\n      });\n      values = Array.from(idMap.values());\n    } else {\n      values = (data === null || data === void 0 ? void 0 : data.map(item => item[field])) || [];\n    }\n    if (type === ScaleTypes.CAT || type === ScaleTypes.IDENTITY) {\n      cfg.domain = uniq(values);\n    } else if (type === ScaleTypes.QUANTILE) {\n      cfg.domain = values;\n    } else if (type === ScaleTypes.DIVERGING) {\n      const minMax = extent(values);\n      const neutral = (scaleOption === null || scaleOption === void 0 ? void 0 : scaleOption.neutral) !== undefined ? scaleOption === null || scaleOption === void 0 ? void 0 : scaleOption.neutral : (minMax[0] + minMax[1]) / 2;\n      cfg.domain = [minMax[0], neutral, minMax[1]];\n    } else {\n      // linear/Power/log\n      cfg.domain = extent(values);\n    }\n    return cfg;\n  }\n\n  // 创建Scale 实例\n  createDefaultScale({\n    type,\n    domain,\n    unknown,\n    clamp,\n    nice\n  }) {\n    // @ts-ignore\n    const scale = scaleMap[type]();\n    if (domain && scale.domain) {\n      scale.domain(domain);\n    }\n    if (unknown) {\n      scale.unknown(unknown);\n    }\n    if (clamp !== undefined && scale.clamp) {\n      scale.clamp(clamp);\n    }\n    if (nice !== undefined && scale.nice) {\n      scale.nice(nice);\n    }\n    // TODO 其他属性支持\n    return scale;\n  }\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}