{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport LineLayer from \"../../line\";\nimport PointLayer from \"../../point\";\nimport Tile from \"./Tile\";\nexport default class DebugTile extends Tile {\n  initTileLayer() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const sourceOptions = _this.getSourceOption();\n      const pointData = sourceOptions.data.features[0].properties;\n      const lineLayer = new LineLayer().source(sourceOptions.data, sourceOptions.options).size(1).shape('line').color('red');\n      const pointLayer = new PointLayer({\n        minZoom: _this.z - 1,\n        maxZoom: _this.z + 1,\n        textAllowOverlap: true\n      }).source([pointData], {\n        parser: {\n          type: 'json',\n          x: 'x',\n          y: 'y'\n        }\n      }).size(20).color('red').shape(_this.key).style({\n        stroke: '#fff',\n        strokeWidth: 2\n      });\n      yield _this.addLayer(lineLayer);\n      yield _this.addLayer(pointLayer);\n      _this.isLoaded = true;\n    })();\n  }\n  getSourceOption() {\n    const rawSource = this.parent.getSource();\n    const features = this.sourceTile.data.layers.testTile.features;\n    return {\n      data: {\n        type: 'FeatureCollection',\n        features\n      },\n      options: {\n        parser: {\n          type: 'geojson'\n        },\n        transforms: rawSource.transforms\n      }\n    };\n  }\n}","map":{"version":3,"names":["_asyncToGenerator","LineLayer","PointLayer","Tile","DebugTile","initTileLayer","_this","sourceOptions","getSourceOption","pointData","data","features","properties","lineLayer","source","options","size","shape","color","pointLayer","minZoom","z","maxZoom","textAllowOverlap","parser","type","x","y","key","style","stroke","strokeWidth","addLayer","isLoaded","rawSource","parent","getSource","sourceTile","layers","testTile","transforms"],"sources":["/Users/bhanudahiya/Desktop/ledger-IQ/node_modules/@antv/l7-layers/es/tile/tile/DebugTile.js"],"sourcesContent":["import _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport LineLayer from \"../../line\";\nimport PointLayer from \"../../point\";\nimport Tile from \"./Tile\";\nexport default class DebugTile extends Tile {\n  initTileLayer() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const sourceOptions = _this.getSourceOption();\n      const pointData = sourceOptions.data.features[0].properties;\n      const lineLayer = new LineLayer().source(sourceOptions.data, sourceOptions.options).size(1).shape('line').color('red');\n      const pointLayer = new PointLayer({\n        minZoom: _this.z - 1,\n        maxZoom: _this.z + 1,\n        textAllowOverlap: true\n      }).source([pointData], {\n        parser: {\n          type: 'json',\n          x: 'x',\n          y: 'y'\n        }\n      }).size(20).color('red').shape(_this.key).style({\n        stroke: '#fff',\n        strokeWidth: 2\n      });\n      yield _this.addLayer(lineLayer);\n      yield _this.addLayer(pointLayer);\n      _this.isLoaded = true;\n    })();\n  }\n  getSourceOption() {\n    const rawSource = this.parent.getSource();\n    const features = this.sourceTile.data.layers.testTile.features;\n    return {\n      data: {\n        type: 'FeatureCollection',\n        features\n      },\n      options: {\n        parser: {\n          type: 'geojson'\n        },\n        transforms: rawSource.transforms\n      }\n    };\n  }\n}"],"mappings":"AAAA,OAAOA,iBAAiB,MAAM,6CAA6C;AAC3E,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,UAAU,MAAM,aAAa;AACpC,OAAOC,IAAI,MAAM,QAAQ;AACzB,eAAe,MAAMC,SAAS,SAASD,IAAI,CAAC;EAC1CE,aAAaA,CAAA,EAAG;IACd,IAAIC,KAAK,GAAG,IAAI;IAChB,OAAON,iBAAiB,CAAC,aAAa;MACpC,MAAMO,aAAa,GAAGD,KAAK,CAACE,eAAe,CAAC,CAAC;MAC7C,MAAMC,SAAS,GAAGF,aAAa,CAACG,IAAI,CAACC,QAAQ,CAAC,CAAC,CAAC,CAACC,UAAU;MAC3D,MAAMC,SAAS,GAAG,IAAIZ,SAAS,CAAC,CAAC,CAACa,MAAM,CAACP,aAAa,CAACG,IAAI,EAAEH,aAAa,CAACQ,OAAO,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC,CAACC,KAAK,CAAC,MAAM,CAAC,CAACC,KAAK,CAAC,KAAK,CAAC;MACtH,MAAMC,UAAU,GAAG,IAAIjB,UAAU,CAAC;QAChCkB,OAAO,EAAEd,KAAK,CAACe,CAAC,GAAG,CAAC;QACpBC,OAAO,EAAEhB,KAAK,CAACe,CAAC,GAAG,CAAC;QACpBE,gBAAgB,EAAE;MACpB,CAAC,CAAC,CAACT,MAAM,CAAC,CAACL,SAAS,CAAC,EAAE;QACrBe,MAAM,EAAE;UACNC,IAAI,EAAE,MAAM;UACZC,CAAC,EAAE,GAAG;UACNC,CAAC,EAAE;QACL;MACF,CAAC,CAAC,CAACX,IAAI,CAAC,EAAE,CAAC,CAACE,KAAK,CAAC,KAAK,CAAC,CAACD,KAAK,CAACX,KAAK,CAACsB,GAAG,CAAC,CAACC,KAAK,CAAC;QAC9CC,MAAM,EAAE,MAAM;QACdC,WAAW,EAAE;MACf,CAAC,CAAC;MACF,MAAMzB,KAAK,CAAC0B,QAAQ,CAACnB,SAAS,CAAC;MAC/B,MAAMP,KAAK,CAAC0B,QAAQ,CAACb,UAAU,CAAC;MAChCb,KAAK,CAAC2B,QAAQ,GAAG,IAAI;IACvB,CAAC,CAAC,CAAC,CAAC;EACN;EACAzB,eAAeA,CAAA,EAAG;IAChB,MAAM0B,SAAS,GAAG,IAAI,CAACC,MAAM,CAACC,SAAS,CAAC,CAAC;IACzC,MAAMzB,QAAQ,GAAG,IAAI,CAAC0B,UAAU,CAAC3B,IAAI,CAAC4B,MAAM,CAACC,QAAQ,CAAC5B,QAAQ;IAC9D,OAAO;MACLD,IAAI,EAAE;QACJe,IAAI,EAAE,mBAAmB;QACzBd;MACF,CAAC;MACDI,OAAO,EAAE;QACPS,MAAM,EAAE;UACNC,IAAI,EAAE;QACR,CAAC;QACDe,UAAU,EAAEN,SAAS,CAACM;MACxB;IACF,CAAC;EACH;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}