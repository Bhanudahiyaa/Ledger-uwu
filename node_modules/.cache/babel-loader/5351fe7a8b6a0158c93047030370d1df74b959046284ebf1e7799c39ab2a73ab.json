{"ast":null,"code":"/*\n * Assigns an initial order value for each node by performing a DFS search\n * starting from nodes in the first rank. Nodes are assigned an order in their\n * rank as they are first visited.\n *\n * This approach comes from Gansner, et al., \"A Technique for Drawing Directed\n * Graphs.\"\n *\n * Returns a layering matrix with an array per layer and each layer sorted by\n * the order of its nodes.\n */\nconst initOrder = g => {\n  const visited = {};\n  const simpleNodes = g.nodes().filter(v => {\n    var _a;\n    return !((_a = g.children(v)) === null || _a === void 0 ? void 0 : _a.length);\n  });\n  const nodeRanks = simpleNodes.map(v => g.node(v).rank);\n  const maxRank = Math.max(...nodeRanks);\n  const layers = [];\n  for (let i = 0; i < maxRank + 1; i++) {\n    layers.push([]);\n  }\n  // const layers = _.map(_.range(maxRank + 1), function() { return []; });\n  const dfs = v => {\n    var _a;\n    if (visited.hasOwnProperty(v)) return;\n    visited[v] = true;\n    const node = g.node(v);\n    if (!isNaN(node.rank)) {\n      layers[node.rank].push(v);\n    }\n    (_a = g.successors(v)) === null || _a === void 0 ? void 0 : _a.forEach(child => dfs(child));\n  };\n  const orderedVs = simpleNodes.sort((a, b) => g.node(a).rank - g.node(b).rank);\n  // const orderedVs = _.sortBy(simpleNodes, function(v) { return g.node(v).rank; });\n  // 有fixOrder的，直接排序好放进去\n  const beforeSort = orderedVs.filter(n => {\n    return g.node(n).fixorder !== undefined;\n  });\n  const fixOrderNodes = beforeSort.sort((a, b) => g.node(a).fixorder - g.node(b).fixorder);\n  fixOrderNodes === null || fixOrderNodes === void 0 ? void 0 : fixOrderNodes.forEach(n => {\n    if (!isNaN(g.node(n).rank)) {\n      layers[g.node(n).rank].push(n);\n    }\n    visited[n] = true;\n  });\n  orderedVs === null || orderedVs === void 0 ? void 0 : orderedVs.forEach(dfs);\n  return layers;\n};\nexport default initOrder;","map":{"version":3,"names":["initOrder","g","visited","simpleNodes","nodes","filter","v","_a","children","length","nodeRanks","map","node","rank","maxRank","Math","max","layers","i","push","dfs","hasOwnProperty","isNaN","successors","forEach","child","orderedVs","sort","a","b","beforeSort","n","fixorder","undefined","fixOrderNodes"],"sources":["../../../../../src/layout/dagre/src/order/init-order.ts"],"sourcesContent":[null],"mappings":"AAGA;;;;;;;;;;;AAWA,MAAMA,SAAS,GAAIC,CAAQ,IAAI;EAC7B,MAAMC,OAAO,GAAQ,EAAE;EACvB,MAAMC,WAAW,GAAGF,CAAC,CAACG,KAAK,EAAE,CAACC,MAAM,CAAEC,CAAC,IAAI;;IACzC,OAAO,EAAC,CAAAC,EAAA,GAAAN,CAAC,CAACO,QAAQ,CAACF,CAAC,CAAC,cAAAC,EAAA,uBAAAA,EAAA,CAAEE,MAAM;EAC/B,CAAC,CAAC;EACF,MAAMC,SAAS,GAAGP,WAAW,CAACQ,GAAG,CAAEL,CAAC,IAAML,CAAC,CAACW,IAAI,CAACN,CAAC,CAAC,CAACO,IAAe,CAAC;EACpE,MAAMC,OAAO,GAAGC,IAAI,CAACC,GAAG,CAAC,GAAGN,SAAS,CAAC;EACtC,MAAMO,MAAM,GAAQ,EAAE;EACtB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,OAAO,GAAG,CAAC,EAAEI,CAAC,EAAE,EAAE;IACpCD,MAAM,CAACE,IAAI,CAAC,EAAE,CAAC;;EAEjB;EAEA,MAAMC,GAAG,GAAId,CAAS,IAAI;;IACxB,IAAIJ,OAAO,CAACmB,cAAc,CAACf,CAAC,CAAC,EAAE;IAC/BJ,OAAO,CAACI,CAAC,CAAC,GAAG,IAAI;IACjB,MAAMM,IAAI,GAAGX,CAAC,CAACW,IAAI,CAACN,CAAC,CAAC;IACtB,IAAI,CAACgB,KAAK,CAACV,IAAI,CAACC,IAAc,CAAC,EAAE;MAC/BI,MAAM,CAACL,IAAI,CAACC,IAAc,CAAC,CAACM,IAAI,CAACb,CAAC,CAAC;;IAErC,CAAAC,EAAA,GAAAN,CAAC,CAACsB,UAAU,CAACjB,CAAC,CAAC,cAAAC,EAAA,uBAAAA,EAAA,CAAEiB,OAAO,CAAEC,KAAK,IAAKL,GAAG,CAACK,KAAY,CAAC,CAAC;EACxD,CAAC;EAED,MAAMC,SAAS,GAAGvB,WAAW,CAACwB,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAM5B,CAAC,CAACW,IAAI,CAACgB,CAAC,CAAC,CAACf,IAAe,GAAIZ,CAAC,CAACW,IAAI,CAACiB,CAAC,CAAC,CAAChB,IAAe,CAAC;EACrG;EAEA;EACA,MAAMiB,UAAU,GAAGJ,SAAS,CAACrB,MAAM,CAAE0B,CAAC,IAAI;IACxC,OAAO9B,CAAC,CAACW,IAAI,CAACmB,CAAC,CAAC,CAACC,QAAQ,KAAKC,SAAS;EACzC,CAAC,CAAC;EACF,MAAMC,aAAa,GAAGJ,UAAU,CAACH,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAM5B,CAAC,CAACW,IAAI,CAACgB,CAAC,CAAC,CAACI,QAAmB,GAAI/B,CAAC,CAACW,IAAI,CAACiB,CAAC,CAAC,CAACG,QAAmB,CAAC;EAChHE,aAAa,aAAbA,aAAa,uBAAbA,aAAa,CAAEV,OAAO,CAAEO,CAAC,IAAI;IAC3B,IAAI,CAACT,KAAK,CAACrB,CAAC,CAACW,IAAI,CAACmB,CAAC,CAAC,CAAClB,IAAc,CAAC,EAAE;MACpCI,MAAM,CAAChB,CAAC,CAACW,IAAI,CAACmB,CAAC,CAAC,CAAClB,IAAc,CAAC,CAACM,IAAI,CAACY,CAAC,CAAC;;IAE1C7B,OAAO,CAAC6B,CAAC,CAAC,GAAG,IAAI;EACnB,CAAC,CAAC;EAEFL,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEF,OAAO,CAACJ,GAAG,CAAC;EAEvB,OAAOH,MAAM;AACf,CAAC;AAED,eAAejB,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}