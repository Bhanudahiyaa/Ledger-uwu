{"ast":null,"code":"import * as d3Force from 'd3-force';\nimport forceGrid from './forceGrid';\nimport mysqlWorkbench from './mysqlWorkbench';\nimport { DagreLayout } from '../dagre';\nexport default function layout(data, options) {\n  const {\n    nodes,\n    edges\n  } = data;\n  const width = options.width;\n  const height = options.height;\n  if (!(nodes === null || nodes === void 0 ? void 0 : nodes.length)) return Promise.resolve();\n  // 筛选非叶子节点，做Dagre布局\n  const noLeafNodes = [];\n  nodes.forEach(node => {\n    const relateEdges = edges.filter(edge => {\n      return edge.source === node.id || edge.target === node.id;\n    });\n    if (relateEdges.length > 1) {\n      const temp = Object.assign({}, node);\n      delete temp.size;\n      noLeafNodes.push(temp);\n    }\n  });\n  const noLeafEdge = [];\n  edges.forEach(edge => {\n    const sourceNode = noLeafNodes.find(node => node.id === edge.source);\n    const targetNode = noLeafNodes.find(node => node.id === edge.target);\n    if (sourceNode && targetNode) {\n      noLeafEdge.push(edge);\n    }\n  });\n  const graphLayout = new DagreLayout({\n    type: 'dagre',\n    ranksep: options.nodeMinGap,\n    nodesep: options.nodeMinGap\n  });\n  const {\n    nodes: nodesTmp\n  } = graphLayout.layout({\n    nodes: noLeafNodes,\n    edges: noLeafEdge\n  });\n  // 布局后，坐标同步\n  nodes.forEach(n => {\n    const found = (nodesTmp || []).find(temp => temp.id === n.id);\n    n.x = (found === null || found === void 0 ? void 0 : found.x) || width / 2;\n    n.y = (found === null || found === void 0 ? void 0 : found.y) || height / 2;\n  });\n  const copyNodes = JSON.parse(JSON.stringify(nodes));\n  const copyEdges = JSON.parse(JSON.stringify(edges));\n  const simulation = d3Force.forceSimulation().nodes(copyNodes).force(\"link\", d3Force.forceLink(copyEdges).id(d => d.id).distance(d => {\n    const edgeInfo = noLeafEdge.find(edge => edge.source === d.source && edge.target === d.target);\n    if (edgeInfo) {\n      return 30;\n    }\n    return 20;\n  })).force(\"charge\", d3Force.forceManyBody()).force(\"center\", d3Force.forceCenter(width / 2, height / 2)).force(\"x\", d3Force.forceX(width / 2)).force(\"y\", d3Force.forceY(height / 2)).alpha(0.3).alphaDecay(0.08).alphaMin(0.001);\n  const layoutPromise = new Promise(resolve => {\n    simulation.on('end', () => {\n      // 坐标信息同步到nodes,edges中\n      nodes.forEach(node => {\n        const nodeInfo = copyNodes.find(item => item.id === node.id);\n        if (nodeInfo) {\n          node.x = nodeInfo.x;\n          node.y = nodeInfo.y;\n        }\n      });\n      const minX = Math.min(...nodes.map(node => node.x));\n      const maxX = Math.max(...nodes.map(node => node.x));\n      const minY = Math.min(...nodes.map(node => node.y));\n      const maxY = Math.max(...nodes.map(node => node.y));\n      const scalex = width / (maxX - minX);\n      const scaley = height / (maxY - minY);\n      nodes.forEach(node => {\n        if (node.x !== undefined && scalex < 1) {\n          node.x = (node.x - minX) * scalex;\n        }\n        if (node.y !== undefined && scaley < 1) {\n          node.y = (node.y - minY) * scaley;\n        }\n      });\n      // 这一步就执行缩小空间。且不考虑节点size\n      nodes.forEach(node => {\n        node.sizeTemp = node.size;\n        node.size = [10, 10];\n      });\n      mysqlWorkbench(nodes, edges);\n      nodes.forEach(node => {\n        node.size = node.sizeTemp || [];\n        delete node.sizeTemp;\n      });\n      // 进行网格对齐+节点大小扩增\n      forceGrid({\n        nodes,\n        edges\n      }, options);\n      resolve();\n    });\n  });\n  return layoutPromise;\n}","map":{"version":3,"names":["d3Force","forceGrid","mysqlWorkbench","DagreLayout","layout","data","options","nodes","edges","width","height","length","Promise","resolve","noLeafNodes","forEach","node","relateEdges","filter","edge","source","id","target","temp","Object","assign","size","push","noLeafEdge","sourceNode","find","targetNode","graphLayout","type","ranksep","nodeMinGap","nodesep","nodesTmp","n","found","x","y","copyNodes","JSON","parse","stringify","copyEdges","simulation","forceSimulation","force","forceLink","d","distance","edgeInfo","forceManyBody","forceCenter","forceX","forceY","alpha","alphaDecay","alphaMin","layoutPromise","on","nodeInfo","item","minX","Math","min","map","maxX","max","minY","maxY","scalex","scaley","undefined","sizeTemp"],"sources":["../../../src/layout/er/core.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}