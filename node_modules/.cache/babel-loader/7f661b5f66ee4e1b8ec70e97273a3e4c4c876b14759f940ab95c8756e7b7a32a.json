{"ast":null,"code":"var __async = (__this, __arguments, generator) => {\n  return new Promise((resolve, reject) => {\n    var fulfilled = value => {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var rejected = value => {\n      try {\n        step(generator.throw(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var step = x => x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);\n    step((generator = generator.apply(__this, __arguments)).next());\n  });\n};\n\n// src/tileset-manager/tile.ts\nimport bboxPolygon from \"@turf/bbox-polygon\";\nimport { EventEmitter } from \"eventemitter3\";\nimport { LoadTileDataStatus } from \"./types\";\nimport { getTileWarpXY, tileToBounds } from \"./utils/lonlat-tile\";\nvar SourceTile = class extends EventEmitter {\n  constructor(options) {\n    super();\n    // 瓦片大小\n    this.tileSize = 256;\n    // 是否可以见\n    this.isVisible = false;\n    // 是否是当前层级的瓦片\n    this.isCurrent = false;\n    // 是否可以见发生变化\n    this.isVisibleChange = false;\n    this.loadedLayers = 0;\n    this.isLayerLoaded = false;\n    this.isLoad = false;\n    this.isChildLoad = false;\n    // 瓦片的父级瓦片\n    this.parent = null;\n    // 瓦片的子级瓦片\n    this.children = [];\n    // 瓦片数据\n    this.data = null;\n    // 瓦片属性\n    this.properties = {};\n    // 瓦片序号\n    this.loadDataId = 0;\n    const {\n      x,\n      y,\n      z,\n      tileSize,\n      warp = true\n    } = options;\n    this.x = x;\n    this.y = y;\n    this.z = z;\n    this.warp = warp || true;\n    this.tileSize = tileSize;\n  }\n  // 是否正在请求瓦片\n  get isLoading() {\n    return this.loadStatus === LoadTileDataStatus.Loading;\n  }\n  // 是否瓦片请求成功\n  get isLoaded() {\n    return this.loadStatus === LoadTileDataStatus.Loaded;\n  }\n  // 是否瓦片请求失败\n  get isFailure() {\n    return this.loadStatus === LoadTileDataStatus.Failure;\n  }\n  setTileLayerLoaded() {\n    this.isLayerLoaded = true;\n  }\n  // 是否瓦片请求被取消\n  get isCancelled() {\n    return this.loadStatus === LoadTileDataStatus.Cancelled;\n  }\n  // 是否数据请求结束\n  get isDone() {\n    return [LoadTileDataStatus.Loaded, LoadTileDataStatus.Cancelled, LoadTileDataStatus.Failure].includes(this.loadStatus);\n  }\n  // 瓦片的经纬度边界\n  get bounds() {\n    return tileToBounds(this.x, this.y, this.z);\n  }\n  // 瓦片边界面\n  get bboxPolygon() {\n    const [minLng, minLat, maxLng, maxLat] = this.bounds;\n    const center = [(maxLng - minLng) / 2, (maxLat - minLat) / 2];\n    const polygon = bboxPolygon(this.bounds, {\n      properties: {\n        key: this.key,\n        id: this.key,\n        bbox: this.bounds,\n        center,\n        meta: `\n      ${this.key}\n      `\n        // ${this.bbox.slice(0, 2)}\n        // ${this.bbox.slice(2)}\n      }\n    });\n    return polygon;\n  }\n  // 瓦片的 key\n  get key() {\n    const key = `${this.x}_${this.y}_${this.z}`;\n    return key;\n  }\n  layerLoad() {\n    this.loadedLayers++;\n    this.emit(\"layerLoaded\");\n  }\n  // 请求瓦片数据\n  loadData(_0) {\n    return __async(this, arguments, function* ({\n      getData,\n      onLoad,\n      onError\n    }) {\n      this.loadDataId++;\n      const loadDataId = this.loadDataId;\n      if (this.isLoading) {\n        this.abortLoad();\n      }\n      this.abortController = new AbortController();\n      this.loadStatus = LoadTileDataStatus.Loading;\n      let tileData = null;\n      let error;\n      try {\n        const {\n          x,\n          y,\n          z,\n          bounds,\n          tileSize,\n          warp\n        } = this;\n        const {\n          warpX,\n          warpY\n        } = getTileWarpXY(x, y, z, warp);\n        const {\n          signal\n        } = this.abortController;\n        const params = {\n          x: warpX,\n          y: warpY,\n          z,\n          bounds,\n          tileSize,\n          signal,\n          warp\n        };\n        tileData = yield getData(params, this);\n      } catch (err) {\n        error = err;\n      }\n      if (loadDataId !== this.loadDataId) {\n        return;\n      }\n      if (this.isCancelled && !tileData) {\n        return;\n      }\n      if (error || !tileData) {\n        this.loadStatus = LoadTileDataStatus.Failure;\n        onError(error, this);\n        return;\n      }\n      this.loadStatus = LoadTileDataStatus.Loaded;\n      this.data = tileData;\n      onLoad(this);\n    });\n  }\n  // 重新请求瓦片数据\n  reloadData(params) {\n    if (this.isLoading) {\n      this.abortLoad();\n    }\n    this.loadData(params);\n  }\n  // 取消请求瓦片数据\n  abortLoad() {\n    if (this.isLoaded || this.isCancelled) {\n      return;\n    }\n    this.loadStatus = LoadTileDataStatus.Cancelled;\n    this.abortController.abort();\n    if (this.xhrCancel) {\n      this.xhrCancel();\n    }\n  }\n};\nexport { SourceTile };","map":{"version":3,"names":["__async","__this","__arguments","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","throw","x","done","then","apply","bboxPolygon","EventEmitter","LoadTileDataStatus","getTileWarpXY","tileToBounds","SourceTile","constructor","options","tileSize","isVisible","isCurrent","isVisibleChange","loadedLayers","isLayerLoaded","isLoad","isChildLoad","parent","children","data","properties","loadDataId","y","z","warp","isLoading","loadStatus","Loading","isLoaded","Loaded","isFailure","Failure","setTileLayerLoaded","isCancelled","Cancelled","isDone","includes","bounds","minLng","minLat","maxLng","maxLat","center","polygon","key","id","bbox","meta","layerLoad","emit","loadData","_0","arguments","getData","onLoad","onError","abortLoad","abortController","AbortController","tileData","error","warpX","warpY","signal","params","err","reloadData","abort","xhrCancel"],"sources":["/Users/bhanudahiya/Desktop/ledger-IQ/node_modules/@antv/l7-utils/es/tileset-manager/tile.js"],"sourcesContent":["var __async = (__this, __arguments, generator) => {\n  return new Promise((resolve, reject) => {\n    var fulfilled = (value) => {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var rejected = (value) => {\n      try {\n        step(generator.throw(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var step = (x) => x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);\n    step((generator = generator.apply(__this, __arguments)).next());\n  });\n};\n\n// src/tileset-manager/tile.ts\nimport bboxPolygon from \"@turf/bbox-polygon\";\nimport { EventEmitter } from \"eventemitter3\";\nimport { LoadTileDataStatus } from \"./types\";\nimport { getTileWarpXY, tileToBounds } from \"./utils/lonlat-tile\";\nvar SourceTile = class extends EventEmitter {\n  constructor(options) {\n    super();\n    // 瓦片大小\n    this.tileSize = 256;\n    // 是否可以见\n    this.isVisible = false;\n    // 是否是当前层级的瓦片\n    this.isCurrent = false;\n    // 是否可以见发生变化\n    this.isVisibleChange = false;\n    this.loadedLayers = 0;\n    this.isLayerLoaded = false;\n    this.isLoad = false;\n    this.isChildLoad = false;\n    // 瓦片的父级瓦片\n    this.parent = null;\n    // 瓦片的子级瓦片\n    this.children = [];\n    // 瓦片数据\n    this.data = null;\n    // 瓦片属性\n    this.properties = {};\n    // 瓦片序号\n    this.loadDataId = 0;\n    const { x, y, z, tileSize, warp = true } = options;\n    this.x = x;\n    this.y = y;\n    this.z = z;\n    this.warp = warp || true;\n    this.tileSize = tileSize;\n  }\n  // 是否正在请求瓦片\n  get isLoading() {\n    return this.loadStatus === LoadTileDataStatus.Loading;\n  }\n  // 是否瓦片请求成功\n  get isLoaded() {\n    return this.loadStatus === LoadTileDataStatus.Loaded;\n  }\n  // 是否瓦片请求失败\n  get isFailure() {\n    return this.loadStatus === LoadTileDataStatus.Failure;\n  }\n  setTileLayerLoaded() {\n    this.isLayerLoaded = true;\n  }\n  // 是否瓦片请求被取消\n  get isCancelled() {\n    return this.loadStatus === LoadTileDataStatus.Cancelled;\n  }\n  // 是否数据请求结束\n  get isDone() {\n    return [\n      LoadTileDataStatus.Loaded,\n      LoadTileDataStatus.Cancelled,\n      LoadTileDataStatus.Failure\n    ].includes(this.loadStatus);\n  }\n  // 瓦片的经纬度边界\n  get bounds() {\n    return tileToBounds(this.x, this.y, this.z);\n  }\n  // 瓦片边界面\n  get bboxPolygon() {\n    const [minLng, minLat, maxLng, maxLat] = this.bounds;\n    const center = [(maxLng - minLng) / 2, (maxLat - minLat) / 2];\n    const polygon = bboxPolygon(this.bounds, {\n      properties: {\n        key: this.key,\n        id: this.key,\n        bbox: this.bounds,\n        center,\n        meta: `\n      ${this.key}\n      `\n        // ${this.bbox.slice(0, 2)}\n        // ${this.bbox.slice(2)}\n      }\n    });\n    return polygon;\n  }\n  // 瓦片的 key\n  get key() {\n    const key = `${this.x}_${this.y}_${this.z}`;\n    return key;\n  }\n  layerLoad() {\n    this.loadedLayers++;\n    this.emit(\"layerLoaded\");\n  }\n  // 请求瓦片数据\n  loadData(_0) {\n    return __async(this, arguments, function* ({ getData, onLoad, onError }) {\n      this.loadDataId++;\n      const loadDataId = this.loadDataId;\n      if (this.isLoading) {\n        this.abortLoad();\n      }\n      this.abortController = new AbortController();\n      this.loadStatus = LoadTileDataStatus.Loading;\n      let tileData = null;\n      let error;\n      try {\n        const { x, y, z, bounds, tileSize, warp } = this;\n        const { warpX, warpY } = getTileWarpXY(x, y, z, warp);\n        const { signal } = this.abortController;\n        const params = { x: warpX, y: warpY, z, bounds, tileSize, signal, warp };\n        tileData = yield getData(params, this);\n      } catch (err) {\n        error = err;\n      }\n      if (loadDataId !== this.loadDataId) {\n        return;\n      }\n      if (this.isCancelled && !tileData) {\n        return;\n      }\n      if (error || !tileData) {\n        this.loadStatus = LoadTileDataStatus.Failure;\n        onError(error, this);\n        return;\n      }\n      this.loadStatus = LoadTileDataStatus.Loaded;\n      this.data = tileData;\n      onLoad(this);\n    });\n  }\n  // 重新请求瓦片数据\n  reloadData(params) {\n    if (this.isLoading) {\n      this.abortLoad();\n    }\n    this.loadData(params);\n  }\n  // 取消请求瓦片数据\n  abortLoad() {\n    if (this.isLoaded || this.isCancelled) {\n      return;\n    }\n    this.loadStatus = LoadTileDataStatus.Cancelled;\n    this.abortController.abort();\n    if (this.xhrCancel) {\n      this.xhrCancel();\n    }\n  }\n};\nexport {\n  SourceTile\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}