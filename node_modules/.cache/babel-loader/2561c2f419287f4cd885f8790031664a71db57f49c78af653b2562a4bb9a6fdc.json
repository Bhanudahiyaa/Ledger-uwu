{"ast":null,"code":"var __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\n\n// src/parser/raster-tile.ts\nimport { RasterTileType } from \"@antv/l7-core\";\nimport { getCustomData, getCustomImageData } from \"../utils/tile/getCustomData\";\nimport { defaultFormat, getTileBuffer, getTileImage } from \"../utils/tile/getRasterTile\";\nimport { extentToCoord } from \"../utils/util\";\nvar DEFAULT_CONFIG = {\n  tileSize: 256,\n  minZoom: 0,\n  maxZoom: Infinity,\n  zoomOffset: 0,\n  warp: true\n};\nvar rasterDataTypes = [RasterTileType.ARRAYBUFFER, RasterTileType.RGB];\nfunction isUrlError(url) {\n  if (Array.isArray(url) && url.length === 0) {\n    return true;\n  }\n  if (!Array.isArray(url) && typeof url !== \"string\") {\n    return true;\n  }\n  return false;\n}\nfunction rasterTile(data, cfg = {}) {\n  if (isUrlError(data)) {\n    throw new Error(\"tile server url is error\");\n  }\n  const {\n    extent = [Infinity, Infinity, -Infinity, -Infinity],\n    coordinates\n  } = cfg;\n  let tileDataType = (cfg == null ? void 0 : cfg.dataType) || RasterTileType.IMAGE;\n  if (tileDataType === RasterTileType.RGB) {\n    tileDataType = RasterTileType.ARRAYBUFFER;\n  }\n  const getTileData = (tileParams, tile) => {\n    switch (tileDataType) {\n      case RasterTileType.IMAGE:\n        return getTileImage(data, tileParams, tile, cfg);\n      case RasterTileType.CUSTOMIMAGE:\n      case RasterTileType.CUSTOMTERRAINRGB:\n        return getCustomImageData(\n        // 自定义地形请求方式数据\n        tile,\n        // @ts-ignore\n        cfg == null ? void 0 : cfg.getCustomData);\n      case RasterTileType.ARRAYBUFFER:\n        return getTileBuffer(data, tileParams, tile, cfg);\n      case RasterTileType.CUSTOMARRAYBUFFER:\n      case RasterTileType.CUSTOMRGB:\n        return getCustomData(tile,\n        // @ts-ignore\n        cfg == null ? void 0 : cfg.getCustomData, (cfg == null ? void 0 : cfg.format) || defaultFormat, cfg == null ? void 0 : cfg.operation);\n      default:\n        return getTileImage(data, tileParams, tile, cfg);\n    }\n  };\n  const tilesetOptions = __spreadProps(__spreadValues(__spreadValues({}, DEFAULT_CONFIG), cfg), {\n    getTileData\n  });\n  const rasterTileCoord = extentToCoord(coordinates, extent);\n  return {\n    data,\n    dataArray: [{\n      _id: 1,\n      coordinates: rasterTileCoord\n    }],\n    tilesetOptions,\n    isTile: true\n  };\n}\nexport { rasterTile as default, rasterDataTypes };","map":{"version":3,"names":["__defProp","Object","defineProperty","__defProps","defineProperties","__getOwnPropDescs","getOwnPropertyDescriptors","__getOwnPropSymbols","getOwnPropertySymbols","__hasOwnProp","prototype","hasOwnProperty","__propIsEnum","propertyIsEnumerable","__defNormalProp","obj","key","value","enumerable","configurable","writable","__spreadValues","a","b","prop","call","__spreadProps","RasterTileType","getCustomData","getCustomImageData","defaultFormat","getTileBuffer","getTileImage","extentToCoord","DEFAULT_CONFIG","tileSize","minZoom","maxZoom","Infinity","zoomOffset","warp","rasterDataTypes","ARRAYBUFFER","RGB","isUrlError","url","Array","isArray","length","rasterTile","data","cfg","Error","extent","coordinates","tileDataType","dataType","IMAGE","getTileData","tileParams","tile","CUSTOMIMAGE","CUSTOMTERRAINRGB","CUSTOMARRAYBUFFER","CUSTOMRGB","format","operation","tilesetOptions","rasterTileCoord","dataArray","_id","isTile","default"],"sources":["/Users/bhanudahiya/Desktop/ledger-IQ/node_modules/@antv/l7-source/es/parser/raster-tile.js"],"sourcesContent":["var __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\n\n// src/parser/raster-tile.ts\nimport { RasterTileType } from \"@antv/l7-core\";\nimport { getCustomData, getCustomImageData } from \"../utils/tile/getCustomData\";\nimport { defaultFormat, getTileBuffer, getTileImage } from \"../utils/tile/getRasterTile\";\nimport { extentToCoord } from \"../utils/util\";\nvar DEFAULT_CONFIG = {\n  tileSize: 256,\n  minZoom: 0,\n  maxZoom: Infinity,\n  zoomOffset: 0,\n  warp: true\n};\nvar rasterDataTypes = [RasterTileType.ARRAYBUFFER, RasterTileType.RGB];\nfunction isUrlError(url) {\n  if (Array.isArray(url) && url.length === 0) {\n    return true;\n  }\n  if (!Array.isArray(url) && typeof url !== \"string\") {\n    return true;\n  }\n  return false;\n}\nfunction rasterTile(data, cfg = {}) {\n  if (isUrlError(data)) {\n    throw new Error(\"tile server url is error\");\n  }\n  const { extent = [Infinity, Infinity, -Infinity, -Infinity], coordinates } = cfg;\n  let tileDataType = (cfg == null ? void 0 : cfg.dataType) || RasterTileType.IMAGE;\n  if (tileDataType === RasterTileType.RGB) {\n    tileDataType = RasterTileType.ARRAYBUFFER;\n  }\n  const getTileData = (tileParams, tile) => {\n    switch (tileDataType) {\n      case RasterTileType.IMAGE:\n        return getTileImage(data, tileParams, tile, cfg);\n      case RasterTileType.CUSTOMIMAGE:\n      case RasterTileType.CUSTOMTERRAINRGB:\n        return getCustomImageData(\n          // 自定义地形请求方式数据\n          tile,\n          // @ts-ignore\n          cfg == null ? void 0 : cfg.getCustomData\n        );\n      case RasterTileType.ARRAYBUFFER:\n        return getTileBuffer(data, tileParams, tile, cfg);\n      case RasterTileType.CUSTOMARRAYBUFFER:\n      case RasterTileType.CUSTOMRGB:\n        return getCustomData(\n          tile,\n          // @ts-ignore\n          cfg == null ? void 0 : cfg.getCustomData,\n          (cfg == null ? void 0 : cfg.format) || defaultFormat,\n          cfg == null ? void 0 : cfg.operation\n        );\n      default:\n        return getTileImage(data, tileParams, tile, cfg);\n    }\n  };\n  const tilesetOptions = __spreadProps(__spreadValues(__spreadValues({}, DEFAULT_CONFIG), cfg), { getTileData });\n  const rasterTileCoord = extentToCoord(coordinates, extent);\n  return {\n    data,\n    dataArray: [\n      {\n        _id: 1,\n        coordinates: rasterTileCoord\n      }\n    ],\n    tilesetOptions,\n    isTile: true\n  };\n}\nexport {\n  rasterTile as default,\n  rasterDataTypes\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}