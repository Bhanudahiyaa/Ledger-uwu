{"ast":null,"code":"import { lngLatToMeters } from '@antv/l7-utils';\nimport earcut from 'earcut';\nimport { vec3 } from 'gl-matrix';\nimport { getPolygonSurfaceIndices } from \"../utils\";\n/**\n * 拉伸多边形顶点，返回拉伸后的顶点信息\n * @param paths 路径数据组\n * @param extrude 是否拉伸\n */\nexport default function extrudePolygon(path) {\n  const p1 = path[0][0];\n  const p2 = path[0][path[0].length - 1];\n  if (p1[0] === p2[0] && p1[1] === p2[1]) {\n    path[0] = path[0].slice(0, path[0].length - 1);\n  }\n  const n = path[0].length;\n  const flattengeo = earcut.flatten(path);\n  const {\n    vertices,\n    dimensions\n  } = flattengeo;\n  const positions = [];\n  const indexArray = [];\n  // 设置顶部z值\n  for (let j = 0; j < vertices.length / dimensions; j++) {\n    if (dimensions === 2) {\n      positions.push(vertices[j * 2], vertices[j * 2 + 1], 1);\n    } else {\n      positions.push(vertices[j * 3], vertices[j * 3 + 1], 1);\n    }\n  }\n  const triangles = earcut(flattengeo.vertices, flattengeo.holes, flattengeo.dimensions);\n  indexArray.push(...triangles);\n  for (let i = 0; i < n; i++) {\n    const prePoint = flattengeo.vertices.slice(i * dimensions, (i + 1) * dimensions);\n    let nextPoint = flattengeo.vertices.slice((i + 1) * dimensions, (i + 2) * dimensions);\n    if (nextPoint.length === 0) {\n      nextPoint = flattengeo.vertices.slice(0, dimensions);\n    }\n    const indexOffset = positions.length / 3;\n    positions.push(prePoint[0], prePoint[1], 1, nextPoint[0], nextPoint[1], 1, prePoint[0], prePoint[1], 0, nextPoint[0], nextPoint[1], 0);\n    indexArray.push(...[0, 2, 1, 2, 3, 1].map(v => v + indexOffset));\n  }\n  return {\n    positions,\n    index: indexArray\n  };\n}\nexport function fillPolygon(points) {\n  const flattengeo = earcut.flatten(points);\n  const triangles = earcut(flattengeo.vertices, flattengeo.holes, flattengeo.dimensions);\n  return {\n    positions: flattengeo.vertices,\n    index: triangles\n  };\n}\nexport function extrude_PolygonNormal(path, needFlat = false // 是否需要转成平面坐标\n) {\n  const p1 = path[0][0];\n  const p2 = path[0][path[0].length - 1];\n  if (p1[0] === p2[0] && p1[1] === p2[1]) {\n    path[0] = path[0].slice(0, path[0].length - 1);\n  }\n  const n = path[0].length;\n  const flattengeo = earcut.flatten(path);\n  const {\n    vertices,\n    dimensions,\n    holes\n  } = flattengeo;\n  const positions = [];\n  const indexArray = [];\n  const normals = [];\n  // 设置顶部z值 position uv\n  for (let j = 0; j < vertices.length / dimensions; j++) {\n    positions.push(vertices[j * dimensions],\n    // x\n    vertices[j * dimensions + 1],\n    // y\n    1,\n    // z\n    -1,\n    // 顶部uv\n    -1 // 顶部uv\n    );\n    normals.push(0, 0, 1);\n  }\n  const indices = getPolygonSurfaceIndices(vertices, holes, dimensions, needFlat);\n  indexArray.push(...indices);\n\n  // 设置侧面\n  for (let i = 0; i < n; i++) {\n    const prePoint = flattengeo.vertices.slice(i * dimensions, (i + 1) * dimensions);\n    let nextPoint = flattengeo.vertices.slice((i + 1) * dimensions, (i + 2) * dimensions);\n    if (nextPoint.length === 0) {\n      nextPoint = flattengeo.vertices.slice(0, dimensions);\n    }\n    const indexOffset = positions.length / 5;\n    // 侧面四顶点\n    positions.push(prePoint[0], prePoint[1], 1, 0, 0, nextPoint[0], nextPoint[1], 1, 0.1,\n    // 侧面 低uv\n    0,\n    // 侧面低 uv\n    prePoint[0], prePoint[1], 0, 0, 0.8, nextPoint[0], nextPoint[1], 0, 0.1, 0.8);\n    const normal = computeVertexNormals([nextPoint[0], nextPoint[1], 1], [prePoint[0], prePoint[1], 0], [prePoint[0], prePoint[1], 1], needFlat);\n    normals.push(...normal, ...normal, ...normal, ...normal);\n    indexArray.push(...[1, 2, 0, 3, 2, 1].map(v => v + indexOffset));\n  }\n  return {\n    positions,\n    index: indexArray,\n    normals\n  };\n}\nfunction computeVertexNormals(p1, p2, p3, needFlat = false) {\n  const cb = vec3.create();\n  const ab = vec3.create();\n  const normal = vec3.create();\n  if (needFlat) {\n    p1 = lngLatToMeters(p1);\n    p2 = lngLatToMeters(p2);\n    p3 = lngLatToMeters(p3);\n  }\n  const pA = vec3.fromValues(...p1);\n  const pB = vec3.fromValues(...p2);\n  const pC = vec3.fromValues(...p3);\n  vec3.sub(cb, pC, pB);\n  vec3.sub(ab, pA, pB);\n  vec3.cross(normal, cb, ab);\n  const newNormal = vec3.create();\n  vec3.normalize(newNormal, normal);\n  return newNormal;\n}","map":{"version":3,"names":["lngLatToMeters","earcut","vec3","getPolygonSurfaceIndices","extrudePolygon","path","p1","p2","length","slice","n","flattengeo","flatten","vertices","dimensions","positions","indexArray","j","push","triangles","holes","i","prePoint","nextPoint","indexOffset","map","v","index","fillPolygon","points","extrude_PolygonNormal","needFlat","normals","indices","normal","computeVertexNormals","p3","cb","create","ab","pA","fromValues","pB","pC","sub","cross","newNormal","normalize"],"sources":["/Users/bhanudahiya/Desktop/ledger-IQ/node_modules/@antv/l7-layers/es/core/shape/extrude.js"],"sourcesContent":["import { lngLatToMeters } from '@antv/l7-utils';\nimport earcut from 'earcut';\nimport { vec3 } from 'gl-matrix';\nimport { getPolygonSurfaceIndices } from \"../utils\";\n/**\n * 拉伸多边形顶点，返回拉伸后的顶点信息\n * @param paths 路径数据组\n * @param extrude 是否拉伸\n */\nexport default function extrudePolygon(path) {\n  const p1 = path[0][0];\n  const p2 = path[0][path[0].length - 1];\n  if (p1[0] === p2[0] && p1[1] === p2[1]) {\n    path[0] = path[0].slice(0, path[0].length - 1);\n  }\n  const n = path[0].length;\n  const flattengeo = earcut.flatten(path);\n  const {\n    vertices,\n    dimensions\n  } = flattengeo;\n  const positions = [];\n  const indexArray = [];\n  // 设置顶部z值\n  for (let j = 0; j < vertices.length / dimensions; j++) {\n    if (dimensions === 2) {\n      positions.push(vertices[j * 2], vertices[j * 2 + 1], 1);\n    } else {\n      positions.push(vertices[j * 3], vertices[j * 3 + 1], 1);\n    }\n  }\n  const triangles = earcut(flattengeo.vertices, flattengeo.holes, flattengeo.dimensions);\n  indexArray.push(...triangles);\n  for (let i = 0; i < n; i++) {\n    const prePoint = flattengeo.vertices.slice(i * dimensions, (i + 1) * dimensions);\n    let nextPoint = flattengeo.vertices.slice((i + 1) * dimensions, (i + 2) * dimensions);\n    if (nextPoint.length === 0) {\n      nextPoint = flattengeo.vertices.slice(0, dimensions);\n    }\n    const indexOffset = positions.length / 3;\n    positions.push(prePoint[0], prePoint[1], 1, nextPoint[0], nextPoint[1], 1, prePoint[0], prePoint[1], 0, nextPoint[0], nextPoint[1], 0);\n    indexArray.push(...[0, 2, 1, 2, 3, 1].map(v => v + indexOffset));\n  }\n  return {\n    positions,\n    index: indexArray\n  };\n}\nexport function fillPolygon(points) {\n  const flattengeo = earcut.flatten(points);\n  const triangles = earcut(flattengeo.vertices, flattengeo.holes, flattengeo.dimensions);\n  return {\n    positions: flattengeo.vertices,\n    index: triangles\n  };\n}\nexport function extrude_PolygonNormal(path, needFlat = false // 是否需要转成平面坐标\n) {\n  const p1 = path[0][0];\n  const p2 = path[0][path[0].length - 1];\n  if (p1[0] === p2[0] && p1[1] === p2[1]) {\n    path[0] = path[0].slice(0, path[0].length - 1);\n  }\n  const n = path[0].length;\n  const flattengeo = earcut.flatten(path);\n  const {\n    vertices,\n    dimensions,\n    holes\n  } = flattengeo;\n  const positions = [];\n  const indexArray = [];\n  const normals = [];\n  // 设置顶部z值 position uv\n  for (let j = 0; j < vertices.length / dimensions; j++) {\n    positions.push(vertices[j * dimensions],\n    // x\n    vertices[j * dimensions + 1],\n    // y\n    1,\n    // z\n    -1,\n    // 顶部uv\n    -1 // 顶部uv\n    );\n    normals.push(0, 0, 1);\n  }\n  const indices = getPolygonSurfaceIndices(vertices, holes, dimensions, needFlat);\n  indexArray.push(...indices);\n\n  // 设置侧面\n  for (let i = 0; i < n; i++) {\n    const prePoint = flattengeo.vertices.slice(i * dimensions, (i + 1) * dimensions);\n    let nextPoint = flattengeo.vertices.slice((i + 1) * dimensions, (i + 2) * dimensions);\n    if (nextPoint.length === 0) {\n      nextPoint = flattengeo.vertices.slice(0, dimensions);\n    }\n    const indexOffset = positions.length / 5;\n    // 侧面四顶点\n    positions.push(prePoint[0], prePoint[1], 1, 0, 0, nextPoint[0], nextPoint[1], 1, 0.1,\n    // 侧面 低uv\n    0,\n    // 侧面低 uv\n    prePoint[0], prePoint[1], 0, 0, 0.8, nextPoint[0], nextPoint[1], 0, 0.1, 0.8);\n    const normal = computeVertexNormals([nextPoint[0], nextPoint[1], 1], [prePoint[0], prePoint[1], 0], [prePoint[0], prePoint[1], 1], needFlat);\n    normals.push(...normal, ...normal, ...normal, ...normal);\n    indexArray.push(...[1, 2, 0, 3, 2, 1].map(v => v + indexOffset));\n  }\n  return {\n    positions,\n    index: indexArray,\n    normals\n  };\n}\nfunction computeVertexNormals(p1, p2, p3, needFlat = false) {\n  const cb = vec3.create();\n  const ab = vec3.create();\n  const normal = vec3.create();\n  if (needFlat) {\n    p1 = lngLatToMeters(p1);\n    p2 = lngLatToMeters(p2);\n    p3 = lngLatToMeters(p3);\n  }\n  const pA = vec3.fromValues(...p1);\n  const pB = vec3.fromValues(...p2);\n  const pC = vec3.fromValues(...p3);\n  vec3.sub(cb, pC, pB);\n  vec3.sub(ab, pA, pB);\n  vec3.cross(normal, cb, ab);\n  const newNormal = vec3.create();\n  vec3.normalize(newNormal, normal);\n  return newNormal;\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}