{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport React, { useState } from 'react';\nimport { Tree, Empty, Popover } from 'antd';\nimport { FolderFilled, FolderOpenFilled } from '@ant-design/icons';\nimport { Addon } from '@antv/x6';\nimport { getNodeReactComponent, useXFlowApp, XFlowConstants } from '@antv/xflow-core';\nimport { XFlowNode } from '../canvas-dag-extension/x6-extension/node';\nconst {\n  DirectoryTree,\n  TreeNode\n} = Tree;\nconst FolderIcon = ({\n  expanded\n}) => {\n  return expanded ? React.createElement(FolderOpenFilled, null) : React.createElement(FolderFilled, null);\n};\nexport const defaultNodeFactory = args => {\n  return new XFlowNode(args);\n};\nexport const renderNode = props => {\n  const {\n    nodeConfig,\n    onMouseDown,\n    graphConfig,\n    modelService,\n    commandService\n  } = props;\n  if (!graphConfig) {\n    return React.createElement(\"div\", null);\n  }\n  if (nodeConfig.renderComponent) {\n    return React.createElement(\"div\", {\n      onMouseDown: onMouseDown\n    }, React.createElement(nodeConfig.renderComponent, {\n      data: nodeConfig,\n      isNodeTreePanel: true\n    }));\n  }\n  const renderKey = graphConfig.nodeTypeParser(nodeConfig) || XFlowConstants.XFLOW_DEFAULT_NODE;\n  const reactComponent = graphConfig.nodeRender.get(renderKey);\n  return React.createElement(\"div\", {\n    onMouseDown: onMouseDown\n  }, React.createElement(reactComponent, {\n    commandService,\n    modelService,\n    data: nodeConfig,\n    isNodeTreePanel: true\n  }));\n};\nexport const NodeTitle = props => {\n  const [isVisible, setVisible] = useState(false);\n  const [appContainer, setAppContainer] = useState();\n  const {\n    getGraphConfig\n  } = useXFlowApp();\n  React.useEffect(() => {\n    getGraphConfig().then(graphConfig => {\n      setAppContainer(graphConfig.appContainer);\n    });\n  });\n  const {\n    prefixClz,\n    graphConfig,\n    commandService,\n    modelService,\n    popoverContent,\n    onMouseDown,\n    item\n  } = props;\n  return React.createElement(React.Fragment, null, popoverContent && React.createElement(Popover, {\n    placement: \"right\",\n    destroyTooltipOnHide: true,\n    content: popoverContent,\n    visible: isVisible,\n    onVisibleChange: val => {\n      setVisible(val);\n    },\n    getPopupContainer: () => appContainer || document.body\n  }, React.createElement(\"div\", {\n    className: `${prefixClz}-node-wrapper`,\n    onMouseEnter: () => {\n      setVisible(true);\n    }\n  }, renderNode({\n    graphConfig,\n    commandService: commandService,\n    onMouseDown,\n    modelService,\n    nodeConfig: item\n  }))), !popoverContent && React.createElement(\"div\", {\n    className: `${prefixClz}-node-wrapper`,\n    onMouseEnter: () => {\n      setVisible(true);\n    }\n  }, renderNode({\n    graphConfig,\n    commandService: commandService,\n    onMouseDown,\n    modelService,\n    nodeConfig: item\n  })));\n};\nexport const NodePanelBody = props => {\n  const {\n    x6NodeFactory,\n    dndOptions,\n    onNodeDrop,\n    state,\n    onFolderExpand,\n    prefixClz\n  } = props;\n  const {\n    graphProvider,\n    modelService,\n    commandService\n  } = useXFlowApp();\n  const [graphConfig, setConfig] = React.useState();\n  const [dnd, setDnd] = React.useState();\n  const [graph, setGraph] = React.useState();\n  React.useEffect(() => {\n    graphProvider.getGraphInstance().then(x6Graph => {\n      setGraph(x6Graph);\n    });\n  });\n  React.useEffect(() => {\n    graphProvider.getGraphOptions().then(x6GraphConfig => {\n      setConfig(x6GraphConfig);\n    });\n    if (!graph) {\n      return;\n    }\n    const dndInstance = new Addon.Dnd(Object.assign(Object.assign({\n      scaled: false,\n      animation: false\n    }, dndOptions), {\n      target: graph,\n      /** 这里考虑到需要新增群组的需求，不使用x6的getDropNod方法\n       * 在validateNode时调用command添加\n       */\n      validateNode: droppingNode => __awaiter(void 0, void 0, void 0, function* () {\n        const nodeConfig = Object.assign(Object.assign({}, droppingNode.getData()), droppingNode.getPosition());\n        if (onNodeDrop) {\n          yield onNodeDrop(nodeConfig, commandService, modelService);\n        } else {\n          console.error('onNodeDrop method is required in NodeTree Panel');\n        }\n        return false;\n      })\n    }));\n    setDnd(dndInstance);\n  }, [commandService, dndOptions, graph, graphProvider, modelService, onNodeDrop]);\n  const onMouseDown = React.useCallback(nodeConfig => e => {\n    if (!graph || !dnd || !graphConfig) {\n      return;\n    }\n    const renderKey = graphConfig.nodeTypeParser(nodeConfig);\n    const reactComponent = nodeConfig.renderComponent ? nodeConfig.renderComponent : graphConfig.nodeRender.get(renderKey);\n    const wrappedComponent = getNodeReactComponent(reactComponent, commandService, modelService);\n    const nodeData = {\n      data: nodeConfig,\n      width: nodeConfig.width || 180,\n      height: nodeConfig.height || 40,\n      view: graphConfig.graphId,\n      component: wrappedComponent\n    };\n    const x6Node = x6NodeFactory ? x6NodeFactory(nodeData) : defaultNodeFactory(nodeData);\n    dnd.start(x6Node, e.nativeEvent);\n  }, [commandService, dnd, graph, graphConfig, modelService, x6NodeFactory]);\n  const renderTree = React.useCallback((treeList = []) => {\n    return treeList.map(item => {\n      const {\n        isDirectory,\n        children,\n        popoverContent\n      } = item;\n      if (isDirectory) {\n        return React.createElement(TreeNode, {\n          icon: FolderIcon,\n          key: item.id,\n          title: item.label,\n          className: `${prefixClz}-tree-folder`\n        }, renderTree(children));\n      }\n      return React.createElement(TreeNode, {\n        isLeaf: true,\n        key: item.id,\n        className: `${prefixClz}-tree-leaf`,\n        icon: React.createElement(\"span\", null),\n        title: React.createElement(NodeTitle, {\n          item: item,\n          onMouseDown: onMouseDown(item),\n          popoverContent: popoverContent,\n          prefixClz: prefixClz,\n          modelService: modelService,\n          commandService: commandService,\n          graphConfig: graphConfig\n        })\n      });\n    });\n  }, [commandService, graphConfig, modelService, onMouseDown, prefixClz]);\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: `${prefixClz}-body`,\n    style: props.style\n  }, !state.keyword && React.createElement(DirectoryTree, {\n    showIcon: true,\n    selectable: false,\n    autoExpandParent: false,\n    onExpand: onFolderExpand,\n    expandedKeys: state.expandedKeys,\n    className: `${prefixClz}-tree`\n  }, renderTree(state.treeData)), state.searchList.length > 0 && React.createElement(\"ul\", {\n    className: `${prefixClz}-body-list`\n  }, state.searchList.map(treeNode => React.createElement(\"li\", {\n    key: treeNode.id,\n    className: `${prefixClz}-body-list-item`\n  }, React.createElement(NodeTitle, {\n    item: treeNode,\n    onMouseDown: onMouseDown(treeNode),\n    popoverContent: treeNode.popoverContent,\n    prefixClz: prefixClz,\n    modelService: modelService,\n    commandService: commandService,\n    graphConfig: graphConfig\n  })))), state.keyword && state.searchList.length === 0 && React.createElement(Empty, {\n    style: {\n      marginTop: '48px'\n    }\n  })));\n};","map":{"version":3,"names":["React","useState","Tree","Empty","Popover","FolderFilled","FolderOpenFilled","Addon","getNodeReactComponent","useXFlowApp","XFlowConstants","XFlowNode","DirectoryTree","TreeNode","FolderIcon","expanded","createElement","defaultNodeFactory","args","renderNode","props","nodeConfig","onMouseDown","graphConfig","modelService","commandService","renderComponent","data","isNodeTreePanel","renderKey","nodeTypeParser","XFLOW_DEFAULT_NODE","reactComponent","nodeRender","get","NodeTitle","isVisible","setVisible","appContainer","setAppContainer","getGraphConfig","useEffect","then","prefixClz","popoverContent","item","Fragment","placement","destroyTooltipOnHide","content","visible","onVisibleChange","val","getPopupContainer","document","body","className","onMouseEnter","NodePanelBody","x6NodeFactory","dndOptions","onNodeDrop","state","onFolderExpand","graphProvider","setConfig","dnd","setDnd","graph","setGraph","getGraphInstance","x6Graph","getGraphOptions","x6GraphConfig","dndInstance","Dnd","Object","assign","scaled","animation","target","validateNode","droppingNode","__awaiter","getData","getPosition","console","error","useCallback","e","wrappedComponent","nodeData","width","height","view","graphId","component","x6Node","start","nativeEvent","renderTree","treeList","map","isDirectory","children","icon","key","id","title","label","isLeaf","style","keyword","showIcon","selectable","autoExpandParent","onExpand","expandedKeys","treeData","searchList","length","treeNode","marginTop"],"sources":["../../src/canvas-node-tree-panel/panel-body.tsx"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}