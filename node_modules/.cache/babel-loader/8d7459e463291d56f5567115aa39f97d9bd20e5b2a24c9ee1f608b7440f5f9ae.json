{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { registerNode, BaseGlobal as Global, Util } from '@antv/g6-core';\nimport { deepMix } from '@antv/util';\nvar defaultSubjectColors = Util.defaultSubjectColors;\nvar FAN_NAME_PREFIX = 'fan-shape-';\n/**\n * calculate the total value and format single value for each fan\n * @param donutAttrs\n * @param donutColorMap\n * @returns\n */\nvar getDonutConfig = function getDonutConfig(donutAttrs, donutColorMap) {\n  var totalValue = 0;\n  var configs = [];\n  Object.keys(donutAttrs).forEach(function (name) {\n    var value = +donutAttrs[name];\n    if (isNaN(value)) return;\n    configs.push({\n      key: name,\n      value: value,\n      color: donutColorMap[name]\n    });\n    totalValue += value;\n  });\n  return {\n    totalValue: totalValue,\n    configs: configs\n  };\n};\n/**\n * calculate the lineWidth and radius for fan shapes according to the keyShape's radius\n * @param keyShape\n * @returns\n */\nvar getDonutSize = function getDonutSize(keyShape) {\n  var keyShapeR = keyShape.attr('r');\n  var innerR = 0.6 * keyShapeR; // 甜甜圈的内环半径\n  var arcR = (keyShapeR + innerR) / 2; // 内环半径与外环半径的平均值\n  var lineWidth = keyShapeR - innerR;\n  return {\n    lineWidth: lineWidth,\n    arcR: arcR\n  };\n};\n/**\n * draws one fan shape and returns the next position and angle\n * @param group\n * @param fanConfig\n * @returns\n */\nvar drawFan = function drawFan(group, fanConfig) {\n  var arcR = fanConfig.arcR,\n    arcBegin = fanConfig.arcBegin,\n    beginAngle = fanConfig.beginAngle,\n    config = fanConfig.config,\n    fanIndex = fanConfig.fanIndex,\n    lineWidth = fanConfig.lineWidth,\n    totalValue = fanConfig.totalValue,\n    _a = fanConfig.drawWhole,\n    drawWhole = _a === void 0 ? false : _a,\n    _b = fanConfig.updateShape,\n    updateShape = _b === void 0 ? undefined : _b;\n  var percent = config.value / totalValue;\n  if (percent < 0.001) {\n    // too small to add a fan\n    return {\n      beginAngle: beginAngle,\n      arcBegin: arcBegin,\n      shape: undefined,\n      shouldEnd: false\n    };\n  }\n  var arcEnd, endAngle, isBig;\n  // draw a path represents the whole circle, or the percentage is close to 1\n  if (drawWhole || percent > 0.999) {\n    arcEnd = [arcR, 0.0001]; // [arcR * cos(2 * PI), -arcR * sin(2 * PI)]\n    isBig = 1;\n  } else {\n    var angle = percent * Math.PI * 2;\n    endAngle = beginAngle + angle;\n    arcEnd = [arcR * Math.cos(endAngle), -arcR * Math.sin(endAngle)];\n    isBig = angle > Math.PI ? 1 : 0;\n  }\n  var style = {\n    path: [['M', arcBegin[0], arcBegin[1]], ['A', arcR, arcR, 0, isBig, 0, arcEnd[0], arcEnd[1]]],\n    stroke: config.color || (updateShape === null || updateShape === void 0 ? void 0 : updateShape.attr('stroke')) || defaultSubjectColors[fanIndex % defaultSubjectColors.length],\n    lineWidth: lineWidth\n  };\n  if (updateShape) {\n    // update\n    updateShape.attr(style);\n  } else {\n    // draw\n    group['shapeMap'][\"\".concat(FAN_NAME_PREFIX).concat(fanIndex)] = group.addShape('path', {\n      attrs: style,\n      name: \"\".concat(FAN_NAME_PREFIX).concat(fanIndex),\n      draggable: true\n    });\n  }\n  return {\n    beginAngle: endAngle,\n    arcBegin: arcEnd,\n    shape: group['shapeMap'][\"\".concat(FAN_NAME_PREFIX).concat(fanIndex)],\n    shouldEnd: drawWhole || percent > 0.999\n  };\n};\n/**\n * draws the fan shapes\n * @param cfg\n * @param group\n * @param keyShape\n * @returns\n */\nvar drawFans = function drawFans(cfg, group, keyShape) {\n  var _a = cfg.donutAttrs,\n    donutAttrs = _a === void 0 ? {} : _a,\n    _b = cfg.donutColorMap,\n    donutColorMap = _b === void 0 ? {} : _b;\n  var attrNum = Object.keys(donutAttrs).length;\n  if (donutAttrs && attrNum > 1) {\n    var _c = getDonutConfig(donutAttrs, donutColorMap),\n      configs = _c.configs,\n      totalValue = _c.totalValue;\n    if (totalValue) {\n      var _d = getDonutSize(keyShape),\n        lineWidth = _d.lineWidth,\n        arcR = _d.arcR;\n      var arcBegin = [arcR, 0];\n      var beginAngle = 0;\n      if (attrNum === 1) {\n        // draw a path represents a circle\n        drawFan(group, {\n          arcR: arcR,\n          arcBegin: arcBegin,\n          beginAngle: beginAngle,\n          config: configs[0],\n          fanIndex: 0,\n          lineWidth: lineWidth,\n          totalValue: totalValue,\n          drawWhole: true\n        });\n        return;\n      }\n      for (var i = 0; i < configs.length; i++) {\n        var result = drawFan(group, {\n          arcR: arcR,\n          arcBegin: arcBegin,\n          beginAngle: beginAngle,\n          config: configs[i],\n          fanIndex: i,\n          lineWidth: lineWidth,\n          totalValue: totalValue\n        });\n        if (result.shouldEnd) return;\n        arcBegin = result.arcBegin;\n        beginAngle = result.beginAngle;\n      }\n    }\n  }\n};\n/**\n * utilizes the existing fan shapes, update them with new configs\n * removes the redundent fan shapes\n * or adds more fan shapes\n * @param cfg\n * @param item\n * @param keyShape\n */\nvar updateFans = function updateFans(cfg, item, keyShape) {\n  var donutAttrs = cfg.donutAttrs,\n    _a = cfg.donutColorMap,\n    donutColorMap = _a === void 0 ? {} : _a;\n  var visitMap = {};\n  var group = item.getContainer();\n  if (donutAttrs) {\n    var _b = getDonutConfig(donutAttrs, donutColorMap),\n      configs = _b.configs,\n      totalValue = _b.totalValue;\n    if (totalValue) {\n      var _c = getDonutSize(keyShape),\n        lineWidth = _c.lineWidth,\n        arcR = _c.arcR;\n      var arcBegin = [arcR, 0];\n      var beginAngle = 0;\n      for (var i = 0; i < configs.length; i++) {\n        var shapeName = \"\".concat(FAN_NAME_PREFIX).concat(i);\n        var result = drawFan(group, {\n          arcR: arcR,\n          arcBegin: arcBegin,\n          beginAngle: beginAngle,\n          config: configs[i],\n          fanIndex: i,\n          lineWidth: lineWidth,\n          totalValue: totalValue,\n          drawWhole: configs.length === 1,\n          updateShape: group['shapeMap'][shapeName]\n        });\n        if (result.shape) visitMap[shapeName] = true;\n        if (result.shouldEnd) break;\n        arcBegin = result.arcBegin;\n        beginAngle = result.beginAngle;\n      }\n    }\n  }\n  // remove the old shapes which are not visited, including the situation taht donutAttrs is empty\n  var fanKeys = Object.keys(group['shapeMap']).filter(function (key) {\n    return key.includes(FAN_NAME_PREFIX);\n  });\n  fanKeys.forEach(function (key) {\n    if (!visitMap[key]) {\n      group['shapeMap'][key].remove(true);\n      delete group['shapeMap'][key];\n    }\n  });\n};\n// 饼图节点\nregisterNode('donut', {\n  // 自定义节点时的配置\n  options: {\n    size: Global.defaultNode.size,\n    style: {\n      x: 0,\n      y: 0,\n      stroke: Global.defaultNode.style.stroke,\n      fill: Global.defaultNode.style.fill,\n      lineWidth: Global.defaultNode.style.lineWidth\n    },\n    labelCfg: {\n      style: {\n        fill: Global.nodeLabel.style.fill,\n        fontSize: Global.nodeLabel.style.fontSize,\n        fontFamily: Global.windowFontFamily\n      }\n    },\n    // 节点上左右上下四个方向上的链接circle配置\n    linkPoints: {\n      top: false,\n      right: false,\n      bottom: false,\n      left: false,\n      // circle的大小\n      size: Global.defaultNode.linkPoints.size,\n      lineWidth: Global.defaultNode.linkPoints.lineWidth,\n      fill: Global.defaultNode.linkPoints.fill,\n      stroke: Global.defaultNode.linkPoints.stroke\n    },\n    // 节点中icon配置\n    icon: {\n      // 是否显示icon，值为 false 则不渲染icon\n      show: false,\n      // icon的地址，字符串类型\n      img: 'https://gw.alipayobjects.com/zos/bmw-prod/5d015065-8505-4e7a-baec-976f81e3c41d.svg',\n      width: 20,\n      height: 20\n    },\n    stateStyles: __assign({}, Global.nodeStateStyles)\n  },\n  shapeType: 'circle',\n  // 文本位置\n  labelPosition: 'center',\n  drawShape: function drawShape(cfg, group) {\n    var _a = (this.mergeStyle || this.getOptions(cfg)).icon,\n      defaultIcon = _a === void 0 ? {} : _a;\n    var style = this.getShapeStyle(cfg);\n    var icon = deepMix({}, defaultIcon, cfg.icon);\n    var keyShape = group.addShape('circle', {\n      attrs: style,\n      className: \"\".concat(this.type, \"-keyShape\"),\n      draggable: true,\n      name: \"\".concat(this.type, \"-keyShape\")\n    });\n    group['shapeMap'][\"\".concat(this.type, \"-keyShape\")] = keyShape;\n    var width = icon.width,\n      height = icon.height,\n      show = icon.show,\n      text = icon.text;\n    if (show) {\n      if (text) {\n        group['shapeMap'][\"\".concat(this.type, \"-icon\")] = group.addShape('text', {\n          attrs: __assign({\n            x: 0,\n            y: 0,\n            fontSize: 12,\n            fill: '#000',\n            stroke: '#000',\n            textBaseline: 'middle',\n            textAlign: 'center'\n          }, icon),\n          className: \"\".concat(this.type, \"-icon\"),\n          name: \"\".concat(this.type, \"-icon\"),\n          draggable: true\n        });\n      } else {\n        group['shapeMap'][\"\".concat(this.type, \"-icon\")] = group.addShape('image', {\n          attrs: __assign({\n            x: -width / 2,\n            y: -height / 2\n          }, icon),\n          className: \"\".concat(this.type, \"-icon\"),\n          name: \"\".concat(this.type, \"-icon\"),\n          draggable: true\n        });\n      }\n    }\n    // draw the fan shapes\n    drawFans(cfg, group, keyShape);\n    this.drawLinkPoints(cfg, group);\n    return keyShape;\n  },\n  updateShape: function updateShape(cfg, item, keyShapeStyle, hasIcon, updateType) {\n    // here cfg is merged configure including old model and new configs\n    var keyShape = item.get('keyShape');\n    keyShape.attr(__assign({}, keyShapeStyle));\n    updateFans(cfg, item, keyShape);\n    if (!undefined || (updateType === null || updateType === void 0 ? void 0 : updateType.includes('label'))) {\n      this.updateLabel(cfg, item, updateType);\n    }\n    if (hasIcon) {\n      this.updateIcon(cfg, item);\n    }\n  }\n}, 'circle');","map":{"version":3,"names":["__assign","registerNode","BaseGlobal","Global","Util","deepMix","defaultSubjectColors","FAN_NAME_PREFIX","getDonutConfig","donutAttrs","donutColorMap","totalValue","configs","Object","keys","forEach","name","value","isNaN","push","key","color","getDonutSize","keyShape","keyShapeR","attr","innerR","arcR","lineWidth","drawFan","group","fanConfig","arcBegin","beginAngle","config","fanIndex","_a","drawWhole","_b","updateShape","undefined","percent","shape","shouldEnd","arcEnd","endAngle","isBig","angle","Math","PI","cos","sin","style","path","stroke","length","concat","addShape","attrs","draggable","drawFans","cfg","attrNum","_c","_d","i","result","updateFans","item","visitMap","getContainer","shapeName","fanKeys","filter","includes","remove","options","size","defaultNode","x","y","fill","labelCfg","nodeLabel","fontSize","fontFamily","windowFontFamily","linkPoints","top","right","bottom","left","icon","show","img","width","height","stateStyles","nodeStateStyles","shapeType","labelPosition","drawShape","mergeStyle","getOptions","defaultIcon","getShapeStyle","className","type","text","textBaseline","textAlign","drawLinkPoints","keyShapeStyle","hasIcon","updateType","get","updateLabel","updateIcon"],"sources":["/Users/bhanudahiya/Desktop/ledger-IQ/node_modules/@antv/g6-element/es/nodes/donut.js"],"sourcesContent":["import { __assign } from \"tslib\";\nimport { registerNode, BaseGlobal as Global, Util } from '@antv/g6-core';\nimport { deepMix } from '@antv/util';\nvar defaultSubjectColors = Util.defaultSubjectColors;\nvar FAN_NAME_PREFIX = 'fan-shape-';\n/**\n * calculate the total value and format single value for each fan\n * @param donutAttrs\n * @param donutColorMap\n * @returns\n */\nvar getDonutConfig = function getDonutConfig(donutAttrs, donutColorMap) {\n  var totalValue = 0;\n  var configs = [];\n  Object.keys(donutAttrs).forEach(function (name) {\n    var value = +donutAttrs[name];\n    if (isNaN(value)) return;\n    configs.push({\n      key: name,\n      value: value,\n      color: donutColorMap[name]\n    });\n    totalValue += value;\n  });\n  return {\n    totalValue: totalValue,\n    configs: configs\n  };\n};\n/**\n * calculate the lineWidth and radius for fan shapes according to the keyShape's radius\n * @param keyShape\n * @returns\n */\nvar getDonutSize = function getDonutSize(keyShape) {\n  var keyShapeR = keyShape.attr('r');\n  var innerR = 0.6 * keyShapeR; // 甜甜圈的内环半径\n  var arcR = (keyShapeR + innerR) / 2; // 内环半径与外环半径的平均值\n  var lineWidth = keyShapeR - innerR;\n  return {\n    lineWidth: lineWidth,\n    arcR: arcR\n  };\n};\n/**\n * draws one fan shape and returns the next position and angle\n * @param group\n * @param fanConfig\n * @returns\n */\nvar drawFan = function drawFan(group, fanConfig) {\n  var arcR = fanConfig.arcR,\n    arcBegin = fanConfig.arcBegin,\n    beginAngle = fanConfig.beginAngle,\n    config = fanConfig.config,\n    fanIndex = fanConfig.fanIndex,\n    lineWidth = fanConfig.lineWidth,\n    totalValue = fanConfig.totalValue,\n    _a = fanConfig.drawWhole,\n    drawWhole = _a === void 0 ? false : _a,\n    _b = fanConfig.updateShape,\n    updateShape = _b === void 0 ? undefined : _b;\n  var percent = config.value / totalValue;\n  if (percent < 0.001) {\n    // too small to add a fan\n    return {\n      beginAngle: beginAngle,\n      arcBegin: arcBegin,\n      shape: undefined,\n      shouldEnd: false\n    };\n  }\n  var arcEnd, endAngle, isBig;\n  // draw a path represents the whole circle, or the percentage is close to 1\n  if (drawWhole || percent > 0.999) {\n    arcEnd = [arcR, 0.0001]; // [arcR * cos(2 * PI), -arcR * sin(2 * PI)]\n    isBig = 1;\n  } else {\n    var angle = percent * Math.PI * 2;\n    endAngle = beginAngle + angle;\n    arcEnd = [arcR * Math.cos(endAngle), -arcR * Math.sin(endAngle)];\n    isBig = angle > Math.PI ? 1 : 0;\n  }\n  var style = {\n    path: [['M', arcBegin[0], arcBegin[1]], ['A', arcR, arcR, 0, isBig, 0, arcEnd[0], arcEnd[1]]],\n    stroke: config.color || (updateShape === null || updateShape === void 0 ? void 0 : updateShape.attr('stroke')) || defaultSubjectColors[fanIndex % defaultSubjectColors.length],\n    lineWidth: lineWidth\n  };\n  if (updateShape) {\n    // update\n    updateShape.attr(style);\n  } else {\n    // draw\n    group['shapeMap'][\"\".concat(FAN_NAME_PREFIX).concat(fanIndex)] = group.addShape('path', {\n      attrs: style,\n      name: \"\".concat(FAN_NAME_PREFIX).concat(fanIndex),\n      draggable: true\n    });\n  }\n  return {\n    beginAngle: endAngle,\n    arcBegin: arcEnd,\n    shape: group['shapeMap'][\"\".concat(FAN_NAME_PREFIX).concat(fanIndex)],\n    shouldEnd: drawWhole || percent > 0.999\n  };\n};\n/**\n * draws the fan shapes\n * @param cfg\n * @param group\n * @param keyShape\n * @returns\n */\nvar drawFans = function drawFans(cfg, group, keyShape) {\n  var _a = cfg.donutAttrs,\n    donutAttrs = _a === void 0 ? {} : _a,\n    _b = cfg.donutColorMap,\n    donutColorMap = _b === void 0 ? {} : _b;\n  var attrNum = Object.keys(donutAttrs).length;\n  if (donutAttrs && attrNum > 1) {\n    var _c = getDonutConfig(donutAttrs, donutColorMap),\n      configs = _c.configs,\n      totalValue = _c.totalValue;\n    if (totalValue) {\n      var _d = getDonutSize(keyShape),\n        lineWidth = _d.lineWidth,\n        arcR = _d.arcR;\n      var arcBegin = [arcR, 0];\n      var beginAngle = 0;\n      if (attrNum === 1) {\n        // draw a path represents a circle\n        drawFan(group, {\n          arcR: arcR,\n          arcBegin: arcBegin,\n          beginAngle: beginAngle,\n          config: configs[0],\n          fanIndex: 0,\n          lineWidth: lineWidth,\n          totalValue: totalValue,\n          drawWhole: true\n        });\n        return;\n      }\n      for (var i = 0; i < configs.length; i++) {\n        var result = drawFan(group, {\n          arcR: arcR,\n          arcBegin: arcBegin,\n          beginAngle: beginAngle,\n          config: configs[i],\n          fanIndex: i,\n          lineWidth: lineWidth,\n          totalValue: totalValue\n        });\n        if (result.shouldEnd) return;\n        arcBegin = result.arcBegin;\n        beginAngle = result.beginAngle;\n      }\n    }\n  }\n};\n/**\n * utilizes the existing fan shapes, update them with new configs\n * removes the redundent fan shapes\n * or adds more fan shapes\n * @param cfg\n * @param item\n * @param keyShape\n */\nvar updateFans = function updateFans(cfg, item, keyShape) {\n  var donutAttrs = cfg.donutAttrs,\n    _a = cfg.donutColorMap,\n    donutColorMap = _a === void 0 ? {} : _a;\n  var visitMap = {};\n  var group = item.getContainer();\n  if (donutAttrs) {\n    var _b = getDonutConfig(donutAttrs, donutColorMap),\n      configs = _b.configs,\n      totalValue = _b.totalValue;\n    if (totalValue) {\n      var _c = getDonutSize(keyShape),\n        lineWidth = _c.lineWidth,\n        arcR = _c.arcR;\n      var arcBegin = [arcR, 0];\n      var beginAngle = 0;\n      for (var i = 0; i < configs.length; i++) {\n        var shapeName = \"\".concat(FAN_NAME_PREFIX).concat(i);\n        var result = drawFan(group, {\n          arcR: arcR,\n          arcBegin: arcBegin,\n          beginAngle: beginAngle,\n          config: configs[i],\n          fanIndex: i,\n          lineWidth: lineWidth,\n          totalValue: totalValue,\n          drawWhole: configs.length === 1,\n          updateShape: group['shapeMap'][shapeName]\n        });\n        if (result.shape) visitMap[shapeName] = true;\n        if (result.shouldEnd) break;\n        arcBegin = result.arcBegin;\n        beginAngle = result.beginAngle;\n      }\n    }\n  }\n  // remove the old shapes which are not visited, including the situation taht donutAttrs is empty\n  var fanKeys = Object.keys(group['shapeMap']).filter(function (key) {\n    return key.includes(FAN_NAME_PREFIX);\n  });\n  fanKeys.forEach(function (key) {\n    if (!visitMap[key]) {\n      group['shapeMap'][key].remove(true);\n      delete group['shapeMap'][key];\n    }\n  });\n};\n// 饼图节点\nregisterNode('donut', {\n  // 自定义节点时的配置\n  options: {\n    size: Global.defaultNode.size,\n    style: {\n      x: 0,\n      y: 0,\n      stroke: Global.defaultNode.style.stroke,\n      fill: Global.defaultNode.style.fill,\n      lineWidth: Global.defaultNode.style.lineWidth\n    },\n    labelCfg: {\n      style: {\n        fill: Global.nodeLabel.style.fill,\n        fontSize: Global.nodeLabel.style.fontSize,\n        fontFamily: Global.windowFontFamily\n      }\n    },\n    // 节点上左右上下四个方向上的链接circle配置\n    linkPoints: {\n      top: false,\n      right: false,\n      bottom: false,\n      left: false,\n      // circle的大小\n      size: Global.defaultNode.linkPoints.size,\n      lineWidth: Global.defaultNode.linkPoints.lineWidth,\n      fill: Global.defaultNode.linkPoints.fill,\n      stroke: Global.defaultNode.linkPoints.stroke\n    },\n    // 节点中icon配置\n    icon: {\n      // 是否显示icon，值为 false 则不渲染icon\n      show: false,\n      // icon的地址，字符串类型\n      img: 'https://gw.alipayobjects.com/zos/bmw-prod/5d015065-8505-4e7a-baec-976f81e3c41d.svg',\n      width: 20,\n      height: 20\n    },\n    stateStyles: __assign({}, Global.nodeStateStyles)\n  },\n  shapeType: 'circle',\n  // 文本位置\n  labelPosition: 'center',\n  drawShape: function drawShape(cfg, group) {\n    var _a = (this.mergeStyle || this.getOptions(cfg)).icon,\n      defaultIcon = _a === void 0 ? {} : _a;\n    var style = this.getShapeStyle(cfg);\n    var icon = deepMix({}, defaultIcon, cfg.icon);\n    var keyShape = group.addShape('circle', {\n      attrs: style,\n      className: \"\".concat(this.type, \"-keyShape\"),\n      draggable: true,\n      name: \"\".concat(this.type, \"-keyShape\")\n    });\n    group['shapeMap'][\"\".concat(this.type, \"-keyShape\")] = keyShape;\n    var width = icon.width,\n      height = icon.height,\n      show = icon.show,\n      text = icon.text;\n    if (show) {\n      if (text) {\n        group['shapeMap'][\"\".concat(this.type, \"-icon\")] = group.addShape('text', {\n          attrs: __assign({\n            x: 0,\n            y: 0,\n            fontSize: 12,\n            fill: '#000',\n            stroke: '#000',\n            textBaseline: 'middle',\n            textAlign: 'center'\n          }, icon),\n          className: \"\".concat(this.type, \"-icon\"),\n          name: \"\".concat(this.type, \"-icon\"),\n          draggable: true\n        });\n      } else {\n        group['shapeMap'][\"\".concat(this.type, \"-icon\")] = group.addShape('image', {\n          attrs: __assign({\n            x: -width / 2,\n            y: -height / 2\n          }, icon),\n          className: \"\".concat(this.type, \"-icon\"),\n          name: \"\".concat(this.type, \"-icon\"),\n          draggable: true\n        });\n      }\n    }\n    // draw the fan shapes\n    drawFans(cfg, group, keyShape);\n    this.drawLinkPoints(cfg, group);\n    return keyShape;\n  },\n  updateShape: function updateShape(cfg, item, keyShapeStyle, hasIcon, updateType) {\n    // here cfg is merged configure including old model and new configs\n    var keyShape = item.get('keyShape');\n    keyShape.attr(__assign({}, keyShapeStyle));\n    updateFans(cfg, item, keyShape);\n    if (!undefined || (updateType === null || updateType === void 0 ? void 0 : updateType.includes('label'))) {\n      this.updateLabel(cfg, item, updateType);\n    }\n    if (hasIcon) {\n      this.updateIcon(cfg, item);\n    }\n  }\n}, 'circle');"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}