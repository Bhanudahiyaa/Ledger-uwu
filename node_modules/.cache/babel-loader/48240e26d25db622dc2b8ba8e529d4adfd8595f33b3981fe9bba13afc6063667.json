{"ast":null,"code":"import { ObjectExt, FunctionExt } from '../../util';\nimport { Rectangle } from '../../geometry';\nimport { Widget, Handle } from '../common';\nimport { NodePreset } from './node-preset';\nimport { EdgePreset } from './edge-preset';\nexport class Halo extends Widget {\n  get type() {\n    return this.options.type || 'surround';\n  }\n  get handleOptions() {\n    return this.options;\n  }\n  init(options) {\n    this.options = ObjectExt.merge(Halo.defaultOptions, this.cell.isNode() ? new NodePreset(this).getPresets() : this.cell.isEdge() ? new EdgePreset(this).getPresets() : null, options);\n    this.render();\n    this.initHandles();\n    this.update();\n    this.startListening();\n  }\n  startListening() {\n    const model = this.model;\n    const graph = this.graph;\n    const cell = this.view.cell;\n    cell.on('removed', this.remove, this);\n    model.on('reseted', this.remove, this);\n    graph.on('halo:destroy', this.remove, this);\n    model.on('*', this.update, this);\n    graph.on('scale', this.update, this);\n    graph.on('translate', this.update, this);\n    super.startListening();\n  }\n  stopListening() {\n    const model = this.model;\n    const graph = this.graph;\n    const cell = this.view.cell;\n    this.undelegateEvents();\n    cell.off('removed', this.remove, this);\n    model.off('reseted', this.remove, this);\n    graph.off('halo:destroy', this.remove, this);\n    model.off('*', this.update, this);\n    graph.off('scale', this.update, this);\n    graph.off('translate', this.update, this);\n    super.stopListening();\n  }\n  render() {\n    const options = this.options;\n    const cls = this.prefixClassName('widget-halo');\n    this.view.addClass(Private.NODE_CLS);\n    this.container = document.createElement('div');\n    this.$container = this.$(this.container).addClass(cls).attr('data-shape', this.view.cell.shape);\n    if (options.className) {\n      this.$container.addClass(options.className);\n    }\n    this.$handleContainer = this.$('<div/>').addClass(`${cls}-handles`).appendTo(this.container);\n    this.$content = this.$('<div/>').addClass(`${cls}-content`).appendTo(this.container);\n    this.$container.appendTo(this.graph.container);\n    return this;\n  }\n  remove() {\n    this.stopBatch();\n    this.view.removeClass(Private.NODE_CLS);\n    return super.remove();\n  }\n  update() {\n    if (this.isRendered()) {\n      this.updateContent();\n      const bbox = this.getBBox();\n      const tinyThreshold = this.options.tinyThreshold || 0;\n      const smallThreshold = this.options.smallThreshold || 0;\n      this.$handleContainer.toggleClass(`${this.handleClassName}-tiny`, bbox.width < tinyThreshold && bbox.height < tinyThreshold);\n      const className = `${this.handleClassName}-small`;\n      this.$handleContainer.toggleClass(className, !this.$handleContainer.hasClass(className) && bbox.width < smallThreshold && bbox.height < smallThreshold);\n      this.$container.css({\n        width: bbox.width,\n        height: bbox.height,\n        left: bbox.x,\n        top: bbox.y\n      });\n      if (this.hasHandle('unlink')) {\n        this.toggleUnlink();\n      }\n      if (this.type === 'surround' || this.type === 'toolbar') {\n        if (this.hasHandle('fork')) {\n          this.toggleFork();\n        }\n      }\n    }\n  }\n  updateContent() {\n    const content = this.options.content;\n    if (typeof content === 'function') {\n      const ret = FunctionExt.call(content, this, this.view, this.$content[0]);\n      if (ret) {\n        this.$content.html(ret);\n      }\n    } else if (content) {\n      this.$content.html(content);\n    } else {\n      this.$content.remove();\n    }\n  }\n  getBBox() {\n    const view = this.view;\n    const bbox = this.options.bbox;\n    const rect = typeof bbox === 'function' ? FunctionExt.call(bbox, this, view) : bbox;\n    return Rectangle.create(Object.assign({\n      x: 0,\n      y: 0,\n      width: 1,\n      height: 1\n    }, rect));\n  }\n  removeCell() {\n    this.cell.remove();\n  }\n  toggleFork() {\n    const cell = this.view.cell.clone();\n    const view = this.graph.hook.createCellView(cell);\n    const valid = this.graph.hook.validateConnection(this.view, null, view, null, 'target');\n    this.$handleContainer.children('.fork').toggleClass('hidden', !valid);\n    view.remove();\n  }\n  toggleUnlink() {\n    const hasEdges = this.model.getConnectedEdges(this.view.cell).length > 0;\n    this.$handleContainer.children('.unlink').toggleClass('hidden', !hasEdges);\n  }\n  // #region batch\n  startBatch() {\n    this.model.startBatch('halo', {\n      halo: this.cid\n    });\n  }\n  stopBatch() {\n    if (this.model.hasActiveBatch('halo')) {\n      this.model.stopBatch('halo', {\n        halo: this.cid\n      });\n    }\n  }\n}\n(function (Halo) {\n  Halo.defaultOptions = {\n    type: 'surround',\n    clearAll: true,\n    clearOnBlankMouseDown: true,\n    useCellGeometry: false,\n    clone: cell => cell.clone().removeZIndex()\n  };\n})(Halo || (Halo = {}));\nObject.getOwnPropertyNames(Handle.prototype).forEach(name => {\n  if (name !== 'constructor') {\n    Object.defineProperty(Halo.prototype, name, Object.getOwnPropertyDescriptor(Handle.prototype, name));\n  }\n});\nvar Private;\n(function (Private) {\n  Private.NODE_CLS = 'has-widget-halo';\n})(Private || (Private = {}));","map":{"version":3,"names":["ObjectExt","FunctionExt","Rectangle","Widget","Handle","NodePreset","EdgePreset","Halo","type","options","handleOptions","init","merge","defaultOptions","cell","isNode","getPresets","isEdge","render","initHandles","update","startListening","model","graph","view","on","remove","stopListening","undelegateEvents","off","cls","prefixClassName","addClass","Private","NODE_CLS","container","document","createElement","$container","$","attr","shape","className","$handleContainer","appendTo","$content","stopBatch","removeClass","isRendered","updateContent","bbox","getBBox","tinyThreshold","smallThreshold","toggleClass","handleClassName","width","height","hasClass","css","left","x","top","y","hasHandle","toggleUnlink","toggleFork","content","ret","call","html","rect","create","Object","assign","removeCell","clone","hook","createCellView","valid","validateConnection","children","hasEdges","getConnectedEdges","length","startBatch","halo","cid","hasActiveBatch","clearAll","clearOnBlankMouseDown","useCellGeometry","removeZIndex","getOwnPropertyNames","prototype","forEach","name","defineProperty","getOwnPropertyDescriptor"],"sources":["/Users/bhanudahiya/Desktop/ledger-IQ/node_modules/@antv/x6/src/addon/halo/index.ts"],"sourcesContent":["import { ObjectExt, FunctionExt } from '../../util'\nimport { Rectangle } from '../../geometry'\nimport { Cell } from '../../model/cell'\nimport { Edge } from '../../model/edge'\nimport { CellView } from '../../view/cell'\nimport { Widget, Handle } from '../common'\nimport { NodePreset } from './node-preset'\nimport { EdgePreset } from './edge-preset'\n\nexport class Halo extends Widget<Halo.Options> implements Handle {\n  protected $container: JQuery<HTMLElement>\n  protected $content: JQuery<HTMLElement>\n\n  protected get type() {\n    return this.options.type || 'surround'\n  }\n\n  protected get handleOptions() {\n    return this.options\n  }\n\n  init(options: Halo.Options) {\n    this.options = ObjectExt.merge(\n      Halo.defaultOptions,\n      this.cell.isNode()\n        ? new NodePreset(this).getPresets()\n        : this.cell.isEdge()\n        ? new EdgePreset(this).getPresets()\n        : null,\n      options,\n    )\n\n    this.render()\n    this.initHandles()\n    this.update()\n    this.startListening()\n  }\n\n  protected startListening() {\n    const model = this.model\n    const graph = this.graph\n    const cell = this.view.cell\n\n    cell.on('removed', this.remove, this)\n    model.on('reseted', this.remove, this)\n    graph.on('halo:destroy', this.remove, this)\n\n    model.on('*', this.update, this)\n    graph.on('scale', this.update, this)\n    graph.on('translate', this.update, this)\n\n    super.startListening()\n  }\n\n  protected stopListening() {\n    const model = this.model\n    const graph = this.graph\n    const cell = this.view.cell\n\n    this.undelegateEvents()\n\n    cell.off('removed', this.remove, this)\n    model.off('reseted', this.remove, this)\n    graph.off('halo:destroy', this.remove, this)\n\n    model.off('*', this.update, this)\n    graph.off('scale', this.update, this)\n    graph.off('translate', this.update, this)\n\n    super.stopListening()\n  }\n\n  protected render() {\n    const options = this.options\n    const cls = this.prefixClassName('widget-halo')\n    this.view.addClass(Private.NODE_CLS)\n    this.container = document.createElement('div')\n    this.$container = this.$(this.container)\n      .addClass(cls)\n      .attr('data-shape', this.view.cell.shape)\n\n    if (options.className) {\n      this.$container.addClass(options.className)\n    }\n\n    this.$handleContainer = this.$('<div/>')\n      .addClass(`${cls}-handles`)\n      .appendTo(this.container)\n\n    this.$content = this.$('<div/>')\n      .addClass(`${cls}-content`)\n      .appendTo(this.container)\n\n    this.$container.appendTo(this.graph.container)\n\n    return this\n  }\n\n  remove() {\n    this.stopBatch()\n    this.view.removeClass(Private.NODE_CLS)\n    return super.remove()\n  }\n\n  protected update() {\n    if (this.isRendered()) {\n      this.updateContent()\n      const bbox = this.getBBox()\n      const tinyThreshold = this.options.tinyThreshold || 0\n      const smallThreshold = this.options.smallThreshold || 0\n\n      this.$handleContainer.toggleClass(\n        `${this.handleClassName}-tiny`,\n        bbox.width < tinyThreshold && bbox.height < tinyThreshold,\n      )\n\n      const className = `${this.handleClassName}-small`\n      this.$handleContainer.toggleClass(\n        className,\n        !this.$handleContainer.hasClass(className) &&\n          bbox.width < smallThreshold &&\n          bbox.height < smallThreshold,\n      )\n\n      this.$container.css({\n        width: bbox.width,\n        height: bbox.height,\n        left: bbox.x,\n        top: bbox.y,\n      })\n\n      if (this.hasHandle('unlink')) {\n        this.toggleUnlink()\n      }\n\n      if (this.type === 'surround' || this.type === 'toolbar') {\n        if (this.hasHandle('fork')) {\n          this.toggleFork()\n        }\n      }\n    }\n  }\n\n  protected updateContent() {\n    const content = this.options.content\n    if (typeof content === 'function') {\n      const ret = FunctionExt.call(content, this, this.view, this.$content[0])\n      if (ret) {\n        this.$content.html(ret)\n      }\n    } else if (content) {\n      this.$content.html(content)\n    } else {\n      this.$content.remove()\n    }\n  }\n\n  protected getBBox() {\n    const view = this.view\n    const bbox = this.options.bbox\n    const rect =\n      typeof bbox === 'function' ? FunctionExt.call(bbox, this, view) : bbox\n\n    return Rectangle.create({\n      x: 0,\n      y: 0,\n      width: 1,\n      height: 1,\n      ...rect,\n    })\n  }\n\n  protected removeCell() {\n    this.cell.remove()\n  }\n\n  protected toggleFork() {\n    const cell = this.view.cell.clone()\n    const view = this.graph.hook.createCellView(cell)!\n    const valid = this.graph.hook.validateConnection(\n      this.view,\n      null,\n      view,\n      null,\n      'target',\n    )\n    this.$handleContainer.children('.fork').toggleClass('hidden', !valid)\n    view.remove()\n  }\n\n  protected toggleUnlink() {\n    const hasEdges = this.model.getConnectedEdges(this.view.cell).length > 0\n    this.$handleContainer.children('.unlink').toggleClass('hidden', !hasEdges)\n  }\n\n  // #region batch\n\n  startBatch() {\n    this.model.startBatch('halo', {\n      halo: this.cid,\n    })\n  }\n\n  stopBatch() {\n    if (this.model.hasActiveBatch('halo')) {\n      this.model.stopBatch('halo', {\n        halo: this.cid,\n      })\n    }\n  }\n\n  // #endregion\n}\n\nexport namespace Halo {\n  export interface Options extends Handle.Options, Widget.Options {\n    className?: string\n    /**\n     * The preferred side for a self-loop edge created from Halo\n     */\n    loopEdgePreferredSide?: 'top' | 'bottom' | 'left' | 'right'\n    loopEdgeWidth?: number\n    rotateGrid?: number\n    rotateEmbeds?: boolean\n    content?:\n      | false\n      | string\n      | ((cellView: CellView, boxElement: HTMLElement) => string)\n\n    /**\n     * If set to true, the cell position and dimensions will be used as a\n     * basis for the Halo tools position. By default, this is set to `false`\n     * which causes the Halo tools position be based on the bounding box of\n     * the element view. Sometimes though, your shapes can have certain SVG\n     * sub elements that stick out of the view and you don't want these sub\n     * elements to affect the Halo tools position. In this case, set the\n     * `useCellGeometry` to true.\n     */\n    useCellGeometry?: boolean\n\n    /**\n     * This function will be called when cloning or forking actions take\n     * place and it should return a clone of the original cell. This is\n     * useful e.g. if you want the clone to be moved by an offset after\n     * the user clicks the clone handle.\n     */\n    clone?: (cell: Cell, opt: any) => Cell\n\n    /**\n     * A bounding box within which the Halo view will be rendered.\n     */\n    bbox?:\n      | Partial<Rectangle.RectangleLike>\n      | ((this: Halo, view: CellView) => Partial<Rectangle.RectangleLike>)\n\n    magnet?: (cellView: CellView, terminal: Edge.TerminalType) => Element\n  }\n\n  export type OrthPosition = 'e' | 'w' | 's' | 'n'\n  export type Position = OrthPosition | 'se' | 'sw' | 'ne' | 'nw'\n\n  export interface PieToggle {\n    name: string\n    position?: OrthPosition\n    attrs?: { [selector: string]: JQuery.PlainObject }\n  }\n\n  export const defaultOptions: Options = {\n    type: 'surround',\n    clearAll: true,\n    clearOnBlankMouseDown: true,\n    useCellGeometry: false,\n    clone: (cell) => cell.clone().removeZIndex(),\n  }\n}\n\nexport interface Halo extends Handle {}\n\nObject.getOwnPropertyNames(Handle.prototype).forEach((name) => {\n  if (name !== 'constructor') {\n    Object.defineProperty(\n      Halo.prototype,\n      name,\n      Object.getOwnPropertyDescriptor(Handle.prototype, name)!,\n    )\n  }\n})\n\nnamespace Private {\n  export const NODE_CLS = 'has-widget-halo'\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}