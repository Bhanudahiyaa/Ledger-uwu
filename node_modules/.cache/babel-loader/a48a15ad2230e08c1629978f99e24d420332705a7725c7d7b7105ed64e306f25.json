{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport React from 'react';\nimport uniqBy from 'lodash/uniqBy';\nimport cloneDeep from 'lodash/cloneDeep';\nimport {\n// utils\nDisposable,\n// context\nuseXFlowApp,\n// models\nMODELS, createComponentModel,\n// commands\nXFlowModelCommands } from '@antv/xflow-core';\nimport { TREE_ROOT_ID } from './constants';\nexport var NsNodeTreePanelModel;\n(function (NsNodeTreePanelModel) {\n  NsNodeTreePanelModel.id = 'TREE_PANEL_MODEL';\n  NsNodeTreePanelModel.useModel = model => __awaiter(this, void 0, void 0, function* () {\n    return model.awaitModel(NsNodeTreePanelModel.id);\n  });\n})(NsNodeTreePanelModel || (NsNodeTreePanelModel = {}));\n/** 方便其他组件执行Command改变Panel内部状态 */\nexport const executeNodeDndTreeCommand = (cmds, updateModel) => {\n  cmds.executeCommand(XFlowModelCommands.UPDATE_MODEL.id, {\n    getModel: modelService => __awaiter(void 0, void 0, void 0, function* () {\n      return NsNodeTreePanelModel.useModel(modelService);\n    }),\n    updateModel: updateModel\n  });\n};\nexport const useTreePanelData = props => {\n  const {\n    treeDataService,\n    searchService\n  } = props;\n  const {\n    modelService\n  } = useXFlowApp();\n  /** 使用model */\n  const [state, setState, panelModel] = createComponentModel({\n    treeData: [],\n    searchList: [],\n    treeNodeList: [],\n    expandedKeys: [],\n    defaultExpandAll: false,\n    keyword: ''\n  });\n  /** 注册成为全局状态，方便其他组件联动 */\n  React.useEffect(() => {\n    if (modelService.findDeferredModel(NsNodeTreePanelModel.id)) {\n      return;\n    }\n    modelService.registerModel({\n      id: NsNodeTreePanelModel.id,\n      modelFactory: () => panelModel,\n      watchChange: self => __awaiter(void 0, void 0, void 0, function* () {\n        const graphMetaModel = yield MODELS.GRAPH_META.getModel(modelService); //useContext(MODELS.GRAPH_META.id)\n        const fetch = meta => __awaiter(void 0, void 0, void 0, function* () {\n          const listData = yield treeDataService(meta, modelService);\n          const {\n            treeData,\n            rootNodes\n          } = NodeList2Tree(listData);\n          const currentState = yield self.getValidValue();\n          // 设置默认展开的keys\n          const expandedKeys = currentState.expandedKeys.length > 0 ? currentState.expandedKeys : rootNodes.map(i => i.id);\n          return {\n            listData,\n            treeData,\n            expandedKeys\n          };\n        });\n        const graphMetaDisposable = graphMetaModel.watch(meta => __awaiter(void 0, void 0, void 0, function* () {\n          const data = yield fetch(meta);\n          self.setValue({\n            treeNodeList: data.listData,\n            treeData: data.treeData,\n            expandedKeys: data.expandedKeys,\n            defaultExpandAll: false,\n            keyword: '',\n            searchList: []\n          });\n        }));\n        return Disposable.create(() => {\n          graphMetaDisposable.dispose();\n        });\n      })\n    });\n    /* eslint-disable-next-line  */\n  }, []);\n  /** 折叠文件夹 */\n  const onFolderExpand = React.useCallback(expandedKeys => {\n    setState(modelState => {\n      modelState.expandedKeys = expandedKeys;\n    });\n  }, [setState]);\n  /** 搜索 */\n  const onKeywordChange = React.useCallback(keyword => __awaiter(void 0, void 0, void 0, function* () {\n    if (!searchService) {\n      return console.warn('searchService is not defined');\n    }\n    if (keyword) {\n      const list = yield searchService(state.treeNodeList, keyword);\n      setState(modelState => {\n        modelState.keyword = keyword;\n        modelState.searchList = list;\n      });\n    } else {\n      setState(modelState => {\n        modelState.keyword = '';\n        modelState.searchList = [];\n      });\n    }\n  }),\n  // eslint-disable-next-line\n  [searchService, state.treeNodeList]);\n  return {\n    state,\n    setState,\n    onKeywordChange,\n    onFolderExpand\n  };\n};\n// 将list数据转换为树\nexport function NodeList2Tree(treeNodes = []) {\n  const getGroupByIdMap = list => {\n    const uniqList = uniqBy(list, 'id');\n    const groups = uniqList.reduce((map, node) => {\n      const parentId = node.parentId || TREE_ROOT_ID;\n      if (!map.has(parentId)) {\n        map.set(parentId, []);\n      }\n      const group = map.get(parentId);\n      group.push(node);\n      return map;\n    }, new Map());\n    return groups;\n  };\n  const groupMap = getGroupByIdMap(cloneDeep(treeNodes));\n  function iterator(nodes, groupMapArgs) {\n    return nodes.map(node => {\n      if (groupMapArgs.has(node.id)) {\n        const children = groupMapArgs.get(node.id);\n        node.key = node.id;\n        node.isDirectory = true;\n        node.children = iterator(children, groupMapArgs) || [];\n      } else {\n        node.isLeaf = true;\n      }\n      return node;\n    });\n  }\n  const rootNodes = groupMap.get(TREE_ROOT_ID) || [];\n  const treeData = iterator(rootNodes, groupMap);\n  return {\n    treeData,\n    rootNodes\n  };\n}","map":{"version":3,"names":["React","uniqBy","cloneDeep","Disposable","useXFlowApp","MODELS","createComponentModel","XFlowModelCommands","TREE_ROOT_ID","NsNodeTreePanelModel","id","useModel","model","__awaiter","awaitModel","executeNodeDndTreeCommand","cmds","updateModel","executeCommand","UPDATE_MODEL","getModel","modelService","useTreePanelData","props","treeDataService","searchService","state","setState","panelModel","treeData","searchList","treeNodeList","expandedKeys","defaultExpandAll","keyword","useEffect","findDeferredModel","registerModel","modelFactory","watchChange","self","graphMetaModel","GRAPH_META","fetch","meta","listData","rootNodes","NodeList2Tree","currentState","getValidValue","length","map","i","graphMetaDisposable","watch","data","setValue","create","dispose","onFolderExpand","useCallback","modelState","onKeywordChange","console","warn","list","treeNodes","getGroupByIdMap","uniqList","groups","reduce","node","parentId","has","set","group","get","push","Map","groupMap","iterator","nodes","groupMapArgs","children","key","isDirectory","isLeaf"],"sources":["../../src/canvas-node-tree-panel/service.tsx"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}