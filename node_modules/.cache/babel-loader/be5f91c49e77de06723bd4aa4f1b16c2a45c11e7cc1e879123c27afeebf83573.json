{"ast":null,"code":"import { __awaiter, __decorate, __rest } from \"tslib\";\nimport { singleton } from 'mana-syringe';\nimport { DisposableCollection, Disposable, XFlowEdgeCommands, XFlowNodeCommands } from '@antv/xflow-core';\nimport { IHookContribution } from '@antv/xflow-core';\nimport { NsAddEdgeEvent } from '../../config-graph';\nimport { getProps } from '../../utils';\n/**\n * 内置的hook contribution\n * 处理 config上的runtime的注册项\n */\nlet FlowHooksContribution = class FlowHooksContribution {\n  constructor() {\n    this.toDispose = new DisposableCollection();\n    this.registerHookHub = () => __awaiter(this, void 0, void 0, function* () {\n      return Disposable.create(() => {});\n    });\n    this.registerHook = hooks => __awaiter(this, void 0, void 0, function* () {\n      const toDispose = new DisposableCollection();\n      const disposables = [hooks.afterGraphInit.registerHook({\n        name: 'call add edge to replace temp edge',\n        handler: handlerArgs => __awaiter(this, void 0, void 0, function* () {\n          const {\n            commandService,\n            graph\n          } = handlerArgs;\n          graph.on(NsAddEdgeEvent.EVENT_NAME, args => __awaiter(this, void 0, void 0, function* () {\n            const {\n                edge\n              } = args,\n              edgeConfig = __rest(args, [\"edge\"]);\n            const {\n                tempEdgeId\n              } = edgeConfig,\n              rest = __rest(edgeConfig, [\"tempEdgeId\"]);\n            const config = {\n              edgeConfig: Object.assign(Object.assign({}, rest), {\n                // renderKey: FLOWCHART_EDGE, // 暂不支持\n                source: {\n                  cell: edgeConfig.source,\n                  port: edgeConfig.sourcePortId\n                },\n                target: {\n                  cell: edgeConfig.target,\n                  port: edgeConfig.targetPortId\n                },\n                zIndex: 1,\n                data: Object.assign({}, rest)\n              })\n            };\n            yield commandService.executeCommand(XFlowEdgeCommands.ADD_EDGE.id, config);\n            /** 删除 createEdge() 产生的 tempEdge */\n            yield commandService.executeCommand(XFlowEdgeCommands.DEL_EDGE.id, {\n              edgeConfig: {\n                id: tempEdgeId\n              }\n            });\n            /**\n             * 新增边时更新入边、出边信息\n             * @link https://github.com/ant-design/ant-design-charts/issues/1189\n             */\n            const sourceNode = graph.getCellById(edgeConfig.source);\n            const targetNode = graph.getCellById(edgeConfig.target);\n            yield commandService.executeCommand(XFlowNodeCommands.UPDATE_NODE.id, {\n              nodeConfig: Object.assign(Object.assign({}, sourceNode.data), {\n                incomingEdges: graph.getIncomingEdges(sourceNode),\n                outgoingEdges: graph.getOutgoingEdges(sourceNode)\n              })\n            });\n            yield commandService.executeCommand(XFlowNodeCommands.UPDATE_NODE.id, {\n              nodeConfig: Object.assign(Object.assign({}, targetNode.data), {\n                incomingEdges: graph.getIncomingEdges(targetNode),\n                outgoingEdges: graph.getOutgoingEdges(targetNode)\n              })\n            });\n            const onAddEdge = getProps('onAddEdge');\n            if (typeof onAddEdge === 'function') {\n              onAddEdge(config.edgeConfig);\n            }\n            args.edge.remove();\n          }));\n        })\n      })];\n      toDispose.pushAll(disposables);\n      return Disposable.create(() => {});\n    });\n  }\n};\nFlowHooksContribution = __decorate([singleton({\n  contrib: IHookContribution\n})], FlowHooksContribution);\nexport { FlowHooksContribution };","map":{"version":3,"names":["singleton","DisposableCollection","Disposable","XFlowEdgeCommands","XFlowNodeCommands","IHookContribution","NsAddEdgeEvent","getProps","FlowHooksContribution","constructor","toDispose","registerHookHub","__awaiter","create","registerHook","hooks","disposables","afterGraphInit","name","handler","handlerArgs","commandService","graph","on","EVENT_NAME","args","edge","edgeConfig","__rest","tempEdgeId","rest","config","Object","assign","source","cell","port","sourcePortId","target","targetPortId","zIndex","data","executeCommand","ADD_EDGE","id","DEL_EDGE","sourceNode","getCellById","targetNode","UPDATE_NODE","nodeConfig","incomingEdges","getIncomingEdges","outgoingEdges","getOutgoingEdges","onAddEdge","remove","pushAll","__decorate","contrib"],"sources":["../../../../src/flowchart-canvas/extension/contributions/flow.tsx"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}