{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport { isSafari } from '@antv/g-webgpu-core';\nimport * as WebGPUConstants from '@webgpu/types/dist/constants';\nvar WebGPUBuffer = /*#__PURE__*/function () {\n  function WebGPUBuffer(engine, options) {\n    _classCallCheck(this, WebGPUBuffer);\n    this.engine = engine;\n    this.options = options;\n    this.buffer = void 0;\n    var _options = options,\n      data = _options.data,\n      usage = _options.usage,\n      type = _options.type;\n    this.buffer = this.createBuffer(data instanceof Array ? new Float32Array(data) : data,\n    // TODO: WebGL 和 WebGPU buffer usage 映射关系\n    usage || WebGPUConstants.BufferUsage.Vertex | WebGPUConstants.BufferUsage.CopyDst);\n  }\n  _createClass(WebGPUBuffer, [{\n    key: \"get\",\n    value: function get() {\n      return this.buffer;\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.buffer.destroy();\n    }\n  }, {\n    key: \"subData\",\n    value: function subData(_ref) {\n      var data = _ref.data,\n        offset = _ref.offset;\n      this.setSubData(this.buffer, offset, data instanceof Array ? new Float32Array(data) : data);\n    }\n  }, {\n    key: \"createBuffer\",\n    value: function createBuffer(view, flags) {\n      // @ts-ignore\n      var padding = view.byteLength % 4;\n      var verticesBufferDescriptor = {\n        // @ts-ignore\n        size: view.byteLength + padding,\n        usage: flags\n      };\n      var buffer = this.engine.device.createBuffer(verticesBufferDescriptor);\n      this.setSubData(buffer, 0, view);\n      return buffer;\n    }\n    /**\n     * 不同于 Babylon.js 的版本，使用最新的 GPUQueue.writeBuffer 方法\n     * @see https://gpuweb.github.io/gpuweb/#dom-gpuqueue-writebuffer\n     * 已废弃创建一个临时的 mapped buffer 用于拷贝数据 @see https://gpuweb.github.io/gpuweb/#GPUDevice-createBufferMapped\n     * @see https://github.com/gpuweb/gpuweb/blob/master/design/BufferOperations.md#updating-data-to-an-existing-buffer-like-webgls-buffersubdata\n     */\n  }, {\n    key: \"setSubData\",\n    value: function setSubData(destBuffer, destOffset, srcArrayBuffer) {\n      // deprecated API setSubData\n      // destBuffer.setSubData(0, srcArrayBuffer);\n      // deprecated API createBufferMapped\n      // use createBuffer & getMappedRange instead\n      // const [srcBuffer, arrayBuffer] = this.engine.device.createBufferMapped({\n      //   size: byteCount,\n      //   usage: WebGPUConstants.BufferUsage.CopySrc,\n      // });\n      var queue = isSafari ?\n      // @ts-ignore\n      this.engine.device.getQueue() : this.engine.device.defaultQueue; // @ts-ignore\n\n      queue.writeBuffer(destBuffer, destOffset, srcArrayBuffer);\n    }\n  }]);\n  return WebGPUBuffer;\n}();\nexport { WebGPUBuffer as default };","map":{"version":3,"names":["isSafari","WebGPUConstants","WebGPUBuffer","engine","options","_classCallCheck","buffer","_options","data","usage","type","createBuffer","Array","Float32Array","BufferUsage","Vertex","CopyDst","destroy","_ref","offset","setSubData","view","flags","padding","byteLength","verticesBufferDescriptor","size","device","destBuffer","destOffset","srcArrayBuffer","queue","getQueue","defaultQueue","writeBuffer"],"sources":["/Users/bhanudahiya/Desktop/ledger-IQ/node_modules/@antv/g-webgpu-engine/src/webgpu/WebGPUBuffer.ts"],"sourcesContent":["import {\n  BufferData,\n  gl,\n  IBuffer,\n  IBufferInitializationOptions,\n  isSafari,\n} from '@antv/g-webgpu-core';\nimport * as WebGPUConstants from '@webgpu/types/dist/constants';\nimport { WebGPUEngine } from '.';\n\nexport default class WebGPUBuffer implements IBuffer {\n  private buffer: GPUBuffer;\n\n  constructor(\n    private engine: WebGPUEngine,\n    private options: IBufferInitializationOptions,\n  ) {\n    const { data, usage, type } = options;\n    this.buffer = this.createBuffer(\n      data instanceof Array ? new Float32Array(data) : data,\n      // TODO: WebGL 和 WebGPU buffer usage 映射关系\n      usage ||\n        WebGPUConstants.BufferUsage.Vertex |\n          WebGPUConstants.BufferUsage.CopyDst,\n    );\n  }\n\n  public get() {\n    return this.buffer;\n  }\n\n  public destroy() {\n    this.buffer.destroy();\n  }\n\n  public subData({ data, offset }: { data: BufferData; offset: number }) {\n    this.setSubData(\n      this.buffer,\n      offset,\n      data instanceof Array ? new Float32Array(data) : data,\n    );\n  }\n\n  private createBuffer(\n    view: Exclude<BufferData, number[]>,\n    flags: GPUBufferUsageFlags,\n  ): GPUBuffer {\n    // @ts-ignore\n    const padding = view.byteLength % 4;\n    const verticesBufferDescriptor = {\n      // @ts-ignore\n      size: view.byteLength + padding,\n      usage: flags,\n    };\n    const buffer = this.engine.device.createBuffer(verticesBufferDescriptor);\n\n    this.setSubData(buffer, 0, view);\n\n    return buffer;\n  }\n\n  /**\n   * 不同于 Babylon.js 的版本，使用最新的 GPUQueue.writeBuffer 方法\n   * @see https://gpuweb.github.io/gpuweb/#dom-gpuqueue-writebuffer\n   * 已废弃创建一个临时的 mapped buffer 用于拷贝数据 @see https://gpuweb.github.io/gpuweb/#GPUDevice-createBufferMapped\n   * @see https://github.com/gpuweb/gpuweb/blob/master/design/BufferOperations.md#updating-data-to-an-existing-buffer-like-webgls-buffersubdata\n   */\n  private setSubData(\n    destBuffer: GPUBuffer,\n    destOffset: number,\n    srcArrayBuffer: Exclude<BufferData, number[]>,\n  ) {\n    // deprecated API setSubData\n    // destBuffer.setSubData(0, srcArrayBuffer);\n\n    // deprecated API createBufferMapped\n    // use createBuffer & getMappedRange instead\n    // const [srcBuffer, arrayBuffer] = this.engine.device.createBufferMapped({\n    //   size: byteCount,\n    //   usage: WebGPUConstants.BufferUsage.CopySrc,\n    // });\n\n    const queue: GPUQueue = isSafari\n      ? // @ts-ignore\n        this.engine.device.getQueue()\n      : this.engine.device.defaultQueue;\n    // @ts-ignore\n    queue.writeBuffer(destBuffer, destOffset, srcArrayBuffer);\n  }\n}\n"],"mappings":";;AAAA,SAKEA,QALF,QAMO,qBANP;AAOA,OAAO,KAAKC,eAAZ,MAAiC,8BAAjC;IAGqBC,Y;EAGnB,SAAAA,aACUC,MADV,EAEUC,OAFV,EAGE;IAAAC,eAAA,OAAAH,YAAA;IAAA,KAFQC,MAER,GAFQA,MAER;IAAA,KADQC,OACR,GADQA,OACR;IAAA,KALME,MAKN;IAAA,IAAAC,QAAA,GAC8BH,OAD9B;MACQI,IADR,GAAAD,QAAA,CACQC,IADR;MACcC,KADd,GAAAF,QAAA,CACcE,KADd;MACqBC,IADrB,GAAAH,QAAA,CACqBG,IADrB;IAEA,KAAKJ,MAAL,GAAc,KAAKK,YAAL,CACZH,IAAI,YAAYI,KAAhB,GAAwB,IAAIC,YAAJ,CAAiBL,IAAjB,CAAxB,GAAiDA,IADrC;IAEZ;IACAC,KAAK,IACHR,eAAe,CAACa,WAAhB,CAA4BC,MAA5B,GACEd,eAAe,CAACa,WAAhB,CAA4BE,OALpB,CAAd;EAOD;;;0BAEY;MACX,OAAO,KAAKV,MAAZ;IACD;;;8BAEgB;MACf,KAAKA,MAAL,CAAYW,OAAZ;IACD;;;kCAEsE;MAAA,IAAtDT,IAAsD,GAAAU,IAAA,CAAtDV,IAAsD;QAAhDW,MAAgD,GAAAD,IAAA,CAAhDC,MAAgD;MACrE,KAAKC,UAAL,CACE,KAAKd,MADP,EAEEa,MAFF,EAGEX,IAAI,YAAYI,KAAhB,GAAwB,IAAIC,YAAJ,CAAiBL,IAAjB,CAAxB,GAAiDA,IAHnD;IAKD;;;iCAGCa,I,EACAC,K,EACW;MACX;MACA,IAAMC,OAAO,GAAGF,IAAI,CAACG,UAAL,GAAkB,CAAlC;MACA,IAAMC,wBAAwB,GAAG;QAC/B;QACAC,IAAI,EAAEL,IAAI,CAACG,UAAL,GAAkBD,OAFO;QAG/Bd,KAAK,EAAEa;MAHwB,CAAjC;MAKA,IAAMhB,MAAM,GAAG,KAAKH,MAAL,CAAYwB,MAAZ,CAAmBhB,YAAnB,CAAgCc,wBAAhC,CAAf;MAEA,KAAKL,UAAL,CAAgBd,MAAhB,EAAwB,CAAxB,EAA2Be,IAA3B;MAEA,OAAOf,MAAP;IACD;IAED;AACF;AACA;AACA;AACA;AACA;;;+BAEIsB,U,EACAC,U,EACAC,c,EACA;MACA;MACA;MAEA;MACA;MACA;MACA;MACA;MACA;MAEA,IAAMC,KAAe,GAAG/B,QAAQ;MAC5B;MACA,KAAKG,MAAL,CAAYwB,MAAZ,CAAmBK,QAAnB,EAF4B,GAG5B,KAAK7B,MAAL,CAAYwB,MAAZ,CAAmBM,YAHvB,CAXA,CAeA;;MACAF,KAAK,CAACG,WAAN,CAAkBN,UAAlB,EAA8BC,UAA9B,EAA0CC,cAA1C;IACD;;;;SA9EkB5B,Y","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}