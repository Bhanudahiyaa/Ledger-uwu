{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { DOM } from '@antv/l7-utils';\nimport { createL7Icon } from \"../utils/icon\";\nimport ScreenFull from \"../utils/screenfull\";\nimport ButtonControl from \"./baseControl/buttonControl\";\nexport { Fullscreen };\nexport default class Fullscreen extends ButtonControl {\n  constructor(option) {\n    var _this;\n    super(option);\n    _this = this;\n    _defineProperty(this, \"isFullscreen\", false);\n    _defineProperty(this, \"mapContainer\", void 0);\n    _defineProperty(this, \"toggleFullscreen\", /*#__PURE__*/_asyncToGenerator(function* () {\n      if (ScreenFull.isEnabled) {\n        yield ScreenFull.toggle(_this.mapContainer);\n      }\n    }));\n    _defineProperty(this, \"onClick\", () => {\n      this.toggleFullscreen();\n    });\n    _defineProperty(this, \"onFullscreenChange\", () => {\n      this.isFullscreen = !!document.fullscreenElement;\n      const {\n        btnText,\n        btnIcon,\n        title,\n        exitBtnText,\n        exitBtnIcon,\n        exitTitle\n      } = this.controlOption;\n      if (this.isFullscreen) {\n        this.setBtnTitle(exitTitle);\n        this.setBtnText(exitBtnText);\n        this.setBtnIcon(exitBtnIcon);\n      } else {\n        this.setBtnTitle(title);\n        this.setBtnText(btnText);\n        this.setBtnIcon(btnIcon);\n      }\n      this.emit('fullscreenChange', this.isFullscreen);\n    });\n    if (!ScreenFull.isEnabled) {\n      console.warn('当前浏览器环境不支持对地图全屏化');\n    }\n  }\n  setOptions(newOptions) {\n    const {\n      exitBtnText,\n      exitBtnIcon,\n      exitTitle\n    } = newOptions;\n    if (this.isFullscreen) {\n      if (this.checkUpdateOption(newOptions, ['exitBtnIcon'])) {\n        this.setBtnIcon(exitBtnIcon);\n      }\n      if (this.checkUpdateOption(newOptions, ['exitBtnText'])) {\n        this.setBtnText(exitBtnText);\n      }\n      if (this.checkUpdateOption(newOptions, ['exitTitle'])) {\n        this.setBtnTitle(exitTitle);\n      }\n    }\n    super.setOptions(newOptions);\n  }\n  onAdd() {\n    const button = super.onAdd();\n    button.addEventListener('click', this.onClick);\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    this.mapContainer = DOM.getContainer(this.scene.getSceneConfig().id);\n    this.mapContainer.addEventListener('fullscreenchange', this.onFullscreenChange);\n    return button;\n  }\n  onRemove() {\n    super.onRemove();\n    this.mapContainer.removeEventListener('fullscreenchange', this.onFullscreenChange);\n  }\n  getDefault(option) {\n    return _objectSpread(_objectSpread({}, super.getDefault(option)), {}, {\n      title: '全屏',\n      btnIcon: createL7Icon('l7-icon-fullscreen'),\n      exitTitle: '退出全屏',\n      exitBtnIcon: createL7Icon('l7-icon-exit-fullscreen')\n    });\n  }\n}","map":{"version":3,"names":["_objectSpread","_asyncToGenerator","_defineProperty","DOM","createL7Icon","ScreenFull","ButtonControl","Fullscreen","constructor","option","_this","isEnabled","toggle","mapContainer","toggleFullscreen","isFullscreen","document","fullscreenElement","btnText","btnIcon","title","exitBtnText","exitBtnIcon","exitTitle","controlOption","setBtnTitle","setBtnText","setBtnIcon","emit","console","warn","setOptions","newOptions","checkUpdateOption","onAdd","button","addEventListener","onClick","getContainer","scene","getSceneConfig","id","onFullscreenChange","onRemove","removeEventListener","getDefault"],"sources":["/Users/bhanudahiya/Desktop/ledger-IQ/node_modules/@antv/l7-component/es/control/fullscreen.js"],"sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { DOM } from '@antv/l7-utils';\nimport { createL7Icon } from \"../utils/icon\";\nimport ScreenFull from \"../utils/screenfull\";\nimport ButtonControl from \"./baseControl/buttonControl\";\nexport { Fullscreen };\nexport default class Fullscreen extends ButtonControl {\n  constructor(option) {\n    var _this;\n    super(option);\n    _this = this;\n    _defineProperty(this, \"isFullscreen\", false);\n    _defineProperty(this, \"mapContainer\", void 0);\n    _defineProperty(this, \"toggleFullscreen\", /*#__PURE__*/_asyncToGenerator(function* () {\n      if (ScreenFull.isEnabled) {\n        yield ScreenFull.toggle(_this.mapContainer);\n      }\n    }));\n    _defineProperty(this, \"onClick\", () => {\n      this.toggleFullscreen();\n    });\n    _defineProperty(this, \"onFullscreenChange\", () => {\n      this.isFullscreen = !!document.fullscreenElement;\n      const {\n        btnText,\n        btnIcon,\n        title,\n        exitBtnText,\n        exitBtnIcon,\n        exitTitle\n      } = this.controlOption;\n      if (this.isFullscreen) {\n        this.setBtnTitle(exitTitle);\n        this.setBtnText(exitBtnText);\n        this.setBtnIcon(exitBtnIcon);\n      } else {\n        this.setBtnTitle(title);\n        this.setBtnText(btnText);\n        this.setBtnIcon(btnIcon);\n      }\n      this.emit('fullscreenChange', this.isFullscreen);\n    });\n    if (!ScreenFull.isEnabled) {\n      console.warn('当前浏览器环境不支持对地图全屏化');\n    }\n  }\n  setOptions(newOptions) {\n    const {\n      exitBtnText,\n      exitBtnIcon,\n      exitTitle\n    } = newOptions;\n    if (this.isFullscreen) {\n      if (this.checkUpdateOption(newOptions, ['exitBtnIcon'])) {\n        this.setBtnIcon(exitBtnIcon);\n      }\n      if (this.checkUpdateOption(newOptions, ['exitBtnText'])) {\n        this.setBtnText(exitBtnText);\n      }\n      if (this.checkUpdateOption(newOptions, ['exitTitle'])) {\n        this.setBtnTitle(exitTitle);\n      }\n    }\n    super.setOptions(newOptions);\n  }\n  onAdd() {\n    const button = super.onAdd();\n    button.addEventListener('click', this.onClick);\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    this.mapContainer = DOM.getContainer(this.scene.getSceneConfig().id);\n    this.mapContainer.addEventListener('fullscreenchange', this.onFullscreenChange);\n    return button;\n  }\n  onRemove() {\n    super.onRemove();\n    this.mapContainer.removeEventListener('fullscreenchange', this.onFullscreenChange);\n  }\n  getDefault(option) {\n    return _objectSpread(_objectSpread({}, super.getDefault(option)), {}, {\n      title: '全屏',\n      btnIcon: createL7Icon('l7-icon-fullscreen'),\n      exitTitle: '退出全屏',\n      exitBtnIcon: createL7Icon('l7-icon-exit-fullscreen')\n    });\n  }\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}