{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport EventEmitter from 'eventemitter3';\nimport Hammer from 'hammerjs';\nimport { InteractionEvent } from \"./IInteractionService\";\nconst DragEventMap = {\n  panstart: 'dragstart',\n  panmove: 'dragging',\n  panend: 'dragend',\n  pancancel: 'dragcancel'\n};\n/**\n * 由于目前 L7 与地图结合的方案为双 canvas 而非共享 WebGL Context，事件监听注册在地图底图上。\n * 除此之外，后续如果支持非地图场景，事件监听就需要注册在 L7 canvas 上。\n */\nexport default class InteractionService extends EventEmitter {\n  get mapService() {\n    return this.container.mapService;\n  }\n  constructor(container) {\n    super();\n    _defineProperty(this, \"indragging\", false);\n    // @ts-ignore\n    // private hammertime: HammerManager;\n    _defineProperty(this, \"hammertime\", void 0);\n    _defineProperty(this, \"lastClickTime\", 0);\n    _defineProperty(this, \"lastClickXY\", [-1, -1]);\n    _defineProperty(this, \"clickTimer\", void 0);\n    _defineProperty(this, \"$containter\", void 0);\n    _defineProperty(this, \"onDrag\", target => {\n      const interactionTarget = this.interactionEvent(target);\n      interactionTarget.type = DragEventMap[interactionTarget.type];\n      interactionTarget.type === 'dragging' ? this.indragging = true : this.indragging = false;\n      this.emit(InteractionEvent.Drag, interactionTarget);\n    });\n    _defineProperty(this, \"onHammer\", target => {\n      target.srcEvent.stopPropagation();\n      const interactionTarget = this.interactionEvent(target);\n      this.emit(InteractionEvent.Hover, interactionTarget);\n    });\n    _defineProperty(this, \"onTouch\", target => {\n      const touch = target.touches[0];\n      // @ts-ignore\n      this.onHover({\n        clientX: touch.clientX,\n        clientY: touch.clientY,\n        type: 'touchstart'\n      });\n    });\n    _defineProperty(this, \"onTouchEnd\", target => {\n      if (target.changedTouches.length > 0) {\n        const touch = target.changedTouches[0];\n        // @ts-ignore\n        this.onHover({\n          clientX: touch.clientX,\n          clientY: touch.clientY,\n          type: 'touchend'\n        });\n      }\n    });\n    // touch move == drag map 目前会被拦截\n    _defineProperty(this, \"onTouchMove\", target => {\n      const touch = target.changedTouches[0];\n      // @ts-ignore\n      this.onHover({\n        clientX: touch.clientX,\n        clientY: touch.clientY,\n        type: 'touchmove'\n      });\n    });\n    _defineProperty(this, \"onHover\", event => {\n      const {\n        clientX,\n        clientY\n      } = event;\n      let x = clientX;\n      let y = clientY;\n      const type = event.type;\n      const $containter = this.mapService.getMapContainer();\n      if ($containter) {\n        const {\n          top,\n          left\n        } = $containter.getBoundingClientRect();\n        x = x - left - $containter.clientLeft;\n        y = y - top - $containter.clientTop;\n      }\n      const lngLat = this.mapService.containerToLngLat([x, y]);\n      if (type === 'click') {\n        this.isDoubleTap(x, y, lngLat);\n        return;\n      }\n      if (type === 'touch') {\n        this.isDoubleTap(x, y, lngLat);\n        return;\n      }\n      if (type !== 'click' && type !== 'dblclick') {\n        this.emit(InteractionEvent.Hover, {\n          x,\n          y,\n          lngLat,\n          type,\n          target: event\n        });\n      }\n    });\n    this.container = container;\n  }\n  init() {\n    // 注册事件在地图底图上\n    this.addEventListenerOnMap();\n    this.$containter = this.mapService.getMapContainer();\n  }\n  destroy() {\n    if (this.hammertime) {\n      this.hammertime.destroy();\n    }\n    this.removeEventListenerOnMap();\n    this.off(InteractionEvent.Hover);\n  }\n  triggerHover({\n    x,\n    y\n  }) {\n    this.emit(InteractionEvent.Hover, {\n      x,\n      y\n    });\n  }\n  triggerSelect(id) {\n    this.emit(InteractionEvent.Select, {\n      featureId: id\n    });\n  }\n  triggerActive(id) {\n    this.emit(InteractionEvent.Active, {\n      featureId: id\n    });\n  }\n  addEventListenerOnMap() {\n    const $containter = this.mapService.getMapContainer();\n    if ($containter) {\n      const hammertime = new Hammer.Manager($containter);\n      // $containter.addEventListener('mousemove', this.onHover);\n      // $containter.addEventListener('click', this.onHover);\n      hammertime.add(new Hammer.Tap({\n        event: 'dblclick',\n        taps: 2\n      }));\n      hammertime.add(new Hammer.Tap({\n        event: 'click'\n      }));\n      hammertime.add(new Hammer.Pan({\n        threshold: 0,\n        pointers: 0\n      }));\n      hammertime.add(new Hammer.Press({}));\n      // hammertime.get('pan').set({ direction: Hammer.DIRECTION_ALL });\n      // hammertime.get('pinch').set({ enable: true });\n      hammertime.on('dblclick click', this.onHammer);\n      hammertime.on('panstart panmove panend pancancel', this.onDrag);\n      $containter.addEventListener('touchstart', this.onTouch);\n      $containter.addEventListener('touchend', this.onTouchEnd);\n      $containter.addEventListener('mousemove', this.onHover);\n      $containter.addEventListener('touchmove', this.onTouchMove);\n      // $containter.addEventListener('click', this.onHover);\n      $containter.addEventListener('mousedown', this.onHover, true);\n      $containter.addEventListener('mouseup', this.onHover);\n      $containter.addEventListener('contextmenu', this.onHover);\n      this.hammertime = hammertime;\n    }\n\n    // Tip: 根据场景注册事件到 L7 canvas 上\n  }\n  removeEventListenerOnMap() {\n    const $containter = this.mapService.getMapContainer();\n    if ($containter) {\n      $containter.removeEventListener('mousemove', this.onHover);\n      this.hammertime.off('dblclick click', this.onHammer);\n      this.hammertime.off('panstart panmove panend pancancel', this.onDrag);\n      $containter.removeEventListener('touchstart', this.onTouch);\n      $containter.removeEventListener('touchend', this.onTouchEnd);\n      $containter.removeEventListener('mousedown', this.onHover);\n      $containter.removeEventListener('mouseup', this.onHover);\n      // $containter.removeEventListener('dblclick', this.onHover);\n      $containter.removeEventListener('contextmenu', this.onHover);\n    }\n  }\n  interactionEvent(target) {\n    const {\n      type,\n      pointerType\n    } = target;\n    let clientX;\n    let clientY;\n    if (pointerType === 'touch') {\n      clientY = Math.floor(target.pointers[0].clientY);\n      clientX = Math.floor(target.pointers[0].clientX);\n    } else {\n      clientY = Math.floor(target.srcEvent.y);\n      clientX = Math.floor(target.srcEvent.x);\n    }\n    const $containter = this.mapService.getMapContainer();\n    if ($containter) {\n      const {\n        top,\n        left\n      } = $containter.getBoundingClientRect();\n      clientX -= left;\n      clientY -= top;\n    }\n    const lngLat = this.mapService.containerToLngLat([clientX, clientY]);\n    return {\n      x: clientX,\n      y: clientY,\n      lngLat,\n      type,\n      target: target.srcEvent\n    };\n  }\n  isDoubleTap(x, y, lngLat) {\n    const nowTime = new Date().getTime();\n    let type = 'click';\n    if (nowTime - this.lastClickTime < 400 && Math.abs(this.lastClickXY[0] - x) < 10 && Math.abs(this.lastClickXY[1] - y) < 10) {\n      this.lastClickTime = 0;\n      this.lastClickXY = [-1, -1];\n      if (this.clickTimer) {\n        clearTimeout(this.clickTimer);\n      }\n      type = 'dblclick';\n      this.emit(InteractionEvent.Hover, {\n        x,\n        y,\n        lngLat,\n        type\n      });\n    } else {\n      this.lastClickTime = nowTime;\n      this.lastClickXY = [x, y];\n      // @ts-ignore\n      this.clickTimer = setTimeout(() => {\n        type = 'click';\n        this.emit(InteractionEvent.Hover, {\n          x,\n          y,\n          lngLat,\n          type\n        });\n      }, 400);\n    }\n  }\n}","map":{"version":3,"names":["_defineProperty","EventEmitter","Hammer","InteractionEvent","DragEventMap","panstart","panmove","panend","pancancel","InteractionService","mapService","container","constructor","target","interactionTarget","interactionEvent","type","indragging","emit","Drag","srcEvent","stopPropagation","Hover","touch","touches","onHover","clientX","clientY","changedTouches","length","event","x","y","$containter","getMapContainer","top","left","getBoundingClientRect","clientLeft","clientTop","lngLat","containerToLngLat","isDoubleTap","init","addEventListenerOnMap","destroy","hammertime","removeEventListenerOnMap","off","triggerHover","triggerSelect","id","Select","featureId","triggerActive","Active","Manager","add","Tap","taps","Pan","threshold","pointers","Press","on","onHammer","onDrag","addEventListener","onTouch","onTouchEnd","onTouchMove","removeEventListener","pointerType","Math","floor","nowTime","Date","getTime","lastClickTime","abs","lastClickXY","clickTimer","clearTimeout","setTimeout"],"sources":["/Users/bhanudahiya/Desktop/ledger-IQ/node_modules/@antv/l7-core/es/services/interaction/InteractionService.js"],"sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport EventEmitter from 'eventemitter3';\nimport Hammer from 'hammerjs';\nimport { InteractionEvent } from \"./IInteractionService\";\nconst DragEventMap = {\n  panstart: 'dragstart',\n  panmove: 'dragging',\n  panend: 'dragend',\n  pancancel: 'dragcancel'\n};\n/**\n * 由于目前 L7 与地图结合的方案为双 canvas 而非共享 WebGL Context，事件监听注册在地图底图上。\n * 除此之外，后续如果支持非地图场景，事件监听就需要注册在 L7 canvas 上。\n */\nexport default class InteractionService extends EventEmitter {\n  get mapService() {\n    return this.container.mapService;\n  }\n  constructor(container) {\n    super();\n    _defineProperty(this, \"indragging\", false);\n    // @ts-ignore\n    // private hammertime: HammerManager;\n    _defineProperty(this, \"hammertime\", void 0);\n    _defineProperty(this, \"lastClickTime\", 0);\n    _defineProperty(this, \"lastClickXY\", [-1, -1]);\n    _defineProperty(this, \"clickTimer\", void 0);\n    _defineProperty(this, \"$containter\", void 0);\n    _defineProperty(this, \"onDrag\", target => {\n      const interactionTarget = this.interactionEvent(target);\n      interactionTarget.type = DragEventMap[interactionTarget.type];\n      interactionTarget.type === 'dragging' ? this.indragging = true : this.indragging = false;\n      this.emit(InteractionEvent.Drag, interactionTarget);\n    });\n    _defineProperty(this, \"onHammer\", target => {\n      target.srcEvent.stopPropagation();\n      const interactionTarget = this.interactionEvent(target);\n      this.emit(InteractionEvent.Hover, interactionTarget);\n    });\n    _defineProperty(this, \"onTouch\", target => {\n      const touch = target.touches[0];\n      // @ts-ignore\n      this.onHover({\n        clientX: touch.clientX,\n        clientY: touch.clientY,\n        type: 'touchstart'\n      });\n    });\n    _defineProperty(this, \"onTouchEnd\", target => {\n      if (target.changedTouches.length > 0) {\n        const touch = target.changedTouches[0];\n        // @ts-ignore\n        this.onHover({\n          clientX: touch.clientX,\n          clientY: touch.clientY,\n          type: 'touchend'\n        });\n      }\n    });\n    // touch move == drag map 目前会被拦截\n    _defineProperty(this, \"onTouchMove\", target => {\n      const touch = target.changedTouches[0];\n      // @ts-ignore\n      this.onHover({\n        clientX: touch.clientX,\n        clientY: touch.clientY,\n        type: 'touchmove'\n      });\n    });\n    _defineProperty(this, \"onHover\", event => {\n      const {\n        clientX,\n        clientY\n      } = event;\n      let x = clientX;\n      let y = clientY;\n      const type = event.type;\n      const $containter = this.mapService.getMapContainer();\n      if ($containter) {\n        const {\n          top,\n          left\n        } = $containter.getBoundingClientRect();\n        x = x - left - $containter.clientLeft;\n        y = y - top - $containter.clientTop;\n      }\n      const lngLat = this.mapService.containerToLngLat([x, y]);\n      if (type === 'click') {\n        this.isDoubleTap(x, y, lngLat);\n        return;\n      }\n      if (type === 'touch') {\n        this.isDoubleTap(x, y, lngLat);\n        return;\n      }\n      if (type !== 'click' && type !== 'dblclick') {\n        this.emit(InteractionEvent.Hover, {\n          x,\n          y,\n          lngLat,\n          type,\n          target: event\n        });\n      }\n    });\n    this.container = container;\n  }\n  init() {\n    // 注册事件在地图底图上\n    this.addEventListenerOnMap();\n    this.$containter = this.mapService.getMapContainer();\n  }\n  destroy() {\n    if (this.hammertime) {\n      this.hammertime.destroy();\n    }\n    this.removeEventListenerOnMap();\n    this.off(InteractionEvent.Hover);\n  }\n  triggerHover({\n    x,\n    y\n  }) {\n    this.emit(InteractionEvent.Hover, {\n      x,\n      y\n    });\n  }\n  triggerSelect(id) {\n    this.emit(InteractionEvent.Select, {\n      featureId: id\n    });\n  }\n  triggerActive(id) {\n    this.emit(InteractionEvent.Active, {\n      featureId: id\n    });\n  }\n  addEventListenerOnMap() {\n    const $containter = this.mapService.getMapContainer();\n    if ($containter) {\n      const hammertime = new Hammer.Manager($containter);\n      // $containter.addEventListener('mousemove', this.onHover);\n      // $containter.addEventListener('click', this.onHover);\n      hammertime.add(new Hammer.Tap({\n        event: 'dblclick',\n        taps: 2\n      }));\n      hammertime.add(new Hammer.Tap({\n        event: 'click'\n      }));\n      hammertime.add(new Hammer.Pan({\n        threshold: 0,\n        pointers: 0\n      }));\n      hammertime.add(new Hammer.Press({}));\n      // hammertime.get('pan').set({ direction: Hammer.DIRECTION_ALL });\n      // hammertime.get('pinch').set({ enable: true });\n      hammertime.on('dblclick click', this.onHammer);\n      hammertime.on('panstart panmove panend pancancel', this.onDrag);\n      $containter.addEventListener('touchstart', this.onTouch);\n      $containter.addEventListener('touchend', this.onTouchEnd);\n      $containter.addEventListener('mousemove', this.onHover);\n      $containter.addEventListener('touchmove', this.onTouchMove);\n      // $containter.addEventListener('click', this.onHover);\n      $containter.addEventListener('mousedown', this.onHover, true);\n      $containter.addEventListener('mouseup', this.onHover);\n      $containter.addEventListener('contextmenu', this.onHover);\n      this.hammertime = hammertime;\n    }\n\n    // Tip: 根据场景注册事件到 L7 canvas 上\n  }\n  removeEventListenerOnMap() {\n    const $containter = this.mapService.getMapContainer();\n    if ($containter) {\n      $containter.removeEventListener('mousemove', this.onHover);\n      this.hammertime.off('dblclick click', this.onHammer);\n      this.hammertime.off('panstart panmove panend pancancel', this.onDrag);\n      $containter.removeEventListener('touchstart', this.onTouch);\n      $containter.removeEventListener('touchend', this.onTouchEnd);\n      $containter.removeEventListener('mousedown', this.onHover);\n      $containter.removeEventListener('mouseup', this.onHover);\n      // $containter.removeEventListener('dblclick', this.onHover);\n      $containter.removeEventListener('contextmenu', this.onHover);\n    }\n  }\n  interactionEvent(target) {\n    const {\n      type,\n      pointerType\n    } = target;\n    let clientX;\n    let clientY;\n    if (pointerType === 'touch') {\n      clientY = Math.floor(target.pointers[0].clientY);\n      clientX = Math.floor(target.pointers[0].clientX);\n    } else {\n      clientY = Math.floor(target.srcEvent.y);\n      clientX = Math.floor(target.srcEvent.x);\n    }\n    const $containter = this.mapService.getMapContainer();\n    if ($containter) {\n      const {\n        top,\n        left\n      } = $containter.getBoundingClientRect();\n      clientX -= left;\n      clientY -= top;\n    }\n    const lngLat = this.mapService.containerToLngLat([clientX, clientY]);\n    return {\n      x: clientX,\n      y: clientY,\n      lngLat,\n      type,\n      target: target.srcEvent\n    };\n  }\n  isDoubleTap(x, y, lngLat) {\n    const nowTime = new Date().getTime();\n    let type = 'click';\n    if (nowTime - this.lastClickTime < 400 && Math.abs(this.lastClickXY[0] - x) < 10 && Math.abs(this.lastClickXY[1] - y) < 10) {\n      this.lastClickTime = 0;\n      this.lastClickXY = [-1, -1];\n      if (this.clickTimer) {\n        clearTimeout(this.clickTimer);\n      }\n      type = 'dblclick';\n      this.emit(InteractionEvent.Hover, {\n        x,\n        y,\n        lngLat,\n        type\n      });\n    } else {\n      this.lastClickTime = nowTime;\n      this.lastClickXY = [x, y];\n      // @ts-ignore\n      this.clickTimer = setTimeout(() => {\n        type = 'click';\n        this.emit(InteractionEvent.Hover, {\n          x,\n          y,\n          lngLat,\n          type\n        });\n      }, 400);\n    }\n  }\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}