{"ast":null,"code":"import { __awaiter } from \"tslib\";\nexport const noop = () => {\n  return {\n    dispose: () => {}\n  };\n};\nexport var NsXFlowHook;\n(function (NsXFlowHook) {\n  NsXFlowHook.CONFIG_TYPE = 'XFlowHook';\n})(NsXFlowHook || (NsXFlowHook = {}));\nexport class HookConfig {\n  constructor() {\n    /** CONFIG_TYPE */\n    this.CONFIG_TYPE = NsXFlowHook.CONFIG_TYPE;\n    this.time = Date.now();\n    /** 提供一个runtime注册hook的方式 */\n    this.setRegisterHook = fn => {\n      this.hookRegisterFunc = fn;\n    };\n    /** 这里在canvas上提供一个runtime注册hookhub的方式 */\n    this.setRegisterHookhub = fn => {\n      this.hookhubRegisterFn = fn;\n    };\n    this.getConfig = () => __awaiter(this, void 0, void 0, function* () {\n      const options = {\n        CONFIG_TYPE: this.CONFIG_TYPE,\n        hookRegisterFn: this.hookRegisterFunc || noop,\n        hookhubRegisterFn: this.hookhubRegisterFn || noop\n      };\n      return options;\n    });\n    this.dispose = () => {};\n  }\n}","map":{"version":3,"names":["noop","dispose","NsXFlowHook","CONFIG_TYPE","HookConfig","constructor","time","Date","now","setRegisterHook","fn","hookRegisterFunc","setRegisterHookhub","hookhubRegisterFn","getConfig","__awaiter","options","hookRegisterFn"],"sources":["../../src/hooks/config.tsx"],"sourcesContent":[null],"mappings":";AAGA,OAAO,MAAMA,IAAI,GAAGA,CAAA,KAAK;EACvB,OAAO;IACLC,OAAO,EAAEA,CAAA,KAAK,CAAE;GACjB;AACH,CAAC;AACD,OAAM,IAAWC,WAAW;AAA5B,WAAiBA,WAAW;EACbA,WAAA,CAAAC,WAAW,GAAG,WAAW;AACxC,CAAC,EAFgBD,WAAW,KAAXA,WAAW;AAI5B,OAAM,MAAOE,UAAU;EAAvBC,YAAA;IACE;IACS,KAAAF,WAAW,GAAGD,WAAW,CAACC,WAAW;IAEvC,KAAAG,IAAI,GAAGC,IAAI,CAACC,GAAG,EAAE;IAQxB;IACA,KAAAC,eAAe,GAAIC,EAAmB,IAAI;MACxC,IAAI,CAACC,gBAAgB,GAAGD,EAAE;IAC5B,CAAC;IAED;IACA,KAAAE,kBAAkB,GAAIF,EAAsB,IAAI;MAC9C,IAAI,CAACG,iBAAiB,GAAGH,EAAE;IAC7B,CAAC;IAED,KAAAI,SAAS,GAAG,MAAWC,SAAA;MACrB,MAAMC,OAAO,GAAG;QACdb,WAAW,EAAE,IAAI,CAACA,WAAW;QAC7Bc,cAAc,EAAE,IAAI,CAACN,gBAAgB,IAAIX,IAAI;QAC7Ca,iBAAiB,EAAE,IAAI,CAACA,iBAAiB,IAAIb;OAC9C;MACD,OAAOgB,OAAO;IAChB,CAAC;IAED,KAAAf,OAAO,GAAG,MAAK,CAAE,CAAC;EACpB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}