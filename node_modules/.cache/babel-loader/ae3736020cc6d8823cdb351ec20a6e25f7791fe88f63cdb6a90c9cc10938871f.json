{"ast":null,"code":"var _jsxFileName = \"/Users/bhanudahiya/Desktop/ledger-IQ/src/components/Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Card, Row } from \"antd\";\nimport { Line, Pie } from \"@ant-design/charts\";\nimport moment from \"moment\";\nimport TransactionSearch from \"./TransactionSearch\";\nimport Header from \"./Header\";\nimport AddIncomeModal from \"./Modals/AddIncome\";\nimport AddExpenseModal from \"./Modals/AddExpense\";\nimport Cards from \"./Cards\";\nimport NoTransactions from \"./NoTransactions\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport { auth, db } from \"../firebase\";\nimport { addDoc, collection, getDocs, query } from \"firebase/firestore\";\nimport Loader from \"./Loader\";\nimport { toast } from \"react-toastify\";\nimport { useNavigate } from \"react-router-dom\";\nimport { unparse } from \"papaparse\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [user] = useAuthState(auth);\n\n  // const sampleTransactions = [\n  // {\n  //   name: \"Pay day\",\n  //   type: \"income\",\n  //   date: \"2023-01-15\",\n  //   amount: 2000,\n  //   tag: \"salary\",\n  // },\n  // {\n  //   name: \"Dinner\",\n  //   type: \"expense\",\n  //   date: \"2023-01-20\",\n  //   amount: 500,\n  //   tag: \"food\",\n  // },\n  // {\n  //   name: \"Books\",\n  //   type: \"expense\",\n  //   date: \"2023-01-25\",\n  //   amount: 300,\n  //   tag: \"education\",\n  // },\n  // ];\n  const [isExpenseModalVisible, setIsExpenseModalVisible] = useState(false);\n  const [isIncomeModalVisible, setIsIncomeModalVisible] = useState(false);\n  const [transactions, setTransactions] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [currentBalance, setCurrentBalance] = useState(0);\n  const [income, setIncome] = useState(0);\n  const [expenses, setExpenses] = useState(0);\n  const navigate = useNavigate();\n  const processChartData = () => {\n    const balanceData = [];\n    const spendingData = {};\n    transactions.forEach(transaction => {\n      const monthYear = moment(transaction.date).format(\"MMM YYYY\");\n      const tag = transaction.tag;\n      if (transaction.type === \"income\") {\n        if (balanceData.some(data => data.month === monthYear)) {\n          balanceData.find(data => data.month === monthYear).balance += transaction.amount;\n        } else {\n          balanceData.push({\n            month: monthYear,\n            balance: transaction.amount\n          });\n        }\n      } else {\n        if (balanceData.some(data => data.month === monthYear)) {\n          balanceData.find(data => data.month === monthYear).balance -= transaction.amount;\n        } else {\n          balanceData.push({\n            month: monthYear,\n            balance: -transaction.amount\n          });\n        }\n        if (spendingData[tag]) {\n          spendingData[tag] += transaction.amount;\n        } else {\n          spendingData[tag] = transaction.amount;\n        }\n      }\n    });\n    const spendingDataArray = Object.keys(spendingData).map(key => ({\n      category: key,\n      value: spendingData[key]\n    }));\n    return {\n      balanceData,\n      spendingDataArray\n    };\n  };\n  const {\n    balanceData,\n    spendingDataArray\n  } = processChartData();\n  const showExpenseModal = () => {\n    setIsExpenseModalVisible(true);\n  };\n  const showIncomeModal = () => {\n    setIsIncomeModalVisible(true);\n  };\n  const handleExpenseCancel = () => {\n    setIsExpenseModalVisible(false);\n  };\n  const handleIncomeCancel = () => {\n    setIsIncomeModalVisible(false);\n  };\n  useEffect(() => {\n    fetchTransactions();\n  }, []);\n  const onFinish = (values, type) => {\n    const newTransaction = {\n      type: type,\n      date: moment(values.date).format(\"YYYY-MM-DD\"),\n      amount: parseFloat(values.amount),\n      tag: values.tag,\n      name: values.name\n    };\n    setTransactions([...transactions, newTransaction]);\n    setIsExpenseModalVisible(false);\n    setIsIncomeModalVisible(false);\n    addTransaction(newTransaction);\n    calculateBalance();\n  };\n  const calculateBalance = () => {\n    let incomeTotal = 0;\n    let expensesTotal = 0;\n    transactions.forEach(transaction => {\n      if (transaction.type === \"income\") {\n        incomeTotal += transaction.amount;\n      } else {\n        expensesTotal += transaction.amount;\n      }\n    });\n    setIncome(incomeTotal);\n    setExpenses(expensesTotal);\n    setCurrentBalance(incomeTotal - expensesTotal);\n  };\n\n  // Calculate the initial balance, income, and expenses\n  useEffect(() => {\n    calculateBalance();\n  }, [transactions]);\n  async function addTransaction(transaction, many) {\n    try {\n      const docRef = await addDoc(collection(db, `users/${user.uid}/transactions`), transaction);\n      console.log(\"Document written with ID: \", docRef.id);\n      if (!many) {\n        toast.success(\"Transaction Added!\");\n      }\n    } catch (e) {\n      console.error(\"Error adding document: \", e);\n      if (!many) {\n        toast.error(\"Couldn't add transaction\");\n      }\n    }\n  }\n  async function fetchTransactions() {\n    setLoading(true);\n    if (user) {\n      const q = query(collection(db, `users/${user.uid}/transactions`));\n      const querySnapshot = await getDocs(q);\n      let transactionsArray = [];\n      querySnapshot.forEach(doc => {\n        // doc.data() is never undefined for query doc snapshots\n        transactionsArray.push(doc.data());\n      });\n      setTransactions(transactionsArray);\n      toast.success(\"Transactions Fetched!\");\n    }\n    setLoading(false);\n  }\n  const balanceConfig = {\n    data: balanceData,\n    xField: \"month\",\n    yField: \"balance\"\n  };\n  const spendingConfig = {\n    data: spendingDataArray,\n    angleField: \"value\",\n    colorField: \"category\"\n  };\n  function reset() {\n    console.log(\"resetting\");\n  }\n  const cardStyle = {\n    boxShadow: \"0px 0px 30px 8px rgba(227, 227, 227, 0.75)\",\n    margin: \"2rem\",\n    borderRadius: \"0.5rem\",\n    minWidth: \"400px\",\n    flex: 1\n  };\n  function exportToCsv() {\n    const csv = unparse(transactions, {\n      fields: [\"name\", \"type\", \"date\", \"amount\", \"tag\"]\n    });\n    const blob = new Blob([csv], {\n      type: \"text/csv;charset=utf-8;\"\n    });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement(\"a\");\n    link.href = url;\n    link.download = \"transactions.csv\";\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Cards, {\n        currentBalance: currentBalance,\n        income: income,\n        expenses: expenses,\n        showExpenseModal: showExpenseModal,\n        showIncomeModal: showIncomeModal,\n        cardStyle: cardStyle,\n        reset: reset\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(AddExpenseModal, {\n        isExpenseModalVisible: isExpenseModalVisible,\n        handleExpenseCancel: handleExpenseCancel,\n        onFinish: onFinish\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(AddIncomeModal, {\n        isIncomeModalVisible: isIncomeModalVisible,\n        handleIncomeCancel: handleIncomeCancel,\n        onFinish: onFinish\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 11\n      }, this), transactions.length === 0 ? /*#__PURE__*/_jsxDEV(NoTransactions, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          gutter: 16,\n          children: [/*#__PURE__*/_jsxDEV(Card, {\n            bordered: true,\n            style: cardStyle,\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Financial Statistics\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Line, {\n              ...balanceConfig,\n              data: balanceData\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Card, {\n            bordered: true,\n            style: {\n              ...cardStyle,\n              flex: 0.45\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Total Spending\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 19\n            }, this), spendingDataArray.length == 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Seems like you haven't spent anything till now...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(Pie, {\n              ...spendingConfig,\n              data: spendingDataArray\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 15\n        }, this)\n      }, void 0, false), /*#__PURE__*/_jsxDEV(TransactionSearch, {\n        transactions: transactions,\n        exportToCsv: exportToCsv,\n        fetchTransactions: fetchTransactions,\n        addTransaction: addTransaction\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 225,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"jRCrUQ8g5nP4cUBMpSChqpIlaeM=\", false, function () {\n  return [useAuthState, useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","Card","Row","Line","Pie","moment","TransactionSearch","Header","AddIncomeModal","AddExpenseModal","Cards","NoTransactions","useAuthState","auth","db","addDoc","collection","getDocs","query","Loader","toast","useNavigate","unparse","jsxDEV","_jsxDEV","Fragment","_Fragment","Dashboard","_s","user","isExpenseModalVisible","setIsExpenseModalVisible","isIncomeModalVisible","setIsIncomeModalVisible","transactions","setTransactions","loading","setLoading","currentBalance","setCurrentBalance","income","setIncome","expenses","setExpenses","navigate","processChartData","balanceData","spendingData","forEach","transaction","monthYear","date","format","tag","type","some","data","month","find","balance","amount","push","spendingDataArray","Object","keys","map","key","category","value","showExpenseModal","showIncomeModal","handleExpenseCancel","handleIncomeCancel","fetchTransactions","onFinish","values","newTransaction","parseFloat","name","addTransaction","calculateBalance","incomeTotal","expensesTotal","many","docRef","uid","console","log","id","success","e","error","q","querySnapshot","transactionsArray","doc","balanceConfig","xField","yField","spendingConfig","angleField","colorField","reset","cardStyle","boxShadow","margin","borderRadius","minWidth","flex","exportToCsv","csv","fields","blob","Blob","url","URL","createObjectURL","link","document","createElement","href","download","body","appendChild","click","removeChild","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","gutter","bordered","style","_c","$RefreshReg$"],"sources":["/Users/bhanudahiya/Desktop/ledger-IQ/src/components/Dashboard.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Card, Row } from \"antd\";\nimport { Line, Pie } from \"@ant-design/charts\";\nimport moment from \"moment\";\nimport TransactionSearch from \"./TransactionSearch\";\nimport Header from \"./Header\";\nimport AddIncomeModal from \"./Modals/AddIncome\";\nimport AddExpenseModal from \"./Modals/AddExpense\";\nimport Cards from \"./Cards\";\nimport NoTransactions from \"./NoTransactions\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport { auth, db } from \"../firebase\";\nimport { addDoc, collection, getDocs, query } from \"firebase/firestore\";\nimport Loader from \"./Loader\";\nimport { toast } from \"react-toastify\";\nimport { useNavigate } from \"react-router-dom\";\nimport { unparse } from \"papaparse\";\n\nconst Dashboard = () => {\n  const [user] = useAuthState(auth);\n\n  // const sampleTransactions = [\n  // {\n  //   name: \"Pay day\",\n  //   type: \"income\",\n  //   date: \"2023-01-15\",\n  //   amount: 2000,\n  //   tag: \"salary\",\n  // },\n  // {\n  //   name: \"Dinner\",\n  //   type: \"expense\",\n  //   date: \"2023-01-20\",\n  //   amount: 500,\n  //   tag: \"food\",\n  // },\n  // {\n  //   name: \"Books\",\n  //   type: \"expense\",\n  //   date: \"2023-01-25\",\n  //   amount: 300,\n  //   tag: \"education\",\n  // },\n  // ];\n  const [isExpenseModalVisible, setIsExpenseModalVisible] = useState(false);\n  const [isIncomeModalVisible, setIsIncomeModalVisible] = useState(false);\n  const [transactions, setTransactions] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [currentBalance, setCurrentBalance] = useState(0);\n  const [income, setIncome] = useState(0);\n  const [expenses, setExpenses] = useState(0);\n\n  const navigate = useNavigate();\n\n  const processChartData = () => {\n    const balanceData = [];\n    const spendingData = {};\n\n    transactions.forEach((transaction) => {\n      const monthYear = moment(transaction.date).format(\"MMM YYYY\");\n      const tag = transaction.tag;\n\n      if (transaction.type === \"income\") {\n        if (balanceData.some((data) => data.month === monthYear)) {\n          balanceData.find((data) => data.month === monthYear).balance +=\n            transaction.amount;\n        } else {\n          balanceData.push({ month: monthYear, balance: transaction.amount });\n        }\n      } else {\n        if (balanceData.some((data) => data.month === monthYear)) {\n          balanceData.find((data) => data.month === monthYear).balance -=\n            transaction.amount;\n        } else {\n          balanceData.push({ month: monthYear, balance: -transaction.amount });\n        }\n\n        if (spendingData[tag]) {\n          spendingData[tag] += transaction.amount;\n        } else {\n          spendingData[tag] = transaction.amount;\n        }\n      }\n    });\n\n    const spendingDataArray = Object.keys(spendingData).map((key) => ({\n      category: key,\n      value: spendingData[key],\n    }));\n\n    return { balanceData, spendingDataArray };\n  };\n\n  const { balanceData, spendingDataArray } = processChartData();\n  const showExpenseModal = () => {\n    setIsExpenseModalVisible(true);\n  };\n\n  const showIncomeModal = () => {\n    setIsIncomeModalVisible(true);\n  };\n\n  const handleExpenseCancel = () => {\n    setIsExpenseModalVisible(false);\n  };\n\n  const handleIncomeCancel = () => {\n    setIsIncomeModalVisible(false);\n  };\n\n  useEffect(() => {\n    fetchTransactions();\n  }, []);\n\n  const onFinish = (values, type) => {\n    const newTransaction = {\n      type: type,\n      date: moment(values.date).format(\"YYYY-MM-DD\"),\n      amount: parseFloat(values.amount),\n      tag: values.tag,\n      name: values.name,\n    };\n\n    setTransactions([...transactions, newTransaction]);\n    setIsExpenseModalVisible(false);\n    setIsIncomeModalVisible(false);\n    addTransaction(newTransaction);\n    calculateBalance();\n  };\n\n  const calculateBalance = () => {\n    let incomeTotal = 0;\n    let expensesTotal = 0;\n\n    transactions.forEach((transaction) => {\n      if (transaction.type === \"income\") {\n        incomeTotal += transaction.amount;\n      } else {\n        expensesTotal += transaction.amount;\n      }\n    });\n\n    setIncome(incomeTotal);\n    setExpenses(expensesTotal);\n    setCurrentBalance(incomeTotal - expensesTotal);\n  };\n\n  // Calculate the initial balance, income, and expenses\n  useEffect(() => {\n    calculateBalance();\n  }, [transactions]);\n\n  async function addTransaction(transaction, many) {\n    try {\n      const docRef = await addDoc(\n        collection(db, `users/${user.uid}/transactions`),\n        transaction\n      );\n      console.log(\"Document written with ID: \", docRef.id);\n      if (!many) {\n        toast.success(\"Transaction Added!\");\n      }\n    } catch (e) {\n      console.error(\"Error adding document: \", e);\n      if (!many) {\n        toast.error(\"Couldn't add transaction\");\n      }\n    }\n  }\n\n  async function fetchTransactions() {\n    setLoading(true);\n    if (user) {\n      const q = query(collection(db, `users/${user.uid}/transactions`));\n      const querySnapshot = await getDocs(q);\n      let transactionsArray = [];\n      querySnapshot.forEach((doc) => {\n        // doc.data() is never undefined for query doc snapshots\n        transactionsArray.push(doc.data());\n      });\n      setTransactions(transactionsArray);\n      toast.success(\"Transactions Fetched!\");\n    }\n    setLoading(false);\n  }\n\n  const balanceConfig = {\n    data: balanceData,\n    xField: \"month\",\n    yField: \"balance\",\n  };\n\n  const spendingConfig = {\n    data: spendingDataArray,\n    angleField: \"value\",\n    colorField: \"category\",\n  };\n\n  function reset() {\n    console.log(\"resetting\");\n  }\n  const cardStyle = {\n    boxShadow: \"0px 0px 30px 8px rgba(227, 227, 227, 0.75)\",\n    margin: \"2rem\",\n    borderRadius: \"0.5rem\",\n    minWidth: \"400px\",\n    flex: 1,\n  };\n\n  function exportToCsv() {\n    const csv = unparse(transactions, {\n      fields: [\"name\", \"type\", \"date\", \"amount\", \"tag\"],\n    });\n    const blob = new Blob([csv], { type: \"text/csv;charset=utf-8;\" });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement(\"a\");\n    link.href = url;\n    link.download = \"transactions.csv\";\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  }\n\n  return (\n    <div className=\"dashboard-container\">\n      <Header />\n      {loading ? (\n        <Loader />\n      ) : (\n        <>\n          <Cards\n            currentBalance={currentBalance}\n            income={income}\n            expenses={expenses}\n            showExpenseModal={showExpenseModal}\n            showIncomeModal={showIncomeModal}\n            cardStyle={cardStyle}\n            reset={reset}\n          />\n\n          <AddExpenseModal\n            isExpenseModalVisible={isExpenseModalVisible}\n            handleExpenseCancel={handleExpenseCancel}\n            onFinish={onFinish}\n          />\n          <AddIncomeModal\n            isIncomeModalVisible={isIncomeModalVisible}\n            handleIncomeCancel={handleIncomeCancel}\n            onFinish={onFinish}\n          />\n          {transactions.length === 0 ? (\n            <NoTransactions />\n          ) : (\n            <>\n              <Row gutter={16}>\n                <Card bordered={true} style={cardStyle}>\n                  <h2>Financial Statistics</h2>\n                  <Line {...{ ...balanceConfig, data: balanceData }} />\n                </Card>\n\n                <Card bordered={true} style={{ ...cardStyle, flex: 0.45 }}>\n                  <h2>Total Spending</h2>\n                  {spendingDataArray.length == 0 ? (\n                    <p>Seems like you haven't spent anything till now...</p>\n                  ) : (\n                    <Pie {...{ ...spendingConfig, data: spendingDataArray }} />\n                  )}\n                </Card>\n              </Row>\n            </>\n          )}\n          <TransactionSearch\n            transactions={transactions}\n            exportToCsv={exportToCsv}\n            fetchTransactions={fetchTransactions}\n            addTransaction={addTransaction}\n          />\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}