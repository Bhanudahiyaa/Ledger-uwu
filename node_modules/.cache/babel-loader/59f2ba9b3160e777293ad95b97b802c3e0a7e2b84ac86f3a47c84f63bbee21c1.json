{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { IDebugLog, ILayerStage } from '@antv/l7-core';\nimport Source from '@antv/l7-source';\nexport default class DataSourcePlugin {\n  constructor() {\n    _defineProperty(this, \"mapService\", void 0);\n  }\n  apply(layer) {\n    var _this = this;\n    this.mapService = layer.getContainer().mapService;\n    layer.hooks.init.tapPromise('DataSourcePlugin', /*#__PURE__*/_asyncToGenerator(function* () {\n      layer.log(IDebugLog.SourceInitStart, ILayerStage.INIT);\n      let source = layer.getSource();\n      if (!source) {\n        // Tip: 用户没有传入 source 的时候使用图层的默认数据\n        const {\n          data,\n          options\n        } = layer.sourceOption || layer.defaultSourceConfig;\n        source = new Source(data, options);\n        layer.setSource(source);\n      }\n      if (source.inited) {\n        _this.updateClusterData(layer);\n        layer.log(IDebugLog.SourceInitEnd, ILayerStage.INIT);\n      } else {\n        yield new Promise(resolve => {\n          source.on('update', e => {\n            if (e.type === 'inited') {\n              _this.updateClusterData(layer);\n              layer.log(IDebugLog.SourceInitEnd, ILayerStage.INIT);\n            }\n            resolve(null);\n          });\n        });\n      }\n    }));\n\n    // 检测数据是否需要更新\n    layer.hooks.beforeRenderData.tapPromise('DataSourcePlugin', /*#__PURE__*/_asyncToGenerator(function* () {\n      const neeUpdateCluster = _this.updateClusterData(layer);\n      const dataSourceNeedUpdate = layer.dataState.dataSourceNeedUpdate;\n      layer.dataState.dataSourceNeedUpdate = false;\n      const needScale = neeUpdateCluster || dataSourceNeedUpdate;\n      return needScale;\n    }));\n  }\n  updateClusterData(layer) {\n    // Tip: 矢量瓦片不需要进行聚合操作\n    if (layer.isTileLayer || layer.tileLayer || !layer.getSource()) {\n      return false;\n    }\n    const source = layer.getSource();\n    const cluster = source.cluster;\n    const {\n      zoom = 0\n    } = source.clusterOptions;\n    const newZoom = this.mapService.getZoom() - 1;\n    const dataSourceNeedUpdate = layer.dataState.dataSourceNeedUpdate;\n    if (cluster && dataSourceNeedUpdate) {\n      // 数据发生更新\n      source.updateClusterData(Math.floor(newZoom));\n    }\n    // 如果 dataSource 有更新，跳过 zoom 的判断，直接更新一次\n    if (cluster && Math.abs(layer.clusterZoom - newZoom) >= 1) {\n      if (zoom !== Math.floor(newZoom)) {\n        source.updateClusterData(Math.floor(newZoom));\n      }\n      layer.clusterZoom = newZoom;\n      return true;\n    }\n    return false;\n  }\n}","map":{"version":3,"names":["_asyncToGenerator","_defineProperty","IDebugLog","ILayerStage","Source","DataSourcePlugin","constructor","apply","layer","_this","mapService","getContainer","hooks","init","tapPromise","log","SourceInitStart","INIT","source","getSource","data","options","sourceOption","defaultSourceConfig","setSource","inited","updateClusterData","SourceInitEnd","Promise","resolve","on","e","type","beforeRenderData","neeUpdateCluster","dataSourceNeedUpdate","dataState","needScale","isTileLayer","tileLayer","cluster","zoom","clusterOptions","newZoom","getZoom","Math","floor","abs","clusterZoom"],"sources":["/Users/bhanudahiya/Desktop/ledger-IQ/node_modules/@antv/l7-layers/es/plugins/DataSourcePlugin.js"],"sourcesContent":["import _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { IDebugLog, ILayerStage } from '@antv/l7-core';\nimport Source from '@antv/l7-source';\nexport default class DataSourcePlugin {\n  constructor() {\n    _defineProperty(this, \"mapService\", void 0);\n  }\n  apply(layer) {\n    var _this = this;\n    this.mapService = layer.getContainer().mapService;\n    layer.hooks.init.tapPromise('DataSourcePlugin', /*#__PURE__*/_asyncToGenerator(function* () {\n      layer.log(IDebugLog.SourceInitStart, ILayerStage.INIT);\n      let source = layer.getSource();\n      if (!source) {\n        // Tip: 用户没有传入 source 的时候使用图层的默认数据\n        const {\n          data,\n          options\n        } = layer.sourceOption || layer.defaultSourceConfig;\n        source = new Source(data, options);\n        layer.setSource(source);\n      }\n      if (source.inited) {\n        _this.updateClusterData(layer);\n        layer.log(IDebugLog.SourceInitEnd, ILayerStage.INIT);\n      } else {\n        yield new Promise(resolve => {\n          source.on('update', e => {\n            if (e.type === 'inited') {\n              _this.updateClusterData(layer);\n              layer.log(IDebugLog.SourceInitEnd, ILayerStage.INIT);\n            }\n            resolve(null);\n          });\n        });\n      }\n    }));\n\n    // 检测数据是否需要更新\n    layer.hooks.beforeRenderData.tapPromise('DataSourcePlugin', /*#__PURE__*/_asyncToGenerator(function* () {\n      const neeUpdateCluster = _this.updateClusterData(layer);\n      const dataSourceNeedUpdate = layer.dataState.dataSourceNeedUpdate;\n      layer.dataState.dataSourceNeedUpdate = false;\n      const needScale = neeUpdateCluster || dataSourceNeedUpdate;\n      return needScale;\n    }));\n  }\n  updateClusterData(layer) {\n    // Tip: 矢量瓦片不需要进行聚合操作\n    if (layer.isTileLayer || layer.tileLayer || !layer.getSource()) {\n      return false;\n    }\n    const source = layer.getSource();\n    const cluster = source.cluster;\n    const {\n      zoom = 0\n    } = source.clusterOptions;\n    const newZoom = this.mapService.getZoom() - 1;\n    const dataSourceNeedUpdate = layer.dataState.dataSourceNeedUpdate;\n    if (cluster && dataSourceNeedUpdate) {\n      // 数据发生更新\n      source.updateClusterData(Math.floor(newZoom));\n    }\n    // 如果 dataSource 有更新，跳过 zoom 的判断，直接更新一次\n    if (cluster && Math.abs(layer.clusterZoom - newZoom) >= 1) {\n      if (zoom !== Math.floor(newZoom)) {\n        source.updateClusterData(Math.floor(newZoom));\n      }\n      layer.clusterZoom = newZoom;\n      return true;\n    }\n    return false;\n  }\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}