{"ast":null,"code":"// src/statistics.ts\nfunction max(x) {\n  if (x.length === 0) {\n    throw new Error(\"max requires at least one data point\");\n  }\n  let value = x[0];\n  for (let i = 1; i < x.length; i++) {\n    if (x[i] > value) {\n      value = x[i];\n    }\n  }\n  return value * 1;\n}\nfunction min(x) {\n  if (x.length === 0) {\n    throw new Error(\"min requires at least one data point\");\n  }\n  let value = x[0];\n  for (let i = 1; i < x.length; i++) {\n    if (x[i] < value) {\n      value = x[i];\n    }\n  }\n  return value * 1;\n}\nfunction sum(x) {\n  if (x.length === 0) {\n    return 0;\n  }\n  let sumNum = x[0] * 1;\n  for (let i = 1; i < x.length; i++) {\n    sumNum += x[i] * 1;\n  }\n  return sumNum;\n}\nfunction mean(x) {\n  if (x.length === 0) {\n    throw new Error(\"mean requires at least one data point\");\n  }\n  return sum(x) / x.length;\n}\nfunction mode(x) {\n  if (x.length === 0) {\n    throw new Error(\"mean requires at least one data point\");\n  }\n  if (x.length < 3) {\n    return x[0];\n  }\n  x.sort();\n  let last = x[0];\n  let value = NaN;\n  let maxSeen = 0;\n  let seenThis = 1;\n  for (let i = 1; i < x.length + 1; i++) {\n    if (x[i] !== last) {\n      if (seenThis > maxSeen) {\n        maxSeen = seenThis;\n        value = last;\n      }\n      seenThis = 1;\n      last = x[i];\n    } else {\n      seenThis++;\n    }\n  }\n  return value * 1;\n}\nvar statMap = {\n  min,\n  max,\n  mean,\n  sum,\n  mode\n};\nfunction getColumn(data, columnName) {\n  return data.map(item => {\n    return item[columnName];\n  });\n}\nfunction getSatByColumn(type, column) {\n  return statMap[type](column);\n}\nexport { getColumn, getSatByColumn, max, mean, min, mode, statMap, sum };","map":{"version":3,"names":["max","x","length","Error","value","i","min","sum","sumNum","mean","mode","sort","last","NaN","maxSeen","seenThis","statMap","getColumn","data","columnName","map","item","getSatByColumn","type","column"],"sources":["/Users/bhanudahiya/Desktop/ledger-IQ/node_modules/@antv/l7-utils/es/statistics.js"],"sourcesContent":["// src/statistics.ts\nfunction max(x) {\n  if (x.length === 0) {\n    throw new Error(\"max requires at least one data point\");\n  }\n  let value = x[0];\n  for (let i = 1; i < x.length; i++) {\n    if (x[i] > value) {\n      value = x[i];\n    }\n  }\n  return value * 1;\n}\nfunction min(x) {\n  if (x.length === 0) {\n    throw new Error(\"min requires at least one data point\");\n  }\n  let value = x[0];\n  for (let i = 1; i < x.length; i++) {\n    if (x[i] < value) {\n      value = x[i];\n    }\n  }\n  return value * 1;\n}\nfunction sum(x) {\n  if (x.length === 0) {\n    return 0;\n  }\n  let sumNum = x[0] * 1;\n  for (let i = 1; i < x.length; i++) {\n    sumNum += x[i] * 1;\n  }\n  return sumNum;\n}\nfunction mean(x) {\n  if (x.length === 0) {\n    throw new Error(\"mean requires at least one data point\");\n  }\n  return sum(x) / x.length;\n}\nfunction mode(x) {\n  if (x.length === 0) {\n    throw new Error(\"mean requires at least one data point\");\n  }\n  if (x.length < 3) {\n    return x[0];\n  }\n  x.sort();\n  let last = x[0];\n  let value = NaN;\n  let maxSeen = 0;\n  let seenThis = 1;\n  for (let i = 1; i < x.length + 1; i++) {\n    if (x[i] !== last) {\n      if (seenThis > maxSeen) {\n        maxSeen = seenThis;\n        value = last;\n      }\n      seenThis = 1;\n      last = x[i];\n    } else {\n      seenThis++;\n    }\n  }\n  return value * 1;\n}\nvar statMap = {\n  min,\n  max,\n  mean,\n  sum,\n  mode\n};\nfunction getColumn(data, columnName) {\n  return data.map((item) => {\n    return item[columnName];\n  });\n}\nfunction getSatByColumn(type, column) {\n  return statMap[type](column);\n}\nexport {\n  getColumn,\n  getSatByColumn,\n  max,\n  mean,\n  min,\n  mode,\n  statMap,\n  sum\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}