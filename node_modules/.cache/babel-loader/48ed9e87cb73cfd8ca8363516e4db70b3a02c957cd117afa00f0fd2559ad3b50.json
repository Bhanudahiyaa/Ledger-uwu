{"ast":null,"code":"import { __rest } from \"tslib\";\nimport { isUndefined } from '@antv/util';\nimport { Map } from '../core/map';\nimport { deepAssign } from '../utils';\nimport { LayerGroup } from '../core/layer/layer-group';\nimport { LAYERS_MAP, PLOTS_MAP } from './types';\nconst DEFAULT_OPTIONS = {};\nexport class L7Plot extends Map {\n  constructor(container, options) {\n    super(options);\n    /**\n     * 图表实例\n     */\n    this.plots = [];\n    this.container = this.createContainer(container);\n    this.theme = this.createTheme();\n    this.scene = this.createScene();\n    this.registerResources();\n    this.render();\n    this.inited = true;\n  }\n  /**\n   * 获取默认配置\n   */\n  getDefaultOptions() {\n    return deepAssign({}, Map.DefaultOptions, L7Plot.DefaultOptions);\n  }\n  /**\n   * 创建所有图层\n   */\n  createLayers() {\n    const layerGroup = new LayerGroup([]);\n    const layers = this.options.layers || [];\n    for (let index = 0; index < layers.length; index++) {\n      const layer = this.createLayer(layers[index]);\n      layerGroup.addLayer(layer);\n    }\n    return layerGroup;\n  }\n  /**\n   * 创建图层实例\n   */\n  createLayer(layerConfig) {\n    const {\n        type\n      } = layerConfig,\n      options = __rest(layerConfig, [\"type\"]);\n    const LayerClass = LAYERS_MAP[type];\n    if (isUndefined(LayerClass)) {\n      throw new Error(`Don't exist ${type} layer`);\n    }\n    const layer = new LayerClass(options);\n    return layer;\n  }\n  /**\n   * 添加图层\n   */\n  addLayer(layer) {\n    const isLayerClass = layer => {\n      return typeof layer['render'] === 'function';\n    };\n    if (isLayerClass(layer)) {\n      super.addLayer(layer);\n    } else {\n      const plotLayer = this.createLayer(layer);\n      super.addLayer(plotLayer);\n    }\n  }\n  /**\n   * 移除图层\n   */\n  removeLayerByName(name) {\n    const layer = this.layerGroup.getLayerByName(name);\n    if (layer) {\n      return this.layerGroup.removeLayer(layer);\n    }\n    return false;\n  }\n  /**\n   * 更新图层\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  updateLayers(layers) {\n    //\n  }\n  /**\n   * 更新 Plot\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  updatePlots(plots) {\n    //\n  }\n  /**\n   * 渲染\n   */\n  render() {\n    const layerGroup = this.createLayers();\n    if (this.inited) {\n      this.layerGroup.removeAllLayer();\n      layerGroup.addTo(this.scene);\n      this.layerGroup = layerGroup;\n      this.updateControls();\n    } else {\n      this.layerGroup = layerGroup;\n      if (this.scene['sceneService'].loaded) {\n        this.onSceneLoaded();\n      } else {\n        this.scene.once('loaded', () => {\n          this.onSceneLoaded();\n        });\n      }\n    }\n  }\n  /**\n   * scene 加载成功回调\n   */\n  onSceneLoaded() {\n    this.sceneLoaded = true;\n    if (this.layerGroup.isEmpty()) {\n      this.onLayersLoaded();\n    } else {\n      this.layerGroup.once('inited-all', () => {\n        this.onLayersLoaded();\n      });\n    }\n    this.layerGroup.addTo(this.scene);\n  }\n  /**\n   * 图层加载成功回调\n   */\n  onLayersLoaded() {\n    this.layersLoaded = true;\n    this.renderPlots();\n    this.initControls();\n    this.loaded = true;\n    this.emit('loaded');\n  }\n  /**\n   * 渲染 plots\n   */\n  renderPlots() {\n    const plots = this.options.plots || [];\n    for (let index = 0; index < plots.length; index++) {\n      const plot = plots[index];\n      const plotInstance = this.createPlot(plot);\n      this.plots.push(plotInstance);\n    }\n  }\n  /**\n   * 创建 plot\n   */\n  createPlot(plot) {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const {\n        type,\n        legend,\n        layerMenu\n      } = plot,\n      options = __rest(plot, [\"type\", \"legend\", \"layerMenu\"]);\n    const PlotClass = PLOTS_MAP[type];\n    if (isUndefined(PlotClass)) {\n      throw new Error(`Don't exist ${type} plot`);\n    }\n    const plotInstance = new PlotClass(options);\n    plotInstance.attachToScene(this.scene, this.theme);\n    return plotInstance;\n  }\n  /**\n   * 添加图表\n   */\n  addPlot(plotConfig) {\n    // TODO: duplicate plot\n    const plotInstance = this.createPlot(plotConfig);\n    this.plots.push(plotInstance);\n  }\n  /**\n   * 获取所有图表\n   */\n  getPlots() {\n    return this.plots;\n  }\n  /**\n   * 根据图表名称获取图表\n   */\n  getPlotByName(name) {\n    return this.plots.find(plot => {\n      var _a;\n      return ((_a = plot.options) === null || _a === void 0 ? void 0 : _a.name) === name;\n    });\n  }\n  /**\n   * 根据图表名称移除图表\n   */\n  removePlotByName(name) {\n    const layerIndex = this.plots.findIndex(plot => {\n      var _a;\n      return ((_a = plot.options) === null || _a === void 0 ? void 0 : _a.name) === name;\n    });\n    if (layerIndex === -1) return false;\n    const [plot] = this.plots.splice(layerIndex, 1);\n    plot.unattachFromScene();\n    return true;\n  }\n  /**\n   * 移除所有的图表\n   */\n  removeAllPlot() {\n    this.plots.forEach(plot => {\n      plot.unattachFromScene();\n    });\n    this.plots = [];\n  }\n}\n/**\n * 默认的 options 配置项\n */\nL7Plot.DefaultOptions = DEFAULT_OPTIONS;","map":{"version":3,"names":["isUndefined","Map","deepAssign","LayerGroup","LAYERS_MAP","PLOTS_MAP","DEFAULT_OPTIONS","L7Plot","constructor","container","options","plots","createContainer","theme","createTheme","scene","createScene","registerResources","render","inited","getDefaultOptions","DefaultOptions","createLayers","layerGroup","layers","index","length","layer","createLayer","addLayer","layerConfig","type","__rest","LayerClass","Error","isLayerClass","plotLayer","removeLayerByName","name","getLayerByName","removeLayer","updateLayers","updatePlots","removeAllLayer","addTo","updateControls","loaded","onSceneLoaded","once","sceneLoaded","isEmpty","onLayersLoaded","layersLoaded","renderPlots","initControls","emit","plot","plotInstance","createPlot","push","legend","layerMenu","PlotClass","attachToScene","addPlot","plotConfig","getPlots","getPlotByName","find","_a","removePlotByName","layerIndex","findIndex","splice","unattachFromScene","removeAllPlot","forEach"],"sources":["../../../src/plot/index.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}