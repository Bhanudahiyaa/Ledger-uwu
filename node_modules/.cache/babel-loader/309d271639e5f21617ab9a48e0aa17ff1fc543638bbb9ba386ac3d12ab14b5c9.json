{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport Point from '@mapbox/point-geometry';\nimport { Camera } from \"./camera\";\nimport { LngLat } from \"./geo/lng_lat\";\nimport { LngLatBounds } from \"./geo/lng_lat_bounds\";\nimport { Transform } from \"./geo/transform\";\nimport { HandlerManager } from \"./handler_manager\";\nimport { browser } from \"./util/browser\";\nimport { DOM } from \"./util/dom\";\nimport { Event } from \"./util/evented\";\nimport { TaskQueue } from \"./util/task_queue\";\nimport { extend, uniqueId } from \"./util/util\";\nfunction loadStyles(css, doc) {\n  var isMiniAli = typeof my !== 'undefined' && !!my && typeof my.showToast === 'function' && my.isFRM !== true;\n  var isWeChatMiniProgram = typeof wx !== 'undefined' && wx !== null && (typeof wx.request !== 'undefined' || typeof wx.miniProgram !== 'undefined');\n  if (isMiniAli || isWeChatMiniProgram) {\n    return;\n  }\n  if (!doc) doc = document;\n  if (!doc) {\n    return;\n  }\n  var head = doc.head || doc.getElementsByTagName('head')[0];\n  if (!head) {\n    head = doc.createElement('head');\n    var body = doc.body || doc.getElementsByTagName('body')[0];\n    if (body) {\n      body.parentNode.insertBefore(head, body);\n    } else {\n      doc.documentElement.appendChild(head);\n    }\n  }\n  var style = doc.createElement('style');\n  style.type = 'text/css';\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(doc.createTextNode(css));\n  }\n  head.appendChild(style);\n  return style;\n}\nloadStyles(`.l7-map {\n  font:\n    12px/20px 'Helvetica Neue',\n    Arial,\n    Helvetica,\n    sans-serif;\n  overflow: hidden;\n  position: relative;\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n}\n\n.l7-canvas {\n  position: absolute;\n  left: 0;\n  top: 0;\n}\n\n.l7-map:-webkit-full-screen {\n  width: 100%;\n  height: 100%;\n}\n\n.l7-canary {\n  background-color: salmon;\n}\n\n.l7-canvas-container.l7-interactive,\n.l7-ctrl-group button.l7-ctrl-compass {\n  cursor: grab;\n  -webkit-user-select: none;\n     -moz-user-select: none;\n      -ms-user-select: none;\n          user-select: none;\n}\n\n.l7-canvas-container.l7-interactive.l7-track-pointer {\n  cursor: pointer;\n}\n\n.l7-canvas-container.l7-interactive:active,\n.l7-ctrl-group button.l7-ctrl-compass:active {\n  cursor: grabbing;\n}\n\n.l7-canvas-container.l7-touch-zoom-rotate,\n.l7-canvas-container.l7-touch-zoom-rotate .l7-canvas {\n  touch-action: pan-x pan-y;\n}\n\n.l7-canvas-container.l7-touch-drag-pan,\n.l7-canvas-container.l7-touch-drag-pan .l7-canvas {\n  touch-action: pinch-zoom;\n}\n\n.l7-canvas-container.l7-touch-zoom-rotate.l7-touch-drag-pan,\n.l7-canvas-container.l7-touch-zoom-rotate.l7-touch-drag-pan .l7-canvas {\n  touch-action: none;\n}\n\n.l7-canvas-container.l7-touch-drag-pan.l7-cooperative-gestures,\n.l7-canvas-container.l7-touch-drag-pan.l7-cooperative-gestures .l7-canvas {\n  touch-action: pan-x pan-y;\n}\n\n.l7-cooperative-gesture-screen {\n  background: rgba(0 0 0 / 40%);\n  position: absolute;\n  inset: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: white;\n  padding: 1rem;\n  font-size: 1.4em;\n  line-height: 1.2;\n  opacity: 0;\n  pointer-events: none;\n  transition: opacity 1s ease 1s;\n  z-index: 99999;\n}\n\n.l7-cooperative-gesture-screen.l7-show {\n  opacity: 1;\n  transition: opacity 0.05s;\n}\n\n.l7-cooperative-gesture-screen .l7-mobile-message {\n  display: none;\n}\n\n@media (hover: none), (width <= 480px) {\n  .l7-cooperative-gesture-screen .l7-desktop-message {\n    display: none;\n  }\n\n  .l7-cooperative-gesture-screen .l7-mobile-message {\n    display: block;\n  }\n}\n\n.l7-ctrl-top-left,\n.l7-ctrl-top-right,\n.l7-ctrl-bottom-left,\n.l7-ctrl-bottom-right {\n  position: absolute;\n  pointer-events: none;\n  z-index: 2;\n}\n.l7-ctrl-top-left {\n  top: 0;\n  left: 0;\n}\n.l7-ctrl-top-right {\n  top: 0;\n  right: 0;\n}\n.l7-ctrl-bottom-left {\n  bottom: 0;\n  left: 0;\n}\n.l7-ctrl-bottom-right {\n  right: 0;\n  bottom: 0;\n}\n\n.l7-ctrl {\n  clear: both;\n  pointer-events: auto;\n\n  /* workaround for a Safari bug https://github.com/mapbox/mapbox-gl-js/issues/8185 */\n  -webkit-transform: translate(0, 0);\n          transform: translate(0, 0);\n}\n.l7-ctrl-top-left .l7-ctrl {\n  margin: 10px 0 0 10px;\n  float: left;\n}\n.l7-ctrl-top-right .l7-ctrl {\n  margin: 10px 10px 0 0;\n  float: right;\n}\n.l7-ctrl-bottom-left .l7-ctrl {\n  margin: 0 0 10px 10px;\n  float: left;\n}\n.l7-ctrl-bottom-right .l7-ctrl {\n  margin: 0 10px 10px 0;\n  float: right;\n}\n\n.l7-crosshair,\n.l7-crosshair .l7-interactive,\n.l7-crosshair .l7-interactive:active {\n  cursor: crosshair;\n}\n\n.l7-boxzoom {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 0;\n  height: 0;\n  background: #fff;\n  border: 2px dotted #202020;\n  opacity: 0.5;\n  z-index: 10;\n}\n`);\nimport { lodashUtil } from '@antv/l7-utils';\n\n/**\n * The {@link Map} options object.\n */\n\n// This type is used inside map since all properties are assigned a default value.\n\nconst defaultMinZoom = -2;\nconst defaultMaxZoom = 22;\n\n// the default values, but also the valid range\nconst defaultMinPitch = 0;\nconst defaultMaxPitch = 60;\n\n// use this variable to check maxPitch for validity\nconst maxPitchThreshold = 85;\nconst defaultOptions = {\n  interactive: true,\n  bearingSnap: 7,\n  scrollZoom: true,\n  minZoom: defaultMinZoom,\n  maxZoom: defaultMaxZoom,\n  minPitch: defaultMinPitch,\n  maxPitch: defaultMaxPitch,\n  boxZoom: true,\n  dragRotate: true,\n  dragPan: true,\n  keyboard: true,\n  doubleClickZoom: true,\n  touchZoomRotate: true,\n  touchPitch: true,\n  cooperativeGestures: false,\n  trackResize: true,\n  center: [0, 0],\n  zoom: 0,\n  bearing: 0,\n  pitch: 0,\n  renderWorldCopies: true,\n  fadeDuration: 300,\n  clickTolerance: 3,\n  pitchWithRotate: true\n};\n\n/**\n * The `Map` object represents the map on your page. It exposes methods\n * and properties that enable you to programmatically change the map,\n * and fires events as users interact with it.\n *\n * You create a `Map` by specifying a `container` and other options, see {@link MapOptions} for the full list.\n * Then MapLibre GL JS initializes the map on the page and returns your `Map` object.\n *\n * @group Main\n *\n * @example\n * ```ts\n * let map = new Map({\n *   container: 'map',\n *   center: [-122.420679, 37.772537],\n *   zoom: 13,\n * });\n * ```\n */\nexport class Map extends Camera {\n  constructor(options) {\n    const resolvedOptions = _objectSpread(_objectSpread({}, defaultOptions), options);\n    if (resolvedOptions.minZoom != null && resolvedOptions.maxZoom != null && resolvedOptions.minZoom > resolvedOptions.maxZoom) {\n      throw new Error('maxZoom must be greater than or equal to minZoom');\n    }\n    if (resolvedOptions.minPitch != null && resolvedOptions.maxPitch != null && resolvedOptions.minPitch > resolvedOptions.maxPitch) {\n      throw new Error('maxPitch must be greater than or equal to minPitch');\n    }\n    if (resolvedOptions.minPitch != null && resolvedOptions.minPitch < defaultMinPitch) {\n      throw new Error(`minPitch must be greater than or equal to ${defaultMinPitch}`);\n    }\n    if (resolvedOptions.maxPitch != null && resolvedOptions.maxPitch > maxPitchThreshold) {\n      throw new Error(`maxPitch must be less than or equal to ${maxPitchThreshold}`);\n    }\n    const transform = new Transform(resolvedOptions.minZoom, resolvedOptions.maxZoom, resolvedOptions.minPitch, resolvedOptions.maxPitch, resolvedOptions.renderWorldCopies);\n    super(transform, {\n      bearingSnap: resolvedOptions.bearingSnap\n    });\n    _defineProperty(this, \"_container\", void 0);\n    _defineProperty(this, \"_canvasContainer\", void 0);\n    _defineProperty(this, \"_interactive\", void 0);\n    _defineProperty(this, \"_frameRequest\", void 0);\n    _defineProperty(this, \"_loaded\", void 0);\n    _defineProperty(this, \"_idleTriggered\", false);\n    // accounts for placement finishing as well\n    _defineProperty(this, \"_fullyLoaded\", void 0);\n    _defineProperty(this, \"_trackResize\", void 0);\n    _defineProperty(this, \"_resizeObserver\", void 0);\n    _defineProperty(this, \"_preserveDrawingBuffer\", void 0);\n    _defineProperty(this, \"_failIfMajorPerformanceCaveat\", void 0);\n    _defineProperty(this, \"_fadeDuration\", void 0);\n    _defineProperty(this, \"_crossSourceCollisions\", void 0);\n    _defineProperty(this, \"_crossFadingFactor\", 1);\n    _defineProperty(this, \"_collectResourceTiming\", void 0);\n    _defineProperty(this, \"_renderTaskQueue\", new TaskQueue());\n    _defineProperty(this, \"_mapId\", uniqueId());\n    _defineProperty(this, \"_removed\", void 0);\n    _defineProperty(this, \"_clickTolerance\", void 0);\n    /**\n     * The map's {@link ScrollZoomHandler}, which implements zooming in and out with a scroll wheel or trackpad.\n     * Find more details and examples using `scrollZoom` in the {@link ScrollZoomHandler} section.\n     */\n    _defineProperty(this, \"scrollZoom\", void 0);\n    /**\n     * The map's {@link BoxZoomHandler}, which implements zooming using a drag gesture with the Shift key pressed.\n     * Find more details and examples using `boxZoom` in the {@link BoxZoomHandler} section.\n     */\n    _defineProperty(this, \"boxZoom\", void 0);\n    /**\n     * The map's {@link DragRotateHandler}, which implements rotating the map while dragging with the right\n     * mouse button or with the Control key pressed. Find more details and examples using `dragRotate`\n     * in the {@link DragRotateHandler} section.\n     */\n    _defineProperty(this, \"dragRotate\", void 0);\n    /**\n     * The map's {@link DragPanHandler}, which implements dragging the map with a mouse or touch gesture.\n     * Find more details and examples using `dragPan` in the {@link DragPanHandler} section.\n     */\n    _defineProperty(this, \"dragPan\", void 0);\n    /**\n     * The map's {@link KeyboardHandler}, which allows the user to zoom, rotate, and pan the map using keyboard\n     * shortcuts. Find more details and examples using `keyboard` in the {@link KeyboardHandler} section.\n     */\n    _defineProperty(this, \"keyboard\", void 0);\n    /**\n     * The map's {@link DoubleClickZoomHandler}, which allows the user to zoom by double clicking.\n     * Find more details and examples using `doubleClickZoom` in the {@link DoubleClickZoomHandler} section.\n     */\n    _defineProperty(this, \"doubleClickZoom\", void 0);\n    /**\n     * The map's {@link TwoFingersTouchZoomRotateHandler}, which allows the user to zoom or rotate the map with touch gestures.\n     * Find more details and examples using `touchZoomRotate` in the {@link TwoFingersTouchZoomRotateHandler} section.\n     */\n    _defineProperty(this, \"touchZoomRotate\", void 0);\n    /**\n     * The map's {@link TwoFingersTouchPitchHandler}, which allows the user to pitch the map with touch gestures.\n     * Find more details and examples using `touchPitch` in the {@link TwoFingersTouchPitchHandler} section.\n     */\n    _defineProperty(this, \"touchPitch\", void 0);\n    /**\n     * The map's {@link CooperativeGesturesHandler}, which allows the user to see cooperative gesture info when user tries to zoom in/out.\n     * Find more details and examples using `cooperativeGestures` in the {@link CooperativeGesturesHandler} section.\n     */\n    _defineProperty(this, \"cooperativeGestures\", void 0);\n    _defineProperty(this, \"_onMapScroll\", event => {\n      if (event.target !== this._container) return;\n\n      // Revert any scroll which would move the canvas outside of the view\n      this._container.scrollTop = 0;\n      this._container.scrollLeft = 0;\n      return false;\n    });\n    this._interactive = resolvedOptions.interactive;\n    this._trackResize = resolvedOptions.trackResize === true;\n    this._bearingSnap = resolvedOptions.bearingSnap;\n    this._fadeDuration = resolvedOptions.fadeDuration;\n    this._clickTolerance = resolvedOptions.clickTolerance;\n    if (typeof resolvedOptions.container === 'string') {\n      this._container = document.getElementById(resolvedOptions.container);\n      if (!this._container) {\n        throw new Error(`Container '${resolvedOptions.container}' not found.`);\n      }\n    } else if (resolvedOptions.container instanceof HTMLElement) {\n      this._container = resolvedOptions.container;\n    } else {\n      throw new Error(\"Invalid type: 'container' must be a String or HTMLElement.\");\n    }\n    if (resolvedOptions.maxBounds) {\n      this.setMaxBounds(resolvedOptions.maxBounds);\n    }\n    this._setupContainer();\n    this.on('move', () => this._update()).on('moveend', () => this._update()).on('zoom', () => this._update()).once('idle', () => {\n      this._idleTriggered = true;\n    });\n    if (typeof window !== 'undefined') {\n      let initialResizeEventCaptured = false;\n      const throttledResizeCallback = lodashUtil.throttle(entries => {\n        if (this._trackResize && !this._removed) {\n          this.resize(entries)._update();\n        }\n      }, 50);\n      this._resizeObserver = new ResizeObserver(entries => {\n        if (!initialResizeEventCaptured) {\n          initialResizeEventCaptured = true;\n          return;\n        }\n        throttledResizeCallback(entries);\n      });\n      this._resizeObserver.observe(this._container);\n    }\n    this.handlers = new HandlerManager(this, resolvedOptions);\n    this.jumpTo({\n      center: resolvedOptions.center,\n      zoom: resolvedOptions.zoom,\n      bearing: resolvedOptions.bearing,\n      pitch: resolvedOptions.pitch\n    });\n    if (resolvedOptions.bounds) {\n      this.resize();\n      this.fitBounds(resolvedOptions.bounds, extend({}, resolvedOptions.fitBoundsOptions, {\n        duration: 0\n      }));\n    }\n    this.resize();\n  }\n\n  /**\n   * @internal\n   * Returns a unique number for this map instance which is used for the MapLoadEvent\n   * to make sure we only fire one event per instantiated map object.\n   * @returns the uniq map ID\n   */\n  _getMapId() {\n    return this._mapId;\n  }\n  calculateCameraOptionsFromTo(from, altitudeFrom, to, altitudeTo) {\n    return super.calculateCameraOptionsFromTo(from, altitudeFrom, to, altitudeTo);\n  }\n\n  /**\n   * Resizes the map according to the dimensions of its\n   * `container` element.\n   *\n   * Checks if the map container size changed and updates the map if it has changed.\n   * This method must be called after the map's `container` is resized programmatically\n   * or when the map is shown after being initially hidden with CSS.\n   *\n   * Triggers the following events: `movestart`, `move`, `moveend`, and `resize`.\n   *\n   * @param eventData - Additional properties to be passed to `movestart`, `move`, `resize`, and `moveend`\n   * events that get triggered as a result of resize. This can be useful for differentiating the\n   * source of an event (for example, user-initiated or programmatically-triggered events).\n   * @example\n   * Resize the map when the map container is shown after being initially hidden with CSS.\n   * ```ts\n   * let mapDiv = document.getElementById('map');\n   * if (mapDiv.style.visibility === true) map.resize();\n   * ```\n   */\n  resize(eventData) {\n    var _this$_requestedCamer;\n    const dimensions = this._containerDimensions();\n    const width = dimensions[0];\n    const height = dimensions[1];\n    this.transform.resize(width, height);\n    (_this$_requestedCamer = this._requestedCameraState) === null || _this$_requestedCamer === void 0 || _this$_requestedCamer.resize(width, height);\n    const fireMoving = !this._moving;\n    if (fireMoving) {\n      this.stop();\n      this.fire(new Event('movestart', eventData)).fire(new Event('move', eventData));\n    }\n    this.fire(new Event('resize', eventData));\n    if (fireMoving) this.fire(new Event('moveend', eventData));\n    return this;\n  }\n\n  /**\n   * Returns the map's geographical bounds. When the bearing or pitch is non-zero, the visible region is not\n   * an axis-aligned rectangle, and the result is the smallest bounds that encompasses the visible region.\n   * @returns The geographical bounds of the map as {@link LngLatBounds}.\n   * @example\n   * ```ts\n   * let bounds = map.getBounds();\n   * ```\n   */\n  getBounds() {\n    return this.transform.getBounds();\n  }\n\n  /**\n   * Returns the maximum geographical bounds the map is constrained to, or `null` if none set.\n   * @returns The map object.\n   * @example\n   * ```ts\n   * let maxBounds = map.getMaxBounds();\n   * ```\n   */\n  getMaxBounds() {\n    return this.transform.getMaxBounds();\n  }\n\n  /**\n   * Sets or clears the map's geographical bounds.\n   *\n   * Pan and zoom operations are constrained within these bounds.\n   * If a pan or zoom is performed that would\n   * display regions outside these bounds, the map will\n   * instead display a position and zoom level\n   * as close as possible to the operation's request while still\n   * remaining within the bounds.\n   *\n   * @param bounds - The maximum bounds to set. If `null` or `undefined` is provided, the function removes the map's maximum bounds.\n   * @example\n   * Define bounds that conform to the `LngLatBoundsLike` object as set the max bounds.\n   * ```ts\n   * let bounds = [\n   *   [-74.04728, 40.68392], // [west, south]\n   *   [-73.91058, 40.87764]  // [east, north]\n   * ];\n   * map.setMaxBounds(bounds);\n   * ```\n   */\n  setMaxBounds(bounds) {\n    this.transform.setMaxBounds(bounds && LngLatBounds.convert(bounds));\n    return this._update();\n  }\n\n  /**\n   * Sets or clears the map's minimum zoom level.\n   * If the map's current zoom level is lower than the new minimum,\n   * the map will zoom to the new minimum.\n   *\n   * It is not always possible to zoom out and reach the set `minZoom`.\n   * Other factors such as map height may restrict zooming. For example,\n   * if the map is 512px tall it will not be possible to zoom below zoom 0\n   * no matter what the `minZoom` is set to.\n   *\n   * A {@link ErrorEvent} event will be fired if minZoom is out of bounds.\n   *\n   * @param minZoom - The minimum zoom level to set (-2 - 24).\n   * If `null` or `undefined` is provided, the function removes the current minimum zoom (i.e. sets it to -2).\n   * @example\n   * ```ts\n   * map.setMinZoom(12.25);\n   * ```\n   */\n  setMinZoom(minZoom) {\n    minZoom = minZoom === null || minZoom === undefined ? defaultMinZoom : minZoom;\n    if (minZoom >= defaultMinZoom && minZoom <= this.transform.maxZoom) {\n      this.transform.minZoom = minZoom;\n      this._update();\n      if (this.getZoom() < minZoom) this.setZoom(minZoom);\n      return this;\n    } else throw new Error(`minZoom must be between ${defaultMinZoom} and the current maxZoom, inclusive`);\n  }\n\n  /**\n   * Returns the map's minimum allowable zoom level.\n   *\n   * @returns minZoom\n   * @example\n   * ```ts\n   * let minZoom = map.getMinZoom();\n   * ```\n   */\n  getMinZoom() {\n    return this.transform.minZoom;\n  }\n\n  /**\n   * Sets or clears the map's maximum zoom level.\n   * If the map's current zoom level is higher than the new maximum,\n   * the map will zoom to the new maximum.\n   *\n   * A {@link ErrorEvent} event will be fired if minZoom is out of bounds.\n   *\n   * @param maxZoom - The maximum zoom level to set.\n   * If `null` or `undefined` is provided, the function removes the current maximum zoom (sets it to 22).\n   * @example\n   * ```ts\n   * map.setMaxZoom(18.75);\n   * ```\n   */\n  setMaxZoom(maxZoom) {\n    maxZoom = maxZoom === null || maxZoom === undefined ? defaultMaxZoom : maxZoom;\n    if (maxZoom >= this.transform.minZoom) {\n      this.transform.maxZoom = maxZoom;\n      if (this.getZoom() > maxZoom) this.setZoom(maxZoom);\n      return this;\n    } else throw new Error('maxZoom must be greater than the current minZoom');\n  }\n\n  /**\n   * Returns the map's maximum allowable zoom level.\n   *\n   * @returns The maxZoom\n   * @example\n   * ```ts\n   * let maxZoom = map.getMaxZoom();\n   * ```\n   */\n  getMaxZoom() {\n    return this.transform.maxZoom;\n  }\n\n  /**\n   * Sets or clears the map's minimum pitch.\n   * If the map's current pitch is lower than the new minimum,\n   * the map will pitch to the new minimum.\n   *\n   * A {@link ErrorEvent} event will be fired if minPitch is out of bounds.\n   *\n   * @param minPitch - The minimum pitch to set (0-85). Values greater than 60 degrees are experimental and may result in rendering issues. If you encounter any, please raise an issue with details in the MapLibre project.\n   * If `null` or `undefined` is provided, the function removes the current minimum pitch (i.e. sets it to 0).\n   */\n  setMinPitch(minPitch) {\n    minPitch = minPitch === null || minPitch === undefined ? defaultMinPitch : minPitch;\n    if (minPitch < defaultMinPitch) {\n      throw new Error(`minPitch must be greater than or equal to ${defaultMinPitch}`);\n    }\n    if (minPitch >= defaultMinPitch && minPitch <= this.transform.maxPitch) {\n      this.transform.minPitch = minPitch;\n      if (this.getPitch() < minPitch) this.setPitch(minPitch);\n      return this;\n    } else throw new Error(`minPitch must be between ${defaultMinPitch} and the current maxPitch, inclusive`);\n  }\n\n  /**\n   * Returns the map's minimum allowable pitch.\n   *\n   * @returns The minPitch\n   */\n  getMinPitch() {\n    return this.transform.minPitch;\n  }\n\n  /**\n   * Sets or clears the map's maximum pitch.\n   * If the map's current pitch is higher than the new maximum,\n   * the map will pitch to the new maximum.\n   *\n   * A {@link ErrorEvent} event will be fired if maxPitch is out of bounds.\n   *\n   * @param maxPitch - The maximum pitch to set (0-85). Values greater than 60 degrees are experimental and may result in rendering issues. If you encounter any, please raise an issue with details in the MapLibre project.\n   * If `null` or `undefined` is provided, the function removes the current maximum pitch (sets it to 60).\n   */\n  setMaxPitch(maxPitch) {\n    maxPitch = maxPitch === null || maxPitch === undefined ? defaultMaxPitch : maxPitch;\n    if (maxPitch > maxPitchThreshold) {\n      throw new Error(`maxPitch must be less than or equal to ${maxPitchThreshold}`);\n    }\n    if (maxPitch >= this.transform.minPitch) {\n      this.transform.maxPitch = maxPitch;\n      if (this.getPitch() > maxPitch) this.setPitch(maxPitch);\n      return this;\n    } else throw new Error('maxPitch must be greater than the current minPitch');\n  }\n\n  /**\n   * Returns the map's maximum allowable pitch.\n   *\n   * @returns The maxPitch\n   */\n  getMaxPitch() {\n    return this.transform.maxPitch;\n  }\n\n  /**\n   * Returns the state of `renderWorldCopies`. If `true`, multiple copies of the world will be rendered side by side beyond -180 and 180 degrees longitude. If set to `false`:\n   *\n   * - When the map is zoomed out far enough that a single representation of the world does not fill the map's entire\n   * container, there will be blank space beyond 180 and -180 degrees longitude.\n   * - Features that cross 180 and -180 degrees longitude will be cut in two (with one portion on the right edge of the\n   * map and the other on the left edge of the map) at every zoom level.\n   * @returns The renderWorldCopies\n   * @example\n   * ```ts\n   * let worldCopiesRendered = map.getRenderWorldCopies();\n   * ```\n   * @see [Render world copies](https://maplibre.org/maplibre-gl-js/docs/examples/render-world-copies/)\n   */\n  getRenderWorldCopies() {\n    return this.transform.renderWorldCopies;\n  }\n\n  /**\n   * Sets the state of `renderWorldCopies`.\n   *\n   * @param renderWorldCopies - If `true`, multiple copies of the world will be rendered side by side beyond -180 and 180 degrees longitude. If set to `false`:\n   *\n   * - When the map is zoomed out far enough that a single representation of the world does not fill the map's entire\n   * container, there will be blank space beyond 180 and -180 degrees longitude.\n   * - Features that cross 180 and -180 degrees longitude will be cut in two (with one portion on the right edge of the\n   * map and the other on the left edge of the map) at every zoom level.\n   *\n   * `undefined` is treated as `true`, `null` is treated as `false`.\n   * @example\n   * ```ts\n   * map.setRenderWorldCopies(true);\n   * ```\n   */\n  setRenderWorldCopies(renderWorldCopies) {\n    this.transform.renderWorldCopies = renderWorldCopies;\n  }\n\n  /**\n   * Returns a [Point](https://github.com/mapbox/point-geometry) representing pixel coordinates, relative to the map's `container`,\n   * that correspond to the specified geographical location.\n   *\n   * @param lnglat - The geographical location to project.\n   * @returns The [Point](https://github.com/mapbox/point-geometry) corresponding to `lnglat`, relative to the map's `container`.\n   * @example\n   * ```ts\n   * let coordinate = [-122.420679, 37.772537];\n   * let point = map.project(coordinate);\n   * ```\n   */\n  project(lnglat) {\n    return this.transform.locationPoint(LngLat.convert(lnglat));\n  }\n\n  /**\n   * Returns a {@link LngLat} representing geographical coordinates that correspond\n   * to the specified pixel coordinates.\n   *\n   * @param point - The pixel coordinates to unproject.\n   * @returns The {@link LngLat} corresponding to `point`.\n   * @example\n   * ```ts\n   * map.on('click', (e) => {\n   *   // When the map is clicked, get the geographic coordinate.\n   *   let coordinate = map.unproject(e.point);\n   * });\n   * ```\n   */\n  unproject(point) {\n    return this.transform.pointLocation(Point.convert(point));\n  }\n\n  /**\n   * Returns true if the map is panning, zooming, rotating, or pitching due to a camera animation or user gesture.\n   * @returns true if the map is moving.\n   * @example\n   * ```ts\n   * let isMoving = map.isMoving();\n   * ```\n   */\n  isMoving() {\n    var _this$handlers;\n    return this._moving || ((_this$handlers = this.handlers) === null || _this$handlers === void 0 ? void 0 : _this$handlers.isMoving());\n  }\n\n  /**\n   * Returns true if the map is zooming due to a camera animation or user gesture.\n   * @returns true if the map is zooming.\n   * @example\n   * ```ts\n   * let isZooming = map.isZooming();\n   * ```\n   */\n  isZooming() {\n    var _this$handlers2;\n    return this._zooming || ((_this$handlers2 = this.handlers) === null || _this$handlers2 === void 0 ? void 0 : _this$handlers2.isZooming());\n  }\n\n  /**\n   * Returns true if the map is rotating due to a camera animation or user gesture.\n   * @returns true if the map is rotating.\n   * @example\n   * ```ts\n   * map.isRotating();\n   * ```\n   */\n  isRotating() {\n    var _this$handlers3;\n    return this._rotating || ((_this$handlers3 = this.handlers) === null || _this$handlers3 === void 0 ? void 0 : _this$handlers3.isRotating());\n  }\n\n  /**\n   * Overload of the `on` method that allows to listen to events without specifying a layer.\n   * @event\n   * @param type - The type of the event.\n   * @param listener - The listener callback.\n   */\n\n  /**\n   * Overload of the `on` method that allows to listen to events without specifying a layer.\n   * @event\n   * @param type - The type of the event.\n   * @param listener - The listener callback.\n   */\n\n  on(type, listener) {\n    return super.on(type, listener);\n  }\n\n  /**\n   * Overload of the `once` method that allows to listen to events without specifying a layer.\n   * @event\n   * @param type - The type of the event.\n   * @param listener - The listener callback.\n   */\n\n  /**\n   * Overload of the `once` method that allows to listen to events without specifying a layer.\n   * @event\n   * @param type - The type of the event.\n   * @param listener - The listener callback.\n   */\n\n  once(type, listener) {\n    return super.once(type, listener);\n  }\n\n  /**\n   * Overload of the `off` method that allows to listen to events without specifying a layer.\n   * @event\n   * @param type - The type of the event.\n   * @param listener - The function previously installed as a listener.\n   */\n\n  /**\n   * Overload of the `off` method that allows to listen to events without specifying a layer.\n   * @event\n   * @param type - The type of the event.\n   * @param listener - The function previously installed as a listener.\n   */\n\n  off(type, listener) {\n    return super.off(type, listener);\n  }\n\n  /**\n   * Returns the map's containing HTML element.\n   *\n   * @returns The map's container.\n   */\n  getContainer() {\n    return this._container;\n  }\n\n  /**\n   * Returns the HTML element containing the map's `<canvas>` element.\n   *\n   * If you want to add non-GL overlays to the map, you should append them to this element.\n   *\n   * This is the element to which event bindings for map interactivity (such as panning and zooming) are\n   * attached. It will receive bubbled events from child elements such as the `<canvas>`, but not from\n   * map controls.\n   *\n   * @returns The container of the map's `<canvas>`.\n   * @see [Create a draggable point](https://maplibre.org/maplibre-gl-js/docs/examples/drag-a-point/)\n   */\n  getCanvasContainer() {\n    return this._canvasContainer;\n  }\n  _containerDimensions() {\n    let width = 0;\n    let height = 0;\n    if (this._container) {\n      width = this._container.clientWidth || 400;\n      height = this._container.clientHeight || 300;\n    }\n    return [width, height];\n  }\n  _setupContainer() {\n    const container = this._container;\n    container.classList.add('l7-map');\n    const canvasContainer = this._canvasContainer = DOM.create('div', 'l7-canvas-container', container);\n    if (this._interactive) {\n      canvasContainer.classList.add('l7-interactive');\n    }\n    this._container.addEventListener('scroll', this._onMapScroll, false);\n  }\n  /**\n   * @internal\n   * Update this map's style and sources, and re-render the map.\n   *\n   * @param updateStyle - mark the map's style for reprocessing as\n   * well as its sources\n   */\n  _update() {\n    this.triggerRepaint();\n    return this;\n  }\n\n  /**\n   * @internal\n   * Request that the given callback be executed during the next render\n   * frame.  Schedule a render frame if one is not already scheduled.\n   *\n   * @returns An id that can be used to cancel the callback\n   */\n  _requestRenderFrame(callback) {\n    this._update();\n    return this._renderTaskQueue.add(callback);\n  }\n  _cancelRenderFrame(id) {\n    this._renderTaskQueue.remove(id);\n  }\n\n  /**\n   * @internal\n   * Call when a (re-)render of the map is required:\n   *\n   * - The style has changed (`setPaintProperty()`, etc.)\n   * - Source data has changed (e.g. tiles have finished loading)\n   * - The map has is moving (or just finished moving)\n   * - A transition is in progress\n   *\n   * @param paintStartTimeStamp - The time when the animation frame began executing.\n   */\n  _render(paintStartTimeStamp) {\n    this._renderTaskQueue.run(paintStartTimeStamp);\n    // A task queue callback may have fired a user event which may have removed the map\n    if (this._removed) return;\n    this.fire(new Event('render'));\n    if (!this.isMoving()) {\n      this.fire(new Event('idle'));\n    }\n    return this;\n  }\n\n  /**\n   * Clean up and release all internal resources associated with this map.\n   *\n   * This includes DOM elements, event bindings, web workers, and WebGL resources.\n   *\n   * Use this method when you are done using the map and wish to ensure that it no\n   * longer consumes browser resources. Afterwards, you must not call any other\n   * methods on the map.\n   */\n  remove() {\n    var _this$_resizeObserver;\n    if (this._frameRequest) {\n      this._frameRequest.abort();\n      this._frameRequest = null;\n    }\n    this._renderTaskQueue.clear();\n    this.handlers.destroy();\n    delete this.handlers;\n    (_this$_resizeObserver = this._resizeObserver) === null || _this$_resizeObserver === void 0 || _this$_resizeObserver.disconnect();\n    DOM.remove(this._canvasContainer);\n    this._container.classList.remove('l7-map');\n    this._removed = true;\n    this.fire(new Event('remove'));\n  }\n\n  /**\n   * Trigger the rendering of a single frame. Use this method with custom layers to\n   * repaint the map when the layer changes. Calling this multiple times before the\n   * next frame is rendered will still result in only a single frame being rendered.\n   * @example\n   * ```ts\n   * map.triggerRepaint();\n   * ```\n   */\n  triggerRepaint() {\n    if (!this._frameRequest) {\n      this._frameRequest = new AbortController();\n      browser.frameAsync(this._frameRequest).then(paintStartTimeStamp => {\n        this._frameRequest = null;\n        this._render(paintStartTimeStamp);\n      }).catch(() => {}); // ignore abort error\n    }\n  }\n\n  /**\n   * Returns the elevation for the point where the camera is looking.\n   * This value corresponds to:\n   * \"meters above sea level\" * \"exaggeration\"\n   * @returns The elevation.\n   */\n  getCameraTargetElevation() {\n    return this.transform.elevation;\n  }\n}","map":{"version":3,"names":["_objectSpread","_defineProperty","Point","Camera","LngLat","LngLatBounds","Transform","HandlerManager","browser","DOM","Event","TaskQueue","extend","uniqueId","loadStyles","css","doc","isMiniAli","my","showToast","isFRM","isWeChatMiniProgram","wx","request","miniProgram","document","head","getElementsByTagName","createElement","body","parentNode","insertBefore","documentElement","appendChild","style","type","styleSheet","cssText","createTextNode","lodashUtil","defaultMinZoom","defaultMaxZoom","defaultMinPitch","defaultMaxPitch","maxPitchThreshold","defaultOptions","interactive","bearingSnap","scrollZoom","minZoom","maxZoom","minPitch","maxPitch","boxZoom","dragRotate","dragPan","keyboard","doubleClickZoom","touchZoomRotate","touchPitch","cooperativeGestures","trackResize","center","zoom","bearing","pitch","renderWorldCopies","fadeDuration","clickTolerance","pitchWithRotate","Map","constructor","options","resolvedOptions","Error","transform","event","target","_container","scrollTop","scrollLeft","_interactive","_trackResize","_bearingSnap","_fadeDuration","_clickTolerance","container","getElementById","HTMLElement","maxBounds","setMaxBounds","_setupContainer","on","_update","once","_idleTriggered","window","initialResizeEventCaptured","throttledResizeCallback","throttle","entries","_removed","resize","_resizeObserver","ResizeObserver","observe","handlers","jumpTo","bounds","fitBounds","fitBoundsOptions","duration","_getMapId","_mapId","calculateCameraOptionsFromTo","from","altitudeFrom","to","altitudeTo","eventData","_this$_requestedCamer","dimensions","_containerDimensions","width","height","_requestedCameraState","fireMoving","_moving","stop","fire","getBounds","getMaxBounds","convert","setMinZoom","undefined","getZoom","setZoom","getMinZoom","setMaxZoom","getMaxZoom","setMinPitch","getPitch","setPitch","getMinPitch","setMaxPitch","getMaxPitch","getRenderWorldCopies","setRenderWorldCopies","project","lnglat","locationPoint","unproject","point","pointLocation","isMoving","_this$handlers","isZooming","_this$handlers2","_zooming","isRotating","_this$handlers3","_rotating","listener","off","getContainer","getCanvasContainer","_canvasContainer","clientWidth","clientHeight","classList","add","canvasContainer","create","addEventListener","_onMapScroll","triggerRepaint","_requestRenderFrame","callback","_renderTaskQueue","_cancelRenderFrame","id","remove","_render","paintStartTimeStamp","run","_this$_resizeObserver","_frameRequest","abort","clear","destroy","disconnect","AbortController","frameAsync","then","catch","getCameraTargetElevation","elevation"],"sources":["/Users/bhanudahiya/Desktop/ledger-IQ/node_modules/@antv/l7-map/es/map/map.js"],"sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport Point from '@mapbox/point-geometry';\nimport { Camera } from \"./camera\";\nimport { LngLat } from \"./geo/lng_lat\";\nimport { LngLatBounds } from \"./geo/lng_lat_bounds\";\nimport { Transform } from \"./geo/transform\";\nimport { HandlerManager } from \"./handler_manager\";\nimport { browser } from \"./util/browser\";\nimport { DOM } from \"./util/dom\";\nimport { Event } from \"./util/evented\";\nimport { TaskQueue } from \"./util/task_queue\";\nimport { extend, uniqueId } from \"./util/util\";\nfunction loadStyles(css, doc) {\n  var isMiniAli = typeof my !== 'undefined' && !!my && typeof my.showToast === 'function' && my.isFRM !== true;\n  var isWeChatMiniProgram = typeof wx !== 'undefined' && wx !== null && (typeof wx.request !== 'undefined' || typeof wx.miniProgram !== 'undefined');\n  if (isMiniAli || isWeChatMiniProgram) {\n    return;\n  }\n  if (!doc) doc = document;\n  if (!doc) {\n    return;\n  }\n  var head = doc.head || doc.getElementsByTagName('head')[0];\n  if (!head) {\n    head = doc.createElement('head');\n    var body = doc.body || doc.getElementsByTagName('body')[0];\n    if (body) {\n      body.parentNode.insertBefore(head, body);\n    } else {\n      doc.documentElement.appendChild(head);\n    }\n  }\n  var style = doc.createElement('style');\n  style.type = 'text/css';\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(doc.createTextNode(css));\n  }\n  head.appendChild(style);\n  return style;\n}\nloadStyles(`.l7-map {\n  font:\n    12px/20px 'Helvetica Neue',\n    Arial,\n    Helvetica,\n    sans-serif;\n  overflow: hidden;\n  position: relative;\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n}\n\n.l7-canvas {\n  position: absolute;\n  left: 0;\n  top: 0;\n}\n\n.l7-map:-webkit-full-screen {\n  width: 100%;\n  height: 100%;\n}\n\n.l7-canary {\n  background-color: salmon;\n}\n\n.l7-canvas-container.l7-interactive,\n.l7-ctrl-group button.l7-ctrl-compass {\n  cursor: grab;\n  -webkit-user-select: none;\n     -moz-user-select: none;\n      -ms-user-select: none;\n          user-select: none;\n}\n\n.l7-canvas-container.l7-interactive.l7-track-pointer {\n  cursor: pointer;\n}\n\n.l7-canvas-container.l7-interactive:active,\n.l7-ctrl-group button.l7-ctrl-compass:active {\n  cursor: grabbing;\n}\n\n.l7-canvas-container.l7-touch-zoom-rotate,\n.l7-canvas-container.l7-touch-zoom-rotate .l7-canvas {\n  touch-action: pan-x pan-y;\n}\n\n.l7-canvas-container.l7-touch-drag-pan,\n.l7-canvas-container.l7-touch-drag-pan .l7-canvas {\n  touch-action: pinch-zoom;\n}\n\n.l7-canvas-container.l7-touch-zoom-rotate.l7-touch-drag-pan,\n.l7-canvas-container.l7-touch-zoom-rotate.l7-touch-drag-pan .l7-canvas {\n  touch-action: none;\n}\n\n.l7-canvas-container.l7-touch-drag-pan.l7-cooperative-gestures,\n.l7-canvas-container.l7-touch-drag-pan.l7-cooperative-gestures .l7-canvas {\n  touch-action: pan-x pan-y;\n}\n\n.l7-cooperative-gesture-screen {\n  background: rgba(0 0 0 / 40%);\n  position: absolute;\n  inset: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: white;\n  padding: 1rem;\n  font-size: 1.4em;\n  line-height: 1.2;\n  opacity: 0;\n  pointer-events: none;\n  transition: opacity 1s ease 1s;\n  z-index: 99999;\n}\n\n.l7-cooperative-gesture-screen.l7-show {\n  opacity: 1;\n  transition: opacity 0.05s;\n}\n\n.l7-cooperative-gesture-screen .l7-mobile-message {\n  display: none;\n}\n\n@media (hover: none), (width <= 480px) {\n  .l7-cooperative-gesture-screen .l7-desktop-message {\n    display: none;\n  }\n\n  .l7-cooperative-gesture-screen .l7-mobile-message {\n    display: block;\n  }\n}\n\n.l7-ctrl-top-left,\n.l7-ctrl-top-right,\n.l7-ctrl-bottom-left,\n.l7-ctrl-bottom-right {\n  position: absolute;\n  pointer-events: none;\n  z-index: 2;\n}\n.l7-ctrl-top-left {\n  top: 0;\n  left: 0;\n}\n.l7-ctrl-top-right {\n  top: 0;\n  right: 0;\n}\n.l7-ctrl-bottom-left {\n  bottom: 0;\n  left: 0;\n}\n.l7-ctrl-bottom-right {\n  right: 0;\n  bottom: 0;\n}\n\n.l7-ctrl {\n  clear: both;\n  pointer-events: auto;\n\n  /* workaround for a Safari bug https://github.com/mapbox/mapbox-gl-js/issues/8185 */\n  -webkit-transform: translate(0, 0);\n          transform: translate(0, 0);\n}\n.l7-ctrl-top-left .l7-ctrl {\n  margin: 10px 0 0 10px;\n  float: left;\n}\n.l7-ctrl-top-right .l7-ctrl {\n  margin: 10px 10px 0 0;\n  float: right;\n}\n.l7-ctrl-bottom-left .l7-ctrl {\n  margin: 0 0 10px 10px;\n  float: left;\n}\n.l7-ctrl-bottom-right .l7-ctrl {\n  margin: 0 10px 10px 0;\n  float: right;\n}\n\n.l7-crosshair,\n.l7-crosshair .l7-interactive,\n.l7-crosshair .l7-interactive:active {\n  cursor: crosshair;\n}\n\n.l7-boxzoom {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 0;\n  height: 0;\n  background: #fff;\n  border: 2px dotted #202020;\n  opacity: 0.5;\n  z-index: 10;\n}\n`);\nimport { lodashUtil } from '@antv/l7-utils';\n\n/**\n * The {@link Map} options object.\n */\n\n// This type is used inside map since all properties are assigned a default value.\n\nconst defaultMinZoom = -2;\nconst defaultMaxZoom = 22;\n\n// the default values, but also the valid range\nconst defaultMinPitch = 0;\nconst defaultMaxPitch = 60;\n\n// use this variable to check maxPitch for validity\nconst maxPitchThreshold = 85;\nconst defaultOptions = {\n  interactive: true,\n  bearingSnap: 7,\n  scrollZoom: true,\n  minZoom: defaultMinZoom,\n  maxZoom: defaultMaxZoom,\n  minPitch: defaultMinPitch,\n  maxPitch: defaultMaxPitch,\n  boxZoom: true,\n  dragRotate: true,\n  dragPan: true,\n  keyboard: true,\n  doubleClickZoom: true,\n  touchZoomRotate: true,\n  touchPitch: true,\n  cooperativeGestures: false,\n  trackResize: true,\n  center: [0, 0],\n  zoom: 0,\n  bearing: 0,\n  pitch: 0,\n  renderWorldCopies: true,\n  fadeDuration: 300,\n  clickTolerance: 3,\n  pitchWithRotate: true\n};\n\n/**\n * The `Map` object represents the map on your page. It exposes methods\n * and properties that enable you to programmatically change the map,\n * and fires events as users interact with it.\n *\n * You create a `Map` by specifying a `container` and other options, see {@link MapOptions} for the full list.\n * Then MapLibre GL JS initializes the map on the page and returns your `Map` object.\n *\n * @group Main\n *\n * @example\n * ```ts\n * let map = new Map({\n *   container: 'map',\n *   center: [-122.420679, 37.772537],\n *   zoom: 13,\n * });\n * ```\n */\nexport class Map extends Camera {\n  constructor(options) {\n    const resolvedOptions = _objectSpread(_objectSpread({}, defaultOptions), options);\n    if (resolvedOptions.minZoom != null && resolvedOptions.maxZoom != null && resolvedOptions.minZoom > resolvedOptions.maxZoom) {\n      throw new Error('maxZoom must be greater than or equal to minZoom');\n    }\n    if (resolvedOptions.minPitch != null && resolvedOptions.maxPitch != null && resolvedOptions.minPitch > resolvedOptions.maxPitch) {\n      throw new Error('maxPitch must be greater than or equal to minPitch');\n    }\n    if (resolvedOptions.minPitch != null && resolvedOptions.minPitch < defaultMinPitch) {\n      throw new Error(`minPitch must be greater than or equal to ${defaultMinPitch}`);\n    }\n    if (resolvedOptions.maxPitch != null && resolvedOptions.maxPitch > maxPitchThreshold) {\n      throw new Error(`maxPitch must be less than or equal to ${maxPitchThreshold}`);\n    }\n    const transform = new Transform(resolvedOptions.minZoom, resolvedOptions.maxZoom, resolvedOptions.minPitch, resolvedOptions.maxPitch, resolvedOptions.renderWorldCopies);\n    super(transform, {\n      bearingSnap: resolvedOptions.bearingSnap\n    });\n    _defineProperty(this, \"_container\", void 0);\n    _defineProperty(this, \"_canvasContainer\", void 0);\n    _defineProperty(this, \"_interactive\", void 0);\n    _defineProperty(this, \"_frameRequest\", void 0);\n    _defineProperty(this, \"_loaded\", void 0);\n    _defineProperty(this, \"_idleTriggered\", false);\n    // accounts for placement finishing as well\n    _defineProperty(this, \"_fullyLoaded\", void 0);\n    _defineProperty(this, \"_trackResize\", void 0);\n    _defineProperty(this, \"_resizeObserver\", void 0);\n    _defineProperty(this, \"_preserveDrawingBuffer\", void 0);\n    _defineProperty(this, \"_failIfMajorPerformanceCaveat\", void 0);\n    _defineProperty(this, \"_fadeDuration\", void 0);\n    _defineProperty(this, \"_crossSourceCollisions\", void 0);\n    _defineProperty(this, \"_crossFadingFactor\", 1);\n    _defineProperty(this, \"_collectResourceTiming\", void 0);\n    _defineProperty(this, \"_renderTaskQueue\", new TaskQueue());\n    _defineProperty(this, \"_mapId\", uniqueId());\n    _defineProperty(this, \"_removed\", void 0);\n    _defineProperty(this, \"_clickTolerance\", void 0);\n    /**\n     * The map's {@link ScrollZoomHandler}, which implements zooming in and out with a scroll wheel or trackpad.\n     * Find more details and examples using `scrollZoom` in the {@link ScrollZoomHandler} section.\n     */\n    _defineProperty(this, \"scrollZoom\", void 0);\n    /**\n     * The map's {@link BoxZoomHandler}, which implements zooming using a drag gesture with the Shift key pressed.\n     * Find more details and examples using `boxZoom` in the {@link BoxZoomHandler} section.\n     */\n    _defineProperty(this, \"boxZoom\", void 0);\n    /**\n     * The map's {@link DragRotateHandler}, which implements rotating the map while dragging with the right\n     * mouse button or with the Control key pressed. Find more details and examples using `dragRotate`\n     * in the {@link DragRotateHandler} section.\n     */\n    _defineProperty(this, \"dragRotate\", void 0);\n    /**\n     * The map's {@link DragPanHandler}, which implements dragging the map with a mouse or touch gesture.\n     * Find more details and examples using `dragPan` in the {@link DragPanHandler} section.\n     */\n    _defineProperty(this, \"dragPan\", void 0);\n    /**\n     * The map's {@link KeyboardHandler}, which allows the user to zoom, rotate, and pan the map using keyboard\n     * shortcuts. Find more details and examples using `keyboard` in the {@link KeyboardHandler} section.\n     */\n    _defineProperty(this, \"keyboard\", void 0);\n    /**\n     * The map's {@link DoubleClickZoomHandler}, which allows the user to zoom by double clicking.\n     * Find more details and examples using `doubleClickZoom` in the {@link DoubleClickZoomHandler} section.\n     */\n    _defineProperty(this, \"doubleClickZoom\", void 0);\n    /**\n     * The map's {@link TwoFingersTouchZoomRotateHandler}, which allows the user to zoom or rotate the map with touch gestures.\n     * Find more details and examples using `touchZoomRotate` in the {@link TwoFingersTouchZoomRotateHandler} section.\n     */\n    _defineProperty(this, \"touchZoomRotate\", void 0);\n    /**\n     * The map's {@link TwoFingersTouchPitchHandler}, which allows the user to pitch the map with touch gestures.\n     * Find more details and examples using `touchPitch` in the {@link TwoFingersTouchPitchHandler} section.\n     */\n    _defineProperty(this, \"touchPitch\", void 0);\n    /**\n     * The map's {@link CooperativeGesturesHandler}, which allows the user to see cooperative gesture info when user tries to zoom in/out.\n     * Find more details and examples using `cooperativeGestures` in the {@link CooperativeGesturesHandler} section.\n     */\n    _defineProperty(this, \"cooperativeGestures\", void 0);\n    _defineProperty(this, \"_onMapScroll\", event => {\n      if (event.target !== this._container) return;\n\n      // Revert any scroll which would move the canvas outside of the view\n      this._container.scrollTop = 0;\n      this._container.scrollLeft = 0;\n      return false;\n    });\n    this._interactive = resolvedOptions.interactive;\n    this._trackResize = resolvedOptions.trackResize === true;\n    this._bearingSnap = resolvedOptions.bearingSnap;\n    this._fadeDuration = resolvedOptions.fadeDuration;\n    this._clickTolerance = resolvedOptions.clickTolerance;\n    if (typeof resolvedOptions.container === 'string') {\n      this._container = document.getElementById(resolvedOptions.container);\n      if (!this._container) {\n        throw new Error(`Container '${resolvedOptions.container}' not found.`);\n      }\n    } else if (resolvedOptions.container instanceof HTMLElement) {\n      this._container = resolvedOptions.container;\n    } else {\n      throw new Error(\"Invalid type: 'container' must be a String or HTMLElement.\");\n    }\n    if (resolvedOptions.maxBounds) {\n      this.setMaxBounds(resolvedOptions.maxBounds);\n    }\n    this._setupContainer();\n    this.on('move', () => this._update()).on('moveend', () => this._update()).on('zoom', () => this._update()).once('idle', () => {\n      this._idleTriggered = true;\n    });\n    if (typeof window !== 'undefined') {\n      let initialResizeEventCaptured = false;\n      const throttledResizeCallback = lodashUtil.throttle(entries => {\n        if (this._trackResize && !this._removed) {\n          this.resize(entries)._update();\n        }\n      }, 50);\n      this._resizeObserver = new ResizeObserver(entries => {\n        if (!initialResizeEventCaptured) {\n          initialResizeEventCaptured = true;\n          return;\n        }\n        throttledResizeCallback(entries);\n      });\n      this._resizeObserver.observe(this._container);\n    }\n    this.handlers = new HandlerManager(this, resolvedOptions);\n    this.jumpTo({\n      center: resolvedOptions.center,\n      zoom: resolvedOptions.zoom,\n      bearing: resolvedOptions.bearing,\n      pitch: resolvedOptions.pitch\n    });\n    if (resolvedOptions.bounds) {\n      this.resize();\n      this.fitBounds(resolvedOptions.bounds, extend({}, resolvedOptions.fitBoundsOptions, {\n        duration: 0\n      }));\n    }\n    this.resize();\n  }\n\n  /**\n   * @internal\n   * Returns a unique number for this map instance which is used for the MapLoadEvent\n   * to make sure we only fire one event per instantiated map object.\n   * @returns the uniq map ID\n   */\n  _getMapId() {\n    return this._mapId;\n  }\n  calculateCameraOptionsFromTo(from, altitudeFrom, to, altitudeTo) {\n    return super.calculateCameraOptionsFromTo(from, altitudeFrom, to, altitudeTo);\n  }\n\n  /**\n   * Resizes the map according to the dimensions of its\n   * `container` element.\n   *\n   * Checks if the map container size changed and updates the map if it has changed.\n   * This method must be called after the map's `container` is resized programmatically\n   * or when the map is shown after being initially hidden with CSS.\n   *\n   * Triggers the following events: `movestart`, `move`, `moveend`, and `resize`.\n   *\n   * @param eventData - Additional properties to be passed to `movestart`, `move`, `resize`, and `moveend`\n   * events that get triggered as a result of resize. This can be useful for differentiating the\n   * source of an event (for example, user-initiated or programmatically-triggered events).\n   * @example\n   * Resize the map when the map container is shown after being initially hidden with CSS.\n   * ```ts\n   * let mapDiv = document.getElementById('map');\n   * if (mapDiv.style.visibility === true) map.resize();\n   * ```\n   */\n  resize(eventData) {\n    var _this$_requestedCamer;\n    const dimensions = this._containerDimensions();\n    const width = dimensions[0];\n    const height = dimensions[1];\n    this.transform.resize(width, height);\n    (_this$_requestedCamer = this._requestedCameraState) === null || _this$_requestedCamer === void 0 || _this$_requestedCamer.resize(width, height);\n    const fireMoving = !this._moving;\n    if (fireMoving) {\n      this.stop();\n      this.fire(new Event('movestart', eventData)).fire(new Event('move', eventData));\n    }\n    this.fire(new Event('resize', eventData));\n    if (fireMoving) this.fire(new Event('moveend', eventData));\n    return this;\n  }\n\n  /**\n   * Returns the map's geographical bounds. When the bearing or pitch is non-zero, the visible region is not\n   * an axis-aligned rectangle, and the result is the smallest bounds that encompasses the visible region.\n   * @returns The geographical bounds of the map as {@link LngLatBounds}.\n   * @example\n   * ```ts\n   * let bounds = map.getBounds();\n   * ```\n   */\n  getBounds() {\n    return this.transform.getBounds();\n  }\n\n  /**\n   * Returns the maximum geographical bounds the map is constrained to, or `null` if none set.\n   * @returns The map object.\n   * @example\n   * ```ts\n   * let maxBounds = map.getMaxBounds();\n   * ```\n   */\n  getMaxBounds() {\n    return this.transform.getMaxBounds();\n  }\n\n  /**\n   * Sets or clears the map's geographical bounds.\n   *\n   * Pan and zoom operations are constrained within these bounds.\n   * If a pan or zoom is performed that would\n   * display regions outside these bounds, the map will\n   * instead display a position and zoom level\n   * as close as possible to the operation's request while still\n   * remaining within the bounds.\n   *\n   * @param bounds - The maximum bounds to set. If `null` or `undefined` is provided, the function removes the map's maximum bounds.\n   * @example\n   * Define bounds that conform to the `LngLatBoundsLike` object as set the max bounds.\n   * ```ts\n   * let bounds = [\n   *   [-74.04728, 40.68392], // [west, south]\n   *   [-73.91058, 40.87764]  // [east, north]\n   * ];\n   * map.setMaxBounds(bounds);\n   * ```\n   */\n  setMaxBounds(bounds) {\n    this.transform.setMaxBounds(bounds && LngLatBounds.convert(bounds));\n    return this._update();\n  }\n\n  /**\n   * Sets or clears the map's minimum zoom level.\n   * If the map's current zoom level is lower than the new minimum,\n   * the map will zoom to the new minimum.\n   *\n   * It is not always possible to zoom out and reach the set `minZoom`.\n   * Other factors such as map height may restrict zooming. For example,\n   * if the map is 512px tall it will not be possible to zoom below zoom 0\n   * no matter what the `minZoom` is set to.\n   *\n   * A {@link ErrorEvent} event will be fired if minZoom is out of bounds.\n   *\n   * @param minZoom - The minimum zoom level to set (-2 - 24).\n   * If `null` or `undefined` is provided, the function removes the current minimum zoom (i.e. sets it to -2).\n   * @example\n   * ```ts\n   * map.setMinZoom(12.25);\n   * ```\n   */\n  setMinZoom(minZoom) {\n    minZoom = minZoom === null || minZoom === undefined ? defaultMinZoom : minZoom;\n    if (minZoom >= defaultMinZoom && minZoom <= this.transform.maxZoom) {\n      this.transform.minZoom = minZoom;\n      this._update();\n      if (this.getZoom() < minZoom) this.setZoom(minZoom);\n      return this;\n    } else throw new Error(`minZoom must be between ${defaultMinZoom} and the current maxZoom, inclusive`);\n  }\n\n  /**\n   * Returns the map's minimum allowable zoom level.\n   *\n   * @returns minZoom\n   * @example\n   * ```ts\n   * let minZoom = map.getMinZoom();\n   * ```\n   */\n  getMinZoom() {\n    return this.transform.minZoom;\n  }\n\n  /**\n   * Sets or clears the map's maximum zoom level.\n   * If the map's current zoom level is higher than the new maximum,\n   * the map will zoom to the new maximum.\n   *\n   * A {@link ErrorEvent} event will be fired if minZoom is out of bounds.\n   *\n   * @param maxZoom - The maximum zoom level to set.\n   * If `null` or `undefined` is provided, the function removes the current maximum zoom (sets it to 22).\n   * @example\n   * ```ts\n   * map.setMaxZoom(18.75);\n   * ```\n   */\n  setMaxZoom(maxZoom) {\n    maxZoom = maxZoom === null || maxZoom === undefined ? defaultMaxZoom : maxZoom;\n    if (maxZoom >= this.transform.minZoom) {\n      this.transform.maxZoom = maxZoom;\n      if (this.getZoom() > maxZoom) this.setZoom(maxZoom);\n      return this;\n    } else throw new Error('maxZoom must be greater than the current minZoom');\n  }\n\n  /**\n   * Returns the map's maximum allowable zoom level.\n   *\n   * @returns The maxZoom\n   * @example\n   * ```ts\n   * let maxZoom = map.getMaxZoom();\n   * ```\n   */\n  getMaxZoom() {\n    return this.transform.maxZoom;\n  }\n\n  /**\n   * Sets or clears the map's minimum pitch.\n   * If the map's current pitch is lower than the new minimum,\n   * the map will pitch to the new minimum.\n   *\n   * A {@link ErrorEvent} event will be fired if minPitch is out of bounds.\n   *\n   * @param minPitch - The minimum pitch to set (0-85). Values greater than 60 degrees are experimental and may result in rendering issues. If you encounter any, please raise an issue with details in the MapLibre project.\n   * If `null` or `undefined` is provided, the function removes the current minimum pitch (i.e. sets it to 0).\n   */\n  setMinPitch(minPitch) {\n    minPitch = minPitch === null || minPitch === undefined ? defaultMinPitch : minPitch;\n    if (minPitch < defaultMinPitch) {\n      throw new Error(`minPitch must be greater than or equal to ${defaultMinPitch}`);\n    }\n    if (minPitch >= defaultMinPitch && minPitch <= this.transform.maxPitch) {\n      this.transform.minPitch = minPitch;\n      if (this.getPitch() < minPitch) this.setPitch(minPitch);\n      return this;\n    } else throw new Error(`minPitch must be between ${defaultMinPitch} and the current maxPitch, inclusive`);\n  }\n\n  /**\n   * Returns the map's minimum allowable pitch.\n   *\n   * @returns The minPitch\n   */\n  getMinPitch() {\n    return this.transform.minPitch;\n  }\n\n  /**\n   * Sets or clears the map's maximum pitch.\n   * If the map's current pitch is higher than the new maximum,\n   * the map will pitch to the new maximum.\n   *\n   * A {@link ErrorEvent} event will be fired if maxPitch is out of bounds.\n   *\n   * @param maxPitch - The maximum pitch to set (0-85). Values greater than 60 degrees are experimental and may result in rendering issues. If you encounter any, please raise an issue with details in the MapLibre project.\n   * If `null` or `undefined` is provided, the function removes the current maximum pitch (sets it to 60).\n   */\n  setMaxPitch(maxPitch) {\n    maxPitch = maxPitch === null || maxPitch === undefined ? defaultMaxPitch : maxPitch;\n    if (maxPitch > maxPitchThreshold) {\n      throw new Error(`maxPitch must be less than or equal to ${maxPitchThreshold}`);\n    }\n    if (maxPitch >= this.transform.minPitch) {\n      this.transform.maxPitch = maxPitch;\n      if (this.getPitch() > maxPitch) this.setPitch(maxPitch);\n      return this;\n    } else throw new Error('maxPitch must be greater than the current minPitch');\n  }\n\n  /**\n   * Returns the map's maximum allowable pitch.\n   *\n   * @returns The maxPitch\n   */\n  getMaxPitch() {\n    return this.transform.maxPitch;\n  }\n\n  /**\n   * Returns the state of `renderWorldCopies`. If `true`, multiple copies of the world will be rendered side by side beyond -180 and 180 degrees longitude. If set to `false`:\n   *\n   * - When the map is zoomed out far enough that a single representation of the world does not fill the map's entire\n   * container, there will be blank space beyond 180 and -180 degrees longitude.\n   * - Features that cross 180 and -180 degrees longitude will be cut in two (with one portion on the right edge of the\n   * map and the other on the left edge of the map) at every zoom level.\n   * @returns The renderWorldCopies\n   * @example\n   * ```ts\n   * let worldCopiesRendered = map.getRenderWorldCopies();\n   * ```\n   * @see [Render world copies](https://maplibre.org/maplibre-gl-js/docs/examples/render-world-copies/)\n   */\n  getRenderWorldCopies() {\n    return this.transform.renderWorldCopies;\n  }\n\n  /**\n   * Sets the state of `renderWorldCopies`.\n   *\n   * @param renderWorldCopies - If `true`, multiple copies of the world will be rendered side by side beyond -180 and 180 degrees longitude. If set to `false`:\n   *\n   * - When the map is zoomed out far enough that a single representation of the world does not fill the map's entire\n   * container, there will be blank space beyond 180 and -180 degrees longitude.\n   * - Features that cross 180 and -180 degrees longitude will be cut in two (with one portion on the right edge of the\n   * map and the other on the left edge of the map) at every zoom level.\n   *\n   * `undefined` is treated as `true`, `null` is treated as `false`.\n   * @example\n   * ```ts\n   * map.setRenderWorldCopies(true);\n   * ```\n   */\n  setRenderWorldCopies(renderWorldCopies) {\n    this.transform.renderWorldCopies = renderWorldCopies;\n  }\n\n  /**\n   * Returns a [Point](https://github.com/mapbox/point-geometry) representing pixel coordinates, relative to the map's `container`,\n   * that correspond to the specified geographical location.\n   *\n   * @param lnglat - The geographical location to project.\n   * @returns The [Point](https://github.com/mapbox/point-geometry) corresponding to `lnglat`, relative to the map's `container`.\n   * @example\n   * ```ts\n   * let coordinate = [-122.420679, 37.772537];\n   * let point = map.project(coordinate);\n   * ```\n   */\n  project(lnglat) {\n    return this.transform.locationPoint(LngLat.convert(lnglat));\n  }\n\n  /**\n   * Returns a {@link LngLat} representing geographical coordinates that correspond\n   * to the specified pixel coordinates.\n   *\n   * @param point - The pixel coordinates to unproject.\n   * @returns The {@link LngLat} corresponding to `point`.\n   * @example\n   * ```ts\n   * map.on('click', (e) => {\n   *   // When the map is clicked, get the geographic coordinate.\n   *   let coordinate = map.unproject(e.point);\n   * });\n   * ```\n   */\n  unproject(point) {\n    return this.transform.pointLocation(Point.convert(point));\n  }\n\n  /**\n   * Returns true if the map is panning, zooming, rotating, or pitching due to a camera animation or user gesture.\n   * @returns true if the map is moving.\n   * @example\n   * ```ts\n   * let isMoving = map.isMoving();\n   * ```\n   */\n  isMoving() {\n    var _this$handlers;\n    return this._moving || ((_this$handlers = this.handlers) === null || _this$handlers === void 0 ? void 0 : _this$handlers.isMoving());\n  }\n\n  /**\n   * Returns true if the map is zooming due to a camera animation or user gesture.\n   * @returns true if the map is zooming.\n   * @example\n   * ```ts\n   * let isZooming = map.isZooming();\n   * ```\n   */\n  isZooming() {\n    var _this$handlers2;\n    return this._zooming || ((_this$handlers2 = this.handlers) === null || _this$handlers2 === void 0 ? void 0 : _this$handlers2.isZooming());\n  }\n\n  /**\n   * Returns true if the map is rotating due to a camera animation or user gesture.\n   * @returns true if the map is rotating.\n   * @example\n   * ```ts\n   * map.isRotating();\n   * ```\n   */\n  isRotating() {\n    var _this$handlers3;\n    return this._rotating || ((_this$handlers3 = this.handlers) === null || _this$handlers3 === void 0 ? void 0 : _this$handlers3.isRotating());\n  }\n\n  /**\n   * Overload of the `on` method that allows to listen to events without specifying a layer.\n   * @event\n   * @param type - The type of the event.\n   * @param listener - The listener callback.\n   */\n\n  /**\n   * Overload of the `on` method that allows to listen to events without specifying a layer.\n   * @event\n   * @param type - The type of the event.\n   * @param listener - The listener callback.\n   */\n\n  on(type, listener) {\n    return super.on(type, listener);\n  }\n\n  /**\n   * Overload of the `once` method that allows to listen to events without specifying a layer.\n   * @event\n   * @param type - The type of the event.\n   * @param listener - The listener callback.\n   */\n\n  /**\n   * Overload of the `once` method that allows to listen to events without specifying a layer.\n   * @event\n   * @param type - The type of the event.\n   * @param listener - The listener callback.\n   */\n\n  once(type, listener) {\n    return super.once(type, listener);\n  }\n\n  /**\n   * Overload of the `off` method that allows to listen to events without specifying a layer.\n   * @event\n   * @param type - The type of the event.\n   * @param listener - The function previously installed as a listener.\n   */\n\n  /**\n   * Overload of the `off` method that allows to listen to events without specifying a layer.\n   * @event\n   * @param type - The type of the event.\n   * @param listener - The function previously installed as a listener.\n   */\n\n  off(type, listener) {\n    return super.off(type, listener);\n  }\n\n  /**\n   * Returns the map's containing HTML element.\n   *\n   * @returns The map's container.\n   */\n  getContainer() {\n    return this._container;\n  }\n\n  /**\n   * Returns the HTML element containing the map's `<canvas>` element.\n   *\n   * If you want to add non-GL overlays to the map, you should append them to this element.\n   *\n   * This is the element to which event bindings for map interactivity (such as panning and zooming) are\n   * attached. It will receive bubbled events from child elements such as the `<canvas>`, but not from\n   * map controls.\n   *\n   * @returns The container of the map's `<canvas>`.\n   * @see [Create a draggable point](https://maplibre.org/maplibre-gl-js/docs/examples/drag-a-point/)\n   */\n  getCanvasContainer() {\n    return this._canvasContainer;\n  }\n  _containerDimensions() {\n    let width = 0;\n    let height = 0;\n    if (this._container) {\n      width = this._container.clientWidth || 400;\n      height = this._container.clientHeight || 300;\n    }\n    return [width, height];\n  }\n  _setupContainer() {\n    const container = this._container;\n    container.classList.add('l7-map');\n    const canvasContainer = this._canvasContainer = DOM.create('div', 'l7-canvas-container', container);\n    if (this._interactive) {\n      canvasContainer.classList.add('l7-interactive');\n    }\n    this._container.addEventListener('scroll', this._onMapScroll, false);\n  }\n  /**\n   * @internal\n   * Update this map's style and sources, and re-render the map.\n   *\n   * @param updateStyle - mark the map's style for reprocessing as\n   * well as its sources\n   */\n  _update() {\n    this.triggerRepaint();\n    return this;\n  }\n\n  /**\n   * @internal\n   * Request that the given callback be executed during the next render\n   * frame.  Schedule a render frame if one is not already scheduled.\n   *\n   * @returns An id that can be used to cancel the callback\n   */\n  _requestRenderFrame(callback) {\n    this._update();\n    return this._renderTaskQueue.add(callback);\n  }\n  _cancelRenderFrame(id) {\n    this._renderTaskQueue.remove(id);\n  }\n\n  /**\n   * @internal\n   * Call when a (re-)render of the map is required:\n   *\n   * - The style has changed (`setPaintProperty()`, etc.)\n   * - Source data has changed (e.g. tiles have finished loading)\n   * - The map has is moving (or just finished moving)\n   * - A transition is in progress\n   *\n   * @param paintStartTimeStamp - The time when the animation frame began executing.\n   */\n  _render(paintStartTimeStamp) {\n    this._renderTaskQueue.run(paintStartTimeStamp);\n    // A task queue callback may have fired a user event which may have removed the map\n    if (this._removed) return;\n    this.fire(new Event('render'));\n    if (!this.isMoving()) {\n      this.fire(new Event('idle'));\n    }\n    return this;\n  }\n\n  /**\n   * Clean up and release all internal resources associated with this map.\n   *\n   * This includes DOM elements, event bindings, web workers, and WebGL resources.\n   *\n   * Use this method when you are done using the map and wish to ensure that it no\n   * longer consumes browser resources. Afterwards, you must not call any other\n   * methods on the map.\n   */\n  remove() {\n    var _this$_resizeObserver;\n    if (this._frameRequest) {\n      this._frameRequest.abort();\n      this._frameRequest = null;\n    }\n    this._renderTaskQueue.clear();\n    this.handlers.destroy();\n    delete this.handlers;\n    (_this$_resizeObserver = this._resizeObserver) === null || _this$_resizeObserver === void 0 || _this$_resizeObserver.disconnect();\n    DOM.remove(this._canvasContainer);\n    this._container.classList.remove('l7-map');\n    this._removed = true;\n    this.fire(new Event('remove'));\n  }\n\n  /**\n   * Trigger the rendering of a single frame. Use this method with custom layers to\n   * repaint the map when the layer changes. Calling this multiple times before the\n   * next frame is rendered will still result in only a single frame being rendered.\n   * @example\n   * ```ts\n   * map.triggerRepaint();\n   * ```\n   */\n  triggerRepaint() {\n    if (!this._frameRequest) {\n      this._frameRequest = new AbortController();\n      browser.frameAsync(this._frameRequest).then(paintStartTimeStamp => {\n        this._frameRequest = null;\n        this._render(paintStartTimeStamp);\n      }).catch(() => {}); // ignore abort error\n    }\n  }\n\n  /**\n   * Returns the elevation for the point where the camera is looking.\n   * This value corresponds to:\n   * \"meters above sea level\" * \"exaggeration\"\n   * @returns The elevation.\n   */\n  getCameraTargetElevation() {\n    return this.transform.elevation;\n  }\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}