{"ast":null,"code":"import React from 'react';\nexport const AppContext = React.createContext({\n  cell: null,\n  x6Graph: null,\n  commands: null,\n  modelService: null\n});\nexport const useAppContext = () => React.useContext(AppContext);\nexport function getNodeReactComponent(Component, commands, modelService) {\n  return function (x6Node) {\n    /* eslint-disable-next-line  */\n    const x6Graph = this;\n    const nodeData = x6Node === null || x6Node === void 0 ? void 0 : x6Node.getData();\n    const size = x6Node === null || x6Node === void 0 ? void 0 : x6Node.getSize();\n    const position = x6Node === null || x6Node === void 0 ? void 0 : x6Node.getPosition();\n    const WrappedComponent = () => {\n      return React.createElement(AppContext.Provider, {\n        value: {\n          cell: x6Node,\n          x6Graph,\n          commands,\n          modelService\n        }\n      }, React.createElement(Component, {\n        cell: x6Node,\n        data: nodeData,\n        size,\n        position\n      }));\n    };\n    return React.createElement(WrappedComponent, null);\n  };\n}\nexport function getEdgeReactComponent(Component, commands, modelService) {\n  return function (x6Edge) {\n    /* eslint-disable-next-line  */\n    const x6Graph = this;\n    const edgeData = x6Edge === null || x6Edge === void 0 ? void 0 : x6Edge.getData();\n    const WrappedComponent = () => {\n      return React.createElement(AppContext.Provider, {\n        value: {\n          cell: x6Edge,\n          x6Graph,\n          commands,\n          modelService\n        }\n      }, React.createElement(Component, {\n        data: edgeData,\n        cell: x6Edge\n      }));\n    };\n    return React.createElement(WrappedComponent, null);\n  };\n}\n/** 获取节点选中状态 */\nexport const useIsNodeSelected = () => {\n  const [isSelected, setIsSelected] = React.useState(false);\n  const {\n    x6Graph,\n    cell\n  } = useAppContext();\n  React.useEffect(() => {\n    const handler = ({\n      added,\n      removed\n    }) => {\n      const isAdded = added.filter(selectedCell => selectedCell.isNode()).some(node => {\n        node.id === cell.id;\n      });\n      if (isAdded) {\n        cell.setData(Object.assign(Object.assign({}, cell.getData()), {\n          isNodeSelected: true\n        }));\n        setIsSelected(true);\n        return;\n      }\n      const isRemoved = removed.filter(selectedCell => selectedCell.isNode()).some(node => {\n        node.id === cell.id;\n      });\n      if (isRemoved) {\n        cell.setData(Object.assign(Object.assign({}, cell.getData()), {\n          isNodeSelected: false\n        }));\n        setIsSelected(false);\n        return;\n      }\n    };\n    x6Graph.on('selection:changed', handler);\n    return () => {\n      x6Graph.off('selection:changed', handler);\n    };\n    /* eslint-disable-next-line  */\n  }, [x6Graph]);\n  return [isSelected];\n};","map":{"version":3,"names":["React","AppContext","createContext","cell","x6Graph","commands","modelService","useAppContext","useContext","getNodeReactComponent","Component","x6Node","nodeData","getData","size","getSize","position","getPosition","WrappedComponent","createElement","Provider","value","data","getEdgeReactComponent","x6Edge","edgeData","useIsNodeSelected","isSelected","setIsSelected","useState","useEffect","handler","added","removed","isAdded","filter","selectedCell","isNode","some","node","id","setData","Object","assign","isNodeSelected","isRemoved","on","off"],"sources":["../../../src/command-contributions/components/context.tsx"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}