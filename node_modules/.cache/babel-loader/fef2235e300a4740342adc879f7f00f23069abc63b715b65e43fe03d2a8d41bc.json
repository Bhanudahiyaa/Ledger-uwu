{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n/**\n * 网格索引，相比 @mapbox/grid-index，在简单计算碰撞检测结果时效率更高\n * @see https://zhuanlan.zhihu.com/p/74373214\n */\nclass GridIndex {\n  constructor(width, height, cellSize) {\n    _defineProperty(this, \"boxCells\", []);\n    _defineProperty(this, \"xCellCount\", void 0);\n    _defineProperty(this, \"yCellCount\", void 0);\n    _defineProperty(this, \"boxKeys\", void 0);\n    _defineProperty(this, \"bboxes\", void 0);\n    _defineProperty(this, \"width\", void 0);\n    _defineProperty(this, \"height\", void 0);\n    _defineProperty(this, \"xScale\", void 0);\n    _defineProperty(this, \"yScale\", void 0);\n    _defineProperty(this, \"boxUid\", void 0);\n    const boxCells = this.boxCells;\n    this.xCellCount = Math.ceil(width / cellSize);\n    this.yCellCount = Math.ceil(height / cellSize);\n    for (let i = 0; i < this.xCellCount * this.yCellCount; i++) {\n      boxCells.push([]);\n    }\n    this.boxKeys = [];\n    this.bboxes = [];\n    this.width = width;\n    this.height = height;\n    this.xScale = this.xCellCount / width;\n    this.yScale = this.yCellCount / height;\n    this.boxUid = 0;\n  }\n  insert(key, x1, y1, x2, y2) {\n    this.forEachCell(x1, y1, x2, y2, this.insertBoxCell, this.boxUid++);\n    this.boxKeys.push(key);\n    this.bboxes.push(x1);\n    this.bboxes.push(y1);\n    this.bboxes.push(x2);\n    this.bboxes.push(y2);\n  }\n  query(x1, y1, x2, y2, predicate) {\n    return this.queryHitTest(x1, y1, x2, y2, false, predicate);\n  }\n  hitTest(x1, y1, x2, y2, predicate) {\n    return this.queryHitTest(x1, y1, x2, y2, true, predicate);\n  }\n  insertBoxCell(x1, y1, x2, y2, cellIndex, uid) {\n    this.boxCells[cellIndex].push(uid);\n  }\n  queryHitTest(x1, y1, x2, y2, hitTest, predicate) {\n    if (x2 < 0 || x1 > this.width || y2 < 0 || y1 > this.height) {\n      return hitTest ? false : [];\n    }\n    const result = [];\n    if (x1 <= 0 && y1 <= 0 && this.width <= x2 && this.height <= y2) {\n      // 这一步是高效的关键，后续精确碰撞检测结果在计算文本可见性时并不需要\n      if (hitTest) {\n        return true;\n      }\n      for (let boxUid = 0; boxUid < this.boxKeys.length; boxUid++) {\n        result.push({\n          key: this.boxKeys[boxUid],\n          x1: this.bboxes[boxUid * 4],\n          y1: this.bboxes[boxUid * 4 + 1],\n          x2: this.bboxes[boxUid * 4 + 2],\n          y2: this.bboxes[boxUid * 4 + 3]\n        });\n      }\n      return predicate ? result.filter(predicate) : result;\n    }\n    const queryArgs = {\n      hitTest,\n      seenUids: {\n        box: {},\n        circle: {}\n      }\n    };\n    this.forEachCell(x1, y1, x2, y2, this.queryCell, result, queryArgs, predicate);\n    return hitTest ? result.length > 0 : result;\n  }\n  queryCell(x1, y1, x2, y2, cellIndex, result, queryArgs, predicate) {\n    const seenUids = queryArgs.seenUids;\n    const boxCell = this.boxCells[cellIndex];\n    if (boxCell !== null) {\n      const bboxes = this.bboxes;\n      for (const boxUid of boxCell) {\n        if (!seenUids.box[boxUid]) {\n          seenUids.box[boxUid] = true;\n          const offset = boxUid * 4;\n          if (x1 <= bboxes[offset + 2] && y1 <= bboxes[offset + 3] && x2 >= bboxes[offset + 0] && y2 >= bboxes[offset + 1] && (!predicate || predicate(this.boxKeys[boxUid]))) {\n            if (queryArgs.hitTest) {\n              result.push(true);\n              return true;\n            }\n            result.push({\n              key: this.boxKeys[boxUid],\n              x1: bboxes[offset],\n              y1: bboxes[offset + 1],\n              x2: bboxes[offset + 2],\n              y2: bboxes[offset + 3]\n            });\n          }\n        }\n      }\n    }\n    return false;\n  }\n  forEachCell(x1, y1, x2, y2, fn, arg1, arg2, predicate) {\n    const cx1 = this.convertToXCellCoord(x1);\n    const cy1 = this.convertToYCellCoord(y1);\n    const cx2 = this.convertToXCellCoord(x2);\n    const cy2 = this.convertToYCellCoord(y2);\n    for (let x = cx1; x <= cx2; x++) {\n      for (let y = cy1; y <= cy2; y++) {\n        const cellIndex = this.xCellCount * y + x;\n        if (fn.call(this, x1, y1, x2, y2, cellIndex, arg1, arg2, predicate)) {\n          return;\n        }\n      }\n    }\n  }\n  convertToXCellCoord(x) {\n    return Math.max(0, Math.min(this.xCellCount - 1, Math.floor(x * this.xScale)));\n  }\n  convertToYCellCoord(y) {\n    return Math.max(0, Math.min(this.yCellCount - 1, Math.floor(y * this.yScale)));\n  }\n}\nexport default GridIndex;","map":{"version":3,"names":["_defineProperty","GridIndex","constructor","width","height","cellSize","boxCells","xCellCount","Math","ceil","yCellCount","i","push","boxKeys","bboxes","xScale","yScale","boxUid","insert","key","x1","y1","x2","y2","forEachCell","insertBoxCell","query","predicate","queryHitTest","hitTest","cellIndex","uid","result","length","filter","queryArgs","seenUids","box","circle","queryCell","boxCell","offset","fn","arg1","arg2","cx1","convertToXCellCoord","cy1","convertToYCellCoord","cx2","cy2","x","y","call","max","min","floor"],"sources":["/Users/bhanudahiya/Desktop/ledger-IQ/node_modules/@antv/l7-layers/es/utils/grid-index.js"],"sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n/**\n * 网格索引，相比 @mapbox/grid-index，在简单计算碰撞检测结果时效率更高\n * @see https://zhuanlan.zhihu.com/p/74373214\n */\nclass GridIndex {\n  constructor(width, height, cellSize) {\n    _defineProperty(this, \"boxCells\", []);\n    _defineProperty(this, \"xCellCount\", void 0);\n    _defineProperty(this, \"yCellCount\", void 0);\n    _defineProperty(this, \"boxKeys\", void 0);\n    _defineProperty(this, \"bboxes\", void 0);\n    _defineProperty(this, \"width\", void 0);\n    _defineProperty(this, \"height\", void 0);\n    _defineProperty(this, \"xScale\", void 0);\n    _defineProperty(this, \"yScale\", void 0);\n    _defineProperty(this, \"boxUid\", void 0);\n    const boxCells = this.boxCells;\n    this.xCellCount = Math.ceil(width / cellSize);\n    this.yCellCount = Math.ceil(height / cellSize);\n    for (let i = 0; i < this.xCellCount * this.yCellCount; i++) {\n      boxCells.push([]);\n    }\n    this.boxKeys = [];\n    this.bboxes = [];\n    this.width = width;\n    this.height = height;\n    this.xScale = this.xCellCount / width;\n    this.yScale = this.yCellCount / height;\n    this.boxUid = 0;\n  }\n  insert(key, x1, y1, x2, y2) {\n    this.forEachCell(x1, y1, x2, y2, this.insertBoxCell, this.boxUid++);\n    this.boxKeys.push(key);\n    this.bboxes.push(x1);\n    this.bboxes.push(y1);\n    this.bboxes.push(x2);\n    this.bboxes.push(y2);\n  }\n  query(x1, y1, x2, y2, predicate) {\n    return this.queryHitTest(x1, y1, x2, y2, false, predicate);\n  }\n  hitTest(x1, y1, x2, y2, predicate) {\n    return this.queryHitTest(x1, y1, x2, y2, true, predicate);\n  }\n  insertBoxCell(x1, y1, x2, y2, cellIndex, uid) {\n    this.boxCells[cellIndex].push(uid);\n  }\n  queryHitTest(x1, y1, x2, y2, hitTest, predicate) {\n    if (x2 < 0 || x1 > this.width || y2 < 0 || y1 > this.height) {\n      return hitTest ? false : [];\n    }\n    const result = [];\n    if (x1 <= 0 && y1 <= 0 && this.width <= x2 && this.height <= y2) {\n      // 这一步是高效的关键，后续精确碰撞检测结果在计算文本可见性时并不需要\n      if (hitTest) {\n        return true;\n      }\n      for (let boxUid = 0; boxUid < this.boxKeys.length; boxUid++) {\n        result.push({\n          key: this.boxKeys[boxUid],\n          x1: this.bboxes[boxUid * 4],\n          y1: this.bboxes[boxUid * 4 + 1],\n          x2: this.bboxes[boxUid * 4 + 2],\n          y2: this.bboxes[boxUid * 4 + 3]\n        });\n      }\n      return predicate ? result.filter(predicate) : result;\n    }\n    const queryArgs = {\n      hitTest,\n      seenUids: {\n        box: {},\n        circle: {}\n      }\n    };\n    this.forEachCell(x1, y1, x2, y2, this.queryCell, result, queryArgs, predicate);\n    return hitTest ? result.length > 0 : result;\n  }\n  queryCell(x1, y1, x2, y2, cellIndex, result, queryArgs, predicate) {\n    const seenUids = queryArgs.seenUids;\n    const boxCell = this.boxCells[cellIndex];\n    if (boxCell !== null) {\n      const bboxes = this.bboxes;\n      for (const boxUid of boxCell) {\n        if (!seenUids.box[boxUid]) {\n          seenUids.box[boxUid] = true;\n          const offset = boxUid * 4;\n          if (x1 <= bboxes[offset + 2] && y1 <= bboxes[offset + 3] && x2 >= bboxes[offset + 0] && y2 >= bboxes[offset + 1] && (!predicate || predicate(this.boxKeys[boxUid]))) {\n            if (queryArgs.hitTest) {\n              result.push(true);\n              return true;\n            }\n            result.push({\n              key: this.boxKeys[boxUid],\n              x1: bboxes[offset],\n              y1: bboxes[offset + 1],\n              x2: bboxes[offset + 2],\n              y2: bboxes[offset + 3]\n            });\n          }\n        }\n      }\n    }\n    return false;\n  }\n  forEachCell(x1, y1, x2, y2, fn, arg1, arg2, predicate) {\n    const cx1 = this.convertToXCellCoord(x1);\n    const cy1 = this.convertToYCellCoord(y1);\n    const cx2 = this.convertToXCellCoord(x2);\n    const cy2 = this.convertToYCellCoord(y2);\n    for (let x = cx1; x <= cx2; x++) {\n      for (let y = cy1; y <= cy2; y++) {\n        const cellIndex = this.xCellCount * y + x;\n        if (fn.call(this, x1, y1, x2, y2, cellIndex, arg1, arg2, predicate)) {\n          return;\n        }\n      }\n    }\n  }\n  convertToXCellCoord(x) {\n    return Math.max(0, Math.min(this.xCellCount - 1, Math.floor(x * this.xScale)));\n  }\n  convertToYCellCoord(y) {\n    return Math.max(0, Math.min(this.yCellCount - 1, Math.floor(y * this.yScale)));\n  }\n}\nexport default GridIndex;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}