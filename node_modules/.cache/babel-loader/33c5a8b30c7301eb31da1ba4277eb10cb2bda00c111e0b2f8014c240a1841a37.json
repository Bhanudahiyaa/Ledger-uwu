{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nconst _excluded = [\"rasterData\"];\nimport { getDefaultDomain } from '@antv/l7-utils';\nimport RasterLayer from \"../../raster\";\nimport Tile from \"./Tile\";\nconst DEFAULT_COLOR_TEXTURE_OPTION = {\n  positions: [0, 1],\n  colors: ['#000', '#fff']\n};\nexport default class RasterTile extends Tile {\n  constructor(...args) {\n    super(...args);\n    _defineProperty(this, \"colorTexture\", void 0);\n  }\n  initTileLayer() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const attributes = _this.parent.getLayerAttributeConfig();\n      const layerOptions = _this.getLayerOptions();\n      const sourceOptions = _this.getSourceOption();\n      const {\n        rampColors,\n        domain\n      } = _this.getLayerOptions();\n      _this.colorTexture = _this.parent.textureService.getColorTexture(rampColors, domain);\n      const layer = new RasterLayer(_objectSpread(_objectSpread({}, layerOptions), {}, {\n        colorTexture: _this.colorTexture\n      })).source(sourceOptions.data, sourceOptions.options);\n\n      // 初始化数据映射\n      // tslint:disable-next-line: no-unused-expression\n      attributes && Object.keys(attributes).forEach(type => {\n        var _attributes$attr, _attributes$attr2;\n        const attr = type;\n        // @ts-ignore\n        layer[attr]((_attributes$attr = attributes[attr]) === null || _attributes$attr === void 0 ? void 0 : _attributes$attr.field, (_attributes$attr2 = attributes[attr]) === null || _attributes$attr2 === void 0 ? void 0 : _attributes$attr2.values);\n      });\n      yield _this.addLayer(layer);\n      _this.isLoaded = true;\n    })();\n  }\n  getSourceOption() {\n    const rawSource = this.parent.getSource();\n    const _this$sourceTile$data = this.sourceTile.data.data,\n      {\n        rasterData\n      } = _this$sourceTile$data,\n      res = _objectWithoutProperties(_this$sourceTile$data, _excluded);\n    return {\n      data: rasterData,\n      options: {\n        parser: _objectSpread({\n          type: 'raster',\n          extent: this.sourceTile.bounds\n        }, res),\n        transforms: rawSource.transforms\n      }\n    };\n  }\n\n  /**\n   * 用于 style 更新 colorTexture 的优化\n   * @param arg\n   */\n  styleUpdate(...arg) {\n    const {\n      rampColors = DEFAULT_COLOR_TEXTURE_OPTION,\n      domain\n    } = arg;\n    this.colorTexture = this.parent.textureService.getColorTexture(rampColors, domain || getDefaultDomain(rampColors));\n    this.layers.forEach(layer => layer.style({\n      colorTexture: this.colorTexture\n    }));\n  }\n  destroy() {\n    this.layers.forEach(layer => layer.destroy());\n  }\n}","map":{"version":3,"names":["_objectWithoutProperties","_objectSpread","_asyncToGenerator","_defineProperty","_excluded","getDefaultDomain","RasterLayer","Tile","DEFAULT_COLOR_TEXTURE_OPTION","positions","colors","RasterTile","constructor","args","initTileLayer","_this","attributes","parent","getLayerAttributeConfig","layerOptions","getLayerOptions","sourceOptions","getSourceOption","rampColors","domain","colorTexture","textureService","getColorTexture","layer","source","data","options","Object","keys","forEach","type","_attributes$attr","_attributes$attr2","attr","field","values","addLayer","isLoaded","rawSource","getSource","_this$sourceTile$data","sourceTile","rasterData","res","parser","extent","bounds","transforms","styleUpdate","arg","layers","style","destroy"],"sources":["/Users/bhanudahiya/Desktop/ledger-IQ/node_modules/@antv/l7-layers/es/tile/tile/RasterTile.js"],"sourcesContent":["import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nconst _excluded = [\"rasterData\"];\nimport { getDefaultDomain } from '@antv/l7-utils';\nimport RasterLayer from \"../../raster\";\nimport Tile from \"./Tile\";\nconst DEFAULT_COLOR_TEXTURE_OPTION = {\n  positions: [0, 1],\n  colors: ['#000', '#fff']\n};\nexport default class RasterTile extends Tile {\n  constructor(...args) {\n    super(...args);\n    _defineProperty(this, \"colorTexture\", void 0);\n  }\n  initTileLayer() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const attributes = _this.parent.getLayerAttributeConfig();\n      const layerOptions = _this.getLayerOptions();\n      const sourceOptions = _this.getSourceOption();\n      const {\n        rampColors,\n        domain\n      } = _this.getLayerOptions();\n      _this.colorTexture = _this.parent.textureService.getColorTexture(rampColors, domain);\n      const layer = new RasterLayer(_objectSpread(_objectSpread({}, layerOptions), {}, {\n        colorTexture: _this.colorTexture\n      })).source(sourceOptions.data, sourceOptions.options);\n\n      // 初始化数据映射\n      // tslint:disable-next-line: no-unused-expression\n      attributes && Object.keys(attributes).forEach(type => {\n        var _attributes$attr, _attributes$attr2;\n        const attr = type;\n        // @ts-ignore\n        layer[attr]((_attributes$attr = attributes[attr]) === null || _attributes$attr === void 0 ? void 0 : _attributes$attr.field, (_attributes$attr2 = attributes[attr]) === null || _attributes$attr2 === void 0 ? void 0 : _attributes$attr2.values);\n      });\n      yield _this.addLayer(layer);\n      _this.isLoaded = true;\n    })();\n  }\n  getSourceOption() {\n    const rawSource = this.parent.getSource();\n    const _this$sourceTile$data = this.sourceTile.data.data,\n      {\n        rasterData\n      } = _this$sourceTile$data,\n      res = _objectWithoutProperties(_this$sourceTile$data, _excluded);\n    return {\n      data: rasterData,\n      options: {\n        parser: _objectSpread({\n          type: 'raster',\n          extent: this.sourceTile.bounds\n        }, res),\n        transforms: rawSource.transforms\n      }\n    };\n  }\n\n  /**\n   * 用于 style 更新 colorTexture 的优化\n   * @param arg\n   */\n  styleUpdate(...arg) {\n    const {\n      rampColors = DEFAULT_COLOR_TEXTURE_OPTION,\n      domain\n    } = arg;\n    this.colorTexture = this.parent.textureService.getColorTexture(rampColors, domain || getDefaultDomain(rampColors));\n    this.layers.forEach(layer => layer.style({\n      colorTexture: this.colorTexture\n    }));\n  }\n  destroy() {\n    this.layers.forEach(layer => layer.destroy());\n  }\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}