{"ast":null,"code":"import { pick } from '@antv/util';\nimport { Plot } from '../../core/plot';\nimport { DEFAULT_OPTIONS } from './constants';\nimport { AreaLayer } from '../../layers/area-layer';\nimport { LayerGroup } from '../../core/layer/layer-group';\nexport class Area extends Plot {\n  constructor() {\n    super(...arguments);\n    /**\n     * 图表类型\n     */\n    this.type = Plot.PlotType.Area;\n  }\n  /**\n   * 获取默认配置\n   */\n  getDefaultOptions() {\n    return Area.DefaultOptions;\n  }\n  /**\n   * 创建图层\n   */\n  createLayers(source) {\n    this.areaLayer = new AreaLayer(Object.assign({\n      source\n    }, pick(this.options, AreaLayer.LayerOptionsKeys)));\n    const layerGroup = new LayerGroup([this.areaLayer]);\n    if (this.options.label) {\n      this.labelLayer = this.createLabelLayer(source, this.options.label, this.options);\n      layerGroup.addLayer(this.labelLayer);\n    }\n    return layerGroup;\n  }\n  /**\n   * 更新图层\n   */\n  updateLayers(options) {\n    const polygonLayerConfig = pick(options, AreaLayer.LayerOptionsKeys);\n    this.areaLayer.update(polygonLayerConfig);\n    this.updateLabelLayer(this.source, options.label, this.options, this.labelLayer);\n  }\n  /**\n   * 初始化图层事件\n   */\n  initLayersEvent() {\n    //\n  }\n  /**\n   * 实现 legend 配置项\n   */\n  getLegendOptions() {\n    const colorLegendItems = this.areaLayer.getColorLegendItems();\n    if (colorLegendItems.length !== 0) {\n      return {\n        type: 'category',\n        items: colorLegendItems\n      };\n    }\n    return {};\n  }\n}\n/**\n * 默认配置项\n */\nArea.DefaultOptions = DEFAULT_OPTIONS;","map":{"version":3,"names":["pick","Plot","DEFAULT_OPTIONS","AreaLayer","LayerGroup","Area","constructor","type","PlotType","getDefaultOptions","DefaultOptions","createLayers","source","areaLayer","Object","assign","options","LayerOptionsKeys","layerGroup","label","labelLayer","createLabelLayer","addLayer","updateLayers","polygonLayerConfig","update","updateLabelLayer","initLayersEvent","getLegendOptions","colorLegendItems","getColorLegendItems","length","items"],"sources":["../../../../src/plots/area/index.ts"],"sourcesContent":[null],"mappings":"AAAA,SAASA,IAAI,QAAQ,YAAY;AACjC,SAASC,IAAI,QAAQ,iBAAiB;AAEtC,SAASC,eAAe,QAAQ,aAAa;AAC7C,SAASC,SAAS,QAAQ,yBAAyB;AAGnD,SAASC,UAAU,QAAQ,8BAA8B;AAIzD,OAAM,MAAOC,IAAK,SAAQJ,IAAiB;EAA3CK,YAAA;;IAME;;;IAGO,KAAAC,IAAI,GAAGN,IAAI,CAACO,QAAQ,CAACH,IAAI;EAiElC;EArDE;;;EAGUI,iBAAiBA,CAAA;IACzB,OAAOJ,IAAI,CAACK,cAAc;EAC5B;EAEA;;;EAGUC,YAAYA,CAACC,MAAc;IACnC,IAAI,CAACC,SAAS,GAAG,IAAIV,SAAS,CAAAW,MAAA,CAAAC,MAAA;MAC5BH;IAAM,GACHZ,IAAI,CAAM,IAAI,CAACgB,OAAO,EAAEb,SAAS,CAACc,gBAAgB,CAAC,EACtD;IACF,MAAMC,UAAU,GAAG,IAAId,UAAU,CAAC,CAAC,IAAI,CAACS,SAAS,CAAC,CAAC;IAEnD,IAAI,IAAI,CAACG,OAAO,CAACG,KAAK,EAAE;MACtB,IAAI,CAACC,UAAU,GAAG,IAAI,CAACC,gBAAgB,CAACT,MAAM,EAAE,IAAI,CAACI,OAAO,CAACG,KAAK,EAAE,IAAI,CAACH,OAAO,CAAC;MACjFE,UAAU,CAACI,QAAQ,CAAC,IAAI,CAACF,UAAU,CAAC;IACtC;IAEA,OAAOF,UAAU;EACnB;EAEA;;;EAGUK,YAAYA,CAACP,OAAoB;IACzC,MAAMQ,kBAAkB,GAAGxB,IAAI,CAAMgB,OAAO,EAAEb,SAAS,CAACc,gBAAgB,CAAC;IACzE,IAAI,CAACJ,SAAS,CAACY,MAAM,CAACD,kBAAkB,CAAC;IAEzC,IAAI,CAACE,gBAAgB,CAAC,IAAI,CAACd,MAAM,EAAEI,OAAO,CAACG,KAAK,EAAE,IAAI,CAACH,OAAO,EAAE,IAAI,CAACI,UAAU,CAAC;EAClF;EAEA;;;EAGUO,eAAeA,CAAA;IACvB;EAAA;EAGF;;;EAGOC,gBAAgBA,CAAA;IACrB,MAAMC,gBAAgB,GAAG,IAAI,CAAChB,SAAS,CAACiB,mBAAmB,EAAE;IAC7D,IAAID,gBAAgB,CAACE,MAAM,KAAK,CAAC,EAAE;MACjC,OAAO;QAAExB,IAAI,EAAE,UAAU;QAAEyB,KAAK,EAAEH;MAAgB,CAAE;IACtD;IAEA,OAAO,EAAE;EACX;;AAxEA;;;AAGOxB,IAAA,CAAAK,cAAc,GAAGR,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}