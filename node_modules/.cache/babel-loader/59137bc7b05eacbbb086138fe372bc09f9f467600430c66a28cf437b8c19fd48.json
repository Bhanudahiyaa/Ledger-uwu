{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nvar _dec, _class, _temp;\nimport { injectable } from 'inversify';\nexport var ConfigService = (_dec = injectable(), _dec(_class = (_temp = /*#__PURE__*/function () {\n  function ConfigService() {\n    _classCallCheck(this, ConfigService);\n    this.config = void 0;\n  }\n  _createClass(ConfigService, [{\n    key: \"get\",\n    value: function get() {\n      return this.config;\n    }\n  }, {\n    key: \"set\",\n    value: function set(config) {\n      this.config = config;\n    }\n  }]);\n  return ConfigService;\n}(), _temp)) || _class);","map":{"version":3,"names":["injectable","ConfigService","_dec","_class","_temp","_classCallCheck","config","_createClass","key","value","get","set"],"sources":["/Users/bhanudahiya/Desktop/ledger-IQ/node_modules/@antv/g-webgpu-core/src/services/config/ConfigService.ts"],"sourcesContent":["import { injectable } from 'inversify';\nimport {\n  IRendererConfig,\n  IRendererService,\n} from '../../components/renderer/IRendererService';\n\nexport interface IConfig {\n  canvas: HTMLCanvasElement;\n  useRenderBundle: boolean;\n  engineOptions: IRendererConfig;\n  onInit: (engine: IRendererService) => void;\n  onUpdate: (engine: IRendererService) => void;\n}\n\nexport interface IConfigService {\n  get(): Partial<IConfig>;\n  set(config: Partial<IConfig>): void;\n}\n\n@injectable()\nexport class ConfigService implements IConfigService {\n  private config: Partial<IConfig>;\n\n  public get() {\n    return this.config;\n  }\n\n  public set(config: Partial<IConfig>) {\n    this.config = config;\n  }\n}\n"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,WAA3B;AAoBA,WAAaC,aAAb,IAAAC,IAAA,GADCF,UAAU,EACX,EAAAE,IAAA,CAAAC,MAAA,IAAAC,KAAA;EAAA,SAAAH,cAAA;IAAAI,eAAA,OAAAJ,aAAA;IAAA,KACUK,MADV;EAAA;EAAAC,YAAA,CAAAN,aAAA;IAAAO,GAAA;IAAAC,KAAA,WAAAC,IAAA,EAGe;MACX,OAAO,KAAKJ,MAAZ;IACD;EALH;IAAAE,GAAA;IAAAC,KAAA,WAAAE,IAOaL,MAPb,EAOuC;MACnC,KAAKA,MAAL,GAAcA,MAAd;IACD;EATH;EAAA,OAAAL,aAAA;AAAA,KAAAG,KAAA,MAAAD,MAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}