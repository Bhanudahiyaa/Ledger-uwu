{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { AttributeType, gl } from '@antv/l7-core';\nimport { FrequencyController } from '@antv/l7-utils';\nimport BaseModel from \"../../core/BaseModel\";\nimport { RasterImageTriangulation } from \"../../core/triangulation\";\n/* babel-plugin-inline-import '../shaders/wind_frag.glsl' */\nconst WindFrag = \"precision mediump float;\\nuniform float u_opacity: 1.0;\\nuniform sampler2D u_texture;\\nvarying vec2 v_texCoord;\\nvoid main() {\\n  vec4 color = texture2D(u_texture,vec2(v_texCoord.x,v_texCoord.y));\\n  gl_FragColor = color;\\n  gl_FragColor.a *= u_opacity;\\n}\\n\";\n/* babel-plugin-inline-import '../shaders/wind_vert.glsl' */\nconst WindVert = \"precision highp float;\\nuniform mat4 u_ModelMatrix;\\n\\nlayout(location = ATTRIBUTE_LOCATION_POSITION) in vec3 a_Position;\\nlayout(location = ATTRIBUTE_LOCATION_UV) in vec2 a_Uv;\\n\\nvarying vec2 v_texCoord;\\n#pragma include \\\"projection\\\"\\nvoid main() {\\n  v_texCoord = a_Uv;\\n  vec4 project_pos = project_position(vec4(a_Position, 1.0));\\n\\n  gl_Position = project_common_position_to_clipspace(vec4(project_pos.xy, 0.0, 1.0));\\n}\\n\";\nimport { Wind } from \"./windRender\";\nconst defaultRampColors = {\n  0.0: '#3288bd',\n  0.1: '#66c2a5',\n  0.2: '#abdda4',\n  0.3: '#e6f598',\n  0.4: '#fee08b',\n  0.5: '#fdae61',\n  0.6: '#f46d43',\n  1.0: '#d53e4f'\n};\nexport default class WindModel extends BaseModel {\n  constructor(...args) {\n    super(...args);\n    _defineProperty(this, \"texture\", void 0);\n    _defineProperty(this, \"colorModel\", void 0);\n    _defineProperty(this, \"wind\", void 0);\n    _defineProperty(this, \"imageCoords\", void 0);\n    _defineProperty(this, \"sizeScale\", 0.5);\n    // https://mapbox.github.io/webgl-wind/demo/\n    // source: 'http://nomads.ncep.noaa.gov',\n    _defineProperty(this, \"frequency\", new FrequencyController(7.2));\n    _defineProperty(this, \"cacheZoom\", void 0);\n  }\n  get attributeLocation() {\n    return Object.assign(super.attributeLocation, {\n      MAX: super.attributeLocation.MAX,\n      UV: 9\n    });\n  }\n  render(options) {\n    this.drawColorMode(options);\n    // Tip: 控制风场的平均更新频率\n    this.frequency.run(() => {\n      this.drawWind();\n    });\n  }\n  getUninforms() {\n    throw new Error('Method not implemented.');\n  }\n  initModels() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      var _source$data, _source$data2;\n      const {\n        uMin = -21.32,\n        uMax = 26.8,\n        vMin = -21.57,\n        vMax = 21.42,\n        fadeOpacity = 0.996,\n        speedFactor = 0.25,\n        dropRate = 0.003,\n        dropRateBump = 0.01,\n        rampColors = defaultRampColors,\n        sizeScale = 0.5\n        // mask\n      } = _this.layer.getLayerConfig();\n      const {\n        createTexture2D\n      } = _this.rendererService;\n      const source = _this.layer.getSource();\n      _this.texture = createTexture2D({\n        height: 0,\n        width: 0\n      });\n      _this.cacheZoom = Math.floor(_this.mapService.getZoom());\n      const glContext = _this.rendererService.getGLContext();\n      _this.imageCoords = (_source$data = source.data) === null || _source$data === void 0 ? void 0 : _source$data.dataArray[0].coordinates;\n      (_source$data2 = source.data) === null || _source$data2 === void 0 || (_source$data2 = _source$data2.images) === null || _source$data2 === void 0 || _source$data2.then(imageData => {\n        var _this$texture;\n        _this.sizeScale = sizeScale * _this.getZoomScale();\n        const {\n          imageWidth,\n          imageHeight\n        } = _this.getWindSize();\n        const options = {\n          glContext,\n          imageWidth,\n          imageHeight,\n          fadeOpacity,\n          speedFactor,\n          dropRate,\n          dropRateBump,\n          rampColors\n        };\n        _this.wind = new Wind(options);\n\n        // imageData[0] 风场图\n        _this.wind.setWind({\n          uMin,\n          uMax,\n          vMin,\n          vMax,\n          image: imageData[0]\n        });\n        (_this$texture = _this.texture) === null || _this$texture === void 0 || _this$texture.destroy();\n        _this.texture = createTexture2D({\n          width: imageWidth,\n          height: imageHeight\n        });\n        _this.layerService.reRender();\n      });\n      const model = yield _this.layer.buildLayerModel({\n        moduleName: 'wind',\n        vertexShader: WindVert,\n        fragmentShader: WindFrag,\n        defines: _this.getDefines(),\n        triangulation: RasterImageTriangulation,\n        primitive: gl.TRIANGLES,\n        depth: {\n          enable: false\n        }\n      });\n      _this.colorModel = model;\n      return [model];\n    })();\n  }\n  getWindSize() {\n    const p1 = this.mapService.lngLatToPixel(this.imageCoords[0]);\n    const p2 = this.mapService.lngLatToPixel(this.imageCoords[1]);\n    const imageWidth = Math.min(Math.floor((p2.x - p1.x) * this.sizeScale), 2048);\n    const imageHeight = Math.min(Math.floor((p1.y - p2.y) * this.sizeScale), 2048);\n    return {\n      imageWidth,\n      imageHeight\n    };\n  }\n  buildModels() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      return _this2.initModels();\n    })();\n  }\n  clearModels() {\n    var _this$texture2, _this$wind;\n    (_this$texture2 = this.texture) === null || _this$texture2 === void 0 || _this$texture2.destroy();\n    (_this$wind = this.wind) === null || _this$wind === void 0 || _this$wind.destroy();\n  }\n  registerBuiltinAttributes() {\n    // point layer size;\n    this.styleAttributeService.registerStyleAttribute({\n      name: 'uv',\n      type: AttributeType.Attribute,\n      descriptor: {\n        name: 'a_Uv',\n        shaderLocation: this.attributeLocation.UV,\n        buffer: {\n          // give the WebGL driver a hint that this buffer may change\n          usage: gl.DYNAMIC_DRAW,\n          data: [],\n          type: gl.FLOAT\n        },\n        size: 2,\n        update: (feature, featureIdx, vertex) => {\n          return [vertex[3], vertex[4]];\n        }\n      }\n    });\n  }\n  getZoomScale() {\n    return Math.min((this.cacheZoom + 4) / 30 * 2, 2);\n  }\n  drawWind() {\n    if (this.wind) {\n      const {\n        uMin = -21.32,\n        uMax = 26.8,\n        vMin = -21.57,\n        vMax = 21.42,\n        numParticles = 65535,\n        fadeOpacity = 0.996,\n        speedFactor = 0.25,\n        dropRate = 0.003,\n        dropRateBump = 0.01,\n        rampColors = defaultRampColors,\n        sizeScale = 0.5\n      } = this.layer.getLayerConfig();\n      let newNumParticles = numParticles;\n      const currentZoom = Math.floor(this.mapService.getZoom());\n      if (typeof sizeScale === 'number' && sizeScale !== this.sizeScale || currentZoom !== this.cacheZoom) {\n        const zoomScale = this.getZoomScale();\n        this.sizeScale = sizeScale;\n        newNumParticles *= zoomScale;\n        const {\n          imageWidth,\n          imageHeight\n        } = this.getWindSize();\n        this.wind.reSize(imageWidth, imageHeight);\n        this.cacheZoom = currentZoom;\n      }\n      this.wind.updateWindDir(uMin, uMax, vMin, vMax);\n      this.wind.updateParticelNum(newNumParticles);\n      this.wind.updateColorRampTexture(rampColors);\n      this.wind.fadeOpacity = fadeOpacity;\n      this.wind.speedFactor = speedFactor;\n      this.wind.dropRate = dropRate;\n      this.wind.dropRateBump = dropRateBump;\n      const {\n        d,\n        w,\n        h\n      } = this.wind.draw();\n      // 恢复 L7 渲染流程中 gl 状态\n      this.rendererService.setBaseState();\n      this.texture.update({\n        data: d,\n        width: w,\n        height: h\n      });\n    }\n  }\n  drawColorMode(options = {}) {\n    var _this$colorModel;\n    const {\n      opacity\n    } = this.layer.getLayerConfig();\n    this.layerService.beforeRenderData(this.layer);\n    this.layer.hooks.beforeRender.call();\n    this.layerService.renderMask(this.layer.masks);\n    (_this$colorModel = this.colorModel) === null || _this$colorModel === void 0 || _this$colorModel.draw({\n      uniforms: {\n        u_opacity: opacity || 1.0,\n        u_texture: this.texture\n      },\n      blend: this.getBlend(),\n      stencil: this.getStencil(options)\n    });\n    this.layer.hooks.afterRender.call();\n  }\n}","map":{"version":3,"names":["_asyncToGenerator","_defineProperty","AttributeType","gl","FrequencyController","BaseModel","RasterImageTriangulation","WindFrag","WindVert","Wind","defaultRampColors","WindModel","constructor","args","attributeLocation","Object","assign","MAX","UV","render","options","drawColorMode","frequency","run","drawWind","getUninforms","Error","initModels","_this","_source$data","_source$data2","uMin","uMax","vMin","vMax","fadeOpacity","speedFactor","dropRate","dropRateBump","rampColors","sizeScale","layer","getLayerConfig","createTexture2D","rendererService","source","getSource","texture","height","width","cacheZoom","Math","floor","mapService","getZoom","glContext","getGLContext","imageCoords","data","dataArray","coordinates","images","then","imageData","_this$texture","getZoomScale","imageWidth","imageHeight","getWindSize","wind","setWind","image","destroy","layerService","reRender","model","buildLayerModel","moduleName","vertexShader","fragmentShader","defines","getDefines","triangulation","primitive","TRIANGLES","depth","enable","colorModel","p1","lngLatToPixel","p2","min","x","y","buildModels","_this2","clearModels","_this$texture2","_this$wind","registerBuiltinAttributes","styleAttributeService","registerStyleAttribute","name","type","Attribute","descriptor","shaderLocation","buffer","usage","DYNAMIC_DRAW","FLOAT","size","update","feature","featureIdx","vertex","numParticles","newNumParticles","currentZoom","zoomScale","reSize","updateWindDir","updateParticelNum","updateColorRampTexture","d","w","h","draw","setBaseState","_this$colorModel","opacity","beforeRenderData","hooks","beforeRender","call","renderMask","masks","uniforms","u_opacity","u_texture","blend","getBlend","stencil","getStencil","afterRender"],"sources":["/Users/bhanudahiya/Desktop/ledger-IQ/node_modules/@antv/l7-layers/es/wind/models/wind.js"],"sourcesContent":["import _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { AttributeType, gl } from '@antv/l7-core';\nimport { FrequencyController } from '@antv/l7-utils';\nimport BaseModel from \"../../core/BaseModel\";\nimport { RasterImageTriangulation } from \"../../core/triangulation\";\n/* babel-plugin-inline-import '../shaders/wind_frag.glsl' */\nconst WindFrag = \"precision mediump float;\\nuniform float u_opacity: 1.0;\\nuniform sampler2D u_texture;\\nvarying vec2 v_texCoord;\\nvoid main() {\\n  vec4 color = texture2D(u_texture,vec2(v_texCoord.x,v_texCoord.y));\\n  gl_FragColor = color;\\n  gl_FragColor.a *= u_opacity;\\n}\\n\";\n/* babel-plugin-inline-import '../shaders/wind_vert.glsl' */\nconst WindVert = \"precision highp float;\\nuniform mat4 u_ModelMatrix;\\n\\nlayout(location = ATTRIBUTE_LOCATION_POSITION) in vec3 a_Position;\\nlayout(location = ATTRIBUTE_LOCATION_UV) in vec2 a_Uv;\\n\\nvarying vec2 v_texCoord;\\n#pragma include \\\"projection\\\"\\nvoid main() {\\n  v_texCoord = a_Uv;\\n  vec4 project_pos = project_position(vec4(a_Position, 1.0));\\n\\n  gl_Position = project_common_position_to_clipspace(vec4(project_pos.xy, 0.0, 1.0));\\n}\\n\";\nimport { Wind } from \"./windRender\";\nconst defaultRampColors = {\n  0.0: '#3288bd',\n  0.1: '#66c2a5',\n  0.2: '#abdda4',\n  0.3: '#e6f598',\n  0.4: '#fee08b',\n  0.5: '#fdae61',\n  0.6: '#f46d43',\n  1.0: '#d53e4f'\n};\nexport default class WindModel extends BaseModel {\n  constructor(...args) {\n    super(...args);\n    _defineProperty(this, \"texture\", void 0);\n    _defineProperty(this, \"colorModel\", void 0);\n    _defineProperty(this, \"wind\", void 0);\n    _defineProperty(this, \"imageCoords\", void 0);\n    _defineProperty(this, \"sizeScale\", 0.5);\n    // https://mapbox.github.io/webgl-wind/demo/\n    // source: 'http://nomads.ncep.noaa.gov',\n    _defineProperty(this, \"frequency\", new FrequencyController(7.2));\n    _defineProperty(this, \"cacheZoom\", void 0);\n  }\n  get attributeLocation() {\n    return Object.assign(super.attributeLocation, {\n      MAX: super.attributeLocation.MAX,\n      UV: 9\n    });\n  }\n  render(options) {\n    this.drawColorMode(options);\n    // Tip: 控制风场的平均更新频率\n    this.frequency.run(() => {\n      this.drawWind();\n    });\n  }\n  getUninforms() {\n    throw new Error('Method not implemented.');\n  }\n  initModels() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      var _source$data, _source$data2;\n      const {\n        uMin = -21.32,\n        uMax = 26.8,\n        vMin = -21.57,\n        vMax = 21.42,\n        fadeOpacity = 0.996,\n        speedFactor = 0.25,\n        dropRate = 0.003,\n        dropRateBump = 0.01,\n        rampColors = defaultRampColors,\n        sizeScale = 0.5\n        // mask\n      } = _this.layer.getLayerConfig();\n      const {\n        createTexture2D\n      } = _this.rendererService;\n      const source = _this.layer.getSource();\n      _this.texture = createTexture2D({\n        height: 0,\n        width: 0\n      });\n      _this.cacheZoom = Math.floor(_this.mapService.getZoom());\n      const glContext = _this.rendererService.getGLContext();\n      _this.imageCoords = (_source$data = source.data) === null || _source$data === void 0 ? void 0 : _source$data.dataArray[0].coordinates;\n      (_source$data2 = source.data) === null || _source$data2 === void 0 || (_source$data2 = _source$data2.images) === null || _source$data2 === void 0 || _source$data2.then(imageData => {\n        var _this$texture;\n        _this.sizeScale = sizeScale * _this.getZoomScale();\n        const {\n          imageWidth,\n          imageHeight\n        } = _this.getWindSize();\n        const options = {\n          glContext,\n          imageWidth,\n          imageHeight,\n          fadeOpacity,\n          speedFactor,\n          dropRate,\n          dropRateBump,\n          rampColors\n        };\n        _this.wind = new Wind(options);\n\n        // imageData[0] 风场图\n        _this.wind.setWind({\n          uMin,\n          uMax,\n          vMin,\n          vMax,\n          image: imageData[0]\n        });\n        (_this$texture = _this.texture) === null || _this$texture === void 0 || _this$texture.destroy();\n        _this.texture = createTexture2D({\n          width: imageWidth,\n          height: imageHeight\n        });\n        _this.layerService.reRender();\n      });\n      const model = yield _this.layer.buildLayerModel({\n        moduleName: 'wind',\n        vertexShader: WindVert,\n        fragmentShader: WindFrag,\n        defines: _this.getDefines(),\n        triangulation: RasterImageTriangulation,\n        primitive: gl.TRIANGLES,\n        depth: {\n          enable: false\n        }\n      });\n      _this.colorModel = model;\n      return [model];\n    })();\n  }\n  getWindSize() {\n    const p1 = this.mapService.lngLatToPixel(this.imageCoords[0]);\n    const p2 = this.mapService.lngLatToPixel(this.imageCoords[1]);\n    const imageWidth = Math.min(Math.floor((p2.x - p1.x) * this.sizeScale), 2048);\n    const imageHeight = Math.min(Math.floor((p1.y - p2.y) * this.sizeScale), 2048);\n    return {\n      imageWidth,\n      imageHeight\n    };\n  }\n  buildModels() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      return _this2.initModels();\n    })();\n  }\n  clearModels() {\n    var _this$texture2, _this$wind;\n    (_this$texture2 = this.texture) === null || _this$texture2 === void 0 || _this$texture2.destroy();\n    (_this$wind = this.wind) === null || _this$wind === void 0 || _this$wind.destroy();\n  }\n  registerBuiltinAttributes() {\n    // point layer size;\n    this.styleAttributeService.registerStyleAttribute({\n      name: 'uv',\n      type: AttributeType.Attribute,\n      descriptor: {\n        name: 'a_Uv',\n        shaderLocation: this.attributeLocation.UV,\n        buffer: {\n          // give the WebGL driver a hint that this buffer may change\n          usage: gl.DYNAMIC_DRAW,\n          data: [],\n          type: gl.FLOAT\n        },\n        size: 2,\n        update: (feature, featureIdx, vertex) => {\n          return [vertex[3], vertex[4]];\n        }\n      }\n    });\n  }\n  getZoomScale() {\n    return Math.min((this.cacheZoom + 4) / 30 * 2, 2);\n  }\n  drawWind() {\n    if (this.wind) {\n      const {\n        uMin = -21.32,\n        uMax = 26.8,\n        vMin = -21.57,\n        vMax = 21.42,\n        numParticles = 65535,\n        fadeOpacity = 0.996,\n        speedFactor = 0.25,\n        dropRate = 0.003,\n        dropRateBump = 0.01,\n        rampColors = defaultRampColors,\n        sizeScale = 0.5\n      } = this.layer.getLayerConfig();\n      let newNumParticles = numParticles;\n      const currentZoom = Math.floor(this.mapService.getZoom());\n      if (typeof sizeScale === 'number' && sizeScale !== this.sizeScale || currentZoom !== this.cacheZoom) {\n        const zoomScale = this.getZoomScale();\n        this.sizeScale = sizeScale;\n        newNumParticles *= zoomScale;\n        const {\n          imageWidth,\n          imageHeight\n        } = this.getWindSize();\n        this.wind.reSize(imageWidth, imageHeight);\n        this.cacheZoom = currentZoom;\n      }\n      this.wind.updateWindDir(uMin, uMax, vMin, vMax);\n      this.wind.updateParticelNum(newNumParticles);\n      this.wind.updateColorRampTexture(rampColors);\n      this.wind.fadeOpacity = fadeOpacity;\n      this.wind.speedFactor = speedFactor;\n      this.wind.dropRate = dropRate;\n      this.wind.dropRateBump = dropRateBump;\n      const {\n        d,\n        w,\n        h\n      } = this.wind.draw();\n      // 恢复 L7 渲染流程中 gl 状态\n      this.rendererService.setBaseState();\n      this.texture.update({\n        data: d,\n        width: w,\n        height: h\n      });\n    }\n  }\n  drawColorMode(options = {}) {\n    var _this$colorModel;\n    const {\n      opacity\n    } = this.layer.getLayerConfig();\n    this.layerService.beforeRenderData(this.layer);\n    this.layer.hooks.beforeRender.call();\n    this.layerService.renderMask(this.layer.masks);\n    (_this$colorModel = this.colorModel) === null || _this$colorModel === void 0 || _this$colorModel.draw({\n      uniforms: {\n        u_opacity: opacity || 1.0,\n        u_texture: this.texture\n      },\n      blend: this.getBlend(),\n      stencil: this.getStencil(options)\n    });\n    this.layer.hooks.afterRender.call();\n  }\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}