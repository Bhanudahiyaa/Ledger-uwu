{"ast":null,"code":"// src/tileset-manager/utils/bound-buffer.ts\nimport { bBoxToBounds, boundsContains, padBounds } from \"../../geo\";\nvar getLatLonBoundsBuffer = (latLonBounds, bufferRatio) => {\n  const bounds = bBoxToBounds(latLonBounds);\n  const newBounds = padBounds(bounds, bufferRatio);\n  const maxLngExtent = 360 * 3 - 180;\n  const maxLatExtent = 85.0511287798065;\n  const latLonBoundsBuffer = [Math.max(newBounds[0][0], -maxLngExtent), Math.max(newBounds[0][1], -maxLatExtent), Math.min(newBounds[1][0], maxLngExtent), Math.min(newBounds[1][1], maxLatExtent)];\n  return latLonBoundsBuffer;\n};\nvar isLatLonBoundsContains = (latLonBoundsBuffer, latLonBounds) => {\n  const boundsBuffer = bBoxToBounds(latLonBoundsBuffer);\n  const bounds = bBoxToBounds(latLonBounds);\n  const isContains = boundsContains(boundsBuffer, bounds);\n  return isContains;\n};\nexport { getLatLonBoundsBuffer, isLatLonBoundsContains };","map":{"version":3,"names":["bBoxToBounds","boundsContains","padBounds","getLatLonBoundsBuffer","latLonBounds","bufferRatio","bounds","newBounds","maxLngExtent","maxLatExtent","latLonBoundsBuffer","Math","max","min","isLatLonBoundsContains","boundsBuffer","isContains"],"sources":["/Users/bhanudahiya/Desktop/ledger-IQ/node_modules/@antv/l7-utils/es/tileset-manager/utils/bound-buffer.js"],"sourcesContent":["// src/tileset-manager/utils/bound-buffer.ts\nimport { bBoxToBounds, boundsContains, padBounds } from \"../../geo\";\nvar getLatLonBoundsBuffer = (latLonBounds, bufferRatio) => {\n  const bounds = bBoxToBounds(latLonBounds);\n  const newBounds = padBounds(bounds, bufferRatio);\n  const maxLngExtent = 360 * 3 - 180;\n  const maxLatExtent = 85.0511287798065;\n  const latLonBoundsBuffer = [\n    Math.max(newBounds[0][0], -maxLngExtent),\n    Math.max(newBounds[0][1], -maxLatExtent),\n    Math.min(newBounds[1][0], maxLngExtent),\n    Math.min(newBounds[1][1], maxLatExtent)\n  ];\n  return latLonBoundsBuffer;\n};\nvar isLatLonBoundsContains = (latLonBoundsBuffer, latLonBounds) => {\n  const boundsBuffer = bBoxToBounds(latLonBoundsBuffer);\n  const bounds = bBoxToBounds(latLonBounds);\n  const isContains = boundsContains(boundsBuffer, bounds);\n  return isContains;\n};\nexport {\n  getLatLonBoundsBuffer,\n  isLatLonBoundsContains\n};\n"],"mappings":"AAAA;AACA,SAASA,YAAY,EAAEC,cAAc,EAAEC,SAAS,QAAQ,WAAW;AACnE,IAAIC,qBAAqB,GAAGA,CAACC,YAAY,EAAEC,WAAW,KAAK;EACzD,MAAMC,MAAM,GAAGN,YAAY,CAACI,YAAY,CAAC;EACzC,MAAMG,SAAS,GAAGL,SAAS,CAACI,MAAM,EAAED,WAAW,CAAC;EAChD,MAAMG,YAAY,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG;EAClC,MAAMC,YAAY,GAAG,gBAAgB;EACrC,MAAMC,kBAAkB,GAAG,CACzBC,IAAI,CAACC,GAAG,CAACL,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAACC,YAAY,CAAC,EACxCG,IAAI,CAACC,GAAG,CAACL,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAACE,YAAY,CAAC,EACxCE,IAAI,CAACE,GAAG,CAACN,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAEC,YAAY,CAAC,EACvCG,IAAI,CAACE,GAAG,CAACN,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAEE,YAAY,CAAC,CACxC;EACD,OAAOC,kBAAkB;AAC3B,CAAC;AACD,IAAII,sBAAsB,GAAGA,CAACJ,kBAAkB,EAAEN,YAAY,KAAK;EACjE,MAAMW,YAAY,GAAGf,YAAY,CAACU,kBAAkB,CAAC;EACrD,MAAMJ,MAAM,GAAGN,YAAY,CAACI,YAAY,CAAC;EACzC,MAAMY,UAAU,GAAGf,cAAc,CAACc,YAAY,EAAET,MAAM,CAAC;EACvD,OAAOU,UAAU;AACnB,CAAC;AACD,SACEb,qBAAqB,EACrBW,sBAAsB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}