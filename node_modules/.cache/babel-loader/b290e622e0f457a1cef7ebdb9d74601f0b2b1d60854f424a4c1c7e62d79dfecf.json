{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nconst _excluded = [\"id\", \"mapInstance\", \"center\", \"token\", \"version\", \"libraries\", \"minZoom\", \"maxZoom\", \"rotation\", \"pitch\", \"mapSize\", \"logoVisible\"];\nimport { MapServiceEvent } from '@antv/l7-core';\nimport { MercatorCoordinate } from '@antv/l7-map';\nimport { DOM } from '@antv/l7-utils';\nimport { mat4, vec3 } from 'gl-matrix';\nimport Viewport from \"../lib/web-mercator-viewport\";\nimport BaseMapService from \"../utils/BaseMapService\";\nfunction loadStyles(css, doc) {\n  var isMiniAli = typeof my !== 'undefined' && !!my && typeof my.showToast === 'function' && my.isFRM !== true;\n  var isWeChatMiniProgram = typeof wx !== 'undefined' && wx !== null && (typeof wx.request !== 'undefined' || typeof wx.miniProgram !== 'undefined');\n  if (isMiniAli || isWeChatMiniProgram) {\n    return;\n  }\n  if (!doc) doc = document;\n  if (!doc) {\n    return;\n  }\n  var head = doc.head || doc.getElementsByTagName('head')[0];\n  if (!head) {\n    head = doc.createElement('head');\n    var body = doc.body || doc.getElementsByTagName('body')[0];\n    if (body) {\n      body.parentNode.insertBefore(head, body);\n    } else {\n      doc.documentElement.appendChild(head);\n    }\n  }\n  var style = doc.createElement('style');\n  style.type = 'text/css';\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(doc.createTextNode(css));\n  }\n  head.appendChild(style);\n  return style;\n}\nloadStyles(`img[src*='//mapapi.qq.com/web/jsapi/logo/logo_def.png'],.logo-text\n{\n  display: none !important;\n}\n\n.tencent-map > canvas + div {\n  z-index: 3 !important;\n}\n`);\nimport TMapLoader from \"./maploader\";\nconst TMAP_API_KEY = 'OB4BZ-D4W3U-B7VVO-4PJWW-6TKDJ-WPB77';\nconst BMAP_VERSION = '1.exp';\nconst EventMap = {\n  mapmove: 'center_changed',\n  camerachange: ['drag', 'pan', 'rotate', 'pitch', 'zoom'],\n  zoomchange: 'zoom',\n  dragging: 'drag'\n};\n\n// TODO: 基于抽象类 BaseMap 实现，补全缺失方法，解决类型问题\nexport default class TMapService extends BaseMapService {\n  constructor(...args) {\n    super(...args);\n    // @ts-ignore\n    _defineProperty(this, \"viewport\", null);\n    _defineProperty(this, \"evtCbProxyMap\", new Map());\n    _defineProperty(this, \"handleCameraChanged\", () => {\n      // Trigger map change event\n      this.emit('mapchange');\n      // resync\n      const map = this.map;\n      // @ts-ignore\n      const {\n        lng,\n        lat\n      } = map.getCenter();\n      const option = {\n        center: [lng, lat],\n        // @ts-ignore\n        viewportHeight: map.getContainer().clientHeight,\n        // @ts-ignore\n        viewportWidth: map.getContainer().clientWidth,\n        // @ts-ignore\n        bearing: map.getHeading(),\n        // @ts-ignore\n        pitch: map.getPitch(),\n        // @ts-ignore\n        zoom: map.getZoom() - 1\n      };\n      this.viewport.syncWithMapCamera(option);\n      this.updateCoordinateSystemService();\n      this.cameraChangedCallback(this.viewport);\n    });\n  }\n  init() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      var _this$map$controlMana;\n      _this.viewport = new Viewport();\n\n      // TODO: Handle initial config\n      const _this$config = _this.config,\n        {\n          id,\n          mapInstance,\n          center = [121.30654632240122, 31.25744185633306],\n          token = TMAP_API_KEY,\n          version = BMAP_VERSION,\n          libraries = [],\n          minZoom = 3,\n          maxZoom = 18,\n          rotation = 0,\n          pitch = 0,\n          mapSize = 10000,\n          logoVisible = true\n        } = _this$config,\n        rest = _objectWithoutProperties(_this$config, _excluded);\n      if (!(window.TMap || mapInstance)) {\n        yield TMapLoader.load({\n          key: token,\n          version,\n          libraries\n        });\n      }\n      if (mapInstance) {\n        // If there's already a map instance, maybe not setting any other configurations\n        _this.map = mapInstance;\n        _this.$mapContainer = _this.map.getContainer();\n        if (logoVisible === false) {\n          _this.hideLogo();\n        }\n      } else {\n        if (!id) {\n          throw Error('No container id specified');\n        }\n        const mapContainer = DOM.getContainer(id);\n        const map = new TMap.Map(mapContainer, _objectSpread({\n          maxZoom,\n          minZoom,\n          rotation,\n          pitch,\n          showControl: false,\n          // Tencent use (Lat, Lng) while center is (Lng, Lat)\n          center: new TMap.LatLng(center[1], center[0])\n        }, rest));\n\n        // @ts-ignore\n        _this.map = map;\n        // @ts-ignore\n        _this.$mapContainer = map.getContainer();\n        if (logoVisible === false) {\n          _this.hideLogo();\n        }\n      }\n\n      // Set tencent map canvas element position as absolute\n      // @ts-ignore\n      _this.map.canvasContainer.style.position = 'absolute';\n      // @ts-ignore\n      _this.map.drawContainer.classList.add('tencent-map');\n\n      // Set tencent map control layer dom index\n      // @ts-ignore\n      const controlParentContainer = (_this$map$controlMana = _this.map.controlManager.controlContainer) === null || _this$map$controlMana === void 0 ? void 0 : _this$map$controlMana.parentNode;\n      if (controlParentContainer) {\n        controlParentContainer.style.zIndex = 2;\n      }\n      _this.simpleMapCoord.setSize(mapSize);\n\n      // May be find an integrated event replacing following events\n      _this.map.on('drag', _this.handleCameraChanged);\n      _this.map.on('pan', _this.handleCameraChanged);\n      _this.map.on('rotate', _this.handleCameraChanged);\n      _this.map.on('pitch', _this.handleCameraChanged);\n      _this.map.on('zoom', _this.handleCameraChanged);\n\n      // Trigger camera change after init\n      _this.handleCameraChanged();\n    })();\n  }\n  destroy() {\n    this.map.destroy();\n  }\n  onCameraChanged(callback) {\n    this.cameraChangedCallback = callback;\n  }\n  addMarkerContainer() {\n    const container = this.map.getContainer();\n    this.markerContainer = DOM.create('div', 'l7-marker-container', container);\n    this.markerContainer.setAttribute('tabindex', '-1');\n    this.markerContainer.style.zIndex = '2';\n  }\n  getMarkerContainer() {\n    return this.markerContainer;\n  }\n\n  // MapEvent\n  on(type, handle) {\n    if (MapServiceEvent.indexOf(type) !== -1) {\n      this.eventEmitter.on(type, handle);\n    } else {\n      const onProxy = eventName => {\n        let cbProxyMap = this.evtCbProxyMap.get(eventName);\n        if (!cbProxyMap) {\n          this.evtCbProxyMap.set(eventName, cbProxyMap = new Map());\n        }\n        if (cbProxyMap.get(handle)) {\n          return;\n        }\n        const handleProxy = (...args) => {\n          if (args[0] && typeof args[0] === 'object' && !args[0].lngLat && !args[0].lnglat) {\n            args[0].lngLat = args[0].latlng || args[0].latLng;\n          }\n          handle(...args);\n        };\n        cbProxyMap.set(handle, handleProxy);\n        this.map.on(eventName, handleProxy);\n      };\n      if (Array.isArray(EventMap[type])) {\n        EventMap[type].forEach(eventName => {\n          onProxy(eventName || type);\n        });\n      } else {\n        onProxy(EventMap[type] || type);\n      }\n    }\n  }\n  off(type, handle) {\n    if (MapServiceEvent.indexOf(type) !== -1) {\n      this.eventEmitter.off(type, handle);\n      return;\n    }\n    const offProxy = eventName => {\n      var _this$evtCbProxyMap$g, _this$evtCbProxyMap$g2;\n      const handleProxy = (_this$evtCbProxyMap$g = this.evtCbProxyMap.get(type)) === null || _this$evtCbProxyMap$g === void 0 ? void 0 : _this$evtCbProxyMap$g.get(handle);\n      if (!handleProxy) {\n        return;\n      }\n      (_this$evtCbProxyMap$g2 = this.evtCbProxyMap.get(eventName)) === null || _this$evtCbProxyMap$g2 === void 0 || _this$evtCbProxyMap$g2.delete(handle);\n      this.map.off(eventName, handleProxy);\n    };\n    if (Array.isArray(EventMap[type])) {\n      EventMap[type].forEach(eventName => {\n        offProxy(eventName || type);\n      });\n    } else {\n      offProxy(EventMap[type] || type);\n    }\n  }\n  once() {\n    throw new Error('Method not implemented.');\n  }\n\n  // get dom\n  getContainer() {\n    return this.map.getContainer();\n  }\n  getSize() {\n    // @ts-ignore\n    return [this.map.width, this.map.height];\n  }\n\n  // get map status method\n  getMinZoom() {\n    // @ts-ignore\n    return this.map.transform._minZoom;\n  }\n  getMaxZoom() {\n    // @ts-ignore\n    return this.map.transform._maxZoom;\n  }\n\n  // get map params\n  getType() {\n    return 'tmap';\n  }\n  getZoom() {\n    return this.map.getZoom();\n  }\n  getCenter() {\n    const {\n      lng,\n      lat\n    } = this.map.getCenter();\n    return {\n      lng,\n      lat\n    };\n  }\n  getPitch() {\n    return this.map.getPitch();\n  }\n  getRotation() {\n    return this.map.getRotation();\n  }\n  getBounds() {\n    const ne = this.map.getBounds().getNorthEast();\n    const sw = this.map.getBounds().getSouthWest();\n    return [[sw.lng, sw.lat], [ne.lng, ne.lat]];\n  }\n  getMapContainer() {\n    return this.map.getContainer();\n  }\n  getMapCanvasContainer() {\n    var _this$map$getContaine;\n    return (_this$map$getContaine = this.map.getContainer()) === null || _this$map$getContaine === void 0 ? void 0 : _this$map$getContaine.getElementsByTagName('canvas')[0];\n  }\n  getCanvasOverlays() {\n    var _this$getMapCanvasCon;\n    return (_this$getMapCanvasCon = this.getMapCanvasContainer()) === null || _this$getMapCanvasCon === void 0 || (_this$getMapCanvasCon = _this$getMapCanvasCon.nextSibling) === null || _this$getMapCanvasCon === void 0 ? void 0 : _this$getMapCanvasCon.firstChild;\n  }\n  getMapStyleConfig() {\n    // return this.getMap()\n    throw new Error('Method not implemented.');\n  }\n  setBgColor(color) {\n    this.bgColor = color;\n  }\n  setMapStyle(styleId) {\n    this.map.setMapStyleId(styleId);\n  }\n\n  // control with raw map\n  setRotation(rotation) {\n    this.map.setRotation(rotation);\n  }\n  zoomIn() {\n    this.map.setZoom(this.getZoom() + 1);\n  }\n  zoomOut() {\n    this.map.setZoom(this.getZoom() - 1);\n  }\n  panTo([lng, lat]) {\n    this.map.panTo(new TMap.LatLng(lat, lng));\n  }\n  panBy(x, y) {\n    this.map.panBy([x, y]);\n  }\n  fitBounds(bound, fitBoundsOptions) {\n    const [sw, ne] = bound;\n    const swLatLng = new TMap.LatLng(sw[1], sw[0]);\n    const neLatLng = new TMap.LatLng(ne[1], ne[0]);\n    const bounds = new TMap.LatLngBounds(swLatLng, neLatLng);\n    // @ts-ignore\n    this.map.fitBounds(bounds, fitBoundsOptions);\n  }\n  setZoomAndCenter(zoom, [lng, lat]) {\n    this.map.setCenter(new TMap.LatLng(lat, lng));\n    this.map.setZoom(zoom);\n  }\n  setCenter([lng, lat]) {\n    this.map.setCenter(new TMap.LatLng(lat, lng));\n  }\n  setPitch(pitch) {\n    this.map.setPitch(pitch);\n  }\n  setZoom(zoom) {\n    this.map.setZoom(zoom);\n  }\n  setMapStatus(option) {\n    Object.keys(option).map(status => {\n      switch (status) {\n        case 'doubleClickZoom':\n          this.map.setDoubleClickZoom(!!option.doubleClickZoom);\n          break;\n        case 'dragEnable':\n          this.map.setDraggable(!!option.dragEnable);\n          break;\n        case 'rotateEnable':\n          // @ts-ignore\n          this.map.setRotatable(!!option.rotateEnable);\n          break;\n        case 'zoomEnable':\n          this.map.setDoubleClickZoom(!!option.zoomEnable);\n          this.map.setScrollable(!!option.zoomEnable);\n          break;\n        case 'keyboardEnable':\n        case 'resizeEnable':\n        case 'showIndoorMap':\n          throw Error('Options may bot be supported');\n        default:\n      }\n    });\n  }\n\n  // coordinates methods\n  meterToCoord([centerLon, centerLat], [outerLon, outerLat]) {\n    const metreDistance = TMap.geometry.computeDistance([new TMap.LatLng(centerLat, centerLon), new TMap.LatLng(outerLat, outerLon)]);\n    const [x1, y1] = this.lngLatToCoord([centerLon, centerLat]);\n    const [x2, y2] = this.lngLatToCoord([outerLon, outerLat]);\n    const coordDistance = Math.sqrt(Math.pow(x1 - x2, 2) + Math.pow(y1 - y2, 2));\n    return coordDistance / metreDistance;\n  }\n  pixelToLngLat([x, y]) {\n    // Since tecent map didn't provide the reverse method for transforming from pixel to lnglat\n    // It had to be done by calculate the relative distance in container coordinates\n    const {\n      lng: clng,\n      lat: clat\n    } = this.map.getCenter();\n    const {\n      x: centerPixelX,\n      y: centerPixelY\n    } = this.lngLatToPixel([clng, clat]);\n    const {\n      x: centerContainerX,\n      y: centerContainerY\n    } = this.lngLatToContainer([clng, clat]);\n    const {\n      lng,\n      lat\n    } = this.map.unprojectFromContainer(new TMap.Point(centerContainerX + (x - centerPixelX), centerContainerY + (y - centerPixelY)));\n    return this.containerToLngLat([lng, lat]);\n  }\n  lngLatToPixel([lng, lat]) {\n    // @ts-ignore\n    const {\n      x,\n      y\n    } = this.map.projectToWorldPlane(new TMap.LatLng(lat, lng));\n    return {\n      x,\n      y\n    };\n  }\n  containerToLngLat([x, y]) {\n    const {\n      lng,\n      lat\n    } = this.map.unprojectFromContainer(new TMap.Point(x, y));\n    return {\n      lng,\n      lat\n    };\n  }\n  lngLatToContainer([lng, lat]) {\n    // @ts-ignore\n    const {\n      x,\n      y\n    } = this.map.projectToContainer(new TMap.LatLng(lat, lng));\n    return {\n      x,\n      y\n    };\n  }\n  lngLatToCoord([lng, lat]) {\n    // TODO: Perhaps need to check the three.js coordinates\n    const {\n      x,\n      y\n    } = this.lngLatToPixel([lng, lat]);\n    return [x, -y];\n  }\n  lngLatToCoords(list) {\n    return list.map(item => Array.isArray(item[0]) ? this.lngLatToCoords(item) : this.lngLatToCoord(item));\n  }\n  lngLatToMercator(lnglat, altitude) {\n    // Use built in mercator tools due to Tencent not provided related methods\n    const {\n      x = 0,\n      y = 0,\n      z = 0\n    } = MercatorCoordinate.fromLngLat(lnglat, altitude);\n    return {\n      x,\n      y,\n      z\n    };\n  }\n  getModelMatrix(lnglat, altitude, rotate, scale = [1, 1, 1]) {\n    const flat = this.viewport.projectFlat(lnglat);\n    // @ts-ignore\n    const modelMatrix = mat4.create();\n    mat4.translate(modelMatrix, modelMatrix, vec3.fromValues(flat[0], flat[1], altitude));\n    mat4.scale(modelMatrix, modelMatrix, vec3.fromValues(scale[0], scale[1], scale[2]));\n    mat4.rotateX(modelMatrix, modelMatrix, rotate[0]);\n    mat4.rotateY(modelMatrix, modelMatrix, rotate[1]);\n    mat4.rotateZ(modelMatrix, modelMatrix, rotate[2]);\n    return modelMatrix;\n  }\n  getCustomCoordCenter() {\n    throw new Error('Method not implemented.');\n  }\n  exportMap(type) {\n    const renderCanvas = this.getMapCanvasContainer();\n    const layersPng = type === 'jpg' ? renderCanvas === null || renderCanvas === void 0 ? void 0 : renderCanvas.toDataURL('image/jpeg') : renderCanvas === null || renderCanvas === void 0 ? void 0 : renderCanvas.toDataURL('image/png');\n    return layersPng;\n  }\n\n  // Method on earth mode\n  rotateY() {\n    throw new Error('Method not implemented.');\n  }\n  hideLogo() {\n    const container = this.map.getContainer();\n    if (!container) {\n      return;\n    }\n    DOM.addClass(container, 'tmap-contianer--hide-logo');\n  }\n}","map":{"version":3,"names":["_objectSpread","_objectWithoutProperties","_asyncToGenerator","_defineProperty","_excluded","MapServiceEvent","MercatorCoordinate","DOM","mat4","vec3","Viewport","BaseMapService","loadStyles","css","doc","isMiniAli","my","showToast","isFRM","isWeChatMiniProgram","wx","request","miniProgram","document","head","getElementsByTagName","createElement","body","parentNode","insertBefore","documentElement","appendChild","style","type","styleSheet","cssText","createTextNode","TMapLoader","TMAP_API_KEY","BMAP_VERSION","EventMap","mapmove","camerachange","zoomchange","dragging","TMapService","constructor","args","Map","emit","map","lng","lat","getCenter","option","center","viewportHeight","getContainer","clientHeight","viewportWidth","clientWidth","bearing","getHeading","pitch","getPitch","zoom","getZoom","viewport","syncWithMapCamera","updateCoordinateSystemService","cameraChangedCallback","init","_this","_this$map$controlMana","_this$config","config","id","mapInstance","token","version","libraries","minZoom","maxZoom","rotation","mapSize","logoVisible","rest","window","TMap","load","key","$mapContainer","hideLogo","Error","mapContainer","showControl","LatLng","canvasContainer","position","drawContainer","classList","add","controlParentContainer","controlManager","controlContainer","zIndex","simpleMapCoord","setSize","on","handleCameraChanged","destroy","onCameraChanged","callback","addMarkerContainer","container","markerContainer","create","setAttribute","getMarkerContainer","handle","indexOf","eventEmitter","onProxy","eventName","cbProxyMap","evtCbProxyMap","get","set","handleProxy","lngLat","lnglat","latlng","latLng","Array","isArray","forEach","off","offProxy","_this$evtCbProxyMap$g","_this$evtCbProxyMap$g2","delete","once","getSize","width","height","getMinZoom","transform","_minZoom","getMaxZoom","_maxZoom","getType","getRotation","getBounds","ne","getNorthEast","sw","getSouthWest","getMapContainer","getMapCanvasContainer","_this$map$getContaine","getCanvasOverlays","_this$getMapCanvasCon","nextSibling","firstChild","getMapStyleConfig","setBgColor","color","bgColor","setMapStyle","styleId","setMapStyleId","setRotation","zoomIn","setZoom","zoomOut","panTo","panBy","x","y","fitBounds","bound","fitBoundsOptions","swLatLng","neLatLng","bounds","LatLngBounds","setZoomAndCenter","setCenter","setPitch","setMapStatus","Object","keys","status","setDoubleClickZoom","doubleClickZoom","setDraggable","dragEnable","setRotatable","rotateEnable","zoomEnable","setScrollable","meterToCoord","centerLon","centerLat","outerLon","outerLat","metreDistance","geometry","computeDistance","x1","y1","lngLatToCoord","x2","y2","coordDistance","Math","sqrt","pow","pixelToLngLat","clng","clat","centerPixelX","centerPixelY","lngLatToPixel","centerContainerX","centerContainerY","lngLatToContainer","unprojectFromContainer","Point","containerToLngLat","projectToWorldPlane","projectToContainer","lngLatToCoords","list","item","lngLatToMercator","altitude","z","fromLngLat","getModelMatrix","rotate","scale","flat","projectFlat","modelMatrix","translate","fromValues","rotateX","rotateY","rotateZ","getCustomCoordCenter","exportMap","renderCanvas","layersPng","toDataURL","addClass"],"sources":["/Users/bhanudahiya/Desktop/ledger-IQ/node_modules/@antv/l7-maps/es/tmap/map.js"],"sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nconst _excluded = [\"id\", \"mapInstance\", \"center\", \"token\", \"version\", \"libraries\", \"minZoom\", \"maxZoom\", \"rotation\", \"pitch\", \"mapSize\", \"logoVisible\"];\nimport { MapServiceEvent } from '@antv/l7-core';\nimport { MercatorCoordinate } from '@antv/l7-map';\nimport { DOM } from '@antv/l7-utils';\nimport { mat4, vec3 } from 'gl-matrix';\nimport Viewport from \"../lib/web-mercator-viewport\";\nimport BaseMapService from \"../utils/BaseMapService\";\nfunction loadStyles(css, doc) {\n  var isMiniAli = typeof my !== 'undefined' && !!my && typeof my.showToast === 'function' && my.isFRM !== true;\n  var isWeChatMiniProgram = typeof wx !== 'undefined' && wx !== null && (typeof wx.request !== 'undefined' || typeof wx.miniProgram !== 'undefined');\n  if (isMiniAli || isWeChatMiniProgram) {\n    return;\n  }\n  if (!doc) doc = document;\n  if (!doc) {\n    return;\n  }\n  var head = doc.head || doc.getElementsByTagName('head')[0];\n  if (!head) {\n    head = doc.createElement('head');\n    var body = doc.body || doc.getElementsByTagName('body')[0];\n    if (body) {\n      body.parentNode.insertBefore(head, body);\n    } else {\n      doc.documentElement.appendChild(head);\n    }\n  }\n  var style = doc.createElement('style');\n  style.type = 'text/css';\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(doc.createTextNode(css));\n  }\n  head.appendChild(style);\n  return style;\n}\nloadStyles(`img[src*='//mapapi.qq.com/web/jsapi/logo/logo_def.png'],.logo-text\n{\n  display: none !important;\n}\n\n.tencent-map > canvas + div {\n  z-index: 3 !important;\n}\n`);\nimport TMapLoader from \"./maploader\";\nconst TMAP_API_KEY = 'OB4BZ-D4W3U-B7VVO-4PJWW-6TKDJ-WPB77';\nconst BMAP_VERSION = '1.exp';\nconst EventMap = {\n  mapmove: 'center_changed',\n  camerachange: ['drag', 'pan', 'rotate', 'pitch', 'zoom'],\n  zoomchange: 'zoom',\n  dragging: 'drag'\n};\n\n// TODO: 基于抽象类 BaseMap 实现，补全缺失方法，解决类型问题\nexport default class TMapService extends BaseMapService {\n  constructor(...args) {\n    super(...args);\n    // @ts-ignore\n    _defineProperty(this, \"viewport\", null);\n    _defineProperty(this, \"evtCbProxyMap\", new Map());\n    _defineProperty(this, \"handleCameraChanged\", () => {\n      // Trigger map change event\n      this.emit('mapchange');\n      // resync\n      const map = this.map;\n      // @ts-ignore\n      const {\n        lng,\n        lat\n      } = map.getCenter();\n      const option = {\n        center: [lng, lat],\n        // @ts-ignore\n        viewportHeight: map.getContainer().clientHeight,\n        // @ts-ignore\n        viewportWidth: map.getContainer().clientWidth,\n        // @ts-ignore\n        bearing: map.getHeading(),\n        // @ts-ignore\n        pitch: map.getPitch(),\n        // @ts-ignore\n        zoom: map.getZoom() - 1\n      };\n      this.viewport.syncWithMapCamera(option);\n      this.updateCoordinateSystemService();\n      this.cameraChangedCallback(this.viewport);\n    });\n  }\n  init() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      var _this$map$controlMana;\n      _this.viewport = new Viewport();\n\n      // TODO: Handle initial config\n      const _this$config = _this.config,\n        {\n          id,\n          mapInstance,\n          center = [121.30654632240122, 31.25744185633306],\n          token = TMAP_API_KEY,\n          version = BMAP_VERSION,\n          libraries = [],\n          minZoom = 3,\n          maxZoom = 18,\n          rotation = 0,\n          pitch = 0,\n          mapSize = 10000,\n          logoVisible = true\n        } = _this$config,\n        rest = _objectWithoutProperties(_this$config, _excluded);\n      if (!(window.TMap || mapInstance)) {\n        yield TMapLoader.load({\n          key: token,\n          version,\n          libraries\n        });\n      }\n      if (mapInstance) {\n        // If there's already a map instance, maybe not setting any other configurations\n        _this.map = mapInstance;\n        _this.$mapContainer = _this.map.getContainer();\n        if (logoVisible === false) {\n          _this.hideLogo();\n        }\n      } else {\n        if (!id) {\n          throw Error('No container id specified');\n        }\n        const mapContainer = DOM.getContainer(id);\n        const map = new TMap.Map(mapContainer, _objectSpread({\n          maxZoom,\n          minZoom,\n          rotation,\n          pitch,\n          showControl: false,\n          // Tencent use (Lat, Lng) while center is (Lng, Lat)\n          center: new TMap.LatLng(center[1], center[0])\n        }, rest));\n\n        // @ts-ignore\n        _this.map = map;\n        // @ts-ignore\n        _this.$mapContainer = map.getContainer();\n        if (logoVisible === false) {\n          _this.hideLogo();\n        }\n      }\n\n      // Set tencent map canvas element position as absolute\n      // @ts-ignore\n      _this.map.canvasContainer.style.position = 'absolute';\n      // @ts-ignore\n      _this.map.drawContainer.classList.add('tencent-map');\n\n      // Set tencent map control layer dom index\n      // @ts-ignore\n      const controlParentContainer = (_this$map$controlMana = _this.map.controlManager.controlContainer) === null || _this$map$controlMana === void 0 ? void 0 : _this$map$controlMana.parentNode;\n      if (controlParentContainer) {\n        controlParentContainer.style.zIndex = 2;\n      }\n      _this.simpleMapCoord.setSize(mapSize);\n\n      // May be find an integrated event replacing following events\n      _this.map.on('drag', _this.handleCameraChanged);\n      _this.map.on('pan', _this.handleCameraChanged);\n      _this.map.on('rotate', _this.handleCameraChanged);\n      _this.map.on('pitch', _this.handleCameraChanged);\n      _this.map.on('zoom', _this.handleCameraChanged);\n\n      // Trigger camera change after init\n      _this.handleCameraChanged();\n    })();\n  }\n  destroy() {\n    this.map.destroy();\n  }\n  onCameraChanged(callback) {\n    this.cameraChangedCallback = callback;\n  }\n  addMarkerContainer() {\n    const container = this.map.getContainer();\n    this.markerContainer = DOM.create('div', 'l7-marker-container', container);\n    this.markerContainer.setAttribute('tabindex', '-1');\n    this.markerContainer.style.zIndex = '2';\n  }\n  getMarkerContainer() {\n    return this.markerContainer;\n  }\n\n  // MapEvent\n  on(type, handle) {\n    if (MapServiceEvent.indexOf(type) !== -1) {\n      this.eventEmitter.on(type, handle);\n    } else {\n      const onProxy = eventName => {\n        let cbProxyMap = this.evtCbProxyMap.get(eventName);\n        if (!cbProxyMap) {\n          this.evtCbProxyMap.set(eventName, cbProxyMap = new Map());\n        }\n        if (cbProxyMap.get(handle)) {\n          return;\n        }\n        const handleProxy = (...args) => {\n          if (args[0] && typeof args[0] === 'object' && !args[0].lngLat && !args[0].lnglat) {\n            args[0].lngLat = args[0].latlng || args[0].latLng;\n          }\n          handle(...args);\n        };\n        cbProxyMap.set(handle, handleProxy);\n        this.map.on(eventName, handleProxy);\n      };\n      if (Array.isArray(EventMap[type])) {\n        EventMap[type].forEach(eventName => {\n          onProxy(eventName || type);\n        });\n      } else {\n        onProxy(EventMap[type] || type);\n      }\n    }\n  }\n  off(type, handle) {\n    if (MapServiceEvent.indexOf(type) !== -1) {\n      this.eventEmitter.off(type, handle);\n      return;\n    }\n    const offProxy = eventName => {\n      var _this$evtCbProxyMap$g, _this$evtCbProxyMap$g2;\n      const handleProxy = (_this$evtCbProxyMap$g = this.evtCbProxyMap.get(type)) === null || _this$evtCbProxyMap$g === void 0 ? void 0 : _this$evtCbProxyMap$g.get(handle);\n      if (!handleProxy) {\n        return;\n      }\n      (_this$evtCbProxyMap$g2 = this.evtCbProxyMap.get(eventName)) === null || _this$evtCbProxyMap$g2 === void 0 || _this$evtCbProxyMap$g2.delete(handle);\n      this.map.off(eventName, handleProxy);\n    };\n    if (Array.isArray(EventMap[type])) {\n      EventMap[type].forEach(eventName => {\n        offProxy(eventName || type);\n      });\n    } else {\n      offProxy(EventMap[type] || type);\n    }\n  }\n  once() {\n    throw new Error('Method not implemented.');\n  }\n\n  // get dom\n  getContainer() {\n    return this.map.getContainer();\n  }\n  getSize() {\n    // @ts-ignore\n    return [this.map.width, this.map.height];\n  }\n\n  // get map status method\n  getMinZoom() {\n    // @ts-ignore\n    return this.map.transform._minZoom;\n  }\n  getMaxZoom() {\n    // @ts-ignore\n    return this.map.transform._maxZoom;\n  }\n\n  // get map params\n  getType() {\n    return 'tmap';\n  }\n  getZoom() {\n    return this.map.getZoom();\n  }\n  getCenter() {\n    const {\n      lng,\n      lat\n    } = this.map.getCenter();\n    return {\n      lng,\n      lat\n    };\n  }\n  getPitch() {\n    return this.map.getPitch();\n  }\n  getRotation() {\n    return this.map.getRotation();\n  }\n  getBounds() {\n    const ne = this.map.getBounds().getNorthEast();\n    const sw = this.map.getBounds().getSouthWest();\n    return [[sw.lng, sw.lat], [ne.lng, ne.lat]];\n  }\n  getMapContainer() {\n    return this.map.getContainer();\n  }\n  getMapCanvasContainer() {\n    var _this$map$getContaine;\n    return (_this$map$getContaine = this.map.getContainer()) === null || _this$map$getContaine === void 0 ? void 0 : _this$map$getContaine.getElementsByTagName('canvas')[0];\n  }\n  getCanvasOverlays() {\n    var _this$getMapCanvasCon;\n    return (_this$getMapCanvasCon = this.getMapCanvasContainer()) === null || _this$getMapCanvasCon === void 0 || (_this$getMapCanvasCon = _this$getMapCanvasCon.nextSibling) === null || _this$getMapCanvasCon === void 0 ? void 0 : _this$getMapCanvasCon.firstChild;\n  }\n  getMapStyleConfig() {\n    // return this.getMap()\n    throw new Error('Method not implemented.');\n  }\n  setBgColor(color) {\n    this.bgColor = color;\n  }\n  setMapStyle(styleId) {\n    this.map.setMapStyleId(styleId);\n  }\n\n  // control with raw map\n  setRotation(rotation) {\n    this.map.setRotation(rotation);\n  }\n  zoomIn() {\n    this.map.setZoom(this.getZoom() + 1);\n  }\n  zoomOut() {\n    this.map.setZoom(this.getZoom() - 1);\n  }\n  panTo([lng, lat]) {\n    this.map.panTo(new TMap.LatLng(lat, lng));\n  }\n  panBy(x, y) {\n    this.map.panBy([x, y]);\n  }\n  fitBounds(bound, fitBoundsOptions) {\n    const [sw, ne] = bound;\n    const swLatLng = new TMap.LatLng(sw[1], sw[0]);\n    const neLatLng = new TMap.LatLng(ne[1], ne[0]);\n    const bounds = new TMap.LatLngBounds(swLatLng, neLatLng);\n    // @ts-ignore\n    this.map.fitBounds(bounds, fitBoundsOptions);\n  }\n  setZoomAndCenter(zoom, [lng, lat]) {\n    this.map.setCenter(new TMap.LatLng(lat, lng));\n    this.map.setZoom(zoom);\n  }\n  setCenter([lng, lat]) {\n    this.map.setCenter(new TMap.LatLng(lat, lng));\n  }\n  setPitch(pitch) {\n    this.map.setPitch(pitch);\n  }\n  setZoom(zoom) {\n    this.map.setZoom(zoom);\n  }\n  setMapStatus(option) {\n    Object.keys(option).map(status => {\n      switch (status) {\n        case 'doubleClickZoom':\n          this.map.setDoubleClickZoom(!!option.doubleClickZoom);\n          break;\n        case 'dragEnable':\n          this.map.setDraggable(!!option.dragEnable);\n          break;\n        case 'rotateEnable':\n          // @ts-ignore\n          this.map.setRotatable(!!option.rotateEnable);\n          break;\n        case 'zoomEnable':\n          this.map.setDoubleClickZoom(!!option.zoomEnable);\n          this.map.setScrollable(!!option.zoomEnable);\n          break;\n        case 'keyboardEnable':\n        case 'resizeEnable':\n        case 'showIndoorMap':\n          throw Error('Options may bot be supported');\n        default:\n      }\n    });\n  }\n\n  // coordinates methods\n  meterToCoord([centerLon, centerLat], [outerLon, outerLat]) {\n    const metreDistance = TMap.geometry.computeDistance([new TMap.LatLng(centerLat, centerLon), new TMap.LatLng(outerLat, outerLon)]);\n    const [x1, y1] = this.lngLatToCoord([centerLon, centerLat]);\n    const [x2, y2] = this.lngLatToCoord([outerLon, outerLat]);\n    const coordDistance = Math.sqrt(Math.pow(x1 - x2, 2) + Math.pow(y1 - y2, 2));\n    return coordDistance / metreDistance;\n  }\n  pixelToLngLat([x, y]) {\n    // Since tecent map didn't provide the reverse method for transforming from pixel to lnglat\n    // It had to be done by calculate the relative distance in container coordinates\n    const {\n      lng: clng,\n      lat: clat\n    } = this.map.getCenter();\n    const {\n      x: centerPixelX,\n      y: centerPixelY\n    } = this.lngLatToPixel([clng, clat]);\n    const {\n      x: centerContainerX,\n      y: centerContainerY\n    } = this.lngLatToContainer([clng, clat]);\n    const {\n      lng,\n      lat\n    } = this.map.unprojectFromContainer(new TMap.Point(centerContainerX + (x - centerPixelX), centerContainerY + (y - centerPixelY)));\n    return this.containerToLngLat([lng, lat]);\n  }\n  lngLatToPixel([lng, lat]) {\n    // @ts-ignore\n    const {\n      x,\n      y\n    } = this.map.projectToWorldPlane(new TMap.LatLng(lat, lng));\n    return {\n      x,\n      y\n    };\n  }\n  containerToLngLat([x, y]) {\n    const {\n      lng,\n      lat\n    } = this.map.unprojectFromContainer(new TMap.Point(x, y));\n    return {\n      lng,\n      lat\n    };\n  }\n  lngLatToContainer([lng, lat]) {\n    // @ts-ignore\n    const {\n      x,\n      y\n    } = this.map.projectToContainer(new TMap.LatLng(lat, lng));\n    return {\n      x,\n      y\n    };\n  }\n  lngLatToCoord([lng, lat]) {\n    // TODO: Perhaps need to check the three.js coordinates\n    const {\n      x,\n      y\n    } = this.lngLatToPixel([lng, lat]);\n    return [x, -y];\n  }\n  lngLatToCoords(list) {\n    return list.map(item => Array.isArray(item[0]) ? this.lngLatToCoords(item) : this.lngLatToCoord(item));\n  }\n  lngLatToMercator(lnglat, altitude) {\n    // Use built in mercator tools due to Tencent not provided related methods\n    const {\n      x = 0,\n      y = 0,\n      z = 0\n    } = MercatorCoordinate.fromLngLat(lnglat, altitude);\n    return {\n      x,\n      y,\n      z\n    };\n  }\n  getModelMatrix(lnglat, altitude, rotate, scale = [1, 1, 1]) {\n    const flat = this.viewport.projectFlat(lnglat);\n    // @ts-ignore\n    const modelMatrix = mat4.create();\n    mat4.translate(modelMatrix, modelMatrix, vec3.fromValues(flat[0], flat[1], altitude));\n    mat4.scale(modelMatrix, modelMatrix, vec3.fromValues(scale[0], scale[1], scale[2]));\n    mat4.rotateX(modelMatrix, modelMatrix, rotate[0]);\n    mat4.rotateY(modelMatrix, modelMatrix, rotate[1]);\n    mat4.rotateZ(modelMatrix, modelMatrix, rotate[2]);\n    return modelMatrix;\n  }\n  getCustomCoordCenter() {\n    throw new Error('Method not implemented.');\n  }\n  exportMap(type) {\n    const renderCanvas = this.getMapCanvasContainer();\n    const layersPng = type === 'jpg' ? renderCanvas === null || renderCanvas === void 0 ? void 0 : renderCanvas.toDataURL('image/jpeg') : renderCanvas === null || renderCanvas === void 0 ? void 0 : renderCanvas.toDataURL('image/png');\n    return layersPng;\n  }\n\n  // Method on earth mode\n  rotateY() {\n    throw new Error('Method not implemented.');\n  }\n  hideLogo() {\n    const container = this.map.getContainer();\n    if (!container) {\n      return;\n    }\n    DOM.addClass(container, 'tmap-contianer--hide-logo');\n  }\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}