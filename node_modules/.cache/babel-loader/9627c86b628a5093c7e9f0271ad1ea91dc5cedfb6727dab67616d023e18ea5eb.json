{"ast":null,"code":"import { __awaiter, __decorate, __metadata } from \"tslib\";\nimport { inject, singleton, contrib, Contribution } from 'mana-syringe';\nimport { DisposableCollection, Disposable } from '../common/disposable';\nimport { IFrontendApplicationContribution } from '../xflow-main/interface';\nimport { IGraphProvider } from '../xflow-main/graph/graph-provider';\nimport { IKeyBindingOptionProvider, IKeyBindingService, IKeyBindingContribution } from './interface';\nimport { IGraphCommandService } from '../command/interface';\nimport { IModelService } from '../model-service/interface';\nlet KeyBindingRegistry = class KeyBindingRegistry {\n  constructor() {\n    /** disposables */\n    this.toDispose = new DisposableCollection();\n    /** disposables */\n    this.keyBindingMap = new Map();\n    /** disposables */\n    this.enabledKeyBindingMap = new Map();\n    /** 注册用户定义在config中的keybinding */\n    this.registerExternalKeybindings = () => __awaiter(this, void 0, void 0, function* () {\n      const {\n        registerKeybindingFunc\n      } = yield this.optionProvider.getOption();\n      return registerKeybindingFunc(this);\n    });\n    /** 注册可Dispose的Keybinding */\n    this.registerKeybinding = (keybindings = []) => {\n      const toDispose = new DisposableCollection();\n      keybindings.forEach(keybinding => {\n        /** 注册 Keybinding config */\n        this.keyBindingMap.set(keybinding.id, keybinding);\n        /** enable Keybinding */\n        this.enableKeyBindings(keybinding.id).then(d => {\n          toDispose.push(Disposable.create(() => {\n            d.dispose();\n            this.keyBindingMap.delete(keybinding.id);\n          }));\n        });\n      });\n      this.toDispose.push(toDispose);\n      return toDispose;\n    };\n    /**\n     * 启用keybinding, 用于触发command\n     * @param id contextId\n     */\n    this.enableKeyBindings = keybindingId => __awaiter(this, void 0, void 0, function* () {\n      /** 清理同样的键盘事件 */\n      this.disableKeyBindings([keybindingId]);\n      const keybinding = this.keyBindingMap.get(keybindingId);\n      const graph = yield this.getX6Graph();\n      /**\n       * x6文档：https://x6.antv.vision/zh/docs/api/graph/keyboard\n       * x6源码：packages/x6/src/graph/keyboard.ts\n       */\n      const handler = this.runCommand(keybinding);\n      graph.bindKey(keybinding.keybinding, handler);\n      /** 注册disposable */\n      const toDispose = Disposable.create(() => {\n        graph.unbindKey(keybinding.keybinding);\n        this.enabledKeyBindingMap.delete(keybinding.id);\n      });\n      /** 注册disposable */\n      this.enabledKeyBindingMap.set(keybinding.id, toDispose);\n      return toDispose;\n    });\n    /**\n     * 禁用keybinding\n     */\n    this.disableKeyBindings = ids => {\n      ids.forEach(id => {\n        const disposable = this.enabledKeyBindingMap.get(id);\n        if (disposable) {\n          disposable.dispose();\n        }\n      });\n    };\n    /**\n     * 执行command\n     */\n    this.runCommand = keybinding => e => __awaiter(this, void 0, void 0, function* () {\n      yield keybinding.callback(keybinding, this.modelService, this.commandService, e);\n    });\n    /**\n     * 获取画布实例\n     */\n    this.getX6Graph = () => __awaiter(this, void 0, void 0, function* () {\n      const graphInstance = yield this.graphProvider.getGraphInstance();\n      return graphInstance;\n    });\n  }\n  /**\n   *  app启动时, 注册keybinding的扩展\n   */\n  onStart() {\n    const contributions = this.contributionProvider.getContributions();\n    for (const contribution of contributions) {\n      contribution.registerKeybinding(this);\n    }\n    this.registerExternalKeybindings();\n  }\n  /**\n   * app停止的逻辑\n   */\n  onStop() {\n    this.toDispose.dispose();\n  }\n};\n__decorate([inject(IKeyBindingOptionProvider), __metadata(\"design:type\", Object)], KeyBindingRegistry.prototype, \"optionProvider\", void 0);\n__decorate([inject(IGraphCommandService), __metadata(\"design:type\", Object)], KeyBindingRegistry.prototype, \"commandService\", void 0);\n__decorate([inject(IModelService), __metadata(\"design:type\", Object)], KeyBindingRegistry.prototype, \"modelService\", void 0);\n__decorate([contrib(IKeyBindingContribution), __metadata(\"design:type\", Object)], KeyBindingRegistry.prototype, \"contributionProvider\", void 0);\n__decorate([inject(IGraphProvider), __metadata(\"design:type\", Object)], KeyBindingRegistry.prototype, \"graphProvider\", void 0);\nKeyBindingRegistry = __decorate([singleton({\n  contrib: [IFrontendApplicationContribution, IKeyBindingService]\n})], KeyBindingRegistry);\nexport { KeyBindingRegistry };","map":{"version":3,"names":["inject","singleton","contrib","Contribution","DisposableCollection","Disposable","IFrontendApplicationContribution","IGraphProvider","IKeyBindingOptionProvider","IKeyBindingService","IKeyBindingContribution","IGraphCommandService","IModelService","KeyBindingRegistry","constructor","toDispose","keyBindingMap","Map","enabledKeyBindingMap","registerExternalKeybindings","__awaiter","registerKeybindingFunc","optionProvider","getOption","registerKeybinding","keybindings","forEach","keybinding","set","id","enableKeyBindings","then","d","push","create","dispose","delete","keybindingId","disableKeyBindings","get","graph","getX6Graph","handler","runCommand","bindKey","unbindKey","ids","disposable","e","callback","modelService","commandService","graphInstance","graphProvider","getGraphInstance","onStart","contributions","contributionProvider","getContributions","contribution","onStop","__decorate"],"sources":["../../src/keybinding/keybinding-registry.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}