{"ast":null,"code":"/**\n * @fileOverview random layout\n * @author shiwu.wyy@antfin.com\n */\nimport * as d3Force from \"d3-force\";\nimport forceInABox from \"./force-in-a-box\";\nimport { isArray, isFunction, isNumber, isObject } from \"../../util\";\nimport { Base } from \"../base\";\nimport { LAYOUT_MESSAGE } from \"../constants\";\n/**\n * 经典力导布局 force-directed\n */\nexport class ForceLayout extends Base {\n  constructor(options) {\n    super();\n    /** 向心力作用点 */\n    this.center = [0, 0];\n    /** 节点作用力 */\n    this.nodeStrength = null;\n    /** 边的作用力, 默认为根据节点的入度出度自适应 */\n    this.edgeStrength = null;\n    /** 是否防止节点相互覆盖 */\n    this.preventOverlap = false;\n    /** 聚类节点作用力 */\n    this.clusterNodeStrength = null;\n    /** 聚类边作用力 */\n    this.clusterEdgeStrength = null;\n    /** 聚类边长度 */\n    this.clusterEdgeDistance = null;\n    /** 聚类节点大小 / 直径，直径越大，越分散 */\n    this.clusterNodeSize = null;\n    /** 用于 foci 的力 */\n    this.clusterFociStrength = null;\n    /** 默认边长度 */\n    this.linkDistance = 50;\n    /** 迭代阈值的衰减率 [0, 1]，0.028 对应最大迭代数为 300 */\n    this.alphaDecay = 0.028;\n    /** 停止迭代的阈值 */\n    this.alphaMin = 0.001;\n    /** 当前阈值 */\n    this.alpha = 0.3;\n    /** 防止重叠的力强度 */\n    this.collideStrength = 1;\n    /** 是否启用web worker。前提是在web worker里执行布局，否则无效\t*/\n    this.workerEnabled = false;\n    this.tick = () => {};\n    /** 布局完成回调 */\n    this.onLayoutEnd = () => {};\n    /** 是否正在布局 */\n    this.ticking = undefined;\n    if (options) {\n      this.updateCfg(options);\n    }\n  }\n  getDefaultCfg() {\n    return {\n      center: [0, 0],\n      nodeStrength: null,\n      edgeStrength: null,\n      preventOverlap: false,\n      nodeSize: undefined,\n      nodeSpacing: undefined,\n      linkDistance: 50,\n      forceSimulation: null,\n      alphaDecay: 0.028,\n      alphaMin: 0.001,\n      alpha: 0.3,\n      collideStrength: 1,\n      clustering: false,\n      clusterNodeStrength: -1,\n      clusterEdgeStrength: 0.1,\n      clusterEdgeDistance: 100,\n      clusterFociStrength: 0.8,\n      clusterNodeSize: 10,\n      tick() {},\n      onLayoutEnd() {},\n      // 是否启用web worker。前提是在web worker里执行布局，否则无效\n      workerEnabled: false\n    };\n  }\n  /**\n   * 初始化\n   * @param {object} data 数据\n   */\n  init(data) {\n    const self = this;\n    self.nodes = data.nodes || [];\n    const edges = data.edges || [];\n    self.edges = edges.map(edge => {\n      const res = {};\n      const expectKeys = [\"targetNode\", \"sourceNode\", \"startPoint\", \"endPoint\"];\n      Object.keys(edge).forEach(key => {\n        if (!(expectKeys.indexOf(key) > -1)) {\n          res[key] = edge[key];\n        }\n      });\n      return res;\n    });\n    self.ticking = false;\n  }\n  /**\n   * 执行布局\n   */\n  execute(reloadData) {\n    const self = this;\n    const nodes = self.nodes;\n    const edges = self.edges;\n    // 如果正在布局，忽略布局请求\n    if (self.ticking) {\n      return;\n    }\n    let simulation = self.forceSimulation;\n    const alphaMin = self.alphaMin;\n    const alphaDecay = self.alphaDecay;\n    const alpha = self.alpha;\n    if (!simulation) {\n      try {\n        // 定义节点的力\n        const nodeForce = d3Force.forceManyBody();\n        if (self.nodeStrength) {\n          nodeForce.strength(self.nodeStrength);\n        }\n        simulation = d3Force.forceSimulation().nodes(nodes);\n        if (self.clustering) {\n          const clusterForce = forceInABox();\n          clusterForce.centerX(self.center[0]).centerY(self.center[1]).template(\"force\").strength(self.clusterFociStrength);\n          if (edges) {\n            clusterForce.links(edges);\n          }\n          if (nodes) {\n            clusterForce.nodes(nodes);\n          }\n          clusterForce.forceLinkDistance(self.clusterEdgeDistance).forceLinkStrength(self.clusterEdgeStrength).forceCharge(self.clusterNodeStrength).forceNodeSize(self.clusterNodeSize);\n          self.clusterForce = clusterForce;\n          simulation.force(\"group\", clusterForce);\n        }\n        simulation.force(\"center\", d3Force.forceCenter(self.center[0], self.center[1])).force(\"charge\", nodeForce).alpha(alpha).alphaDecay(alphaDecay).alphaMin(alphaMin);\n        if (self.preventOverlap) {\n          self.overlapProcess(simulation);\n        }\n        // 如果有边，定义边的力\n        if (edges) {\n          // d3 的 forceLayout 会重新生成边的数据模型，为了避免污染源数据\n          const edgeForce = d3Force.forceLink().id(d => d.id).links(edges);\n          if (self.edgeStrength) {\n            edgeForce.strength(self.edgeStrength);\n          }\n          if (self.linkDistance) {\n            edgeForce.distance(self.linkDistance);\n          }\n          self.edgeForce = edgeForce;\n          simulation.force(\"link\", edgeForce);\n        }\n        if (self.workerEnabled && !isInWorker()) {\n          // 如果不是运行在web worker里，不用web worker布局\n          self.workerEnabled = false;\n          console.warn(\"workerEnabled option is only supported when running in web worker.\");\n        }\n        if (!self.workerEnabled) {\n          simulation.on(\"tick\", () => {\n            self.tick();\n          }).on(\"end\", () => {\n            self.ticking = false;\n            if (self.onLayoutEnd) self.onLayoutEnd();\n          });\n          self.ticking = true;\n        } else {\n          // worker is enabled\n          simulation.stop();\n          const totalTicks = getSimulationTicks(simulation);\n          for (let currentTick = 1; currentTick <= totalTicks; currentTick++) {\n            simulation.tick();\n            // currentTick starts from 1.\n            postMessage({\n              nodes,\n              currentTick,\n              totalTicks,\n              type: LAYOUT_MESSAGE.TICK\n            }, undefined);\n          }\n          self.ticking = false;\n        }\n        self.forceSimulation = simulation;\n        self.ticking = true;\n      } catch (e) {\n        self.ticking = false;\n        console.warn(e);\n      }\n    } else {\n      if (reloadData) {\n        if (self.clustering && self.clusterForce) {\n          self.clusterForce.nodes(nodes);\n          self.clusterForce.links(edges);\n        }\n        simulation.nodes(nodes);\n        if (edges && self.edgeForce) self.edgeForce.links(edges);else if (edges && !self.edgeForce) {\n          // d3 的 forceLayout 会重新生成边的数据模型，为了避免污染源数据\n          const edgeForce = d3Force.forceLink().id(d => d.id).links(edges);\n          if (self.edgeStrength) {\n            edgeForce.strength(self.edgeStrength);\n          }\n          if (self.linkDistance) {\n            edgeForce.distance(self.linkDistance);\n          }\n          self.edgeForce = edgeForce;\n          simulation.force(\"link\", edgeForce);\n        }\n      }\n      if (self.preventOverlap) {\n        self.overlapProcess(simulation);\n      }\n      simulation.alpha(alpha).restart();\n      this.ticking = true;\n    }\n  }\n  /**\n   * 防止重叠\n   * @param {object} simulation 力模拟模型\n   */\n  overlapProcess(simulation) {\n    const self = this;\n    const nodeSize = self.nodeSize;\n    const nodeSpacing = self.nodeSpacing;\n    let nodeSizeFunc;\n    let nodeSpacingFunc;\n    const collideStrength = self.collideStrength;\n    if (isNumber(nodeSpacing)) {\n      nodeSpacingFunc = () => nodeSpacing;\n    } else if (isFunction(nodeSpacing)) {\n      nodeSpacingFunc = nodeSpacing;\n    } else {\n      nodeSpacingFunc = () => 0;\n    }\n    if (!nodeSize) {\n      nodeSizeFunc = d => {\n        if (d.size) {\n          if (isArray(d.size)) {\n            const res = d.size[0] > d.size[1] ? d.size[0] : d.size[1];\n            return res / 2 + nodeSpacingFunc(d);\n          }\n          if (isObject(d.size)) {\n            const res = d.size.width > d.size.height ? d.size.width : d.size.height;\n            return res / 2 + nodeSpacingFunc(d);\n          }\n          return d.size / 2 + nodeSpacingFunc(d);\n        }\n        return 10 + nodeSpacingFunc(d);\n      };\n    } else if (isFunction(nodeSize)) {\n      nodeSizeFunc = d => {\n        const size = nodeSize(d);\n        return size + nodeSpacingFunc(d);\n      };\n    } else if (isArray(nodeSize)) {\n      const larger = nodeSize[0] > nodeSize[1] ? nodeSize[0] : nodeSize[1];\n      const radius = larger / 2;\n      nodeSizeFunc = d => radius + nodeSpacingFunc(d);\n    } else if (isNumber(nodeSize)) {\n      const radius = nodeSize / 2;\n      nodeSizeFunc = d => radius + nodeSpacingFunc(d);\n    } else {\n      nodeSizeFunc = () => 10;\n    }\n    // forceCollide's parameter is a radius\n    simulation.force(\"collisionForce\", d3Force.forceCollide(nodeSizeFunc).strength(collideStrength));\n  }\n  /**\n   * 更新布局配置，但不执行布局\n   * @param {object} cfg 需要更新的配置项\n   */\n  updateCfg(cfg) {\n    const self = this;\n    if (self.ticking) {\n      self.forceSimulation.stop();\n      self.ticking = false;\n    }\n    self.forceSimulation = null;\n    Object.assign(self, cfg);\n  }\n  destroy() {\n    const self = this;\n    if (self.ticking) {\n      self.forceSimulation.stop();\n      self.ticking = false;\n    }\n    self.nodes = null;\n    self.edges = null;\n    self.destroyed = true;\n  }\n}\n// Return total ticks of d3-force simulation\nfunction getSimulationTicks(simulation) {\n  const alphaMin = simulation.alphaMin();\n  const alphaTarget = simulation.alphaTarget();\n  const alpha = simulation.alpha();\n  const totalTicksFloat = Math.log((alphaMin - alphaTarget) / (alpha - alphaTarget)) / Math.log(1 - simulation.alphaDecay());\n  const totalTicks = Math.ceil(totalTicksFloat);\n  return totalTicks;\n}\n// 判断是否运行在web worker里\nfunction isInWorker() {\n  // eslint-disable-next-line no-undef\n  return typeof WorkerGlobalScope !== \"undefined\" && self instanceof WorkerGlobalScope;\n}","map":{"version":3,"names":["d3Force","forceInABox","isArray","isFunction","isNumber","isObject","Base","LAYOUT_MESSAGE","ForceLayout","constructor","options","center","nodeStrength","edgeStrength","preventOverlap","clusterNodeStrength","clusterEdgeStrength","clusterEdgeDistance","clusterNodeSize","clusterFociStrength","linkDistance","alphaDecay","alphaMin","alpha","collideStrength","workerEnabled","tick","onLayoutEnd","ticking","undefined","updateCfg","getDefaultCfg","nodeSize","nodeSpacing","forceSimulation","clustering","init","data","self","nodes","edges","map","edge","res","expectKeys","Object","keys","forEach","key","indexOf","execute","reloadData","simulation","nodeForce","forceManyBody","strength","clusterForce","centerX","centerY","template","links","forceLinkDistance","forceLinkStrength","forceCharge","forceNodeSize","force","forceCenter","overlapProcess","edgeForce","forceLink","id","d","distance","isInWorker","console","warn","on","stop","totalTicks","getSimulationTicks","currentTick","postMessage","type","TICK","e","restart","nodeSizeFunc","nodeSpacingFunc","size","width","height","larger","radius","forceCollide","cfg","assign","destroy","destroyed","alphaTarget","totalTicksFloat","Math","log","ceil","WorkerGlobalScope"],"sources":["../../../src/layout/force/force.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}