{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return _possibleConstructorReturn(this, result);\n  };\n}\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nimport { mat3, vec3, vec4 } from 'gl-matrix';\nimport { Component } from '../../ComponentManager';\nimport { isTypedArray } from '../../utils/is-typedarray';\nexport var GeometryComponent = /*#__PURE__*/function (_Component) {\n  _inherits(GeometryComponent, _Component);\n  var _super = _createSuper(GeometryComponent);\n\n  // instanced count\n  function GeometryComponent(data) {\n    var _this;\n    _classCallCheck(this, GeometryComponent);\n    _this = _super.call(this, data);\n    _this.dirty = true;\n    _this.attributes = [];\n    _this.indices = void 0;\n    _this.indicesBuffer = void 0;\n    _this.vertexCount = 0;\n    _this.maxInstancedCount = void 0;\n    _this.aabb = void 0;\n    _this.entity = void 0;\n    Object.assign(_assertThisInitialized(_this), data);\n    return _this;\n  }\n  /**\n   * @see https://threejs.org/docs/#api/en/core/BufferAttribute\n   */\n\n  _createClass(GeometryComponent, [{\n    key: \"setAttribute\",\n    value: function setAttribute(name, data, descriptor, bufferGetter) {\n      var existed = this.attributes.find(function (a) {\n        return a.name === name;\n      });\n      if (!existed) {\n        this.attributes.push(_objectSpread(_objectSpread({\n          dirty: true,\n          name: name,\n          data: data\n        }, descriptor), {}, {\n          bufferGetter: bufferGetter\n        }));\n      } else {\n        existed.data = data;\n        existed.dirty = true;\n      }\n      this.dirty = true;\n      return this;\n    }\n  }, {\n    key: \"setIndex\",\n    value: function setIndex(data) {\n      this.indices = new Uint32Array(\n      // @ts-ignore\n      data.buffer ? data.buffer : data);\n      this.dirty = true;\n      return this;\n    }\n    /**\n     * when merge all the geometries into one, we need to transform every vertex's position\n     * and every face's normal\n     */\n  }, {\n    key: \"applyMatrix\",\n    value: function applyMatrix(matrix) {\n      var positionAttribute = this.attributes.find(function (_ref) {\n        var name = _ref.name;\n        return name === 'position';\n      });\n      var normalAttribute = this.attributes.find(function (_ref2) {\n        var name = _ref2.name;\n        return name === 'normal';\n      });\n      if (positionAttribute) {\n        positionAttribute.dirty = true; // @ts-ignore\n\n        if (positionAttribute.data && positionAttribute.data.length) {\n          // @ts-ignore\n          for (var i = 0; i < positionAttribute.data.length; i += 3) {\n            var position = vec4.fromValues(\n            // @ts-ignore\n            positionAttribute.data[i],\n            // @ts-ignore\n            positionAttribute.data[i + 1],\n            // @ts-ignore\n            positionAttribute.data[i + 2], 1);\n            vec4.transformMat4(position, position, matrix);\n            if (isTypedArray(positionAttribute.data)) {\n              // @ts-ignore\n              positionAttribute.data.set([position[0], position[1], position[2]], i);\n            } else {\n              // @ts-ignore\n              positionAttribute.data[i] = position[0]; // @ts-ignore\n\n              positionAttribute.data[i + 1] = position[1]; // @ts-ignore\n\n              positionAttribute.data[i + 2] = position[2];\n            }\n          }\n        }\n      }\n      if (normalAttribute) {\n        var normalMatrix = mat3.normalFromMat4(mat3.create(), matrix); // @ts-ignore\n\n        if (normalAttribute.data && normalAttribute.data.length) {\n          // @ts-ignore\n          for (var _i = 0; _i < normalAttribute.data.length; _i += 3) {\n            var normal = vec3.fromValues(\n            // @ts-ignore\n            normalAttribute.data[_i],\n            // @ts-ignore\n            normalAttribute.data[_i + 1],\n            // @ts-ignore\n            normalAttribute.data[_i + 2]);\n            vec3.transformMat3(normal, normal, normalMatrix);\n            vec3.normalize(normal, normal);\n            if (isTypedArray(normalAttribute.data)) {\n              // @ts-ignore\n              normalAttribute.data.set([normal[0], normal[1], normal[2]], _i);\n            } else {\n              // @ts-ignore\n              normalAttribute.data[_i] = normal[0]; // @ts-ignore\n\n              normalAttribute.data[_i + 1] = normal[1]; // @ts-ignore\n\n              normalAttribute.data[_i + 2] = normal[2];\n            }\n          }\n        }\n      }\n    }\n  }]);\n  return GeometryComponent;\n}(Component);","map":{"version":3,"names":["mat3","vec3","vec4","Component","isTypedArray","GeometryComponent","_Component","_inherits","_super","_createSuper","data","_this","_classCallCheck","call","dirty","attributes","indices","indicesBuffer","vertexCount","maxInstancedCount","aabb","entity","Object","assign","_assertThisInitialized","_createClass","key","value","setAttribute","name","descriptor","bufferGetter","existed","find","a","push","_objectSpread","setIndex","Uint32Array","buffer","applyMatrix","matrix","positionAttribute","_ref","normalAttribute","_ref2","length","i","position","fromValues","transformMat4","set","normalMatrix","normalFromMat4","create","_i","normal","transformMat3","normalize"],"sources":["/Users/bhanudahiya/Desktop/ledger-IQ/node_modules/@antv/g-webgpu-core/src/components/geometry/GeometryComponent.ts"],"sourcesContent":["import { mat3, mat4, vec3, vec4 } from 'gl-matrix';\nimport { Entity } from '../..';\nimport { Component } from '../../ComponentManager';\nimport { NonFunctionProperties } from '../../ComponentManager';\nimport { AABB } from '../../shape/AABB';\nimport { isTypedArray } from '../../utils/is-typedarray';\nimport { IBuffer } from '../renderer/IBuffer';\nimport { IElements } from '../renderer/IElements';\nimport { BufferData } from '../renderer/IRendererService';\n\nexport class GeometryComponent extends Component<GeometryComponent> {\n  public dirty: boolean = true;\n\n  public attributes: Array<\n    {\n      dirty: boolean;\n      name: string;\n      data?: BufferData;\n      buffer?: IBuffer;\n      // 结合 Compute Pipeline 时，需要在运行时获取 PingPong buffer\n      bufferGetter?: () => IBuffer;\n    } & GPUVertexBufferLayoutDescriptor\n  > = [];\n\n  public indices: Uint32Array | null;\n  public indicesBuffer: IElements | null;\n\n  public vertexCount: number = 0;\n\n  // instanced count\n  public maxInstancedCount: number;\n\n  public aabb: AABB;\n\n  public entity: Entity;\n\n  constructor(data: Partial<NonFunctionProperties<GeometryComponent>>) {\n    super(data);\n\n    Object.assign(this, data);\n  }\n\n  /**\n   * @see https://threejs.org/docs/#api/en/core/BufferAttribute\n   */\n  public setAttribute(\n    name: string,\n    data: BufferData,\n    descriptor: GPUVertexBufferLayoutDescriptor,\n    bufferGetter?: () => IBuffer,\n  ) {\n    const existed = this.attributes.find((a) => a.name === name);\n    if (!existed) {\n      this.attributes.push({\n        dirty: true,\n        name,\n        data,\n        ...descriptor,\n        bufferGetter,\n      });\n    } else {\n      existed.data = data;\n      existed.dirty = true;\n    }\n    this.dirty = true;\n    return this;\n  }\n\n  public setIndex(data: number[] | Uint8Array | Uint16Array | Uint32Array) {\n    this.indices = new Uint32Array(\n      // @ts-ignore\n      data.buffer ? data.buffer : (data as number[]),\n    );\n    this.dirty = true;\n    return this;\n  }\n\n  /**\n   * when merge all the geometries into one, we need to transform every vertex's position\n   * and every face's normal\n   */\n  public applyMatrix(matrix: mat4) {\n    const positionAttribute = this.attributes.find(\n      ({ name }) => name === 'position',\n    );\n    const normalAttribute = this.attributes.find(\n      ({ name }) => name === 'normal',\n    );\n\n    if (positionAttribute) {\n      positionAttribute.dirty = true;\n\n      // @ts-ignore\n      if (positionAttribute.data && positionAttribute.data.length) {\n        // @ts-ignore\n        for (let i = 0; i < positionAttribute.data.length; i += 3) {\n          const position = vec4.fromValues(\n            // @ts-ignore\n            positionAttribute.data[i] as number,\n            // @ts-ignore\n            positionAttribute.data[i + 1] as number,\n            // @ts-ignore\n            positionAttribute.data[i + 2] as number,\n            1,\n          );\n          vec4.transformMat4(position, position, matrix);\n          if (isTypedArray(positionAttribute.data)) {\n            // @ts-ignore\n            positionAttribute.data.set(\n              [position[0], position[1], position[2]],\n              i,\n            );\n          } else {\n            // @ts-ignore\n            positionAttribute.data[i] = position[0];\n            // @ts-ignore\n            positionAttribute.data[i + 1] = position[1];\n            // @ts-ignore\n            positionAttribute.data[i + 2] = position[2];\n          }\n        }\n      }\n    }\n\n    if (normalAttribute) {\n      const normalMatrix = mat3.normalFromMat4(mat3.create(), matrix);\n      // @ts-ignore\n      if (normalAttribute.data && normalAttribute.data.length) {\n        // @ts-ignore\n        for (let i = 0; i < normalAttribute.data.length; i += 3) {\n          const normal = vec3.fromValues(\n            // @ts-ignore\n            normalAttribute.data[i] as number,\n            // @ts-ignore\n            normalAttribute.data[i + 1] as number,\n            // @ts-ignore\n            normalAttribute.data[i + 2] as number,\n          );\n          vec3.transformMat3(normal, normal, normalMatrix);\n          vec3.normalize(normal, normal);\n          if (isTypedArray(normalAttribute.data)) {\n            // @ts-ignore\n            normalAttribute.data.set([normal[0], normal[1], normal[2]], i);\n          } else {\n            // @ts-ignore\n            normalAttribute.data[i] = normal[0];\n            // @ts-ignore\n            normalAttribute.data[i + 1] = normal[1];\n            // @ts-ignore\n            normalAttribute.data[i + 2] = normal[2];\n          }\n        }\n      }\n    }\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}