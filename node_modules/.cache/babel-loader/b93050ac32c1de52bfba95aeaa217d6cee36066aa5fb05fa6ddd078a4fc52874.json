{"ast":null,"code":"import { __awaiter, __decorate, __metadata } from \"tslib\";\nimport { inject, injectable, postConstruct } from 'mana-syringe';\nimport { Node as X6Node } from '@antv/x6';\nimport isBoolean from 'lodash/isBoolean';\nimport { XFlowNodeCommands } from '../constant';\nimport { ICommandHandler, ICommandContextProvider } from '../../command/interface';\nimport { ReactShape } from '@antv/x6-react-shape';\nexport var NsUpdateNode;\n(function (NsUpdateNode) {\n  NsUpdateNode.command = XFlowNodeCommands.UPDATE_NODE;\n  NsUpdateNode.hookKey = 'updateNode';\n  NsUpdateNode.XFlowNodeSetOptions = {\n    overwrite: true\n  };\n  NsUpdateNode.NODE_WIDTH = 200;\n  NsUpdateNode.NODE_HEIGHT = 40;\n})(NsUpdateNode || (NsUpdateNode = {}));\nlet UpdateNodeCommand = class UpdateNodeCommand {\n  constructor() {\n    this.setNodeConfig = (x6Node, nodeConfig, options) => {\n      x6Node.setData(nodeConfig, options);\n      x6Node.setPosition((nodeConfig === null || nodeConfig === void 0 ? void 0 : nodeConfig.x) || 0, (nodeConfig === null || nodeConfig === void 0 ? void 0 : nodeConfig.y) || 0);\n      x6Node.setSize((nodeConfig === null || nodeConfig === void 0 ? void 0 : nodeConfig.width) || NsUpdateNode.NODE_WIDTH, (nodeConfig === null || nodeConfig === void 0 ? void 0 : nodeConfig.height) || NsUpdateNode.NODE_HEIGHT);\n      x6Node.angle((nodeConfig === null || nodeConfig === void 0 ? void 0 : nodeConfig.angle) || 0, {\n        absolute: true\n      });\n      if (isBoolean(nodeConfig === null || nodeConfig === void 0 ? void 0 : nodeConfig.visible)) {\n        x6Node.setVisible(nodeConfig === null || nodeConfig === void 0 ? void 0 : nodeConfig.visible);\n      }\n      // SVG 元素更新label\n      if (!(x6Node instanceof ReactShape) && !!x6Node.getAttrByPath('text/text')) {\n        x6Node.setAttrByPath('text/text', nodeConfig.label);\n      }\n      // 支持nodeAttrs\n      if (nodeConfig.attrs) {\n        x6Node.setAttrs(nodeConfig.attrs);\n      }\n      // 更新ports\n      if (Array.isArray(nodeConfig.ports)) {\n        x6Node.setPropByPath('ports/items', nodeConfig.ports, Object.assign({\n          rewrite: true\n        }, options));\n      }\n    };\n    this.getNodeConfig = x6Node => {\n      const data = x6Node.getData();\n      const position = x6Node.getPosition();\n      const size = x6Node.getSize();\n      return Object.assign(Object.assign(Object.assign({}, data), position), size);\n    };\n    this.getNodeCell = (x6Graph, handlerArgs) => {\n      const {\n        nodeConfig,\n        setNodeConfig\n      } = handlerArgs;\n      let nodeId = '';\n      if (setNodeConfig && setNodeConfig.node && typeof setNodeConfig.node === 'string') {\n        nodeId = setNodeConfig.node;\n      } else if (nodeConfig && nodeConfig.id && typeof nodeConfig.id === 'string') {\n        nodeId = nodeConfig.id;\n      }\n      if (nodeId) {\n        return x6Graph === null || x6Graph === void 0 ? void 0 : x6Graph.getCellById(nodeId);\n      }\n      if (setNodeConfig && setNodeConfig.node instanceof X6Node) {\n        return setNodeConfig.node;\n      }\n    };\n    this.getNextNodeConfig = (handlerArgs, x6Node) => __awaiter(this, void 0, void 0, function* () {\n      if (handlerArgs && handlerArgs.setNodeConfig && handlerArgs.setNodeConfig.callback) {\n        const nodeData = this.getNodeConfig(x6Node);\n        return handlerArgs.setNodeConfig.callback(nodeData);\n      }\n      return handlerArgs.nodeConfig;\n    });\n    this.execute = () => __awaiter(this, void 0, void 0, function* () {\n      const {\n        args,\n        hooks: runtimeHook\n      } = this.ctx.getArgs();\n      const hooks = this.ctx.getHooks();\n      const result = yield hooks.updateNode.call(args, handlerArgs => __awaiter(this, void 0, void 0, function* () {\n        const {\n          options = NsUpdateNode.XFlowNodeSetOptions\n        } = handlerArgs;\n        const graph = yield this.ctx.getX6Graph();\n        const x6Node = this.getNodeCell(graph, handlerArgs);\n        const nextNodeConfig = yield this.getNextNodeConfig(handlerArgs, x6Node);\n        this.setNodeConfig(x6Node, nextNodeConfig, options);\n        return {\n          nodeConfig: nextNodeConfig,\n          nodeCell: x6Node\n        };\n      }), runtimeHook);\n      this.ctx.setResult(result);\n      return this;\n    });\n    this.undo = () => __awaiter(this, void 0, void 0, function* () {\n      this.ctx.undo();\n      return this;\n    });\n    this.redo = () => __awaiter(this, void 0, void 0, function* () {\n      if (!this.ctx.isUndoable) {\n        yield this.execute();\n      }\n      return this;\n    });\n  }\n  init() {\n    this.ctx = this.contextProvider();\n  }\n  isUndoable() {\n    return this.ctx.isUndoable();\n  }\n};\n__decorate([inject(ICommandContextProvider), __metadata(\"design:type\", Object)], UpdateNodeCommand.prototype, \"contextProvider\", void 0);\n__decorate([postConstruct(), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", []), __metadata(\"design:returntype\", void 0)], UpdateNodeCommand.prototype, \"init\", null);\nUpdateNodeCommand = __decorate([injectable({\n  token: {\n    token: ICommandHandler,\n    named: NsUpdateNode.command.id\n  }\n})\n/** 节点更新命令 */], UpdateNodeCommand);\nexport { UpdateNodeCommand };","map":{"version":3,"names":["inject","injectable","postConstruct","Node","X6Node","isBoolean","XFlowNodeCommands","ICommandHandler","ICommandContextProvider","ReactShape","NsUpdateNode","command","UPDATE_NODE","hookKey","XFlowNodeSetOptions","overwrite","NODE_WIDTH","NODE_HEIGHT","UpdateNodeCommand","constructor","setNodeConfig","x6Node","nodeConfig","options","setData","setPosition","x","y","setSize","width","height","angle","absolute","visible","setVisible","getAttrByPath","setAttrByPath","label","attrs","setAttrs","Array","isArray","ports","setPropByPath","Object","assign","rewrite","getNodeConfig","data","getData","position","getPosition","size","getSize","getNodeCell","x6Graph","handlerArgs","nodeId","node","id","getCellById","getNextNodeConfig","__awaiter","callback","nodeData","execute","args","hooks","runtimeHook","ctx","getArgs","getHooks","result","updateNode","call","graph","getX6Graph","nextNodeConfig","nodeCell","setResult","undo","redo","isUndoable","init","contextProvider","__decorate","token","named"],"sources":["../../../src/command-contributions/node/node-update.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}