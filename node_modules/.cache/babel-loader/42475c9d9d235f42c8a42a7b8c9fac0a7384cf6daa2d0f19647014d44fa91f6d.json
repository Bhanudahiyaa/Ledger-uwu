{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport Point from '@mapbox/point-geometry';\nimport { indexTouches } from \"./handler_util\";\nfunction getCentroid(points) {\n  const sum = new Point(0, 0);\n  for (const point of points) {\n    sum._add(point);\n  }\n  return sum.div(points.length);\n}\nexport const MAX_TAP_INTERVAL = 500;\nconst MAX_TOUCH_TIME = 500;\nexport const MAX_DIST = 30;\nexport class SingleTapRecognizer {\n  constructor(options) {\n    _defineProperty(this, \"numTouches\", void 0);\n    _defineProperty(this, \"centroid\", void 0);\n    _defineProperty(this, \"startTime\", void 0);\n    _defineProperty(this, \"aborted\", void 0);\n    _defineProperty(this, \"touches\", void 0);\n    this.reset();\n    this.numTouches = options.numTouches;\n  }\n  reset() {\n    delete this.centroid;\n    delete this.startTime;\n    delete this.touches;\n    this.aborted = false;\n  }\n  touchstart(e, points, mapTouches) {\n    if (this.centroid || mapTouches.length > this.numTouches) {\n      this.aborted = true;\n    }\n    if (this.aborted) {\n      return;\n    }\n    if (this.startTime === undefined) {\n      this.startTime = e.timeStamp;\n    }\n    if (mapTouches.length === this.numTouches) {\n      this.centroid = getCentroid(points);\n      this.touches = indexTouches(mapTouches, points);\n    }\n  }\n  touchmove(e, points, mapTouches) {\n    if (this.aborted || !this.centroid) return;\n    const newTouches = indexTouches(mapTouches, points);\n    for (const id in this.touches) {\n      const prevPos = this.touches[id];\n      const pos = newTouches[id];\n      if (!pos || pos.dist(prevPos) > MAX_DIST) {\n        this.aborted = true;\n      }\n    }\n  }\n  touchend(e, points, mapTouches) {\n    if (!this.centroid || e.timeStamp - this.startTime > MAX_TOUCH_TIME) {\n      this.aborted = true;\n    }\n    if (mapTouches.length === 0) {\n      const centroid = !this.aborted && this.centroid;\n      this.reset();\n      if (centroid) return centroid;\n    }\n  }\n}\nexport class TapRecognizer {\n  constructor(options) {\n    _defineProperty(this, \"singleTap\", void 0);\n    _defineProperty(this, \"numTaps\", void 0);\n    _defineProperty(this, \"lastTime\", void 0);\n    _defineProperty(this, \"lastTap\", void 0);\n    _defineProperty(this, \"count\", void 0);\n    this.singleTap = new SingleTapRecognizer(options);\n    this.numTaps = options.numTaps;\n    this.reset();\n  }\n  reset() {\n    this.lastTime = Infinity;\n    delete this.lastTap;\n    this.count = 0;\n    this.singleTap.reset();\n  }\n  touchstart(e, points, mapTouches) {\n    this.singleTap.touchstart(e, points, mapTouches);\n  }\n  touchmove(e, points, mapTouches) {\n    this.singleTap.touchmove(e, points, mapTouches);\n  }\n  touchend(e, points, mapTouches) {\n    const tap = this.singleTap.touchend(e, points, mapTouches);\n    if (tap) {\n      const soonEnough = e.timeStamp - this.lastTime < MAX_TAP_INTERVAL;\n      const closeEnough = !this.lastTap || this.lastTap.dist(tap) < MAX_DIST;\n      if (!soonEnough || !closeEnough) {\n        this.reset();\n      }\n      this.count++;\n      this.lastTime = e.timeStamp;\n      this.lastTap = tap;\n      if (this.count === this.numTaps) {\n        this.reset();\n        return tap;\n      }\n    }\n  }\n}","map":{"version":3,"names":["_defineProperty","Point","indexTouches","getCentroid","points","sum","point","_add","div","length","MAX_TAP_INTERVAL","MAX_TOUCH_TIME","MAX_DIST","SingleTapRecognizer","constructor","options","reset","numTouches","centroid","startTime","touches","aborted","touchstart","e","mapTouches","undefined","timeStamp","touchmove","newTouches","id","prevPos","pos","dist","touchend","TapRecognizer","singleTap","numTaps","lastTime","Infinity","lastTap","count","tap","soonEnough","closeEnough"],"sources":["/Users/bhanudahiya/Desktop/ledger-IQ/node_modules/@antv/l7-map/es/map/handler/tap_recognizer.js"],"sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport Point from '@mapbox/point-geometry';\nimport { indexTouches } from \"./handler_util\";\nfunction getCentroid(points) {\n  const sum = new Point(0, 0);\n  for (const point of points) {\n    sum._add(point);\n  }\n  return sum.div(points.length);\n}\nexport const MAX_TAP_INTERVAL = 500;\nconst MAX_TOUCH_TIME = 500;\nexport const MAX_DIST = 30;\nexport class SingleTapRecognizer {\n  constructor(options) {\n    _defineProperty(this, \"numTouches\", void 0);\n    _defineProperty(this, \"centroid\", void 0);\n    _defineProperty(this, \"startTime\", void 0);\n    _defineProperty(this, \"aborted\", void 0);\n    _defineProperty(this, \"touches\", void 0);\n    this.reset();\n    this.numTouches = options.numTouches;\n  }\n  reset() {\n    delete this.centroid;\n    delete this.startTime;\n    delete this.touches;\n    this.aborted = false;\n  }\n  touchstart(e, points, mapTouches) {\n    if (this.centroid || mapTouches.length > this.numTouches) {\n      this.aborted = true;\n    }\n    if (this.aborted) {\n      return;\n    }\n    if (this.startTime === undefined) {\n      this.startTime = e.timeStamp;\n    }\n    if (mapTouches.length === this.numTouches) {\n      this.centroid = getCentroid(points);\n      this.touches = indexTouches(mapTouches, points);\n    }\n  }\n  touchmove(e, points, mapTouches) {\n    if (this.aborted || !this.centroid) return;\n    const newTouches = indexTouches(mapTouches, points);\n    for (const id in this.touches) {\n      const prevPos = this.touches[id];\n      const pos = newTouches[id];\n      if (!pos || pos.dist(prevPos) > MAX_DIST) {\n        this.aborted = true;\n      }\n    }\n  }\n  touchend(e, points, mapTouches) {\n    if (!this.centroid || e.timeStamp - this.startTime > MAX_TOUCH_TIME) {\n      this.aborted = true;\n    }\n    if (mapTouches.length === 0) {\n      const centroid = !this.aborted && this.centroid;\n      this.reset();\n      if (centroid) return centroid;\n    }\n  }\n}\nexport class TapRecognizer {\n  constructor(options) {\n    _defineProperty(this, \"singleTap\", void 0);\n    _defineProperty(this, \"numTaps\", void 0);\n    _defineProperty(this, \"lastTime\", void 0);\n    _defineProperty(this, \"lastTap\", void 0);\n    _defineProperty(this, \"count\", void 0);\n    this.singleTap = new SingleTapRecognizer(options);\n    this.numTaps = options.numTaps;\n    this.reset();\n  }\n  reset() {\n    this.lastTime = Infinity;\n    delete this.lastTap;\n    this.count = 0;\n    this.singleTap.reset();\n  }\n  touchstart(e, points, mapTouches) {\n    this.singleTap.touchstart(e, points, mapTouches);\n  }\n  touchmove(e, points, mapTouches) {\n    this.singleTap.touchmove(e, points, mapTouches);\n  }\n  touchend(e, points, mapTouches) {\n    const tap = this.singleTap.touchend(e, points, mapTouches);\n    if (tap) {\n      const soonEnough = e.timeStamp - this.lastTime < MAX_TAP_INTERVAL;\n      const closeEnough = !this.lastTap || this.lastTap.dist(tap) < MAX_DIST;\n      if (!soonEnough || !closeEnough) {\n        this.reset();\n      }\n      this.count++;\n      this.lastTime = e.timeStamp;\n      this.lastTap = tap;\n      if (this.count === this.numTaps) {\n        this.reset();\n        return tap;\n      }\n    }\n  }\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}