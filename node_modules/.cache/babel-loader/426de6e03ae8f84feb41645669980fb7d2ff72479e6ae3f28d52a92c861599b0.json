{"ast":null,"code":"var __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\n\n// src/transform/cluster.ts\nimport Supercluster from \"supercluster/dist/supercluster\";\nfunction cluster(data, option) {\n  const {\n    radius = 40,\n    maxZoom = 18,\n    minZoom = 0,\n    zoom = 2\n  } = option;\n  if (data.pointIndex) {\n    const clusterData = data.pointIndex.getClusters(data.extent, Math.floor(zoom));\n    data.dataArray = formatData(clusterData);\n    return data;\n  }\n  const pointIndex = new Supercluster({\n    radius,\n    minZoom,\n    maxZoom\n  });\n  const geojson = {\n    type: \"FeatureCollection\",\n    features: []\n  };\n  geojson.features = data.dataArray.map(item => {\n    return {\n      type: \"Feature\",\n      geometry: {\n        type: \"Point\",\n        coordinates: item.coordinates\n      },\n      properties: __spreadValues({}, item)\n    };\n  });\n  pointIndex.load(geojson.features);\n  return pointIndex;\n}\nfunction formatData(clusterPoint) {\n  return clusterPoint.map((point, index) => {\n    return __spreadValues({\n      coordinates: point.geometry.coordinates,\n      _id: index + 1\n    }, point.properties);\n  });\n}\nexport { cluster, formatData };","map":{"version":3,"names":["__defProp","Object","defineProperty","__getOwnPropSymbols","getOwnPropertySymbols","__hasOwnProp","prototype","hasOwnProperty","__propIsEnum","propertyIsEnumerable","__defNormalProp","obj","key","value","enumerable","configurable","writable","__spreadValues","a","b","prop","call","Supercluster","cluster","data","option","radius","maxZoom","minZoom","zoom","pointIndex","clusterData","getClusters","extent","Math","floor","dataArray","formatData","geojson","type","features","map","item","geometry","coordinates","properties","load","clusterPoint","point","index","_id"],"sources":["/Users/bhanudahiya/Desktop/ledger-IQ/node_modules/@antv/l7-source/es/transform/cluster.js"],"sourcesContent":["var __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\n\n// src/transform/cluster.ts\nimport Supercluster from \"supercluster/dist/supercluster\";\nfunction cluster(data, option) {\n  const { radius = 40, maxZoom = 18, minZoom = 0, zoom = 2 } = option;\n  if (data.pointIndex) {\n    const clusterData = data.pointIndex.getClusters(data.extent, Math.floor(zoom));\n    data.dataArray = formatData(clusterData);\n    return data;\n  }\n  const pointIndex = new Supercluster({\n    radius,\n    minZoom,\n    maxZoom\n  });\n  const geojson = {\n    type: \"FeatureCollection\",\n    features: []\n  };\n  geojson.features = data.dataArray.map((item) => {\n    return {\n      type: \"Feature\",\n      geometry: {\n        type: \"Point\",\n        coordinates: item.coordinates\n      },\n      properties: __spreadValues({}, item)\n    };\n  });\n  pointIndex.load(geojson.features);\n  return pointIndex;\n}\nfunction formatData(clusterPoint) {\n  return clusterPoint.map((point, index) => {\n    return __spreadValues({\n      coordinates: point.geometry.coordinates,\n      _id: index + 1\n    }, point.properties);\n  });\n}\nexport {\n  cluster,\n  formatData\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}