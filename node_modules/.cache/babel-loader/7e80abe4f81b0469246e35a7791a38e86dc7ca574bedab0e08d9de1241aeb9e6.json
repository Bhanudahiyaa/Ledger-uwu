{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nvar _dec, _class;\nimport { injectable } from 'inversify';\nexport var IInteractorEvent;\n(function (IInteractorEvent) {\n  IInteractorEvent[\"PANSTART\"] = \"PANSTART\";\n  IInteractorEvent[\"PANEND\"] = \"PANEND\";\n  IInteractorEvent[\"PANMOVE\"] = \"PANMOVE\";\n  IInteractorEvent[\"PINCH\"] = \"PINCH\";\n  IInteractorEvent[\"KEYDOWN\"] = \"KEYDOWN\";\n  IInteractorEvent[\"KEYUP\"] = \"KEYUP\";\n  IInteractorEvent[\"HOVER\"] = \"HOVER\";\n})(IInteractorEvent || (IInteractorEvent = {}));\nexport var InteractorService = (_dec = injectable(), _dec(_class = /*#__PURE__*/function () {\n  function InteractorService() {\n    _classCallCheck(this, InteractorService);\n  }\n  _createClass(InteractorService, [{\n    key: \"listen\",\n    value: function listen(canvas) {}\n  }, {\n    key: \"on\",\n    value: function on(event, args) {}\n  }, {\n    key: \"connect\",\n    value: function connect() {}\n  }, {\n    key: \"disconnect\",\n    value: function disconnect() {}\n  }, {\n    key: \"destroy\",\n    value: function destroy() {}\n  }]);\n  return InteractorService;\n}()) || _class);","map":{"version":3,"names":["injectable","IInteractorEvent","InteractorService","_dec","_class","_classCallCheck","_createClass","key","value","listen","canvas","on","event","args","connect","disconnect","destroy"],"sources":["/Users/bhanudahiya/Desktop/ledger-IQ/node_modules/@antv/g-webgpu-core/src/services/interactor/IteractorService.ts"],"sourcesContent":["import { injectable } from 'inversify';\n\nexport interface IInteractorService {\n  listen(canvas: HTMLCanvasElement): void;\n  disconnect(): void;\n  connect(): void;\n  destroy(): void;\n  on(event: IInteractorEvent, args?: unknown): void;\n}\n\nexport enum IInteractorEvent {\n  PANSTART = 'PANSTART',\n  PANEND = 'PANEND',\n  PANMOVE = 'PANMOVE',\n  PINCH = 'PINCH',\n  KEYDOWN = 'KEYDOWN',\n  KEYUP = 'KEYUP',\n  HOVER = 'HOVER',\n}\n\n@injectable()\nexport class InteractorService implements IInteractorService {\n  public listen(canvas: HTMLCanvasElement): void {}\n  public on(event: IInteractorEvent, args?: unknown): void {}\n  public connect() {}\n  public disconnect() {}\n  public destroy() {}\n}\n"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,WAA3B;AAUA,WAAYC,gBAAZ;WAAYA,gB;EAAAA,gB;EAAAA,gB;EAAAA,gB;EAAAA,gB;EAAAA,gB;EAAAA,gB;EAAAA,gB;GAAAA,gB,KAAAA,gB;AAWZ,WAAaC,iBAAb,IAAAC,IAAA,GADCH,UAAU,EACX,EAAAG,IAAA,CAAAC,MAAA;EAAA,SAAAF,kBAAA;IAAAG,eAAA,OAAAH,iBAAA;EAAA;EAAAI,YAAA,CAAAJ,iBAAA;IAAAK,GAAA;IAAAC,KAAA,WAAAC,OACgBC,MADhB,EACiD,CAAE;EADnD;IAAAH,GAAA;IAAAC,KAAA,WAAAG,GAEYC,KAFZ,EAEqCC,IAFrC,EAE2D,CAAE;EAF7D;IAAAN,GAAA;IAAAC,KAAA,WAAAM,QAAA,EAGmB,CAAE;EAHrB;IAAAP,GAAA;IAAAC,KAAA,WAAAO,WAAA,EAIsB,CAAE;EAJxB;IAAAR,GAAA;IAAAC,KAAA,WAAAQ,QAAA,EAKmB,CAAE;EALrB;EAAA,OAAAd,iBAAA;AAAA,QAAAE,MAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}