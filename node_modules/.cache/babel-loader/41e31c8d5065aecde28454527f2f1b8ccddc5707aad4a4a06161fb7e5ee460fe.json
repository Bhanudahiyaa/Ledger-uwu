{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Dom } from '../util';\nimport { ModifierKey } from '../types';\nimport { Base } from './base';\nexport class ScrollerManager extends Base {\n  get widgetOptions() {\n    return this.options.scroller;\n  }\n  get pannable() {\n    if (this.widgetOptions) {\n      if (typeof this.widgetOptions.pannable === 'object') {\n        return this.widgetOptions.pannable.enabled;\n      }\n      return !!this.widgetOptions.pannable;\n    }\n    return false;\n  }\n  init() {\n    this.widget = this.graph.hook.createScroller();\n    this.startListening();\n    this.updateClassName();\n    if (this.widget) {\n      this.widget.center();\n    }\n  }\n  startListening() {\n    let eventTypes = [];\n    const pannable = this.widgetOptions.pannable;\n    if (typeof pannable === 'object') {\n      eventTypes = pannable.eventTypes || [];\n    } else {\n      eventTypes = ['leftMouseDown'];\n    }\n    if (eventTypes.includes('leftMouseDown')) {\n      this.graph.on('blank:mousedown', this.preparePanning, this);\n      this.graph.on('node:unhandled:mousedown', this.preparePanning, this);\n      this.graph.on('edge:unhandled:mousedown', this.preparePanning, this);\n    }\n    if (eventTypes.includes('rightMouseDown')) {\n      this.onRightMouseDown = this.onRightMouseDown.bind(this);\n      this.view.$(this.widget.container).on('mousedown', this.onRightMouseDown);\n    }\n  }\n  stopListening() {\n    let eventTypes = [];\n    const pannable = this.widgetOptions.pannable;\n    if (typeof pannable === 'object') {\n      eventTypes = pannable.eventTypes || [];\n    } else {\n      eventTypes = ['leftMouseDown'];\n    }\n    if (eventTypes.includes('leftMouseDown')) {\n      this.graph.off('blank:mousedown', this.preparePanning, this);\n      this.graph.off('node:unhandled:mousedown', this.preparePanning, this);\n      this.graph.off('edge:unhandled:mousedown', this.preparePanning, this);\n    }\n    if (eventTypes.includes('rightMouseDown')) {\n      this.view.$(this.widget.container).off('mousedown', this.onRightMouseDown);\n    }\n  }\n  onRightMouseDown(e) {\n    if (e.button === 2 && this.allowPanning(e, true) && this.widget) {\n      this.updateClassName(true);\n      this.widget.startPanning(e);\n      this.widget.once('pan:stop', () => this.updateClassName(false));\n    }\n  }\n  preparePanning({\n    e\n  }) {\n    if (this.widget) {\n      if (this.allowPanning(e, true) || this.allowPanning(e) && !this.graph.selection.allowRubberband(e, true)) {\n        this.updateClassName(true);\n        this.widget.startPanning(e);\n        this.widget.once('pan:stop', () => this.updateClassName(false));\n      }\n    }\n  }\n  allowPanning(e, strict) {\n    return this.widget && this.pannable && ModifierKey.isMatch(e, this.widgetOptions.modifiers, strict) && this.graph.hook.allowPanning(e);\n  }\n  updateClassName(isPanning) {\n    if (this.widget == null) {\n      return;\n    }\n    const container = this.widget.container;\n    const pannable = this.view.prefixClassName('graph-scroller-pannable');\n    if (this.pannable) {\n      Dom.addClass(container, pannable);\n      container.dataset.panning = (!!isPanning).toString(); // Use dataset to control scroller panning style to avoid reflow caused by changing classList\n    } else {\n      Dom.removeClass(container, pannable);\n    }\n  }\n  enablePanning() {\n    if (!this.pannable) {\n      this.widgetOptions.pannable = true;\n      this.updateClassName();\n      // if (\n      //   ModifierKey.equals(\n      //     this.graph.options.scroller.modifiers,\n      //     this.graph.options.selecting.modifiers,\n      //   )\n      // ) {\n      //   this.graph.selection.disableRubberband()\n      // }\n    }\n  }\n  disablePanning() {\n    if (this.pannable) {\n      this.widgetOptions.pannable = false;\n      this.updateClassName();\n    }\n  }\n  lock() {\n    if (this.widget) {\n      this.widget.lock();\n    }\n  }\n  unlock() {\n    if (this.widget) {\n      this.widget.unlock();\n    }\n  }\n  update() {\n    if (this.widget) {\n      this.widget.update();\n    }\n  }\n  enableAutoResize() {\n    if (this.widget) {\n      this.widget.enableAutoResize();\n    }\n  }\n  disableAutoResize() {\n    if (this.widget) {\n      this.widget.disableAutoResize();\n    }\n  }\n  resize(width, height) {\n    if (this.widget) {\n      this.widget.resize(width, height);\n    }\n  }\n  dispose() {\n    if (this.widget) {\n      this.widget.dispose();\n    }\n    this.stopListening();\n  }\n}\n__decorate([Base.dispose()], ScrollerManager.prototype, \"dispose\", null);","map":{"version":3,"names":["Dom","ModifierKey","Base","ScrollerManager","widgetOptions","options","scroller","pannable","enabled","init","widget","graph","hook","createScroller","startListening","updateClassName","center","eventTypes","includes","on","preparePanning","onRightMouseDown","bind","view","$","container","stopListening","off","e","button","allowPanning","startPanning","once","selection","allowRubberband","strict","isMatch","modifiers","isPanning","prefixClassName","addClass","dataset","panning","toString","removeClass","enablePanning","disablePanning","lock","unlock","update","enableAutoResize","disableAutoResize","resize","width","height","dispose","__decorate"],"sources":["/Users/bhanudahiya/Desktop/ledger-IQ/node_modules/@antv/x6/src/graph/scroller.ts"],"sourcesContent":["import { Dom } from '../util'\nimport { ModifierKey } from '../types'\nimport { Scroller } from '../addon/scroller'\nimport { Base } from './base'\n\nexport class ScrollerManager extends Base {\n  public widget: Scroller | null\n\n  protected get widgetOptions() {\n    return this.options.scroller\n  }\n\n  get pannable() {\n    if (this.widgetOptions) {\n      if (typeof this.widgetOptions.pannable === 'object') {\n        return this.widgetOptions.pannable.enabled\n      }\n      return !!this.widgetOptions.pannable\n    }\n    return false\n  }\n\n  protected init() {\n    this.widget = this.graph.hook.createScroller()\n    this.startListening()\n    this.updateClassName()\n    if (this.widget) {\n      this.widget.center()\n    }\n  }\n\n  protected startListening() {\n    let eventTypes = []\n    const pannable = this.widgetOptions.pannable\n    if (typeof pannable === 'object') {\n      eventTypes = pannable.eventTypes || []\n    } else {\n      eventTypes = ['leftMouseDown']\n    }\n    if (eventTypes.includes('leftMouseDown')) {\n      this.graph.on('blank:mousedown', this.preparePanning, this)\n      this.graph.on('node:unhandled:mousedown', this.preparePanning, this)\n      this.graph.on('edge:unhandled:mousedown', this.preparePanning, this)\n    }\n    if (eventTypes.includes('rightMouseDown')) {\n      this.onRightMouseDown = this.onRightMouseDown.bind(this)\n      this.view.$(this.widget!.container).on('mousedown', this.onRightMouseDown)\n    }\n  }\n\n  protected stopListening() {\n    let eventTypes = []\n    const pannable = this.widgetOptions.pannable\n    if (typeof pannable === 'object') {\n      eventTypes = pannable.eventTypes || []\n    } else {\n      eventTypes = ['leftMouseDown']\n    }\n    if (eventTypes.includes('leftMouseDown')) {\n      this.graph.off('blank:mousedown', this.preparePanning, this)\n      this.graph.off('node:unhandled:mousedown', this.preparePanning, this)\n      this.graph.off('edge:unhandled:mousedown', this.preparePanning, this)\n    }\n    if (eventTypes.includes('rightMouseDown')) {\n      this.view\n        .$(this.widget!.container)\n        .off('mousedown', this.onRightMouseDown)\n    }\n  }\n\n  protected onRightMouseDown(e: JQuery.MouseDownEvent) {\n    if (e.button === 2 && this.allowPanning(e, true) && this.widget) {\n      this.updateClassName(true)\n      this.widget.startPanning(e)\n      this.widget.once('pan:stop', () => this.updateClassName(false))\n    }\n  }\n\n  protected preparePanning({ e }: { e: JQuery.MouseDownEvent }) {\n    if (this.widget) {\n      if (\n        this.allowPanning(e, true) ||\n        (this.allowPanning(e) && !this.graph.selection.allowRubberband(e, true))\n      ) {\n        this.updateClassName(true)\n        this.widget.startPanning(e)\n        this.widget.once('pan:stop', () => this.updateClassName(false))\n      }\n    }\n  }\n\n  allowPanning(e: JQuery.MouseDownEvent, strict?: boolean) {\n    return (\n      this.widget &&\n      this.pannable &&\n      ModifierKey.isMatch(e, this.widgetOptions.modifiers, strict) &&\n      this.graph.hook.allowPanning(e)\n    )\n  }\n\n  protected updateClassName(isPanning?: boolean) {\n    if (this.widget == null) {\n      return\n    }\n    const container = this.widget.container!\n    const pannable = this.view.prefixClassName('graph-scroller-pannable')\n    if (this.pannable) {\n      Dom.addClass(container, pannable)\n      container.dataset.panning = (!!isPanning).toString() // Use dataset to control scroller panning style to avoid reflow caused by changing classList\n    } else {\n      Dom.removeClass(container, pannable)\n    }\n  }\n\n  enablePanning() {\n    if (!this.pannable) {\n      this.widgetOptions.pannable = true\n      this.updateClassName()\n\n      // if (\n      //   ModifierKey.equals(\n      //     this.graph.options.scroller.modifiers,\n      //     this.graph.options.selecting.modifiers,\n      //   )\n      // ) {\n      //   this.graph.selection.disableRubberband()\n      // }\n    }\n  }\n\n  disablePanning() {\n    if (this.pannable) {\n      this.widgetOptions.pannable = false\n      this.updateClassName()\n    }\n  }\n\n  lock() {\n    if (this.widget) {\n      this.widget.lock()\n    }\n  }\n\n  unlock() {\n    if (this.widget) {\n      this.widget.unlock()\n    }\n  }\n\n  update() {\n    if (this.widget) {\n      this.widget.update()\n    }\n  }\n\n  enableAutoResize() {\n    if (this.widget) {\n      this.widget.enableAutoResize()\n    }\n  }\n\n  disableAutoResize() {\n    if (this.widget) {\n      this.widget.disableAutoResize()\n    }\n  }\n\n  resize(width?: number, height?: number) {\n    if (this.widget) {\n      this.widget.resize(width, height)\n    }\n  }\n\n  @Base.dispose()\n  dispose() {\n    if (this.widget) {\n      this.widget.dispose()\n    }\n    this.stopListening()\n  }\n}\n\nexport namespace ScrollerManager {\n  type EventType = 'leftMouseDown' | 'rightMouseDown'\n  export interface Options extends Scroller.CommonOptions {\n    enabled?: boolean\n    pannable?: boolean | { enabled: boolean; eventTypes: EventType[] }\n    /**\n     * alt, ctrl, shift, meta\n     */\n    modifiers?: string | ModifierKey[] | null\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}