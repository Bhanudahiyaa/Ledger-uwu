{"ast":null,"code":"export const title = {\n  qualify(title, {\n    elem\n  }) {\n    // HTMLElement title is specified via an attribute (i.e. not an element)\n    return elem instanceof SVGElement;\n  },\n  set(val, {\n    view,\n    elem\n  }) {\n    const cacheName = 'x6-title';\n    const title = `${val}`;\n    const $elem = view.$(elem);\n    const cache = $elem.data(cacheName);\n    if (cache == null || cache !== title) {\n      $elem.data(cacheName, title);\n      // Generally SVGTitleElement should be the first child\n      // element of its parent.\n      const firstChild = elem.firstChild;\n      if (firstChild && firstChild.tagName.toUpperCase() === 'TITLE') {\n        // Update an existing title\n        const titleElem = firstChild;\n        titleElem.textContent = title;\n      } else {\n        // Create a new title\n        const titleNode = document.createElementNS(elem.namespaceURI, 'title');\n        titleNode.textContent = title;\n        elem.insertBefore(titleNode, firstChild);\n      }\n    }\n  }\n};","map":{"version":3,"names":["title","qualify","elem","SVGElement","set","val","view","cacheName","$elem","$","cache","data","firstChild","tagName","toUpperCase","titleElem","textContent","titleNode","document","createElementNS","namespaceURI","insertBefore"],"sources":["/Users/bhanudahiya/Desktop/ledger-IQ/node_modules/@antv/x6/src/registry/attr/title.ts"],"sourcesContent":["import { Attr } from './index'\n\nexport const title: Attr.Definition = {\n  qualify(title, { elem }) {\n    // HTMLElement title is specified via an attribute (i.e. not an element)\n    return elem instanceof SVGElement\n  },\n  set(val, { view, elem }) {\n    const cacheName = 'x6-title'\n    const title = `${val}`\n    const $elem = view.$(elem)\n    const cache = $elem.data(cacheName)\n    if (cache == null || cache !== title) {\n      $elem.data(cacheName, title)\n      // Generally SVGTitleElement should be the first child\n      // element of its parent.\n      const firstChild = elem.firstChild as Element\n      if (firstChild && firstChild.tagName.toUpperCase() === 'TITLE') {\n        // Update an existing title\n        const titleElem = firstChild as SVGTitleElement\n        titleElem.textContent = title\n      } else {\n        // Create a new title\n        const titleNode = document.createElementNS(\n          elem.namespaceURI,\n          'title',\n        ) as SVGTitleElement\n        titleNode.textContent = title\n        elem.insertBefore(titleNode, firstChild)\n      }\n    }\n  },\n}\n"],"mappings":"AAEA,OAAO,MAAMA,KAAK,GAAoB;EACpCC,OAAOA,CAACD,KAAK,EAAE;IAAEE;EAAI,CAAE;IACrB;IACA,OAAOA,IAAI,YAAYC,UAAU;EACnC,CAAC;EACDC,GAAGA,CAACC,GAAG,EAAE;IAAEC,IAAI;IAAEJ;EAAI,CAAE;IACrB,MAAMK,SAAS,GAAG,UAAU;IAC5B,MAAMP,KAAK,GAAG,GAAGK,GAAG,EAAE;IACtB,MAAMG,KAAK,GAAGF,IAAI,CAACG,CAAC,CAACP,IAAI,CAAC;IAC1B,MAAMQ,KAAK,GAAGF,KAAK,CAACG,IAAI,CAACJ,SAAS,CAAC;IACnC,IAAIG,KAAK,IAAI,IAAI,IAAIA,KAAK,KAAKV,KAAK,EAAE;MACpCQ,KAAK,CAACG,IAAI,CAACJ,SAAS,EAAEP,KAAK,CAAC;MAC5B;MACA;MACA,MAAMY,UAAU,GAAGV,IAAI,CAACU,UAAqB;MAC7C,IAAIA,UAAU,IAAIA,UAAU,CAACC,OAAO,CAACC,WAAW,EAAE,KAAK,OAAO,EAAE;QAC9D;QACA,MAAMC,SAAS,GAAGH,UAA6B;QAC/CG,SAAS,CAACC,WAAW,GAAGhB,KAAK;OAC9B,MAAM;QACL;QACA,MAAMiB,SAAS,GAAGC,QAAQ,CAACC,eAAe,CACxCjB,IAAI,CAACkB,YAAY,EACjB,OAAO,CACW;QACpBH,SAAS,CAACD,WAAW,GAAGhB,KAAK;QAC7BE,IAAI,CAACmB,YAAY,CAACJ,SAAS,EAAEL,UAAU,CAAC;;;EAG9C;CACD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}