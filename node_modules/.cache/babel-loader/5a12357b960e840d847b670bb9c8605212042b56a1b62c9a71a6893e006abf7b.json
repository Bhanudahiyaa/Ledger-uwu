{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport { gl } from '@antv/g-webgpu-core';\nimport { colorSpaceMap, dataTypeMap, filterMap, formatMap, mipmapMap, wrapModeMap } from './constants';\n/**\n * adaptor for regl.Buffer\n * @see https://github.com/regl-project/regl/blob/gh-pages/API.md#buffers\n */\n\nvar ReglTexture2D = /*#__PURE__*/function () {\n  function ReglTexture2D(reGl, options) {\n    _classCallCheck(this, ReglTexture2D);\n    this.texture = void 0;\n    this.width = void 0;\n    this.height = void 0;\n    var data = options.data,\n      _options$type = options.type,\n      type = _options$type === void 0 ? gl.UNSIGNED_BYTE : _options$type,\n      width = options.width,\n      height = options.height,\n      _options$flipY = options.flipY,\n      flipY = _options$flipY === void 0 ? false : _options$flipY,\n      _options$format = options.format,\n      format = _options$format === void 0 ? gl.RGBA : _options$format,\n      _options$mipmap = options.mipmap,\n      mipmap = _options$mipmap === void 0 ? false : _options$mipmap,\n      _options$wrapS = options.wrapS,\n      wrapS = _options$wrapS === void 0 ? gl.CLAMP_TO_EDGE : _options$wrapS,\n      _options$wrapT = options.wrapT,\n      wrapT = _options$wrapT === void 0 ? gl.CLAMP_TO_EDGE : _options$wrapT,\n      _options$aniso = options.aniso,\n      aniso = _options$aniso === void 0 ? 0 : _options$aniso,\n      _options$alignment = options.alignment,\n      alignment = _options$alignment === void 0 ? 1 : _options$alignment,\n      _options$premultiplyA = options.premultiplyAlpha,\n      premultiplyAlpha = _options$premultiplyA === void 0 ? false : _options$premultiplyA,\n      _options$mag = options.mag,\n      mag = _options$mag === void 0 ? gl.NEAREST : _options$mag,\n      _options$min = options.min,\n      min = _options$min === void 0 ? gl.NEAREST : _options$min,\n      _options$colorSpace = options.colorSpace,\n      colorSpace = _options$colorSpace === void 0 ? gl.BROWSER_DEFAULT_WEBGL : _options$colorSpace;\n    this.width = width;\n    this.height = height;\n    var textureOptions = {\n      width: width,\n      height: height,\n      // @ts-ignore\n      type: dataTypeMap[type],\n      format: formatMap[format],\n      wrapS: wrapModeMap[wrapS],\n      wrapT: wrapModeMap[wrapT],\n      // @ts-ignore\n      mag: filterMap[mag],\n      min: filterMap[min],\n      alignment: alignment,\n      flipY: flipY,\n      colorSpace: colorSpaceMap[colorSpace],\n      premultiplyAlpha: premultiplyAlpha,\n      aniso: aniso\n    };\n    if (data) {\n      textureOptions.data = data;\n    }\n    if (typeof mipmap === 'number') {\n      textureOptions.mipmap = mipmapMap[mipmap];\n    } else if (typeof mipmap === 'boolean') {\n      textureOptions.mipmap = mipmap;\n    }\n    this.texture = reGl.texture(textureOptions);\n  }\n  _createClass(ReglTexture2D, [{\n    key: \"get\",\n    value: function get() {\n      return this.texture;\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      // @ts-ignore\n      this.texture._texture.bind();\n    }\n  }, {\n    key: \"resize\",\n    value: function resize(_ref) {\n      var width = _ref.width,\n        height = _ref.height;\n      this.texture.resize(width, height);\n      this.width = width;\n      this.height = height;\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.texture.destroy();\n    }\n  }]);\n  return ReglTexture2D;\n}();\nexport { ReglTexture2D as default };","map":{"version":3,"names":["gl","colorSpaceMap","dataTypeMap","filterMap","formatMap","mipmapMap","wrapModeMap","ReglTexture2D","reGl","options","_classCallCheck","texture","width","height","data","_options$type","type","UNSIGNED_BYTE","_options$flipY","flipY","_options$format","format","RGBA","_options$mipmap","mipmap","_options$wrapS","wrapS","CLAMP_TO_EDGE","_options$wrapT","wrapT","_options$aniso","aniso","_options$alignment","alignment","_options$premultiplyA","premultiplyAlpha","_options$mag","mag","NEAREST","_options$min","min","_options$colorSpace","colorSpace","BROWSER_DEFAULT_WEBGL","textureOptions","_texture","bind","_ref","resize","destroy"],"sources":["/Users/bhanudahiya/Desktop/ledger-IQ/node_modules/@antv/g-webgpu-engine/src/webgl/ReglTexture2D.ts"],"sourcesContent":["import {\n  gl,\n  ITexture2D,\n  ITexture2DInitializationOptions,\n} from '@antv/g-webgpu-core';\nimport regl from 'regl';\nimport {\n  colorSpaceMap,\n  dataTypeMap,\n  filterMap,\n  formatMap,\n  mipmapMap,\n  wrapModeMap,\n} from './constants';\n\n/**\n * adaptor for regl.Buffer\n * @see https://github.com/regl-project/regl/blob/gh-pages/API.md#buffers\n */\nexport default class ReglTexture2D implements ITexture2D {\n  private texture: regl.Texture2D;\n  private width: number;\n  private height: number;\n\n  constructor(reGl: regl.Regl, options: ITexture2DInitializationOptions) {\n    const {\n      data,\n      type = gl.UNSIGNED_BYTE,\n      width,\n      height,\n      flipY = false,\n      format = gl.RGBA,\n      mipmap = false,\n      wrapS = gl.CLAMP_TO_EDGE,\n      wrapT = gl.CLAMP_TO_EDGE,\n      aniso = 0,\n      alignment = 1,\n      premultiplyAlpha = false,\n      mag = gl.NEAREST,\n      min = gl.NEAREST,\n      colorSpace = gl.BROWSER_DEFAULT_WEBGL,\n    } = options;\n    this.width = width;\n    this.height = height;\n\n    const textureOptions: regl.Texture2DOptions = {\n      width,\n      height,\n      // @ts-ignore\n      type: dataTypeMap[type],\n      format: formatMap[format],\n      wrapS: wrapModeMap[wrapS],\n      wrapT: wrapModeMap[wrapT],\n      // @ts-ignore\n      mag: filterMap[mag],\n      min: filterMap[min],\n      alignment,\n      flipY,\n      colorSpace: colorSpaceMap[colorSpace],\n      premultiplyAlpha,\n      aniso,\n    };\n\n    if (data) {\n      textureOptions.data = data;\n    }\n\n    if (typeof mipmap === 'number') {\n      textureOptions.mipmap = mipmapMap[mipmap];\n    } else if (typeof mipmap === 'boolean') {\n      textureOptions.mipmap = mipmap;\n    }\n\n    this.texture = reGl.texture(textureOptions);\n  }\n\n  public get() {\n    return this.texture;\n  }\n  public update() {\n    // @ts-ignore\n    this.texture._texture.bind();\n  }\n\n  public resize({ width, height }: { width: number; height: number }): void {\n    this.texture.resize(width, height);\n    this.width = width;\n    this.height = height;\n  }\n\n  public destroy() {\n    this.texture.destroy();\n  }\n}\n"],"mappings":";;AAAA,SACEA,EADF,QAIO,qBAJP;AAMA,SACEC,aADF,EAEEC,WAFF,EAGEC,SAHF,EAIEC,SAJF,EAKEC,SALF,EAMEC,WANF,QAOO,aAPP;AASA;AACA;AACA;AACA;;IACqBC,a;EAKnB,SAAAA,cAAYC,IAAZ,EAA6BC,OAA7B,EAAuE;IAAAC,eAAA,OAAAH,aAAA;IAAA,KAJ/DI,OAI+D;IAAA,KAH/DC,KAG+D;IAAA,KAF/DC,MAE+D;IAAA,IAEnEC,IAFmE,GAiBjEL,OAjBiE,CAEnEK,IAFmE;MAAAC,aAAA,GAiBjEN,OAjBiE,CAGnEO,IAHmE;MAGnEA,IAHmE,GAAAD,aAAA,cAG5Df,EAAE,CAACiB,aAHyD,GAAAF,aAAA;MAInEH,KAJmE,GAiBjEH,OAjBiE,CAInEG,KAJmE;MAKnEC,MALmE,GAiBjEJ,OAjBiE,CAKnEI,MALmE;MAAAK,cAAA,GAiBjET,OAjBiE,CAMnEU,KANmE;MAMnEA,KANmE,GAAAD,cAAA,cAM3D,KAN2D,GAAAA,cAAA;MAAAE,eAAA,GAiBjEX,OAjBiE,CAOnEY,MAPmE;MAOnEA,MAPmE,GAAAD,eAAA,cAO1DpB,EAAE,CAACsB,IAPuD,GAAAF,eAAA;MAAAG,eAAA,GAiBjEd,OAjBiE,CAQnEe,MARmE;MAQnEA,MARmE,GAAAD,eAAA,cAQ1D,KAR0D,GAAAA,eAAA;MAAAE,cAAA,GAiBjEhB,OAjBiE,CASnEiB,KATmE;MASnEA,KATmE,GAAAD,cAAA,cAS3DzB,EAAE,CAAC2B,aATwD,GAAAF,cAAA;MAAAG,cAAA,GAiBjEnB,OAjBiE,CAUnEoB,KAVmE;MAUnEA,KAVmE,GAAAD,cAAA,cAU3D5B,EAAE,CAAC2B,aAVwD,GAAAC,cAAA;MAAAE,cAAA,GAiBjErB,OAjBiE,CAWnEsB,KAXmE;MAWnEA,KAXmE,GAAAD,cAAA,cAW3D,CAX2D,GAAAA,cAAA;MAAAE,kBAAA,GAiBjEvB,OAjBiE,CAYnEwB,SAZmE;MAYnEA,SAZmE,GAAAD,kBAAA,cAYvD,CAZuD,GAAAA,kBAAA;MAAAE,qBAAA,GAiBjEzB,OAjBiE,CAanE0B,gBAbmE;MAanEA,gBAbmE,GAAAD,qBAAA,cAahD,KAbgD,GAAAA,qBAAA;MAAAE,YAAA,GAiBjE3B,OAjBiE,CAcnE4B,GAdmE;MAcnEA,GAdmE,GAAAD,YAAA,cAc7DpC,EAAE,CAACsC,OAd0D,GAAAF,YAAA;MAAAG,YAAA,GAiBjE9B,OAjBiE,CAenE+B,GAfmE;MAenEA,GAfmE,GAAAD,YAAA,cAe7DvC,EAAE,CAACsC,OAf0D,GAAAC,YAAA;MAAAE,mBAAA,GAiBjEhC,OAjBiE,CAgBnEiC,UAhBmE;MAgBnEA,UAhBmE,GAAAD,mBAAA,cAgBtDzC,EAAE,CAAC2C,qBAhBmD,GAAAF,mBAAA;IAkBrE,KAAK7B,KAAL,GAAaA,KAAb;IACA,KAAKC,MAAL,GAAcA,MAAd;IAEA,IAAM+B,cAAqC,GAAG;MAC5ChC,KAAK,EAALA,KAD4C;MAE5CC,MAAM,EAANA,MAF4C;MAG5C;MACAG,IAAI,EAAEd,WAAW,CAACc,IAAD,CAJ2B;MAK5CK,MAAM,EAAEjB,SAAS,CAACiB,MAAD,CAL2B;MAM5CK,KAAK,EAAEpB,WAAW,CAACoB,KAAD,CAN0B;MAO5CG,KAAK,EAAEvB,WAAW,CAACuB,KAAD,CAP0B;MAQ5C;MACAQ,GAAG,EAAElC,SAAS,CAACkC,GAAD,CAT8B;MAU5CG,GAAG,EAAErC,SAAS,CAACqC,GAAD,CAV8B;MAW5CP,SAAS,EAATA,SAX4C;MAY5Cd,KAAK,EAALA,KAZ4C;MAa5CuB,UAAU,EAAEzC,aAAa,CAACyC,UAAD,CAbmB;MAc5CP,gBAAgB,EAAhBA,gBAd4C;MAe5CJ,KAAK,EAALA;IAf4C,CAA9C;IAkBA,IAAIjB,IAAJ,EAAU;MACR8B,cAAc,CAAC9B,IAAf,GAAsBA,IAAtB;IACD;IAED,IAAI,OAAOU,MAAP,KAAkB,QAAtB,EAAgC;MAC9BoB,cAAc,CAACpB,MAAf,GAAwBnB,SAAS,CAACmB,MAAD,CAAjC;IACD,CAFD,MAEO,IAAI,OAAOA,MAAP,KAAkB,SAAtB,EAAiC;MACtCoB,cAAc,CAACpB,MAAf,GAAwBA,MAAxB;IACD;IAED,KAAKb,OAAL,GAAeH,IAAI,CAACG,OAAL,CAAaiC,cAAb,CAAf;EACD;;;0BAEY;MACX,OAAO,KAAKjC,OAAZ;IACD;;;6BACe;MACd;MACA,KAAKA,OAAL,CAAakC,QAAb,CAAsBC,IAAtB;IACD;;;iCAEyE;MAAA,IAA1DlC,KAA0D,GAAAmC,IAAA,CAA1DnC,KAA0D;QAAnDC,MAAmD,GAAAkC,IAAA,CAAnDlC,MAAmD;MACxE,KAAKF,OAAL,CAAaqC,MAAb,CAAoBpC,KAApB,EAA2BC,MAA3B;MACA,KAAKD,KAAL,GAAaA,KAAb;MACA,KAAKC,MAAL,GAAcA,MAAd;IACD;;;8BAEgB;MACf,KAAKF,OAAL,CAAasC,OAAb;IACD;;;;SAzEkB1C,a","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}