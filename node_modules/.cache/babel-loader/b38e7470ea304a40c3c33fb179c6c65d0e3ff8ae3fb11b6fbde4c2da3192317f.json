{"ast":null,"code":"import { __awaiter, __decorate, __metadata } from \"tslib\";\nimport { inject, injectable, postConstruct } from 'mana-syringe';\nimport { ICommandHandler, ICommandContextProvider } from '../../command/interface';\nimport { XFlowNodeCommands } from '../constant';\nexport var NsSelectNode;\n(function (NsSelectNode) {\n  NsSelectNode.command = XFlowNodeCommands.SELECT_NODE;\n  NsSelectNode.hookKey = 'selectNode';\n})(NsSelectNode || (NsSelectNode = {}));\nlet SelectNodeCommand = class SelectNodeCommand {\n  constructor() {\n    this.execute = () => __awaiter(this, void 0, void 0, function* () {\n      const {\n        args,\n        hooks: runtimeHook\n      } = this.ctx.getArgs();\n      const hooks = this.ctx.getHooks();\n      const result = yield hooks.selectNode.call(args, handlerArgs => __awaiter(this, void 0, void 0, function* () {\n        const x6Graph = yield this.ctx.getX6Graph();\n        const currentSelectionIds = x6Graph.getSelectedCells().map(node => node.id);\n        const {\n          nodeIds,\n          resetSelection,\n          commandService\n        } = handlerArgs;\n        if (resetSelection) {\n          x6Graph.resetSelection(nodeIds);\n        } else {\n          x6Graph.select(nodeIds);\n        }\n        this.ctx.addUndo({\n          dispose: () => {\n            commandService.executeUndoCommand(XFlowNodeCommands.SELECT_NODE.id, {\n              nodeIds: currentSelectionIds,\n              resetSelection: true\n            });\n          }\n        });\n        return {};\n      }), runtimeHook);\n      this.ctx.setResult(result);\n      return this;\n    });\n    this.undo = () => __awaiter(this, void 0, void 0, function* () {\n      this.ctx.undo();\n      return this;\n    });\n    this.redo = () => __awaiter(this, void 0, void 0, function* () {\n      if (!this.ctx.isUndoable) {\n        yield this.execute();\n      }\n      return this;\n    });\n  }\n  init() {\n    this.ctx = this.contextProvider();\n  }\n  isUndoable() {\n    return this.ctx.isUndoable();\n  }\n};\n__decorate([inject(ICommandContextProvider), __metadata(\"design:type\", Object)], SelectNodeCommand.prototype, \"contextProvider\", void 0);\n__decorate([postConstruct(), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", []), __metadata(\"design:returntype\", void 0)], SelectNodeCommand.prototype, \"init\", null);\nSelectNodeCommand = __decorate([injectable({\n  token: {\n    token: ICommandHandler,\n    named: NsSelectNode.command.id\n  }\n})\n/** 节点更新命令 */], SelectNodeCommand);\nexport { SelectNodeCommand };","map":{"version":3,"names":["inject","injectable","postConstruct","ICommandHandler","ICommandContextProvider","XFlowNodeCommands","NsSelectNode","command","SELECT_NODE","hookKey","SelectNodeCommand","constructor","execute","__awaiter","args","hooks","runtimeHook","ctx","getArgs","getHooks","result","selectNode","call","handlerArgs","x6Graph","getX6Graph","currentSelectionIds","getSelectedCells","map","node","id","nodeIds","resetSelection","commandService","select","addUndo","dispose","executeUndoCommand","setResult","undo","redo","isUndoable","init","contextProvider","__decorate","token","named"],"sources":["../../../src/command-contributions/node/node-select.ts"],"sourcesContent":[null],"mappings":";AAGA,SAASA,MAAM,EAAEC,UAAU,EAAEC,aAAa,QAAQ,cAAc;AAChE,SAASC,eAAe,EAAEC,uBAAuB,QAAQ,yBAAyB;AAClF,SAASC,iBAAiB,QAAQ,aAAa;AAI/C,OAAM,IAAWC,YAAY;AAA7B,WAAiBA,YAAY;EACdA,YAAA,CAAAC,OAAO,GAAGF,iBAAiB,CAACG,WAAW;EACvCF,YAAA,CAAAG,OAAO,GAAG,YAAY;AAcrC,CAAC,EAhBgBH,YAAY,KAAZA,YAAY;AAsBtB,IAAMI,iBAAiB,GAAvB,MAAMA,iBAAiB;EAAvBC,YAAA;IAUL,KAAAC,OAAO,GAAG,MAAWC,SAAA;MACnB,MAAM;QAAEC,IAAI;QAAEC,KAAK,EAAEC;MAAW,CAAE,GAAG,IAAI,CAACC,GAAG,CAACC,OAAO,EAAE;MACvD,MAAMH,KAAK,GAAG,IAAI,CAACE,GAAG,CAACE,QAAQ,EAAE;MAEjC,MAAMC,MAAM,GAAG,MAAML,KAAK,CAACM,UAAU,CAACC,IAAI,CACxCR,IAAI,EACES,WAAW,IAAGV,SAAA;QAClB,MAAMW,OAAO,GAAG,MAAM,IAAI,CAACP,GAAG,CAACQ,UAAU,EAAE;QAC3C,MAAMC,mBAAmB,GAAGF,OAAO,CAACG,gBAAgB,EAAE,CAACC,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,CAAC;QAC3E,MAAM;UAAEC,OAAO;UAAEC,cAAc;UAAEC;QAAc,CAAE,GAAGV,WAAW;QAC/D,IAAIS,cAAc,EAAE;UAClBR,OAAO,CAACQ,cAAc,CAACD,OAAO,CAAC;SAChC,MAAM;UACLP,OAAO,CAACU,MAAM,CAACH,OAAO,CAAC;;QAEzB,IAAI,CAACd,GAAG,CAACkB,OAAO,CAAC;UACfC,OAAO,EAAEA,CAAA,KAAK;YACZH,cAAc,CAACI,kBAAkB,CAC/BhC,iBAAiB,CAACG,WAAW,CAACsB,EAAE,EAChC;cACEC,OAAO,EAAEL,mBAAmB;cAC5BM,cAAc,EAAE;aACjB,CACF;UACH;SACD,CAAC;QACF,OAAO,EAAE;MACX,CAAC,GACDhB,WAAW,CACZ;MAED,IAAI,CAACC,GAAG,CAACqB,SAAS,CAAClB,MAAM,CAAC;MAC1B,OAAO,IAAI;IACb,CAAC;IAED,KAAAmB,IAAI,GAAG,MAAW1B,SAAA;MAChB,IAAI,CAACI,GAAG,CAACsB,IAAI,EAAE;MACf,OAAO,IAAI;IACb,CAAC;IAED,KAAAC,IAAI,GAAG,MAAW3B,SAAA;MAChB,IAAI,CAAC,IAAI,CAACI,GAAG,CAACwB,UAAU,EAAE;QACxB,MAAM,IAAI,CAAC7B,OAAO,EAAE;;MAEtB,OAAO,IAAI;IACb,CAAC;EAKH;EAtDE8B,IAAIA,CAAA;IACF,IAAI,CAACzB,GAAG,GAAG,IAAI,CAAC0B,eAAe,EAAE;EACnC;EAiDAF,UAAUA,CAAA;IACR,OAAO,IAAI,CAACxB,GAAG,CAACwB,UAAU,EAAE;EAC9B;CACD;AA3DCG,UAAA,EAAC5C,MAAM,CAACI,uBAAuB,CAAC,E,2FAA6C;AAI7EwC,UAAA,EAAC1C,aAAa,EAAE,E,8JAGf;AARUQ,iBAAiB,GAAAkC,UAAA,EAJ7B3C,UAAU,CAAC;EACV4C,KAAK,EAAE;IAAEA,KAAK,EAAE1C,eAAe;IAAE2C,KAAK,EAAExC,YAAY,CAACC,OAAO,CAACuB;EAAE;CAChE;AACD,c,EACapB,iBAAiB,CA4D7B;SA5DYA,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}