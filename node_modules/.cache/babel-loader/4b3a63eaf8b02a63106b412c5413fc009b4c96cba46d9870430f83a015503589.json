{"ast":null,"code":"import { uniqueId } from '@antv/util';\nimport { PolygonLayer } from '@antv/l7';\nimport { PlotLayer } from '../../core/layer/plot-layer';\nimport { mappingLayer } from './adaptor';\nimport { getColorLegendItems } from '../dot-layer/helper';\nconst DEFAULT_OPTIONS = {};\nconst LAYER_OPTIONS_KEYS = ['color', 'size', 'style', 'state'];\nexport class PrismLayer extends PlotLayer {\n  constructor(options) {\n    super(options);\n    /**\n     * 图层类型\n     */\n    this.type = PlotLayer.LayerType.PrismLayer;\n    /**\n     * 图层是否具有交互属性\n     */\n    this.interaction = true;\n    const {\n      name,\n      source\n    } = this.options;\n    const config = this.pickLayerConfig(this.options);\n    this.name = name ? name : uniqueId(this.type);\n    this.layer = new PolygonLayer(Object.assign(Object.assign({}, config), {\n      name: this.name\n    }));\n    this.mappingLayer(this.layer, this.options);\n    this.setSource(source);\n  }\n  /**\n   * 获取默认配置\n   */\n  getDefaultOptions() {\n    return DEFAULT_OPTIONS;\n  }\n  mappingLayer(layer, options) {\n    mappingLayer(layer, options);\n  }\n  update(options) {\n    super.update(options);\n    this.mappingLayer(this.layer, this.options);\n  }\n  getColorLegendItems() {\n    const colorLegendItems = this.layer.getLegendItems('color');\n    if (Array.isArray(colorLegendItems) && colorLegendItems.length !== 0) {\n      const items = getColorLegendItems(colorLegendItems);\n      return items;\n    }\n    return [];\n  }\n}\n/**\n * 默认配置项\n */\nPrismLayer.DefaultOptions = DEFAULT_OPTIONS;\n/**\n * 图层配置项 Keys\n */\nPrismLayer.LayerOptionsKeys = PlotLayer.LayerConfigkeys.concat(LAYER_OPTIONS_KEYS);","map":{"version":3,"names":["uniqueId","PolygonLayer","PlotLayer","mappingLayer","getColorLegendItems","DEFAULT_OPTIONS","LAYER_OPTIONS_KEYS","PrismLayer","constructor","options","type","LayerType","interaction","name","source","config","pickLayerConfig","layer","Object","assign","setSource","getDefaultOptions","update","colorLegendItems","getLegendItems","Array","isArray","length","items","DefaultOptions","LayerOptionsKeys","LayerConfigkeys","concat"],"sources":["../../../../src/layers/prism-layer/index.ts"],"sourcesContent":[null],"mappings":"AAAA,SAASA,QAAQ,QAAQ,YAAY;AACrC,SAASC,YAAY,QAAQ,UAAU;AACvC,SAASC,SAAS,QAAQ,6BAA6B;AACvD,SAASC,YAAY,QAAQ,WAAW;AAGxC,SAASC,mBAAmB,QAAQ,qBAAqB;AAIzD,MAAMC,eAAe,GAAG,EAAE;AAC1B,MAAMC,kBAAkB,GAAG,CAAC,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,CAAC;AAE9D,OAAM,MAAOC,UAAW,SAAQL,SAA4B;EA0B1DM,YAAYC,OAA0B;IACpC,KAAK,CAACA,OAAO,CAAC;IAVhB;;;IAGO,KAAAC,IAAI,GAAGR,SAAS,CAACS,SAAS,CAACJ,UAAU;IAC5C;;;IAGO,KAAAK,WAAW,GAAG,IAAI;IAIvB,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAE,GAAG,IAAI,CAACL,OAAO;IACrC,MAAMM,MAAM,GAAG,IAAI,CAACC,eAAe,CAAC,IAAI,CAACP,OAAO,CAAC;IAEjD,IAAI,CAACI,IAAI,GAAGA,IAAI,GAAGA,IAAI,GAAGb,QAAQ,CAAC,IAAI,CAACU,IAAI,CAAC;IAC7C,IAAI,CAACO,KAAK,GAAG,IAAIhB,YAAY,CAAAiB,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KAAMJ,MAAM;MAAEF,IAAI,EAAE,IAAI,CAACA;IAAI,GAAG;IAE7D,IAAI,CAACV,YAAY,CAAC,IAAI,CAACc,KAAK,EAAE,IAAI,CAACR,OAAO,CAAC;IAC3C,IAAI,CAACW,SAAS,CAACN,MAAM,CAAC;EACxB;EAEA;;;EAGOO,iBAAiBA,CAAA;IACtB,OAAOhB,eAAe;EACxB;EAEUF,YAAYA,CAACc,KAAa,EAAER,OAA0B;IAC9DN,YAAY,CAACc,KAAK,EAAER,OAAO,CAAC;EAC9B;EAEOa,MAAMA,CAACb,OAAmC;IAC/C,KAAK,CAACa,MAAM,CAACb,OAAO,CAAC;IAErB,IAAI,CAACN,YAAY,CAAC,IAAI,CAACc,KAAK,EAAE,IAAI,CAACR,OAAO,CAAC;EAC7C;EAEOL,mBAAmBA,CAAA;IACxB,MAAMmB,gBAAgB,GAAG,IAAI,CAACN,KAAK,CAACO,cAAc,CAAC,OAAO,CAAC;IAC3D,IAAIC,KAAK,CAACC,OAAO,CAACH,gBAAgB,CAAC,IAAIA,gBAAgB,CAACI,MAAM,KAAK,CAAC,EAAE;MACpE,MAAMC,KAAK,GAAGxB,mBAAmB,CAACmB,gBAAgB,CAAC;MACnD,OAAOK,KAAK;IACd;IAEA,OAAO,EAAE;EACX;;AA9DA;;;AAGOrB,UAAA,CAAAsB,cAAc,GAAGxB,eAAe;AACvC;;;AAGOE,UAAA,CAAAuB,gBAAgB,GAAG5B,SAAS,CAAC6B,eAAe,CAACC,MAAM,CAAC1B,kBAAkB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}