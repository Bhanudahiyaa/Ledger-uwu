{"ast":null,"code":"import { Base } from './base';\nimport { Dom } from '../util';\nimport { Point, Rectangle } from '../geometry';\nexport class CoordManager extends Base {\n  getClientMatrix() {\n    return Dom.createSVGMatrix(this.view.stage.getScreenCTM());\n  }\n  /**\n   * Returns coordinates of the graph viewport, relative to the window.\n   */\n  getClientOffset() {\n    // see: https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect\n    const rect = this.view.svg.getBoundingClientRect();\n    return new Point(rect.left, rect.top);\n  }\n  /**\n   * Returns coordinates of the graph viewport, relative to the document.\n   */\n  getPageOffset() {\n    // see: https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect\n    return this.getClientOffset().translate(window.scrollX, window.scrollY);\n  }\n  snapToGrid(x, y) {\n    const p = typeof x === 'number' ? this.clientToLocalPoint(x, y) : this.clientToLocalPoint(x.x, x.y);\n    return p.snapToGrid(this.graph.getGridSize());\n  }\n  localToGraphPoint(x, y) {\n    const localPoint = Point.create(x, y);\n    return Dom.transformPoint(localPoint, this.graph.matrix());\n  }\n  localToClientPoint(x, y) {\n    const localPoint = Point.create(x, y);\n    return Dom.transformPoint(localPoint, this.getClientMatrix());\n  }\n  localToPagePoint(x, y) {\n    const p = typeof x === 'number' ? this.localToGraphPoint(x, y) : this.localToGraphPoint(x);\n    return p.translate(this.getPageOffset());\n  }\n  localToGraphRect(x, y, width, height) {\n    const localRect = Rectangle.create(x, y, width, height);\n    return Dom.transformRectangle(localRect, this.graph.matrix());\n  }\n  localToClientRect(x, y, width, height) {\n    const localRect = Rectangle.create(x, y, width, height);\n    return Dom.transformRectangle(localRect, this.getClientMatrix());\n  }\n  localToPageRect(x, y, width, height) {\n    const rect = typeof x === 'number' ? this.localToGraphRect(x, y, width, height) : this.localToGraphRect(x);\n    return rect.translate(this.getPageOffset());\n  }\n  graphToLocalPoint(x, y) {\n    const graphPoint = Point.create(x, y);\n    return Dom.transformPoint(graphPoint, this.graph.matrix().inverse());\n  }\n  clientToLocalPoint(x, y) {\n    const clientPoint = Point.create(x, y);\n    return Dom.transformPoint(clientPoint, this.getClientMatrix().inverse());\n  }\n  clientToGraphPoint(x, y) {\n    const clientPoint = Point.create(x, y);\n    return Dom.transformPoint(clientPoint, this.graph.matrix().multiply(this.getClientMatrix().inverse()));\n  }\n  pageToLocalPoint(x, y) {\n    const pagePoint = Point.create(x, y);\n    const graphPoint = pagePoint.diff(this.getPageOffset());\n    return this.graphToLocalPoint(graphPoint);\n  }\n  graphToLocalRect(x, y, width, height) {\n    const graphRect = Rectangle.create(x, y, width, height);\n    return Dom.transformRectangle(graphRect, this.graph.matrix().inverse());\n  }\n  clientToLocalRect(x, y, width, height) {\n    const clientRect = Rectangle.create(x, y, width, height);\n    return Dom.transformRectangle(clientRect, this.getClientMatrix().inverse());\n  }\n  clientToGraphRect(x, y, width, height) {\n    const clientRect = Rectangle.create(x, y, width, height);\n    return Dom.transformRectangle(clientRect, this.graph.matrix().multiply(this.getClientMatrix().inverse()));\n  }\n  pageToLocalRect(x, y, width, height) {\n    const graphRect = Rectangle.create(x, y, width, height);\n    const pageOffset = this.getPageOffset();\n    graphRect.x -= pageOffset.x;\n    graphRect.y -= pageOffset.y;\n    return this.graphToLocalRect(graphRect);\n  }\n}","map":{"version":3,"names":["Base","Dom","Point","Rectangle","CoordManager","getClientMatrix","createSVGMatrix","view","stage","getScreenCTM","getClientOffset","rect","svg","getBoundingClientRect","left","top","getPageOffset","translate","window","scrollX","scrollY","snapToGrid","x","y","p","clientToLocalPoint","graph","getGridSize","localToGraphPoint","localPoint","create","transformPoint","matrix","localToClientPoint","localToPagePoint","localToGraphRect","width","height","localRect","transformRectangle","localToClientRect","localToPageRect","graphToLocalPoint","graphPoint","inverse","clientPoint","clientToGraphPoint","multiply","pageToLocalPoint","pagePoint","diff","graphToLocalRect","graphRect","clientToLocalRect","clientRect","clientToGraphRect","pageToLocalRect","pageOffset"],"sources":["/Users/bhanudahiya/Desktop/ledger-IQ/node_modules/@antv/x6/src/graph/coord.ts"],"sourcesContent":["import { Base } from './base'\nimport { Dom } from '../util'\nimport { Point, Rectangle } from '../geometry'\n\nexport class CoordManager extends Base {\n  getClientMatrix() {\n    return Dom.createSVGMatrix(this.view.stage.getScreenCTM())\n  }\n\n  /**\n   * Returns coordinates of the graph viewport, relative to the window.\n   */\n  getClientOffset() {\n    // see: https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect\n    const rect = this.view.svg.getBoundingClientRect()\n    return new Point(rect.left, rect.top)\n  }\n\n  /**\n   * Returns coordinates of the graph viewport, relative to the document.\n   */\n  getPageOffset() {\n    // see: https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect\n    return this.getClientOffset().translate(window.scrollX, window.scrollY)\n  }\n\n  snapToGrid(x: number | Point | Point.PointLike, y?: number) {\n    const p =\n      typeof x === 'number'\n        ? this.clientToLocalPoint(x, y as number)\n        : this.clientToLocalPoint(x.x, x.y)\n    return p.snapToGrid(this.graph.getGridSize())\n  }\n\n  localToGraphPoint(x: number | Point | Point.PointLike, y?: number) {\n    const localPoint = Point.create(x, y)\n    return Dom.transformPoint(localPoint, this.graph.matrix())\n  }\n\n  localToClientPoint(x: number | Point | Point.PointLike, y?: number) {\n    const localPoint = Point.create(x, y)\n    return Dom.transformPoint(localPoint, this.getClientMatrix())\n  }\n\n  localToPagePoint(x: number | Point | Point.PointLike, y?: number) {\n    const p =\n      typeof x === 'number'\n        ? this.localToGraphPoint(x, y!)\n        : this.localToGraphPoint(x)\n    return p.translate(this.getPageOffset())\n  }\n\n  localToGraphRect(\n    x: number | Rectangle | Rectangle.RectangleLike,\n    y?: number,\n    width?: number,\n    height?: number,\n  ) {\n    const localRect = Rectangle.create(x, y, width, height)\n    return Dom.transformRectangle(localRect, this.graph.matrix())\n  }\n\n  localToClientRect(\n    x: number | Rectangle | Rectangle.RectangleLike,\n    y?: number,\n    width?: number,\n    height?: number,\n  ) {\n    const localRect = Rectangle.create(x, y, width, height)\n    return Dom.transformRectangle(localRect, this.getClientMatrix())\n  }\n\n  localToPageRect(\n    x: number | Rectangle | Rectangle.RectangleLike,\n    y?: number,\n    width?: number,\n    height?: number,\n  ) {\n    const rect =\n      typeof x === 'number'\n        ? this.localToGraphRect(x, y!, width!, height!)\n        : this.localToGraphRect(x)\n    return rect.translate(this.getPageOffset())\n  }\n\n  graphToLocalPoint(x: number | Point | Point.PointLike, y?: number) {\n    const graphPoint = Point.create(x, y)\n    return Dom.transformPoint(graphPoint, this.graph.matrix().inverse())\n  }\n\n  clientToLocalPoint(x: number | Point | Point.PointLike, y?: number) {\n    const clientPoint = Point.create(x, y)\n    return Dom.transformPoint(clientPoint, this.getClientMatrix().inverse())\n  }\n\n  clientToGraphPoint(x: number | Point | Point.PointLike, y?: number) {\n    const clientPoint = Point.create(x, y)\n    return Dom.transformPoint(\n      clientPoint,\n      this.graph.matrix().multiply(this.getClientMatrix().inverse()),\n    )\n  }\n\n  pageToLocalPoint(x: number | Point | Point.PointLike, y?: number) {\n    const pagePoint = Point.create(x, y)\n    const graphPoint = pagePoint.diff(this.getPageOffset())\n    return this.graphToLocalPoint(graphPoint)\n  }\n\n  graphToLocalRect(\n    x: number | Rectangle | Rectangle.RectangleLike,\n    y?: number,\n    width?: number,\n    height?: number,\n  ) {\n    const graphRect = Rectangle.create(x, y, width, height)\n    return Dom.transformRectangle(graphRect, this.graph.matrix().inverse())\n  }\n\n  clientToLocalRect(\n    x: number | Rectangle | Rectangle.RectangleLike,\n    y?: number,\n    width?: number,\n    height?: number,\n  ) {\n    const clientRect = Rectangle.create(x, y, width, height)\n    return Dom.transformRectangle(clientRect, this.getClientMatrix().inverse())\n  }\n\n  clientToGraphRect(\n    x: number | Rectangle | Rectangle.RectangleLike,\n    y?: number,\n    width?: number,\n    height?: number,\n  ) {\n    const clientRect = Rectangle.create(x, y, width, height)\n    return Dom.transformRectangle(\n      clientRect,\n      this.graph.matrix().multiply(this.getClientMatrix().inverse()),\n    )\n  }\n\n  pageToLocalRect(\n    x: number | Rectangle | Rectangle.RectangleLike,\n    y?: number,\n    width?: number,\n    height?: number,\n  ) {\n    const graphRect = Rectangle.create(x, y, width, height)\n    const pageOffset = this.getPageOffset()\n    graphRect.x -= pageOffset.x\n    graphRect.y -= pageOffset.y\n    return this.graphToLocalRect(graphRect)\n  }\n}\n\nexport namespace CoordManager {}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}