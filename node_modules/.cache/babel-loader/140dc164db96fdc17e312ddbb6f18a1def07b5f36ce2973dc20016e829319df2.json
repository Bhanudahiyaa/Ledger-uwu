{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport React from 'react';\nimport { Syringe } from 'mana-syringe';\nimport { Deferred } from '../../common/deferred';\nimport { MAX_ZOOM, MIN_ZOOM, XFLOW_DEFAULT_EDGE, XFLOW_DEFAULT_NODE, XFLOW_DEFAULT_GROUP_NODE } from '../../constants';\nimport { uuidv4 } from '../../common/uuid';\nimport { XFlowDefaultGroupNode } from './react-group-node';\nimport { XFlowDefaultNode } from './react-node';\nexport var NsGraphConfig;\n(function (NsGraphConfig) {\n  NsGraphConfig.CONFIG_TYPE = 'GraphConfig';\n  /** 默认的Node解析函数 */\n  NsGraphConfig.defaultNodeTypeParser = nodeConfig => nodeConfig.renderKey;\n  /** 构造的Edge解析函数 */\n  NsGraphConfig.defaultEdgeTypeParser = edgeConfig => edgeConfig.renderKey;\n  /** XFlow默认的React组件 */\n  NsGraphConfig.defaultNodeMapValue = [[XFLOW_DEFAULT_NODE, XFlowDefaultNode], [XFLOW_DEFAULT_GROUP_NODE, XFlowDefaultGroupNode]];\n})(NsGraphConfig || (NsGraphConfig = {}));\nexport class GraphConfig {\n  /** 构造函数 */\n  constructor() {\n    /** 配置类型 */\n    this.CONFIG_TYPE = NsGraphConfig.CONFIG_TYPE;\n    /** 画布的属性 */\n    this.x6Options = new Deferred();\n    /** 画布的root节点 */\n    this.rootContainer = new Deferred();\n    /** 画布的dom节点 */\n    this.graphContainer = new Deferred();\n    /** 自定义节点 */\n    this.nodeRender = new Map(NsGraphConfig.defaultNodeMapValue);\n    /** 自定义边 */\n    this.edgeRender = new Map();\n    /** 解析node渲染类型的parser */\n    this.nodeTypeParser = NsGraphConfig.defaultNodeTypeParser;\n    /** 解析edge渲染类型的parser  */\n    this.edgeTypeParser = NsGraphConfig.defaultEdgeTypeParser;\n    /** 自定义事件 */\n    this.events = [];\n    this.mergeX6Config = config => __awaiter(this, void 0, void 0, function* () {\n      const current = yield this.getX6Config();\n      return Object.assign(current, config);\n    });\n    this.getX6Config = () => __awaiter(this, void 0, void 0, function* () {\n      const config = yield this.x6Options.promise;\n      return config;\n    });\n    this.setX6Config = options => {\n      var _a;\n      const defaultOptions = this.getDefaultGraphOptions();\n      (_a = this.x6Options) === null || _a === void 0 ? void 0 : _a.resolve(Object.assign(Object.assign({}, defaultOptions), options));\n    };\n    this.setAppContainer = ele => {\n      this.appContainer = ele;\n    };\n    this.setRootContainer = ele => {\n      ele && (this === null || this === void 0 ? void 0 : this.rootContainer.resolve(ele));\n    };\n    this.setGraphContainer = ele => {\n      var _a;\n      ele && ((_a = this.graphContainer) === null || _a === void 0 ? void 0 : _a.resolve(ele));\n    };\n    this.setEvents = events => {\n      this.events = events;\n    };\n    this.setDefaultNodeRender = component => {\n      this.nodeRender.set(XFLOW_DEFAULT_NODE, component);\n    };\n    this.setDefaultEdgeRender = component => {\n      this.edgeRender.set(XFLOW_DEFAULT_EDGE, component);\n    };\n    this.setNodeRender = (renderKey, component) => {\n      this.nodeRender.set(renderKey, component);\n    };\n    this.setEdgeRender = (renderKey, component) => {\n      this.edgeRender.set(renderKey, component);\n    };\n    /** 设置解析node render key的 parser */\n    this.setNodeTypeParser = parser => {\n      this.nodeTypeParser = parser;\n    };\n    /** 设置解析edge render key的 parser */\n    this.setEdgeTypeParser = parser => {\n      this.edgeTypeParser = parser;\n    };\n    /** 获取Graph参数 */\n    this.getConfig = () => __awaiter(this, void 0, void 0, function* () {\n      const [rootContainer, graphContainer, x6Options] = yield Promise.all([this.rootContainer.promise, this.graphContainer.promise, this.x6Options.promise]);\n      const graphConfig = {\n        xflowInstanceId: this.xflowInstanceId,\n        graphId: this.graphId,\n        nodeViewId: this.graphId,\n        appContainer: this.appContainer,\n        rootContainer,\n        graphContainer,\n        x6Options,\n        events: this.events,\n        nodeRender: this.nodeRender,\n        edgeRender: this.edgeRender,\n        nodeTypeParser: this.nodeTypeParser,\n        edgeTypeParser: this.edgeTypeParser\n      };\n      return graphConfig;\n    });\n    this.getDefaultGraphOptions = () => {\n      const defaultOptions = {\n        // 节点是否可旋转\n        rotating: false,\n        // 节点是否可调整大小\n        resizing: false,\n        // 节点连线规则配置（详细文档：https://X6.antv.vision/zh/docs/api/graph/interaction#connecting）\n        connecting: {\n          snap: true,\n          dangling: false,\n          highlight: false,\n          connectionPoint: 'rect',\n          router: {\n            name: 'er'\n          },\n          connector: {\n            name: 'rounded',\n            args: {\n              radius: 15\n            }\n          }\n        },\n        // 画布背景，支持颜色/图片/水印等（详细文档：https://X6.antv.vision/zh/docs/tutorial/basic/background）\n        background: {},\n        // 网格配置（详细文档：https://X6.antv.vision/zh/docs/tutorial/basic/grid）\n        grid: {\n          visible: true\n        },\n        // 点选/框选配置（详细文档：https://X6.antv.vision/zh/docs/tutorial/basic/selection）\n        selecting: {\n          strict: true,\n          enabled: true,\n          multiple: true,\n          selectCellOnMoved: true,\n          showNodeSelectionBox: false,\n          // 框选可以选中edge\n          rubberEdge: true,\n          // 框选可以选中node\n          rubberNode: true,\n          movable: true\n        },\n        // 对齐线配置，辅助移动节点排版（详细文档：https://X6.antv.vision/zh/docs/tutorial/basic/snapline）\n        snapline: {\n          enabled: false\n        },\n        // 撤销/重做能力（详细文档：https://X6.antv.vision/zh/docs/tutorial/basic/history）\n        history: {\n          enabled: false\n        },\n        // 剪切板，支持跨画布的复制/粘贴（详细文档：https://X6.antv.vision/zh/docs/tutorial/basic/clipboard）\n        clipboard: {\n          enabled: true,\n          useLocalStorage: true\n        },\n        // 使画布具备滚动、平移、居中、缩放等能力（详细文档：https://X6.antv.vision/zh/docs/tutorial/basic/scroller）\n        scroller: {\n          enabled: false\n        },\n        // 滚轮缩放 （详细文档：https://X6.antv.vision/zh/docs/tutorial/basic/mousewheel）\n        mousewheel: {\n          enabled: true,\n          minScale: MIN_ZOOM,\n          maxScale: MAX_ZOOM,\n          factor: 1.1,\n          modifiers: ['ctrl', 'meta']\n        },\n        /** 普通画布, 支持拖拽平移 */\n        panning: {\n          enabled: true\n        },\n        /** 缩放参数 */\n        scaling: {\n          min: MIN_ZOOM,\n          max: MAX_ZOOM\n        },\n        /** keyboard */\n        keyboard: {\n          enabled: true\n        },\n        /** 定制节点和边的交互行为 */\n        interacting: {\n          /** 节点默认可以被移动 */\n          nodeMovable: true,\n          /** 边上标签默认不可以被移动 */\n          edgeLabelMovable: false\n        },\n        async: false\n      };\n      return defaultOptions;\n    };\n    this.dispose = () => {\n      // TODO: 统一看下defer的销毁\n      this.rootContainer = new Deferred();\n      this.graphContainer = new Deferred();\n      this.x6Options = new Deferred();\n    };\n    this.graphId = uuidv4();\n  }\n}\nexport const IGraphOptionProvider = Symbol('IGraphOptionProvider');\nexport const registerGraphConfig = (register, graphConfig) => {\n  register(IGraphOptionProvider, {\n    lifecycle: Syringe.Lifecycle.singleton,\n    useDynamic: () => {\n      return {\n        getOptions: () => __awaiter(void 0, void 0, void 0, function* () {\n          return graphConfig.getConfig();\n        })\n      };\n    }\n  });\n};\nexport const createGraphConfig = addOptions => props => {\n  /** bridge config and props */\n  const propsContainer = React.useMemo(() => ({\n    getValue: () => ({})\n  }), []);\n  propsContainer.getValue = () => props;\n  const graphConfig = React.useMemo(() => {\n    const config = new GraphConfig();\n    addOptions(config, propsContainer);\n    return config;\n  }, [propsContainer]);\n  return graphConfig;\n};","map":{"version":3,"names":["React","Syringe","Deferred","MAX_ZOOM","MIN_ZOOM","XFLOW_DEFAULT_EDGE","XFLOW_DEFAULT_NODE","XFLOW_DEFAULT_GROUP_NODE","uuidv4","XFlowDefaultGroupNode","XFlowDefaultNode","NsGraphConfig","CONFIG_TYPE","defaultNodeTypeParser","nodeConfig","renderKey","defaultEdgeTypeParser","edgeConfig","defaultNodeMapValue","GraphConfig","constructor","x6Options","rootContainer","graphContainer","nodeRender","Map","edgeRender","nodeTypeParser","edgeTypeParser","events","mergeX6Config","config","__awaiter","current","getX6Config","Object","assign","promise","setX6Config","options","defaultOptions","getDefaultGraphOptions","_a","resolve","setAppContainer","ele","appContainer","setRootContainer","setGraphContainer","setEvents","setDefaultNodeRender","component","set","setDefaultEdgeRender","setNodeRender","setEdgeRender","setNodeTypeParser","parser","setEdgeTypeParser","getConfig","Promise","all","graphConfig","xflowInstanceId","graphId","nodeViewId","rotating","resizing","connecting","snap","dangling","highlight","connectionPoint","router","name","connector","args","radius","background","grid","visible","selecting","strict","enabled","multiple","selectCellOnMoved","showNodeSelectionBox","rubberEdge","rubberNode","movable","snapline","history","clipboard","useLocalStorage","scroller","mousewheel","minScale","maxScale","factor","modifiers","panning","scaling","min","max","keyboard","interacting","nodeMovable","edgeLabelMovable","async","dispose","IGraphOptionProvider","Symbol","registerGraphConfig","register","lifecycle","Lifecycle","singleton","useDynamic","getOptions","createGraphConfig","addOptions","props","propsContainer","useMemo","getValue"],"sources":["../../../src/xflow-main/graph/config.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}