{"ast":null,"code":"import { __awaiter, __decorate, __metadata, __param } from \"tslib\";\nimport { contrib, Contribution, singleton } from 'mana-syringe';\nimport { RxModel } from '../common/rx-model';\nimport { Disposable, DisposableCollection } from '../common/disposable';\nimport { IFrontendApplicationContribution } from '../xflow-main/interface';\nimport { IGraphCommandService, IGraphCommandContribution } from './interface';\nimport 'reflect-metadata';\nexport var NCommand;\n(function (NCommand) {\n  /* Determine whether object is a Command */\n  function is(arg) {\n    return !!arg && arg === Object(arg) && 'id' in arg;\n  }\n  NCommand.is = is;\n  /** Comparator function for when sorting commands */\n  function compareCommands(a, b) {\n    if (a.label && b.label) {\n      const aCommand = (a.category ? `${a.category}: ${a.label}` : a.label).toLowerCase();\n      const bCommand = (b.category ? `${b.category}: ${b.label}` : b.label).toLowerCase();\n      return aCommand.localeCompare(bCommand);\n    } else {\n      return 0;\n    }\n  }\n  NCommand.compareCommands = compareCommands;\n  /**\n   * Determine if two commands are equal.\n   *\n   * @param a the first command for comparison.\n   * @param b the second command for comparison.\n   */\n  function equals(a, b) {\n    return a.id === b.id && a.label === b.label && a.iconName === b.iconName && a.category === b.category;\n  }\n  NCommand.equals = equals;\n})(NCommand || (NCommand = {}));\nlet GraphCommandRegistry = class GraphCommandRegistry {\n  constructor(contributionProvider) {\n    this.contributionProvider = contributionProvider;\n    /**\n     * undo cmd后将命令存储在队列中给redo调用\n     */\n    this.redoStack = [];\n    /**\n     * executeCommand后将命令存储在队列中给undo调用\n     */\n    this.undoStack = [];\n    /**\n     * 储存所有注册的command\n     */\n    this.commands = new Map();\n    /**\n     * 储存所有注册的command factory\n     */\n    this.factories = new Map();\n    /**\n     * 储存所有注册的command handler disposables\n     */\n    this.disposables = new Map();\n    /**\n     * 监听cmdregistry的变化\n     */\n    this.cmdChangeEvent = new RxModel(null);\n    /**\n     * 在Command实例间共享变量\n     */\n    this.Globals = new RxModel(new Map());\n    /** 设置command间的共享变量 */\n    this.setGlobal = (key, value) => {\n      this.Globals.setValue(map => {\n        map.set(key, value);\n      });\n    };\n    /** 获取共享变量 */\n    this.getGlobal = key => {\n      const map = this.Globals.getValue();\n      return map.get(key);\n    };\n    /**\n     * 执行undo stack中最后一条Command\n     */\n    this.undoCommand = () => __awaiter(this, void 0, void 0, function* () {\n      /* 获取可以undo的Command */\n      const cmd = this.undoStack.pop();\n      if (!cmd) {\n        console.error('empty undo stack');\n        return;\n      }\n      /* 执行命令的undo方法 */\n      yield cmd.undo();\n      /* 执行后塞到redo的栈中 */\n      this.redoStack.push(cmd);\n      /* 触发事件回调 */\n      this.cmdChangeEvent.setValue(null);\n    });\n    /**\n     * 执行redo stack中最后一条Command\n     */\n    this.redoCommand = () => __awaiter(this, void 0, void 0, function* () {\n      /* 获取可以redo的Command */\n      const cmd = this.redoStack.pop();\n      if (!cmd) {\n        console.error('empty undo stack');\n        return;\n      }\n      /* 执行命令的undo */\n      yield cmd.redo();\n      /* 执行后塞到undo的栈中 */\n      this.undoStack.push(cmd);\n      /* 触发事件回调 */\n      this.cmdChangeEvent.setValue(null);\n    });\n    /**\n     * 注册一批可单独dispose的Command\n     * @param externalRegisterFn ICommandRegisterFunction\n     */\n    this.registerDisposableCommand = externalRegisterFn => {\n      const toDispose = new DisposableCollection();\n      const disposableRegistry = {\n        registerCommand: (command, factory) => {\n          const disposable = this.registerCommand(command, factory);\n          toDispose.push(disposable);\n          return disposable;\n        }\n      };\n      externalRegisterFn(disposableRegistry);\n      return toDispose;\n    };\n  }\n  /**\n   * 监听cmdregistry的变化\n   */\n  get watchChange() {\n    return this.cmdChangeEvent.watch;\n  }\n  onStart() {\n    const contributions = this.contributionProvider.getContributions();\n    for (const contribItem of contributions) {\n      contribItem.registerGraphCommands(this);\n    }\n  }\n  executeCommandPipeline(cmdOptions) {\n    return __awaiter(this, void 0, void 0, function* () {\n      let res = null;\n      for (const cmdOption of cmdOptions) {\n        const cmdCtx = res === null || res === void 0 ? void 0 : res.contextProvider();\n        const {\n          args,\n          hooks\n        } = yield cmdOption === null || cmdOption === void 0 ? void 0 : cmdOption.getCommandOption(cmdCtx);\n        res = yield this.executeCommand(cmdOption === null || cmdOption === void 0 ? void 0 : cmdOption.commandId, args, hooks);\n      }\n      /* 触发事件回调 */\n      this.cmdChangeEvent.setValue(null);\n      return res;\n    });\n  }\n  /** 执行 Command：会在undo stack中push cmd */\n  executeCommand(commandId, cmdArgs, hook = []) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const factory = this.getFactory(commandId);\n      if (factory) {\n        const cmd = yield factory.createCommand(commandId, cmdArgs, hook);\n        yield cmd.execute();\n        if (cmd.isUndoable()) {\n          this.undoStack.push(cmd);\n        }\n        /* 触发事件回调 */\n        this.cmdChangeEvent.setValue(null);\n        return cmd;\n      }\n      throw Object.assign(new Error(`The command '${commandId}' cannot be executed. There are no active handlers available for the command.`), {\n        code: 'NO_ACTIVE_HANDLER'\n      });\n    });\n  }\n  /** 执行 unod Command：不会在undo stack中push新的command记录 */\n  executeUndoCommand(commandId, cmdArgs, hook = []) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const factory = this.getFactory(commandId);\n      if (factory) {\n        const cmd = yield factory.createCommand(commandId, cmdArgs, hook);\n        yield cmd.execute();\n        return cmd;\n      }\n      throw Object.assign(new Error(`The command '${commandId}' cannot be executed. There are no active handlers available for the command.`), {\n        code: 'NO_ACTIVE_HANDLER'\n      });\n    });\n  }\n  /**\n   * Execute the active handler for the given command and arguments.\n   *\n   * Reject if a command cannot be executed.\n   */\n  createCommand(commandId, cmdArgs, hook = []) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const factory = this.getFactory(commandId);\n      if (factory) {\n        const cmd = yield factory.createCommand(commandId, cmdArgs, hook);\n        return cmd;\n      }\n      throw Object.assign(new Error(`The command '${commandId}' cannot be executed. There are no active handlers available for the command.`), {\n        code: 'NO_ACTIVE_HANDLER'\n      });\n    });\n  }\n  /**\n   * 检查是否注册了Command\n   */\n  get isUndoable() {\n    return this.undoStack.length > 0;\n  }\n  /**\n   * 检查是否注册了Command\n   */\n  get isRedoable() {\n    return this.redoStack.length > 0;\n  }\n  /**\n   * 检查是否注册了Command\n   */\n  hasCommand(commandId) {\n    return this.commands.has(commandId);\n  }\n  /**\n   * Get a command for the given command identifier.\n   */\n  getCommand(id) {\n    return this.commands.get(id);\n  }\n  /**\n   * Register the given command and handler if present.\n   *\n   * Throw if a command is already registered for the given command identifier.\n   */\n  registerCommand(command, factory) {\n    if (this.factories.has(command.id)) {\n      console.warn(`A command ${command.id} is already registered.`);\n      return Disposable.NULL;\n    }\n    const toDispose = new DisposableCollection(this.doRegisterCommand(command), this.registerFactory(command.id, factory), Disposable.create(() => this.disposables.delete(command.id)));\n    this.disposables.set(command.id, toDispose);\n    return toDispose;\n  }\n  doRegisterCommand(command) {\n    this.commands.set(command.id, command);\n    return Disposable.create(() => this.disposables.delete(command.id));\n  }\n  /**\n   * Unregister command from the registry\n   *\n   * @param id\n   */\n  unregisterCommand(commandOrId) {\n    const id = NCommand.is(commandOrId) ? commandOrId.id : commandOrId;\n    const disposableCmd = this.disposables.get(id);\n    if (disposableCmd) {\n      disposableCmd.dispose();\n    }\n  }\n  /**\n   * 检查commandId是否有Factory\n   */\n  hasFactory(commandId) {\n    const factory = this.factories.get(commandId);\n    return !!factory;\n  }\n  /**\n   * Get a visible handler for the given command or `undefined`.\n   */\n  getFactory(commandId) {\n    const factory = this.factories.get(commandId);\n    return factory;\n  }\n  /**\n   * Register the given handler for the given command identifier.\n   *\n   * If there is already a handler for the given command\n   * then the given handler is registered as more specific, and\n   * has higher priority during enablement, visibility and toggle state evaluations.\n   */\n  registerFactory(commandId, factory, force = false) {\n    if (this.hasFactory(commandId) && force === false) {\n      console.error('cannot register command:', commandId);\n    }\n    this.factories.set(commandId, factory);\n    return Disposable.create(() => {\n      this.factories.delete(commandId);\n    });\n  }\n  /**\n   * Returns with all handlers for the given command. If the command does not have any handlers,\n   * or the command is not registered, returns an empty array.\n   */\n  getAllFactories() {\n    return Array.from(this.factories.entries());\n  }\n};\nGraphCommandRegistry = __decorate([singleton({\n  contrib: [IFrontendApplicationContribution, IGraphCommandService]\n}), __param(0, contrib(IGraphCommandContribution)), __metadata(\"design:paramtypes\", [Object])], GraphCommandRegistry);\nexport { GraphCommandRegistry };","map":{"version":3,"names":["contrib","Contribution","singleton","RxModel","Disposable","DisposableCollection","IFrontendApplicationContribution","IGraphCommandService","IGraphCommandContribution","NCommand","is","arg","Object","compareCommands","a","b","label","aCommand","category","toLowerCase","bCommand","localeCompare","equals","id","iconName","GraphCommandRegistry","constructor","contributionProvider","redoStack","undoStack","commands","Map","factories","disposables","cmdChangeEvent","Globals","setGlobal","key","value","setValue","map","set","getGlobal","getValue","get","undoCommand","__awaiter","cmd","pop","console","error","undo","push","redoCommand","redo","registerDisposableCommand","externalRegisterFn","toDispose","disposableRegistry","registerCommand","command","factory","disposable","watchChange","watch","onStart","contributions","getContributions","contribItem","registerGraphCommands","executeCommandPipeline","cmdOptions","res","cmdOption","cmdCtx","contextProvider","args","hooks","getCommandOption","executeCommand","commandId","cmdArgs","hook","getFactory","createCommand","execute","isUndoable","assign","Error","code","executeUndoCommand","length","isRedoable","hasCommand","has","getCommand","warn","NULL","doRegisterCommand","registerFactory","create","delete","unregisterCommand","commandOrId","disposableCmd","dispose","hasFactory","force","getAllFactories","Array","from","entries","__decorate","__param"],"sources":["../../src/command/graph-command.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}