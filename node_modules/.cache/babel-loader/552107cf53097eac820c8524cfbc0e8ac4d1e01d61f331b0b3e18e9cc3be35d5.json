{"ast":null,"code":"import { isObject } from './is-object';\nimport { isTypedArray } from './is-typedarray';\n/**\n * 考虑结构体命名, eg:\n * a: { b: 1 }  ->  'a.b'\n * a: [ { b: 1 } ] -> 'a[0].b'\n */\n\nexport function extractUniforms(uniforms) {\n  var extractedUniforms = {};\n  Object.keys(uniforms).forEach(function (uniformName) {\n    extractUniformsRecursively(uniformName, uniforms[uniformName], extractedUniforms, '');\n  });\n  return extractedUniforms;\n}\nfunction extractUniformsRecursively(uniformName, uniformValue, uniforms, prefix) {\n  if (uniformValue === null || typeof uniformValue === 'number' ||\n  // u_A: 1\n  typeof uniformValue === 'boolean' ||\n  // u_A: false\n  Array.isArray(uniformValue) && typeof uniformValue[0] === 'number' ||\n  // u_A: [1, 2, 3]\n  isTypedArray(uniformValue) ||\n  // u_A: Float32Array\n  // @ts-ignore\n  uniformValue === '' ||\n  // @ts-ignore\n  uniformValue.resize !== undefined) {\n    uniforms[\"\".concat(prefix && prefix + '.').concat(uniformName)] = uniformValue;\n    return;\n  } // u_Struct.a.b.c\n\n  if (isObject(uniformValue)) {\n    Object.keys(uniformValue).forEach(function (childName) {\n      extractUniformsRecursively(childName,\n      // @ts-ignore\n      uniformValue[childName], uniforms, \"\".concat(prefix && prefix + '.').concat(uniformName));\n    });\n  } // u_Struct[0].a\n\n  if (Array.isArray(uniformValue)) {\n    // @ts-ignore\n    uniformValue.forEach(function (child, idx) {\n      Object.keys(child).forEach(function (childName) {\n        extractUniformsRecursively(childName,\n        // @ts-ignore\n        child[childName], uniforms, \"\".concat(prefix && prefix + '.').concat(uniformName, \"[\").concat(idx, \"]\"));\n      });\n    });\n  }\n}","map":{"version":3,"names":["isObject","isTypedArray","extractUniforms","uniforms","extractedUniforms","Object","keys","forEach","uniformName","extractUniformsRecursively","uniformValue","prefix","Array","isArray","resize","undefined","concat","childName","child","idx"],"sources":["/Users/bhanudahiya/Desktop/ledger-IQ/node_modules/@antv/g-webgpu-engine/src/utils/uniform.ts"],"sourcesContent":["import { IUniform } from '@antv/g-webgpu-core';\nimport { isObject } from './is-object';\nimport { isTypedArray } from './is-typedarray';\n\n/**\n * 考虑结构体命名, eg:\n * a: { b: 1 }  ->  'a.b'\n * a: [ { b: 1 } ] -> 'a[0].b'\n */\nexport function extractUniforms(uniforms: {\n  [key: string]: IUniform;\n}): {\n  [key: string]: IUniform;\n} {\n  const extractedUniforms = {};\n  Object.keys(uniforms).forEach((uniformName) => {\n    extractUniformsRecursively(\n      uniformName,\n      uniforms[uniformName],\n      extractedUniforms,\n      '',\n    );\n  });\n\n  return extractedUniforms;\n}\n\nfunction extractUniformsRecursively(\n  uniformName: string,\n  uniformValue: IUniform,\n  uniforms: {\n    [key: string]: IUniform;\n  },\n  prefix: string,\n) {\n  if (\n    uniformValue === null ||\n    typeof uniformValue === 'number' || // u_A: 1\n    typeof uniformValue === 'boolean' || // u_A: false\n    (Array.isArray(uniformValue) && typeof uniformValue[0] === 'number') || // u_A: [1, 2, 3]\n    isTypedArray(uniformValue) || // u_A: Float32Array\n    // @ts-ignore\n    uniformValue === '' ||\n    // @ts-ignore\n    uniformValue.resize !== undefined\n  ) {\n    uniforms[`${prefix && prefix + '.'}${uniformName}`] = uniformValue;\n    return;\n  }\n\n  // u_Struct.a.b.c\n  if (isObject(uniformValue)) {\n    Object.keys(uniformValue).forEach((childName) => {\n      extractUniformsRecursively(\n        childName,\n        // @ts-ignore\n        uniformValue[childName],\n        uniforms,\n        `${prefix && prefix + '.'}${uniformName}`,\n      );\n    });\n  }\n\n  // u_Struct[0].a\n  if (Array.isArray(uniformValue)) {\n    // @ts-ignore\n    uniformValue.forEach((child, idx) => {\n      Object.keys(child).forEach((childName) => {\n        extractUniformsRecursively(\n          childName,\n          // @ts-ignore\n          child[childName],\n          uniforms,\n          `${prefix && prefix + '.'}${uniformName}[${idx}]`,\n        );\n      });\n    });\n  }\n}\n"],"mappings":"AACA,SAASA,QAAT,QAAyB,aAAzB;AACA,SAASC,YAAT,QAA6B,iBAA7B;AAEA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,eAATA,CAAyBC,QAAzB,EAIL;EACA,IAAMC,iBAAiB,GAAG,EAA1B;EACAC,MAAM,CAACC,IAAP,CAAYH,QAAZ,EAAsBI,OAAtB,CAA8B,UAACC,WAAD,EAAiB;IAC7CC,0BAA0B,CACxBD,WADwB,EAExBL,QAAQ,CAACK,WAAD,CAFgB,EAGxBJ,iBAHwB,EAIxB,EAJwB,CAA1B;EAMD,CAPD;EASA,OAAOA,iBAAP;AACD;AAED,SAASK,0BAATA,CACED,WADF,EAEEE,YAFF,EAGEP,QAHF,EAMEQ,MANF,EAOE;EACA,IACED,YAAY,KAAK,IAAjB,IACA,OAAOA,YAAP,KAAwB,QADxB;EACoC;EACpC,OAAOA,YAAP,KAAwB,SAFxB;EAEqC;EACpCE,KAAK,CAACC,OAAN,CAAcH,YAAd,KAA+B,OAAOA,YAAY,CAAC,CAAD,CAAnB,KAA2B,QAH3D;EAGwE;EACxET,YAAY,CAACS,YAAD,CAJZ;EAI8B;EAC9B;EACAA,YAAY,KAAK,EANjB;EAOA;EACAA,YAAY,CAACI,MAAb,KAAwBC,SAT1B,EAUE;IACAZ,QAAQ,IAAAa,MAAA,CAAIL,MAAM,IAAIA,MAAM,GAAG,GAAvB,EAAAK,MAAA,CAA6BR,WAA7B,EAAR,GAAsDE,YAAtD;IACA;EACD,CAdD,CAgBA;;EACA,IAAIV,QAAQ,CAACU,YAAD,CAAZ,EAA4B;IAC1BL,MAAM,CAACC,IAAP,CAAYI,YAAZ,EAA0BH,OAA1B,CAAkC,UAACU,SAAD,EAAe;MAC/CR,0BAA0B,CACxBQ,SADwB;MAExB;MACAP,YAAY,CAACO,SAAD,CAHY,EAIxBd,QAJwB,KAAAa,MAAA,CAKrBL,MAAM,IAAIA,MAAM,GAAG,GALE,EAAAK,MAAA,CAKIR,WALJ,EAA1B;IAOD,CARD;EASD,CA3BD,CA6BA;;EACA,IAAII,KAAK,CAACC,OAAN,CAAcH,YAAd,CAAJ,EAAiC;IAC/B;IACAA,YAAY,CAACH,OAAb,CAAqB,UAACW,KAAD,EAAQC,GAAR,EAAgB;MACnCd,MAAM,CAACC,IAAP,CAAYY,KAAZ,EAAmBX,OAAnB,CAA2B,UAACU,SAAD,EAAe;QACxCR,0BAA0B,CACxBQ,SADwB;QAExB;QACAC,KAAK,CAACD,SAAD,CAHmB,EAIxBd,QAJwB,KAAAa,MAAA,CAKrBL,MAAM,IAAIA,MAAM,GAAG,GALE,EAAAK,MAAA,CAKIR,WALJ,OAAAQ,MAAA,CAKmBG,GALnB,OAA1B;MAOD,CARD;IASD,CAVD;EAWD;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}