{"ast":null,"code":"import _initializerDefineProperty from \"@babel/runtime/helpers/initializerDefineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _applyDecoratedDescriptor from \"@babel/runtime/helpers/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"@babel/runtime/helpers/initializerWarningHelper\";\nvar _dec, _dec2, _class, _class2, _descriptor, _temp;\nimport { inject, injectable } from 'inversify';\nimport { IDENTIFIER } from '../../identifier';\nimport { gl } from '../renderer/gl';\nexport var ResourcePool = (_dec = injectable(), _dec2 = inject(IDENTIFIER.RenderEngine), _dec(_class = (_class2 = (_temp = /*#__PURE__*/function () {\n  function ResourcePool() {\n    _classCallCheck(this, ResourcePool);\n    _initializerDefineProperty(this, \"engine\", _descriptor, this);\n    this.resourcePool = {};\n  }\n  _createClass(ResourcePool, [{\n    key: \"getOrCreateResource\",\n    /**\n     * 负责实例化虚拟资源，通过引擎服务\n     * @param resource 虚拟资源\n     */\n    value: function getOrCreateResource(resource) {\n      if (!this.resourcePool[resource.name]) {\n        var _resource$descriptor = resource.descriptor,\n          width = _resource$descriptor.width,\n          height = _resource$descriptor.height,\n          usage = _resource$descriptor.usage;\n        this.resourcePool[resource.name] = this.engine.createFramebuffer({\n          color: this.engine.createTexture2D({\n            width: width,\n            height: height,\n            wrapS: gl.CLAMP_TO_EDGE,\n            wrapT: gl.CLAMP_TO_EDGE,\n            usage: usage\n          })\n        });\n      }\n      return this.resourcePool[resource.name];\n    }\n  }, {\n    key: \"clean\",\n    value: function clean() {\n      this.resourcePool = {};\n    }\n  }]);\n  return ResourcePool;\n}(), _temp), _descriptor = _applyDecoratedDescriptor(_class2.prototype, \"engine\", [_dec2], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _class2)) || _class);","map":{"version":3,"names":["inject","injectable","IDENTIFIER","gl","ResourcePool","_dec","_dec2","RenderEngine","_class","_class2","_temp","_classCallCheck","_initializerDefineProperty","_descriptor","resourcePool","_createClass","key","value","getOrCreateResource","resource","name","_resource$descriptor","descriptor","width","height","usage","engine","createFramebuffer","color","createTexture2D","wrapS","CLAMP_TO_EDGE","wrapT","clean","_applyDecoratedDescriptor","prototype","configurable","enumerable","writable","initializer"],"sources":["/Users/bhanudahiya/Desktop/ledger-IQ/node_modules/@antv/g-webgpu-core/src/components/framegraph/ResourcePool.ts"],"sourcesContent":["import { inject, injectable } from 'inversify';\nimport { IFramebuffer } from '../..';\nimport { IDENTIFIER } from '../../identifier';\nimport { gl } from '../renderer/gl';\nimport { IRendererService } from '../renderer/IRendererService';\nimport { ResourceEntry } from './ResourceEntry';\n\n@injectable()\nexport class ResourcePool {\n  @inject(IDENTIFIER.RenderEngine)\n  private readonly engine: IRendererService;\n\n  // 资源池\n  private resourcePool: Record<string, IFramebuffer> = {};\n\n  /**\n   * 负责实例化虚拟资源，通过引擎服务\n   * @param resource 虚拟资源\n   */\n  public getOrCreateResource(resource: ResourceEntry): IFramebuffer {\n    if (!this.resourcePool[resource.name]) {\n      const { width, height, usage } = resource.descriptor;\n      this.resourcePool[resource.name] = this.engine.createFramebuffer({\n        color: this.engine.createTexture2D({\n          width,\n          height,\n          wrapS: gl.CLAMP_TO_EDGE,\n          wrapT: gl.CLAMP_TO_EDGE,\n          usage,\n        }),\n      });\n    }\n\n    return this.resourcePool[resource.name];\n  }\n\n  public clean() {\n    this.resourcePool = {};\n  }\n}\n"],"mappings":";;;;;;AAAA,SAASA,MAAT,EAAiBC,UAAjB,QAAmC,WAAnC;AAEA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,EAAT,QAAmB,gBAAnB;AAKA,WAAaC,YAAb,IAAAC,IAAA,GADCJ,UAAU,EACX,EAAAK,KAAA,GACGN,MAAM,CAACE,UAAU,CAACK,YAAZ,CADT,EAAAF,IAAA,CAAAG,MAAA,IAAAC,OAAA,IAAAC,KAAA;EAAA,SAAAN,aAAA;IAAAO,eAAA,OAAAP,YAAA;IAAAQ,0BAAA,iBAAAC,WAAA;IAAA,KAKUC,YALV,GAKuD,EALvD;EAAA;EAAAC,YAAA,CAAAX,YAAA;IAAAY,GAAA;IAOE;AACF;AACA;AACA;IAVAC,KAAA,WAAAC,oBAW6BC,QAX7B,EAWoE;MAChE,IAAI,CAAC,KAAKL,YAAL,CAAkBK,QAAQ,CAACC,IAA3B,CAAL,EAAuC;QAAA,IAAAC,oBAAA,GACJF,QAAQ,CAACG,UADL;UAC7BC,KAD6B,GAAAF,oBAAA,CAC7BE,KAD6B;UACtBC,MADsB,GAAAH,oBAAA,CACtBG,MADsB;UACdC,KADc,GAAAJ,oBAAA,CACdI,KADc;QAErC,KAAKX,YAAL,CAAkBK,QAAQ,CAACC,IAA3B,IAAmC,KAAKM,MAAL,CAAYC,iBAAZ,CAA8B;UAC/DC,KAAK,EAAE,KAAKF,MAAL,CAAYG,eAAZ,CAA4B;YACjCN,KAAK,EAALA,KADiC;YAEjCC,MAAM,EAANA,MAFiC;YAGjCM,KAAK,EAAE3B,EAAE,CAAC4B,aAHuB;YAIjCC,KAAK,EAAE7B,EAAE,CAAC4B,aAJuB;YAKjCN,KAAK,EAALA;UALiC,CAA5B;QADwD,CAA9B,CAAnC;MASD;MAED,OAAO,KAAKX,YAAL,CAAkBK,QAAQ,CAACC,IAA3B,CAAP;IACD;EA1BH;IAAAJ,GAAA;IAAAC,KAAA,WAAAgB,MAAA,EA4BiB;MACb,KAAKnB,YAAL,GAAoB,EAApB;IACD;EA9BH;EAAA,OAAAV,YAAA;AAAA,KAAAM,KAAA,GAAAG,WAAA,GAAAqB,yBAAA,CAAAzB,OAAA,CAAA0B,SAAA,aAAA7B,KAAA;EAAA8B,YAAA;EAAAC,UAAA;EAAAC,QAAA;EAAAC,WAAA;AAAA,IAAA9B,OAAA,MAAAD,MAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}