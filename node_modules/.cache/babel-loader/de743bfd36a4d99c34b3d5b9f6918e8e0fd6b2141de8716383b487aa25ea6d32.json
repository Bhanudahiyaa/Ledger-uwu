{"ast":null,"code":"import JQuery from 'jquery';\nexport function sanitizeHTML(html, options = {}) {\n  // If documentContext (second parameter) is not specified or given as\n  // `null` or `undefined`, a new document is used. Inline events will not\n  // execute when the HTML is parsed; this includes, for example, sending\n  // GET requests for images.\n  // If keepScripts (last parameter) is `false`, scripts are not executed.\n  const nodes = JQuery.parseHTML(html, null, false);\n  nodes.forEach(node => {\n    const elem = node;\n    if (elem) {\n      const attrs = elem.attributes;\n      if (attrs) {\n        for (let i = 0, ii = attrs.length; i < ii; i += 1) {\n          const attr = attrs.item(i);\n          if (attr) {\n            const val = attr.value.toLowerCase();\n            const name = attr.name.toLowerCase();\n            // Removes attribute name starts with \"on\" (e.g. onload,\n            // onerror...).\n            // Removes attribute value starts with \"javascript:\" pseudo\n            // protocol (e.g. `href=\"javascript:alert(1)\"`).\n            if (name.startsWith('on') || val.startsWith('javascript:') ||\n            // eslint-disable-line no-script-url\n            // ref: https://lgtm.com/rules/1510852698359/\n            val.startsWith('data:') || val.startsWith('vbscript:')) {\n              elem.removeAttribute(name);\n            }\n          }\n        }\n      }\n    }\n  });\n  if (options.raw) {\n    return nodes;\n  }\n  return JQuery('<div/>').append(nodes).html();\n}","map":{"version":3,"names":["JQuery","sanitizeHTML","html","options","nodes","parseHTML","forEach","node","elem","attrs","attributes","i","ii","length","attr","item","val","value","toLowerCase","name","startsWith","removeAttribute","raw","append"],"sources":["/Users/bhanudahiya/Desktop/ledger-IQ/node_modules/@antv/x6/src/util/string/html.ts"],"sourcesContent":["import JQuery from 'jquery'\n\n/**\n * Sanitizes HTML with jQuery prevent Application from XSS attacks.\n * ref: https://gist.github.com/ufologist/5a0da51b2b9ef1b861c30254172ac3c9\n */\nexport function sanitizeHTML(html: string): string\nexport function sanitizeHTML(html: string, options: { raw: false }): string\nexport function sanitizeHTML(\n  html: string,\n  options: { raw: true },\n): JQuery.Node[]\nexport function sanitizeHTML(html: string, options: { raw?: boolean } = {}) {\n  // If documentContext (second parameter) is not specified or given as\n  // `null` or `undefined`, a new document is used. Inline events will not\n  // execute when the HTML is parsed; this includes, for example, sending\n  // GET requests for images.\n\n  // If keepScripts (last parameter) is `false`, scripts are not executed.\n  const nodes = JQuery.parseHTML(html, null, false)\n\n  nodes.forEach((node) => {\n    const elem = node as Element\n    if (elem) {\n      const attrs = elem.attributes\n      if (attrs) {\n        for (let i = 0, ii = attrs.length; i < ii; i += 1) {\n          const attr = attrs.item(i)\n          if (attr) {\n            const val = attr.value.toLowerCase()\n            const name = attr.name.toLowerCase()\n\n            // Removes attribute name starts with \"on\" (e.g. onload,\n            // onerror...).\n            // Removes attribute value starts with \"javascript:\" pseudo\n            // protocol (e.g. `href=\"javascript:alert(1)\"`).\n            if (\n              name.startsWith('on') ||\n              val.startsWith('javascript:') || // eslint-disable-line no-script-url\n              // ref: https://lgtm.com/rules/1510852698359/\n              val.startsWith('data:') ||\n              val.startsWith('vbscript:')\n            ) {\n              elem.removeAttribute(name)\n            }\n          }\n        }\n      }\n    }\n  })\n\n  if (options.raw) {\n    return nodes\n  }\n\n  return JQuery('<div/>').append(nodes).html()\n}\n"],"mappings":"AAAA,OAAOA,MAAM,MAAM,QAAQ;AAY3B,OAAM,SAAUC,YAAYA,CAACC,IAAY,EAAEC,OAAA,GAA6B,EAAE;EACxE;EACA;EACA;EACA;EAEA;EACA,MAAMC,KAAK,GAAGJ,MAAM,CAACK,SAAS,CAACH,IAAI,EAAE,IAAI,EAAE,KAAK,CAAC;EAEjDE,KAAK,CAACE,OAAO,CAAEC,IAAI,IAAI;IACrB,MAAMC,IAAI,GAAGD,IAAe;IAC5B,IAAIC,IAAI,EAAE;MACR,MAAMC,KAAK,GAAGD,IAAI,CAACE,UAAU;MAC7B,IAAID,KAAK,EAAE;QACT,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEC,EAAE,GAAGH,KAAK,CAACI,MAAM,EAAEF,CAAC,GAAGC,EAAE,EAAED,CAAC,IAAI,CAAC,EAAE;UACjD,MAAMG,IAAI,GAAGL,KAAK,CAACM,IAAI,CAACJ,CAAC,CAAC;UAC1B,IAAIG,IAAI,EAAE;YACR,MAAME,GAAG,GAAGF,IAAI,CAACG,KAAK,CAACC,WAAW,EAAE;YACpC,MAAMC,IAAI,GAAGL,IAAI,CAACK,IAAI,CAACD,WAAW,EAAE;YAEpC;YACA;YACA;YACA;YACA,IACEC,IAAI,CAACC,UAAU,CAAC,IAAI,CAAC,IACrBJ,GAAG,CAACI,UAAU,CAAC,aAAa,CAAC;YAAI;YACjC;YACAJ,GAAG,CAACI,UAAU,CAAC,OAAO,CAAC,IACvBJ,GAAG,CAACI,UAAU,CAAC,WAAW,CAAC,EAC3B;cACAZ,IAAI,CAACa,eAAe,CAACF,IAAI,CAAC;;;;;;EAMtC,CAAC,CAAC;EAEF,IAAIhB,OAAO,CAACmB,GAAG,EAAE;IACf,OAAOlB,KAAK;;EAGd,OAAOJ,MAAM,CAAC,QAAQ,CAAC,CAACuB,MAAM,CAACnB,KAAK,CAAC,CAACF,IAAI,EAAE;AAC9C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}