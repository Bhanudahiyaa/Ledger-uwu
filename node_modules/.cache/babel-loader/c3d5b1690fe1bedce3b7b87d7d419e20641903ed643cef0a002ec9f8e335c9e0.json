{"ast":null,"code":"import { __awaiter, __decorate, __metadata } from \"tslib\";\nimport { inject, injectable, postConstruct } from 'mana-syringe';\nimport { ICommandHandler, ICommandContextProvider } from '../../command/interface';\nimport { XFlowGraphCommands } from '../constant';\nimport { MODELS } from '../../model-service';\nexport var NsGraphMeta;\n(function (NsGraphMeta) {\n  /** Command Id: 用于注册named factory */\n  NsGraphMeta.command = XFlowGraphCommands.LOAD_META;\n  /** hookName */\n  NsGraphMeta.hookKey = 'graphMeta';\n})(NsGraphMeta || (NsGraphMeta = {}));\nlet GraphMetaCommand = class GraphMetaCommand {\n  constructor() {\n    /** 执行Cmd */\n    this.execute = () => __awaiter(this, void 0, void 0, function* () {\n      const {\n        args,\n        hooks: runtimeHook\n      } = this.ctx.getArgs();\n      const hooks = this.ctx.getHooks();\n      const result = yield hooks.graphMeta.call(/** 执行hooks pipeline处理args */\n      args, /** 执行 callback */\n      handlerArgs => __awaiter(this, void 0, void 0, function* () {\n        const {\n          graphMetaService\n        } = handlerArgs;\n        const meta = graphMetaService ? yield graphMetaService(handlerArgs) : Object.assign({}, handlerArgs === null || handlerArgs === void 0 ? void 0 : handlerArgs.meta);\n        return Object.assign({\n          flowId: meta === null || meta === void 0 ? void 0 : meta.flowId\n        }, meta);\n      }), /** 外部的 hook */\n      runtimeHook);\n      const modelService = this.ctx.getModelService();\n      /** 如果已经注册，直接更新已有的值 */\n      const model = yield MODELS.GRAPH_META.getModel(modelService);\n      model.setValue(result);\n      /** 设置结果 */\n      this.ctx.setResult(result);\n      return this;\n    });\n    /** undo cmd */\n    this.undo = () => __awaiter(this, void 0, void 0, function* () {\n      this.ctx.undo();\n      return this;\n    });\n    /** redo cmd */\n    this.redo = () => __awaiter(this, void 0, void 0, function* () {\n      if (!this.ctx.isUndoable) {\n        yield this.execute();\n      }\n      return this;\n    });\n  }\n  init() {\n    this.ctx = this.contextProvider();\n  }\n  /** isUndoable */\n  isUndoable() {\n    return this.ctx.isUndoable();\n  }\n};\n__decorate([inject(ICommandContextProvider), __metadata(\"design:type\", Object)], GraphMetaCommand.prototype, \"contextProvider\", void 0);\n__decorate([postConstruct(), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", []), __metadata(\"design:returntype\", void 0)], GraphMetaCommand.prototype, \"init\", null);\nGraphMetaCommand = __decorate([injectable({\n  token: {\n    token: ICommandHandler,\n    named: NsGraphMeta.command.id\n  }\n})\n/** 创建节点命令 */], GraphMetaCommand);\nexport { GraphMetaCommand };","map":{"version":3,"names":["inject","injectable","postConstruct","ICommandHandler","ICommandContextProvider","XFlowGraphCommands","MODELS","NsGraphMeta","command","LOAD_META","hookKey","GraphMetaCommand","constructor","execute","__awaiter","args","hooks","runtimeHook","ctx","getArgs","getHooks","result","graphMeta","call","handlerArgs","graphMetaService","meta","Object","assign","flowId","modelService","getModelService","model","GRAPH_META","getModel","setValue","setResult","undo","redo","isUndoable","init","contextProvider","__decorate","token","named","id"],"sources":["../../../src/command-contributions/graph/graph-meta.ts"],"sourcesContent":[null],"mappings":";AAAA,SAASA,MAAM,EAAEC,UAAU,EAAEC,aAAa,QAAQ,cAAc;AAGhE,SAASC,eAAe,EAAEC,uBAAuB,QAAQ,yBAAyB;AAIlF,SAASC,kBAAkB,QAAQ,aAAa;AAChD,SAASC,MAAM,QAAQ,qBAAqB;AAI5C,OAAM,IAAWC,WAAW;AAA5B,WAAiBA,WAAW;EAC1B;EACaA,WAAA,CAAAC,OAAO,GAAGH,kBAAkB,CAACI,SAAS;EACnD;EACaF,WAAA,CAAAG,OAAO,GAAG,WAAW;AAkBpC,CAAC,EAtBgBH,WAAW,KAAXA,WAAW;AA4BrB,IAAMI,gBAAgB,GAAtB,MAAMA,gBAAgB;EAAtBC,YAAA;IAWL;IACA,KAAAC,OAAO,GAAG,MAAWC,SAAA;MACnB,MAAM;QAAEC,IAAI;QAAEC,KAAK,EAAEC;MAAW,CAAE,GAAG,IAAI,CAACC,GAAG,CAACC,OAAO,EAAE;MACvD,MAAMH,KAAK,GAAG,IAAI,CAACE,GAAG,CAACE,QAAQ,EAAE;MACjC,MAAMC,MAAM,GAAG,MAAML,KAAK,CAACM,SAAS,CAACC,IAAI,CACvC;MACAR,IAAI,EACJ;MACMS,WAAW,IAAGV,SAAA;QAClB,MAAM;UAAEW;QAAgB,CAAE,GAAGD,WAAW;QACxC,MAAME,IAAI,GAAGD,gBAAgB,GACzB,MAAMA,gBAAgB,CAACD,WAAW,CAAC,GACpCG,MAAA,CAAAC,MAAA,KAAMJ,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEE,IAAI,CAAE;QAC5B,OAAAC,MAAA,CAAAC,MAAA;UAASC,MAAM,EAAEH,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEG;QAAM,GAAKH,IAAI;MACxC,CAAC,GACD;MACAT,WAAW,CACZ;MAED,MAAMa,YAAY,GAAG,IAAI,CAACZ,GAAG,CAACa,eAAe,EAAE;MAC/C;MACA,MAAMC,KAAK,GAAG,MAAM1B,MAAM,CAAC2B,UAAU,CAACC,QAAQ,CAACJ,YAAY,CAAC;MAC5DE,KAAK,CAACG,QAAQ,CAACd,MAAM,CAAC;MAEtB;MACA,IAAI,CAACH,GAAG,CAACkB,SAAS,CAACf,MAAM,CAAC;MAC1B,OAAO,IAAI;IACb,CAAC;IAED;IACA,KAAAgB,IAAI,GAAG,MAAWvB,SAAA;MAChB,IAAI,CAACI,GAAG,CAACmB,IAAI,EAAE;MACf,OAAO,IAAI;IACb,CAAC;IAED;IACA,KAAAC,IAAI,GAAG,MAAWxB,SAAA;MAChB,IAAI,CAAC,IAAI,CAACI,GAAG,CAACqB,UAAU,EAAE;QACxB,MAAM,IAAI,CAAC1B,OAAO,EAAE;;MAEtB,OAAO,IAAI;IACb,CAAC;EAMH;EAnDE2B,IAAIA,CAAA;IACF,IAAI,CAACtB,GAAG,GAAG,IAAI,CAACuB,eAAe,EAAE;EACnC;EA6CA;EACAF,UAAUA,CAAA;IACR,OAAO,IAAI,CAACrB,GAAG,CAACqB,UAAU,EAAE;EAC9B;CACD;AAxDCG,UAAA,EAAC1C,MAAM,CAACI,uBAAuB,CAAC,E,0FAA6C;AAI7EsC,UAAA,EAACxC,aAAa,EAAE,E,6JAGf;AATUS,gBAAgB,GAAA+B,UAAA,EAJ5BzC,UAAU,CAAC;EACV0C,KAAK,EAAE;IAAEA,KAAK,EAAExC,eAAe;IAAEyC,KAAK,EAAErC,WAAW,CAACC,OAAO,CAACqC;EAAE;CAC/D;AACD,c,EACalC,gBAAgB,CA0D5B;SA1DYA,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}