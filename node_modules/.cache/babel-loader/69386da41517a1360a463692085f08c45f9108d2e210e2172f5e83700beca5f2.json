{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { DOM } from \"../util/dom\";\n/**\n * A generic class to create handlers for drag events, from both mouse and touch events.\n */\nexport class DragHandler {\n  constructor(options) {\n    // Event handlers that may be assigned by the implementations of this class\n    _defineProperty(this, \"contextmenu\", void 0);\n    _defineProperty(this, \"mousedown\", void 0);\n    _defineProperty(this, \"mousemoveWindow\", void 0);\n    _defineProperty(this, \"mouseup\", void 0);\n    _defineProperty(this, \"touchstart\", void 0);\n    _defineProperty(this, \"touchmoveWindow\", void 0);\n    _defineProperty(this, \"touchend\", void 0);\n    _defineProperty(this, \"_clickTolerance\", void 0);\n    _defineProperty(this, \"_moveFunction\", void 0);\n    _defineProperty(this, \"_activateOnStart\", void 0);\n    _defineProperty(this, \"_active\", void 0);\n    _defineProperty(this, \"_enabled\", void 0);\n    _defineProperty(this, \"_moved\", void 0);\n    _defineProperty(this, \"_lastPoint\", void 0);\n    _defineProperty(this, \"_moveStateManager\", void 0);\n    this._enabled = !!options.enable;\n    this._moveStateManager = options.moveStateManager;\n    this._clickTolerance = options.clickTolerance || 1;\n    this._moveFunction = options.move;\n    this._activateOnStart = !!options.activateOnStart;\n    options.assignEvents(this);\n    this.reset();\n  }\n  reset(e) {\n    this._active = false;\n    this._moved = false;\n    delete this._lastPoint;\n    this._moveStateManager.endMove(e);\n  }\n  _move(...params) {\n    const move = this._moveFunction(...params);\n    if (move.bearingDelta || move.pitchDelta || move.around || move.panDelta) {\n      this._active = true;\n      return move;\n    }\n  }\n  dragStart(e, point) {\n    if (!this.isEnabled() || this._lastPoint) return;\n    if (!this._moveStateManager.isValidStartEvent(e)) return;\n    this._moveStateManager.startMove(e);\n    this._lastPoint = point['length'] ? point[0] : point;\n    if (this._activateOnStart && this._lastPoint) this._active = true;\n  }\n  dragMove(e, point) {\n    if (!this.isEnabled()) return;\n    const lastPoint = this._lastPoint;\n    if (!lastPoint) return;\n    e.preventDefault();\n    if (!this._moveStateManager.isValidMoveEvent(e)) {\n      this.reset(e);\n      return;\n    }\n    const movePoint = point['length'] ? point[0] : point;\n    if (!this._moved && movePoint.dist(lastPoint) < this._clickTolerance) return;\n    this._moved = true;\n    this._lastPoint = movePoint;\n    return this._move(lastPoint, movePoint);\n  }\n  dragEnd(e) {\n    if (!this.isEnabled() || !this._lastPoint) return;\n    if (!this._moveStateManager.isValidEndEvent(e)) return;\n    if (this._moved) DOM.suppressClick();\n    this.reset(e);\n  }\n  enable() {\n    this._enabled = true;\n  }\n  disable() {\n    this._enabled = false;\n    this.reset();\n  }\n  isEnabled() {\n    return this._enabled;\n  }\n  isActive() {\n    return this._active;\n  }\n  getClickTolerance() {\n    return this._clickTolerance;\n  }\n}","map":{"version":3,"names":["_defineProperty","DOM","DragHandler","constructor","options","_enabled","enable","_moveStateManager","moveStateManager","_clickTolerance","clickTolerance","_moveFunction","move","_activateOnStart","activateOnStart","assignEvents","reset","e","_active","_moved","_lastPoint","endMove","_move","params","bearingDelta","pitchDelta","around","panDelta","dragStart","point","isEnabled","isValidStartEvent","startMove","dragMove","lastPoint","preventDefault","isValidMoveEvent","movePoint","dist","dragEnd","isValidEndEvent","suppressClick","disable","isActive","getClickTolerance"],"sources":["/Users/bhanudahiya/Desktop/ledger-IQ/node_modules/@antv/l7-map/es/map/handler/drag_handler.js"],"sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { DOM } from \"../util/dom\";\n/**\n * A generic class to create handlers for drag events, from both mouse and touch events.\n */\nexport class DragHandler {\n  constructor(options) {\n    // Event handlers that may be assigned by the implementations of this class\n    _defineProperty(this, \"contextmenu\", void 0);\n    _defineProperty(this, \"mousedown\", void 0);\n    _defineProperty(this, \"mousemoveWindow\", void 0);\n    _defineProperty(this, \"mouseup\", void 0);\n    _defineProperty(this, \"touchstart\", void 0);\n    _defineProperty(this, \"touchmoveWindow\", void 0);\n    _defineProperty(this, \"touchend\", void 0);\n    _defineProperty(this, \"_clickTolerance\", void 0);\n    _defineProperty(this, \"_moveFunction\", void 0);\n    _defineProperty(this, \"_activateOnStart\", void 0);\n    _defineProperty(this, \"_active\", void 0);\n    _defineProperty(this, \"_enabled\", void 0);\n    _defineProperty(this, \"_moved\", void 0);\n    _defineProperty(this, \"_lastPoint\", void 0);\n    _defineProperty(this, \"_moveStateManager\", void 0);\n    this._enabled = !!options.enable;\n    this._moveStateManager = options.moveStateManager;\n    this._clickTolerance = options.clickTolerance || 1;\n    this._moveFunction = options.move;\n    this._activateOnStart = !!options.activateOnStart;\n    options.assignEvents(this);\n    this.reset();\n  }\n  reset(e) {\n    this._active = false;\n    this._moved = false;\n    delete this._lastPoint;\n    this._moveStateManager.endMove(e);\n  }\n  _move(...params) {\n    const move = this._moveFunction(...params);\n    if (move.bearingDelta || move.pitchDelta || move.around || move.panDelta) {\n      this._active = true;\n      return move;\n    }\n  }\n  dragStart(e, point) {\n    if (!this.isEnabled() || this._lastPoint) return;\n    if (!this._moveStateManager.isValidStartEvent(e)) return;\n    this._moveStateManager.startMove(e);\n    this._lastPoint = point['length'] ? point[0] : point;\n    if (this._activateOnStart && this._lastPoint) this._active = true;\n  }\n  dragMove(e, point) {\n    if (!this.isEnabled()) return;\n    const lastPoint = this._lastPoint;\n    if (!lastPoint) return;\n    e.preventDefault();\n    if (!this._moveStateManager.isValidMoveEvent(e)) {\n      this.reset(e);\n      return;\n    }\n    const movePoint = point['length'] ? point[0] : point;\n    if (!this._moved && movePoint.dist(lastPoint) < this._clickTolerance) return;\n    this._moved = true;\n    this._lastPoint = movePoint;\n    return this._move(lastPoint, movePoint);\n  }\n  dragEnd(e) {\n    if (!this.isEnabled() || !this._lastPoint) return;\n    if (!this._moveStateManager.isValidEndEvent(e)) return;\n    if (this._moved) DOM.suppressClick();\n    this.reset(e);\n  }\n  enable() {\n    this._enabled = true;\n  }\n  disable() {\n    this._enabled = false;\n    this.reset();\n  }\n  isEnabled() {\n    return this._enabled;\n  }\n  isActive() {\n    return this._active;\n  }\n  getClickTolerance() {\n    return this._clickTolerance;\n  }\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}