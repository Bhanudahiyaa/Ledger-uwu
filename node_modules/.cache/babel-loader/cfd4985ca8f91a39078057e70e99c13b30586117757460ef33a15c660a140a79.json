{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { AttributeType, gl } from '@antv/l7-core';\nimport BaseModel from \"../../core/BaseModel\";\nimport { PolygonExtrudeTriangulation } from \"../../core/triangulation\";\n/* babel-plugin-inline-import '../shaders/extrusion/polygon_extrusion_frag.glsl' */\nconst polygonExtrudeFrag = \"\\nin vec4 v_Color;\\n#pragma include \\\"scene_uniforms\\\"\\n#pragma include \\\"picking\\\"\\nout vec4 outputColor;\\nvoid main() {\\n\\n  outputColor = v_Color;\\n  outputColor = filterColor(outputColor);\\n}\\n\";\n/* babel-plugin-inline-import '../shaders/extrusion/polygon_extrusion_vert.glsl' */\nconst polygonExtrudeVert = \"layout(location = ATTRIBUTE_LOCATION_POSITION) in vec3 a_Position;\\nlayout(location = ATTRIBUTE_LOCATION_POSITION_64LOW) in vec2 a_Position64Low;\\nlayout(location = ATTRIBUTE_LOCATION_COLOR) in vec4 a_Color;\\nlayout(location = ATTRIBUTE_LOCATION_SIZE) in float a_Size;\\nlayout(location = ATTRIBUTE_LOCATION_NORMAL) in vec3 a_Normal;\\n\\nout vec4 v_Color;\\n\\n#pragma include \\\"projection\\\"\\n#pragma include \\\"light\\\"\\n#pragma include \\\"picking\\\"\\n\\nvoid main() {\\n  vec4 pos = vec4(a_Position.xy, a_Position.z * a_Size + (1.0 - a_Position.z) * extrusionBase, 1.0);\\n\\n  vec4 project_pos = project_position(pos, a_Position64Low);\\n  float lightWeight = calc_lighting(project_pos);\\n  v_Color = a_Color;\\n  v_Color = vec4(v_Color.rgb * lightWeight, v_Color.w * opacity);\\n\\n  gl_Position = project_common_position_to_clipspace(vec4(project_pos.xyz, 1.0));\\n\\n  setPickingColor(a_PickingColor);\\n}\\n\";\nexport default class ExtrusionModel extends BaseModel {\n  constructor(...args) {\n    super(...args);\n    _defineProperty(this, \"texture\", void 0);\n  }\n  get attributeLocation() {\n    return Object.assign(super.attributeLocation, {\n      MAX: super.attributeLocation.MAX,\n      SIZE: 9,\n      NORMAL: 10,\n      EXTRUSION_BASE: 11\n    });\n  }\n  getUninforms() {\n    const commoninfo = this.getCommonUniformsInfo();\n    const attributeInfo = this.getUniformsBufferInfo(this.getStyleAttribute());\n    this.updateStyleUnifoms();\n    return _objectSpread(_objectSpread({}, commoninfo.uniformsOption), attributeInfo.uniformsOption);\n  }\n  getCommonUniformsInfo() {\n    const commonOptions = {};\n    const commonBufferInfo = this.getUniformsBufferInfo(commonOptions);\n    return commonBufferInfo;\n  }\n  initModels() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      return _this.buildModels();\n    })();\n  }\n  buildModels() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      const {\n        frag,\n        vert,\n        type\n      } = _this2.getShaders();\n      _this2.initUniformsBuffer();\n      const model = yield _this2.layer.buildLayerModel({\n        moduleName: type,\n        vertexShader: vert,\n        fragmentShader: frag,\n        defines: _this2.getDefines(),\n        inject: _this2.getInject(),\n        triangulation: PolygonExtrudeTriangulation,\n        depth: {\n          enable: true\n        }\n      });\n      return [model];\n    })();\n  }\n  getShaders() {\n    return {\n      frag: polygonExtrudeFrag,\n      vert: polygonExtrudeVert,\n      type: 'polygonExtrude'\n    };\n  }\n  clearModels() {\n    var _this$texture;\n    (_this$texture = this.texture) === null || _this$texture === void 0 || _this$texture.destroy();\n  }\n  registerBuiltinAttributes() {\n    // 注册 Position 属性 64 位地位部分，经纬度数据开启双精度，避免大于 22 层级以上出现数据偏移\n    this.registerPosition64LowAttribute();\n    this.styleAttributeService.registerStyleAttribute({\n      name: 'normal',\n      type: AttributeType.Attribute,\n      descriptor: {\n        name: 'a_Normal',\n        shaderLocation: this.attributeLocation.NORMAL,\n        buffer: {\n          // give the WebGL driver a hint that this buffer may change\n          usage: gl.STATIC_DRAW,\n          data: [],\n          type: gl.FLOAT\n        },\n        size: 3,\n        update: (feature, featureIdx, vertex, attributeIdx, normal) => {\n          return normal;\n        }\n      }\n    });\n    this.styleAttributeService.registerStyleAttribute({\n      name: 'size',\n      type: AttributeType.Attribute,\n      descriptor: {\n        name: 'a_Size',\n        shaderLocation: this.attributeLocation.SIZE,\n        buffer: {\n          usage: gl.DYNAMIC_DRAW,\n          data: [],\n          type: gl.FLOAT\n        },\n        size: 1,\n        update: feature => {\n          const {\n            size = 10\n          } = feature;\n          return Array.isArray(size) ? [size[0]] : [size];\n        }\n      }\n    });\n    this.styleAttributeService.registerStyleAttribute({\n      name: 'extrusionBase',\n      type: AttributeType.Attribute,\n      descriptor: {\n        name: 'a_ExtrusionBase',\n        shaderLocation: this.attributeLocation.EXTRUSION_BASE,\n        buffer: {\n          usage: gl.STATIC_DRAW,\n          data: [],\n          type: gl.FLOAT\n        },\n        size: 1,\n        update: feature => {\n          const {\n            extrusionBase: op = 0\n          } = feature;\n          return [op];\n        }\n      }\n    });\n  }\n}","map":{"version":3,"names":["_asyncToGenerator","_objectSpread","_defineProperty","AttributeType","gl","BaseModel","PolygonExtrudeTriangulation","polygonExtrudeFrag","polygonExtrudeVert","ExtrusionModel","constructor","args","attributeLocation","Object","assign","MAX","SIZE","NORMAL","EXTRUSION_BASE","getUninforms","commoninfo","getCommonUniformsInfo","attributeInfo","getUniformsBufferInfo","getStyleAttribute","updateStyleUnifoms","uniformsOption","commonOptions","commonBufferInfo","initModels","_this","buildModels","_this2","frag","vert","type","getShaders","initUniformsBuffer","model","layer","buildLayerModel","moduleName","vertexShader","fragmentShader","defines","getDefines","inject","getInject","triangulation","depth","enable","clearModels","_this$texture","texture","destroy","registerBuiltinAttributes","registerPosition64LowAttribute","styleAttributeService","registerStyleAttribute","name","Attribute","descriptor","shaderLocation","buffer","usage","STATIC_DRAW","data","FLOAT","size","update","feature","featureIdx","vertex","attributeIdx","normal","DYNAMIC_DRAW","Array","isArray","extrusionBase","op"],"sources":["/Users/bhanudahiya/Desktop/ledger-IQ/node_modules/@antv/l7-layers/es/polygon/models/extrusion.js"],"sourcesContent":["import _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { AttributeType, gl } from '@antv/l7-core';\nimport BaseModel from \"../../core/BaseModel\";\nimport { PolygonExtrudeTriangulation } from \"../../core/triangulation\";\n/* babel-plugin-inline-import '../shaders/extrusion/polygon_extrusion_frag.glsl' */\nconst polygonExtrudeFrag = \"\\nin vec4 v_Color;\\n#pragma include \\\"scene_uniforms\\\"\\n#pragma include \\\"picking\\\"\\nout vec4 outputColor;\\nvoid main() {\\n\\n  outputColor = v_Color;\\n  outputColor = filterColor(outputColor);\\n}\\n\";\n/* babel-plugin-inline-import '../shaders/extrusion/polygon_extrusion_vert.glsl' */\nconst polygonExtrudeVert = \"layout(location = ATTRIBUTE_LOCATION_POSITION) in vec3 a_Position;\\nlayout(location = ATTRIBUTE_LOCATION_POSITION_64LOW) in vec2 a_Position64Low;\\nlayout(location = ATTRIBUTE_LOCATION_COLOR) in vec4 a_Color;\\nlayout(location = ATTRIBUTE_LOCATION_SIZE) in float a_Size;\\nlayout(location = ATTRIBUTE_LOCATION_NORMAL) in vec3 a_Normal;\\n\\nout vec4 v_Color;\\n\\n#pragma include \\\"projection\\\"\\n#pragma include \\\"light\\\"\\n#pragma include \\\"picking\\\"\\n\\nvoid main() {\\n  vec4 pos = vec4(a_Position.xy, a_Position.z * a_Size + (1.0 - a_Position.z) * extrusionBase, 1.0);\\n\\n  vec4 project_pos = project_position(pos, a_Position64Low);\\n  float lightWeight = calc_lighting(project_pos);\\n  v_Color = a_Color;\\n  v_Color = vec4(v_Color.rgb * lightWeight, v_Color.w * opacity);\\n\\n  gl_Position = project_common_position_to_clipspace(vec4(project_pos.xyz, 1.0));\\n\\n  setPickingColor(a_PickingColor);\\n}\\n\";\nexport default class ExtrusionModel extends BaseModel {\n  constructor(...args) {\n    super(...args);\n    _defineProperty(this, \"texture\", void 0);\n  }\n  get attributeLocation() {\n    return Object.assign(super.attributeLocation, {\n      MAX: super.attributeLocation.MAX,\n      SIZE: 9,\n      NORMAL: 10,\n      EXTRUSION_BASE: 11\n    });\n  }\n  getUninforms() {\n    const commoninfo = this.getCommonUniformsInfo();\n    const attributeInfo = this.getUniformsBufferInfo(this.getStyleAttribute());\n    this.updateStyleUnifoms();\n    return _objectSpread(_objectSpread({}, commoninfo.uniformsOption), attributeInfo.uniformsOption);\n  }\n  getCommonUniformsInfo() {\n    const commonOptions = {};\n    const commonBufferInfo = this.getUniformsBufferInfo(commonOptions);\n    return commonBufferInfo;\n  }\n  initModels() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      return _this.buildModels();\n    })();\n  }\n  buildModels() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      const {\n        frag,\n        vert,\n        type\n      } = _this2.getShaders();\n      _this2.initUniformsBuffer();\n      const model = yield _this2.layer.buildLayerModel({\n        moduleName: type,\n        vertexShader: vert,\n        fragmentShader: frag,\n        defines: _this2.getDefines(),\n        inject: _this2.getInject(),\n        triangulation: PolygonExtrudeTriangulation,\n        depth: {\n          enable: true\n        }\n      });\n      return [model];\n    })();\n  }\n  getShaders() {\n    return {\n      frag: polygonExtrudeFrag,\n      vert: polygonExtrudeVert,\n      type: 'polygonExtrude'\n    };\n  }\n  clearModels() {\n    var _this$texture;\n    (_this$texture = this.texture) === null || _this$texture === void 0 || _this$texture.destroy();\n  }\n  registerBuiltinAttributes() {\n    // 注册 Position 属性 64 位地位部分，经纬度数据开启双精度，避免大于 22 层级以上出现数据偏移\n    this.registerPosition64LowAttribute();\n    this.styleAttributeService.registerStyleAttribute({\n      name: 'normal',\n      type: AttributeType.Attribute,\n      descriptor: {\n        name: 'a_Normal',\n        shaderLocation: this.attributeLocation.NORMAL,\n        buffer: {\n          // give the WebGL driver a hint that this buffer may change\n          usage: gl.STATIC_DRAW,\n          data: [],\n          type: gl.FLOAT\n        },\n        size: 3,\n        update: (feature, featureIdx, vertex, attributeIdx, normal) => {\n          return normal;\n        }\n      }\n    });\n    this.styleAttributeService.registerStyleAttribute({\n      name: 'size',\n      type: AttributeType.Attribute,\n      descriptor: {\n        name: 'a_Size',\n        shaderLocation: this.attributeLocation.SIZE,\n        buffer: {\n          usage: gl.DYNAMIC_DRAW,\n          data: [],\n          type: gl.FLOAT\n        },\n        size: 1,\n        update: feature => {\n          const {\n            size = 10\n          } = feature;\n          return Array.isArray(size) ? [size[0]] : [size];\n        }\n      }\n    });\n    this.styleAttributeService.registerStyleAttribute({\n      name: 'extrusionBase',\n      type: AttributeType.Attribute,\n      descriptor: {\n        name: 'a_ExtrusionBase',\n        shaderLocation: this.attributeLocation.EXTRUSION_BASE,\n        buffer: {\n          usage: gl.STATIC_DRAW,\n          data: [],\n          type: gl.FLOAT\n        },\n        size: 1,\n        update: feature => {\n          const {\n            extrusionBase: op = 0\n          } = feature;\n          return [op];\n        }\n      }\n    });\n  }\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}