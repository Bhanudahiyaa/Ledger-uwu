{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { DOM, lnglatDistance } from '@antv/l7-utils';\nimport { Control, PositionType } from \"./baseControl\";\nexport { Scale };\nexport default class Scale extends Control {\n  constructor(...args) {\n    super(...args);\n    _defineProperty(this, \"mScale\", void 0);\n    _defineProperty(this, \"iScale\", void 0);\n    _defineProperty(this, \"update\", () => {\n      const mapsService = this.mapsService;\n      const {\n        maxWidth\n      } = this.controlOption;\n      const y = mapsService.getSize()[1] / 2;\n      const p1 = mapsService.containerToLngLat([0, y]);\n      const p2 = mapsService.containerToLngLat([maxWidth, y]);\n      const maxMeters = lnglatDistance([p1.lng, p1.lat], [p2.lng, p2.lat]);\n      this.updateScales(maxMeters);\n    });\n  }\n  getDefault(option) {\n    return _objectSpread(_objectSpread({}, super.getDefault(option)), {}, {\n      name: 'scale',\n      position: PositionType.BOTTOMLEFT,\n      maxWidth: 100,\n      metric: true,\n      updateWhenIdle: false,\n      imperial: false,\n      lockWidth: true\n    });\n  }\n  onAdd() {\n    const className = 'l7-control-scale';\n    const container = DOM.create('div', className);\n    this.resetScaleLines(container);\n    const {\n      updateWhenIdle\n    } = this.controlOption;\n    this.mapsService.on(updateWhenIdle ? 'moveend' : 'mapmove', this.update);\n    this.mapsService.on(updateWhenIdle ? 'zoomend' : 'zoomchange', this.update);\n    return container;\n  }\n  onRemove() {\n    const {\n      updateWhenIdle\n    } = this.controlOption;\n    this.mapsService.off(updateWhenIdle ? 'zoomend' : 'zoomchange', this.update);\n    this.mapsService.off(updateWhenIdle ? 'moveend' : 'mapmove', this.update);\n  }\n  setOptions(newOption) {\n    super.setOptions(newOption);\n    if (this.checkUpdateOption(newOption, ['lockWidth', 'maxWidth', 'metric', 'updateWhenIdle', 'imperial'])) {\n      this.resetScaleLines(this.container);\n    }\n  }\n  updateScales(maxMeters) {\n    const {\n      metric,\n      imperial\n    } = this.controlOption;\n    if (metric && maxMeters) {\n      this.updateMetric(maxMeters);\n    }\n    if (imperial && maxMeters) {\n      this.updateImperial(maxMeters);\n    }\n  }\n  resetScaleLines(container) {\n    DOM.clearChildren(container);\n    const {\n      metric,\n      imperial,\n      maxWidth,\n      lockWidth\n    } = this.controlOption;\n    if (lockWidth) {\n      DOM.addStyle(container, `width: ${maxWidth}px`);\n    }\n    if (metric) {\n      this.mScale = DOM.create('div', 'l7-control-scale-line', container);\n    }\n    if (imperial) {\n      this.iScale = DOM.create('div', 'l7-control-scale-line', container);\n    }\n    this.update();\n  }\n  updateScale(scale, text, ratio) {\n    const {\n      maxWidth\n    } = this.controlOption;\n    scale.style.width = Math.round(maxWidth * ratio) + 'px';\n    scale.innerHTML = text;\n  }\n  getRoundNum(num) {\n    const pow10 = Math.pow(10, (Math.floor(num) + '').length - 1);\n    let d = num / pow10;\n    d = d >= 10 ? 10 : d >= 5 ? 5 : d >= 3 ? 3 : d >= 2 ? 2 : 1;\n    return pow10 * d;\n  }\n  updateMetric(maxMeters) {\n    const meters = this.getRoundNum(maxMeters);\n    const label = meters < 1000 ? meters + ' m' : meters / 1000 + ' km';\n    this.updateScale(this.mScale, label, meters / maxMeters);\n  }\n  updateImperial(maxMeters) {\n    const maxFeet = maxMeters * 3.2808399;\n    let maxMiles;\n    let miles;\n    let feet;\n    if (maxFeet > 5280) {\n      maxMiles = maxFeet / 5280;\n      miles = this.getRoundNum(maxMiles);\n      this.updateScale(this.iScale, miles + ' mi', miles / maxMiles);\n    } else {\n      feet = this.getRoundNum(maxFeet);\n      this.updateScale(this.iScale, feet + ' ft', feet / maxFeet);\n    }\n  }\n}","map":{"version":3,"names":["_objectSpread","_defineProperty","DOM","lnglatDistance","Control","PositionType","Scale","constructor","args","mapsService","maxWidth","controlOption","y","getSize","p1","containerToLngLat","p2","maxMeters","lng","lat","updateScales","getDefault","option","name","position","BOTTOMLEFT","metric","updateWhenIdle","imperial","lockWidth","onAdd","className","container","create","resetScaleLines","on","update","onRemove","off","setOptions","newOption","checkUpdateOption","updateMetric","updateImperial","clearChildren","addStyle","mScale","iScale","updateScale","scale","text","ratio","style","width","Math","round","innerHTML","getRoundNum","num","pow10","pow","floor","length","d","meters","label","maxFeet","maxMiles","miles","feet"],"sources":["/Users/bhanudahiya/Desktop/ledger-IQ/node_modules/@antv/l7-component/es/control/scale.js"],"sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { DOM, lnglatDistance } from '@antv/l7-utils';\nimport { Control, PositionType } from \"./baseControl\";\nexport { Scale };\nexport default class Scale extends Control {\n  constructor(...args) {\n    super(...args);\n    _defineProperty(this, \"mScale\", void 0);\n    _defineProperty(this, \"iScale\", void 0);\n    _defineProperty(this, \"update\", () => {\n      const mapsService = this.mapsService;\n      const {\n        maxWidth\n      } = this.controlOption;\n      const y = mapsService.getSize()[1] / 2;\n      const p1 = mapsService.containerToLngLat([0, y]);\n      const p2 = mapsService.containerToLngLat([maxWidth, y]);\n      const maxMeters = lnglatDistance([p1.lng, p1.lat], [p2.lng, p2.lat]);\n      this.updateScales(maxMeters);\n    });\n  }\n  getDefault(option) {\n    return _objectSpread(_objectSpread({}, super.getDefault(option)), {}, {\n      name: 'scale',\n      position: PositionType.BOTTOMLEFT,\n      maxWidth: 100,\n      metric: true,\n      updateWhenIdle: false,\n      imperial: false,\n      lockWidth: true\n    });\n  }\n  onAdd() {\n    const className = 'l7-control-scale';\n    const container = DOM.create('div', className);\n    this.resetScaleLines(container);\n    const {\n      updateWhenIdle\n    } = this.controlOption;\n    this.mapsService.on(updateWhenIdle ? 'moveend' : 'mapmove', this.update);\n    this.mapsService.on(updateWhenIdle ? 'zoomend' : 'zoomchange', this.update);\n    return container;\n  }\n  onRemove() {\n    const {\n      updateWhenIdle\n    } = this.controlOption;\n    this.mapsService.off(updateWhenIdle ? 'zoomend' : 'zoomchange', this.update);\n    this.mapsService.off(updateWhenIdle ? 'moveend' : 'mapmove', this.update);\n  }\n  setOptions(newOption) {\n    super.setOptions(newOption);\n    if (this.checkUpdateOption(newOption, ['lockWidth', 'maxWidth', 'metric', 'updateWhenIdle', 'imperial'])) {\n      this.resetScaleLines(this.container);\n    }\n  }\n  updateScales(maxMeters) {\n    const {\n      metric,\n      imperial\n    } = this.controlOption;\n    if (metric && maxMeters) {\n      this.updateMetric(maxMeters);\n    }\n    if (imperial && maxMeters) {\n      this.updateImperial(maxMeters);\n    }\n  }\n  resetScaleLines(container) {\n    DOM.clearChildren(container);\n    const {\n      metric,\n      imperial,\n      maxWidth,\n      lockWidth\n    } = this.controlOption;\n    if (lockWidth) {\n      DOM.addStyle(container, `width: ${maxWidth}px`);\n    }\n    if (metric) {\n      this.mScale = DOM.create('div', 'l7-control-scale-line', container);\n    }\n    if (imperial) {\n      this.iScale = DOM.create('div', 'l7-control-scale-line', container);\n    }\n    this.update();\n  }\n  updateScale(scale, text, ratio) {\n    const {\n      maxWidth\n    } = this.controlOption;\n    scale.style.width = Math.round(maxWidth * ratio) + 'px';\n    scale.innerHTML = text;\n  }\n  getRoundNum(num) {\n    const pow10 = Math.pow(10, (Math.floor(num) + '').length - 1);\n    let d = num / pow10;\n    d = d >= 10 ? 10 : d >= 5 ? 5 : d >= 3 ? 3 : d >= 2 ? 2 : 1;\n    return pow10 * d;\n  }\n  updateMetric(maxMeters) {\n    const meters = this.getRoundNum(maxMeters);\n    const label = meters < 1000 ? meters + ' m' : meters / 1000 + ' km';\n    this.updateScale(this.mScale, label, meters / maxMeters);\n  }\n  updateImperial(maxMeters) {\n    const maxFeet = maxMeters * 3.2808399;\n    let maxMiles;\n    let miles;\n    let feet;\n    if (maxFeet > 5280) {\n      maxMiles = maxFeet / 5280;\n      miles = this.getRoundNum(maxMiles);\n      this.updateScale(this.iScale, miles + ' mi', miles / maxMiles);\n    } else {\n      feet = this.getRoundNum(maxFeet);\n      this.updateScale(this.iScale, feet + ' ft', feet / maxFeet);\n    }\n  }\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}