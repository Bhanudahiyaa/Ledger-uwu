{"ast":null,"code":"var __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\nvar __async = (__this, __arguments, generator) => {\n  return new Promise((resolve, reject) => {\n    var fulfilled = value => {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var rejected = value => {\n      try {\n        step(generator.throw(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var step = x => x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);\n    step((generator = generator.apply(__this, __arguments)).next());\n  });\n};\n\n// src/source.ts\nimport { SyncHook } from \"@antv/async-hook\";\nimport { TilesetManager, bBoxToBounds, extent, lodashUtil, padBounds } from \"@antv/l7-utils\";\nimport { EventEmitter } from \"eventemitter3\";\nimport { getParser, getTransform } from \"./factory\";\nimport { cluster } from \"./transform/cluster\";\nimport { statMap } from \"./utils/statistics\";\nimport { getColumn } from \"./utils/util\";\nvar {\n  cloneDeep,\n  isFunction,\n  isString,\n  mergeWith\n} = lodashUtil;\nfunction mergeCustomizer(objValue, srcValue) {\n  if (Array.isArray(srcValue)) {\n    return srcValue;\n  }\n}\nvar Source = class extends EventEmitter {\n  constructor(data, cfg) {\n    super();\n    this.type = \"source\";\n    this.isTile = false;\n    this.inited = false;\n    // 生命周期钩子\n    this.hooks = {\n      init: new SyncHook()\n    };\n    this.parser = {\n      type: \"geojson\"\n    };\n    this.transforms = [];\n    this.cluster = false;\n    this.clusterOptions = {\n      enable: false,\n      radius: 40,\n      maxZoom: 20,\n      zoom: -99,\n      method: \"count\"\n    };\n    // 是否有效范围\n    this.invalidExtent = false;\n    this.dataArrayChanged = false;\n    this.cfg = {\n      autoRender: true\n    };\n    this.originData = data;\n    this.initCfg(cfg);\n    this.init().then(() => {\n      this.inited = true;\n      this.emit(\"update\", {\n        type: \"inited\"\n      });\n    });\n  }\n  getSourceCfg() {\n    return this.cfg;\n  }\n  getClusters(zoom) {\n    return this.clusterIndex.getClusters(this.caculClusterExtent(2), zoom);\n  }\n  getClustersLeaves(id) {\n    return this.clusterIndex.getLeaves(id, Infinity);\n  }\n  getParserType() {\n    return this.parser.type;\n  }\n  updateClusterData(zoom) {\n    const {\n      method = \"sum\",\n      field\n    } = this.clusterOptions;\n    let data = this.clusterIndex.getClusters(this.caculClusterExtent(2), Math.floor(zoom));\n    this.clusterOptions.zoom = zoom;\n    data.forEach(p => {\n      if (!p.id) {\n        p.properties.point_count = 1;\n      }\n    });\n    if (field || isFunction(method)) {\n      data = data.map(item => {\n        const id = item.id;\n        if (id) {\n          const points = this.clusterIndex.getLeaves(id, Infinity);\n          const properties = points.map(d => d.properties);\n          let statNum;\n          if (isString(method) && field) {\n            const column = getColumn(properties, field);\n            statNum = statMap[method](column);\n          }\n          if (isFunction(method)) {\n            statNum = method(properties);\n          }\n          item.properties.stat = statNum;\n        } else {\n          item.properties.point_count = 1;\n        }\n        return item;\n      });\n    }\n    this.data = getParser(\"geojson\")({\n      type: \"FeatureCollection\",\n      features: data\n    });\n    this.executeTrans();\n  }\n  getFeatureById(id) {\n    const {\n      type = \"geojson\",\n      geometry\n    } = this.parser;\n    if (type === \"geojson\" && !this.cluster) {\n      const feature = id < this.originData.features.length ? this.originData.features[id] : \"null\";\n      const newFeature = cloneDeep(feature);\n      if ((newFeature == null ? void 0 : newFeature.properties) && (this.transforms.length !== 0 || this.dataArrayChanged)) {\n        const item = this.data.dataArray.find(dataItem => {\n          return dataItem._id === id;\n        });\n        newFeature.properties = item;\n      }\n      return newFeature;\n    } else if (type === \"json\" && geometry) {\n      return this.data.dataArray.find(dataItem => dataItem._id === id);\n    } else {\n      return id < this.data.dataArray.length ? this.data.dataArray[id] : \"null\";\n    }\n  }\n  updateFeaturePropertiesById(id, properties) {\n    this.data.dataArray = this.data.dataArray.map(dataItem => {\n      if (dataItem._id === id) {\n        return __spreadValues(__spreadValues({}, dataItem), properties);\n      }\n      return dataItem;\n    });\n    this.dataArrayChanged = true;\n    this.emit(\"update\", {\n      type: \"update\"\n    });\n  }\n  getFeatureId(field, value) {\n    const feature = this.data.dataArray.find(dataItem => {\n      return dataItem[field] === value;\n    });\n    return feature == null ? void 0 : feature._id;\n  }\n  setData(data, options) {\n    this.originData = data;\n    this.dataArrayChanged = false;\n    this.initCfg(options);\n    this.init().then(() => {\n      this.emit(\"update\", {\n        type: \"update\"\n      });\n    });\n  }\n  reloadAllTile() {\n    var _a;\n    (_a = this.tileset) == null ? void 0 : _a.reloadAll();\n  }\n  reloadTilebyId(z, x, y) {\n    var _a;\n    (_a = this.tileset) == null ? void 0 : _a.reloadTileById(z, x, y);\n  }\n  reloadTileByLnglat(lng, lat, z) {\n    var _a;\n    (_a = this.tileset) == null ? void 0 : _a.reloadTileByLnglat(lng, lat, z);\n  }\n  getTileExtent(e, zoom) {\n    var _a;\n    return (_a = this.tileset) == null ? void 0 : _a.getTileExtent(e, zoom);\n  }\n  getTileByZXY(z, x, y) {\n    var _a;\n    return (_a = this.tileset) == null ? void 0 : _a.getTileByZXY(z, x, y);\n  }\n  reloadTileByExtent(bounds, z) {\n    var _a;\n    (_a = this.tileset) == null ? void 0 : _a.reloadTileByExtent(bounds, z);\n  }\n  destroy() {\n    var _a;\n    this.removeAllListeners();\n    this.originData = null;\n    this.clusterIndex = null;\n    this.data = null;\n    (_a = this.tileset) == null ? void 0 : _a.destroy();\n  }\n  processData() {\n    return __async(this, null, function* () {\n      return new Promise((resolve, reject) => {\n        try {\n          this.excuteParser();\n          this.initCluster();\n          this.executeTrans();\n          resolve({});\n        } catch (err) {\n          reject(err);\n        }\n      });\n    });\n  }\n  initCfg(option) {\n    this.cfg = mergeWith(this.cfg, option, mergeCustomizer);\n    const cfg = this.cfg;\n    if (cfg) {\n      if (cfg.parser) {\n        this.parser = cfg.parser;\n      }\n      if (cfg.transforms) {\n        this.transforms = cfg.transforms;\n      }\n      this.cluster = cfg.cluster || false;\n      if (cfg.clusterOptions) {\n        this.cluster = true;\n        this.clusterOptions = __spreadValues(__spreadValues({}, this.clusterOptions), cfg.clusterOptions);\n      }\n    }\n  }\n  init() {\n    return __async(this, null, function* () {\n      this.inited = false;\n      yield this.processData();\n      this.inited = true;\n    });\n  }\n  /**\n   * 数据解析\n   */\n  excuteParser() {\n    const parser = this.parser;\n    const type = parser.type || \"geojson\";\n    const sourceParser = getParser(type);\n    this.data = sourceParser(this.originData, parser);\n    this.tileset = this.initTileset();\n    if (parser.cancelExtent) {\n      return;\n    }\n    this.extent = extent(this.data.dataArray);\n    this.setCenter(this.extent);\n    this.invalidExtent = this.extent[0] === this.extent[2] || this.extent[1] === this.extent[3];\n  }\n  setCenter(bbox) {\n    this.center = [(bbox[0] + bbox[2]) / 2, (bbox[1] + bbox[3]) / 2];\n    if (isNaN(this.center[0]) || isNaN(this.center[1])) {\n      this.center = [108.92361111111111, 34.54083333333333];\n    }\n  }\n  /**\n   * 瓦片数据管理器\n   */\n  initTileset() {\n    const {\n      tilesetOptions\n    } = this.data;\n    if (!tilesetOptions) {\n      return;\n    }\n    this.isTile = true;\n    if (this.tileset) {\n      this.tileset.updateOptions(tilesetOptions);\n      return this.tileset;\n    }\n    const tileset = new TilesetManager(__spreadValues({}, tilesetOptions));\n    return tileset;\n  }\n  /**\n   * 数据统计\n   */\n  executeTrans() {\n    const trans = this.transforms;\n    trans.forEach(tran => {\n      const {\n        type\n      } = tran;\n      const data = getTransform(type)(this.data, tran);\n      Object.assign(this.data, data);\n    });\n  }\n  /**\n   * 数据聚合\n   */\n  initCluster() {\n    if (!this.cluster) {\n      return;\n    }\n    const clusterOptions = this.clusterOptions || {};\n    this.clusterIndex = cluster(this.data, clusterOptions);\n  }\n  caculClusterExtent(bufferRatio) {\n    let newBounds = [[-Infinity, -Infinity], [Infinity, Infinity]];\n    if (!this.invalidExtent) {\n      newBounds = padBounds(bBoxToBounds(this.extent), bufferRatio);\n    }\n    return newBounds[0].concat(newBounds[1]);\n  }\n};\nexport { Source as default };","map":{"version":3,"names":["__defProp","Object","defineProperty","__getOwnPropSymbols","getOwnPropertySymbols","__hasOwnProp","prototype","hasOwnProperty","__propIsEnum","propertyIsEnumerable","__defNormalProp","obj","key","value","enumerable","configurable","writable","__spreadValues","a","b","prop","call","__async","__this","__arguments","generator","Promise","resolve","reject","fulfilled","step","next","e","rejected","throw","x","done","then","apply","SyncHook","TilesetManager","bBoxToBounds","extent","lodashUtil","padBounds","EventEmitter","getParser","getTransform","cluster","statMap","getColumn","cloneDeep","isFunction","isString","mergeWith","mergeCustomizer","objValue","srcValue","Array","isArray","Source","constructor","data","cfg","type","isTile","inited","hooks","init","parser","transforms","clusterOptions","enable","radius","maxZoom","zoom","method","invalidExtent","dataArrayChanged","autoRender","originData","initCfg","emit","getSourceCfg","getClusters","clusterIndex","caculClusterExtent","getClustersLeaves","id","getLeaves","Infinity","getParserType","updateClusterData","field","Math","floor","forEach","p","properties","point_count","map","item","points","d","statNum","column","stat","features","executeTrans","getFeatureById","geometry","feature","length","newFeature","dataArray","find","dataItem","_id","updateFeaturePropertiesById","getFeatureId","setData","options","reloadAllTile","_a","tileset","reloadAll","reloadTilebyId","z","y","reloadTileById","reloadTileByLnglat","lng","lat","getTileExtent","getTileByZXY","reloadTileByExtent","bounds","destroy","removeAllListeners","processData","excuteParser","initCluster","err","option","sourceParser","initTileset","cancelExtent","setCenter","bbox","center","isNaN","tilesetOptions","updateOptions","trans","tran","assign","bufferRatio","newBounds","concat","default"],"sources":["/Users/bhanudahiya/Desktop/ledger-IQ/node_modules/@antv/l7-source/es/source.js"],"sourcesContent":["var __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __async = (__this, __arguments, generator) => {\n  return new Promise((resolve, reject) => {\n    var fulfilled = (value) => {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var rejected = (value) => {\n      try {\n        step(generator.throw(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var step = (x) => x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);\n    step((generator = generator.apply(__this, __arguments)).next());\n  });\n};\n\n// src/source.ts\nimport { SyncHook } from \"@antv/async-hook\";\nimport { TilesetManager, bBoxToBounds, extent, lodashUtil, padBounds } from \"@antv/l7-utils\";\nimport { EventEmitter } from \"eventemitter3\";\nimport { getParser, getTransform } from \"./factory\";\nimport { cluster } from \"./transform/cluster\";\nimport { statMap } from \"./utils/statistics\";\nimport { getColumn } from \"./utils/util\";\nvar { cloneDeep, isFunction, isString, mergeWith } = lodashUtil;\nfunction mergeCustomizer(objValue, srcValue) {\n  if (Array.isArray(srcValue)) {\n    return srcValue;\n  }\n}\nvar Source = class extends EventEmitter {\n  constructor(data, cfg) {\n    super();\n    this.type = \"source\";\n    this.isTile = false;\n    this.inited = false;\n    // 生命周期钩子\n    this.hooks = {\n      init: new SyncHook()\n    };\n    this.parser = { type: \"geojson\" };\n    this.transforms = [];\n    this.cluster = false;\n    this.clusterOptions = {\n      enable: false,\n      radius: 40,\n      maxZoom: 20,\n      zoom: -99,\n      method: \"count\"\n    };\n    // 是否有效范围\n    this.invalidExtent = false;\n    this.dataArrayChanged = false;\n    this.cfg = {\n      autoRender: true\n    };\n    this.originData = data;\n    this.initCfg(cfg);\n    this.init().then(() => {\n      this.inited = true;\n      this.emit(\"update\", {\n        type: \"inited\"\n      });\n    });\n  }\n  getSourceCfg() {\n    return this.cfg;\n  }\n  getClusters(zoom) {\n    return this.clusterIndex.getClusters(this.caculClusterExtent(2), zoom);\n  }\n  getClustersLeaves(id) {\n    return this.clusterIndex.getLeaves(id, Infinity);\n  }\n  getParserType() {\n    return this.parser.type;\n  }\n  updateClusterData(zoom) {\n    const { method = \"sum\", field } = this.clusterOptions;\n    let data = this.clusterIndex.getClusters(this.caculClusterExtent(2), Math.floor(zoom));\n    this.clusterOptions.zoom = zoom;\n    data.forEach((p) => {\n      if (!p.id) {\n        p.properties.point_count = 1;\n      }\n    });\n    if (field || isFunction(method)) {\n      data = data.map((item) => {\n        const id = item.id;\n        if (id) {\n          const points = this.clusterIndex.getLeaves(id, Infinity);\n          const properties = points.map((d) => d.properties);\n          let statNum;\n          if (isString(method) && field) {\n            const column = getColumn(properties, field);\n            statNum = statMap[method](column);\n          }\n          if (isFunction(method)) {\n            statNum = method(properties);\n          }\n          item.properties.stat = statNum;\n        } else {\n          item.properties.point_count = 1;\n        }\n        return item;\n      });\n    }\n    this.data = getParser(\"geojson\")({\n      type: \"FeatureCollection\",\n      features: data\n    });\n    this.executeTrans();\n  }\n  getFeatureById(id) {\n    const { type = \"geojson\", geometry } = this.parser;\n    if (type === \"geojson\" && !this.cluster) {\n      const feature = id < this.originData.features.length ? this.originData.features[id] : \"null\";\n      const newFeature = cloneDeep(feature);\n      if ((newFeature == null ? void 0 : newFeature.properties) && (this.transforms.length !== 0 || this.dataArrayChanged)) {\n        const item = this.data.dataArray.find((dataItem) => {\n          return dataItem._id === id;\n        });\n        newFeature.properties = item;\n      }\n      return newFeature;\n    } else if (type === \"json\" && geometry) {\n      return this.data.dataArray.find((dataItem) => dataItem._id === id);\n    } else {\n      return id < this.data.dataArray.length ? this.data.dataArray[id] : \"null\";\n    }\n  }\n  updateFeaturePropertiesById(id, properties) {\n    this.data.dataArray = this.data.dataArray.map((dataItem) => {\n      if (dataItem._id === id) {\n        return __spreadValues(__spreadValues({}, dataItem), properties);\n      }\n      return dataItem;\n    });\n    this.dataArrayChanged = true;\n    this.emit(\"update\", {\n      type: \"update\"\n    });\n  }\n  getFeatureId(field, value) {\n    const feature = this.data.dataArray.find((dataItem) => {\n      return dataItem[field] === value;\n    });\n    return feature == null ? void 0 : feature._id;\n  }\n  setData(data, options) {\n    this.originData = data;\n    this.dataArrayChanged = false;\n    this.initCfg(options);\n    this.init().then(() => {\n      this.emit(\"update\", {\n        type: \"update\"\n      });\n    });\n  }\n  reloadAllTile() {\n    var _a;\n    (_a = this.tileset) == null ? void 0 : _a.reloadAll();\n  }\n  reloadTilebyId(z, x, y) {\n    var _a;\n    (_a = this.tileset) == null ? void 0 : _a.reloadTileById(z, x, y);\n  }\n  reloadTileByLnglat(lng, lat, z) {\n    var _a;\n    (_a = this.tileset) == null ? void 0 : _a.reloadTileByLnglat(lng, lat, z);\n  }\n  getTileExtent(e, zoom) {\n    var _a;\n    return (_a = this.tileset) == null ? void 0 : _a.getTileExtent(e, zoom);\n  }\n  getTileByZXY(z, x, y) {\n    var _a;\n    return (_a = this.tileset) == null ? void 0 : _a.getTileByZXY(z, x, y);\n  }\n  reloadTileByExtent(bounds, z) {\n    var _a;\n    (_a = this.tileset) == null ? void 0 : _a.reloadTileByExtent(bounds, z);\n  }\n  destroy() {\n    var _a;\n    this.removeAllListeners();\n    this.originData = null;\n    this.clusterIndex = null;\n    this.data = null;\n    (_a = this.tileset) == null ? void 0 : _a.destroy();\n  }\n  processData() {\n    return __async(this, null, function* () {\n      return new Promise((resolve, reject) => {\n        try {\n          this.excuteParser();\n          this.initCluster();\n          this.executeTrans();\n          resolve({});\n        } catch (err) {\n          reject(err);\n        }\n      });\n    });\n  }\n  initCfg(option) {\n    this.cfg = mergeWith(this.cfg, option, mergeCustomizer);\n    const cfg = this.cfg;\n    if (cfg) {\n      if (cfg.parser) {\n        this.parser = cfg.parser;\n      }\n      if (cfg.transforms) {\n        this.transforms = cfg.transforms;\n      }\n      this.cluster = cfg.cluster || false;\n      if (cfg.clusterOptions) {\n        this.cluster = true;\n        this.clusterOptions = __spreadValues(__spreadValues({}, this.clusterOptions), cfg.clusterOptions);\n      }\n    }\n  }\n  init() {\n    return __async(this, null, function* () {\n      this.inited = false;\n      yield this.processData();\n      this.inited = true;\n    });\n  }\n  /**\n   * 数据解析\n   */\n  excuteParser() {\n    const parser = this.parser;\n    const type = parser.type || \"geojson\";\n    const sourceParser = getParser(type);\n    this.data = sourceParser(this.originData, parser);\n    this.tileset = this.initTileset();\n    if (parser.cancelExtent) {\n      return;\n    }\n    this.extent = extent(this.data.dataArray);\n    this.setCenter(this.extent);\n    this.invalidExtent = this.extent[0] === this.extent[2] || this.extent[1] === this.extent[3];\n  }\n  setCenter(bbox) {\n    this.center = [(bbox[0] + bbox[2]) / 2, (bbox[1] + bbox[3]) / 2];\n    if (isNaN(this.center[0]) || isNaN(this.center[1])) {\n      this.center = [108.92361111111111, 34.54083333333333];\n    }\n  }\n  /**\n   * 瓦片数据管理器\n   */\n  initTileset() {\n    const { tilesetOptions } = this.data;\n    if (!tilesetOptions) {\n      return;\n    }\n    this.isTile = true;\n    if (this.tileset) {\n      this.tileset.updateOptions(tilesetOptions);\n      return this.tileset;\n    }\n    const tileset = new TilesetManager(__spreadValues({}, tilesetOptions));\n    return tileset;\n  }\n  /**\n   * 数据统计\n   */\n  executeTrans() {\n    const trans = this.transforms;\n    trans.forEach((tran) => {\n      const { type } = tran;\n      const data = getTransform(type)(this.data, tran);\n      Object.assign(this.data, data);\n    });\n  }\n  /**\n   * 数据聚合\n   */\n  initCluster() {\n    if (!this.cluster) {\n      return;\n    }\n    const clusterOptions = this.clusterOptions || {};\n    this.clusterIndex = cluster(this.data, clusterOptions);\n  }\n  caculClusterExtent(bufferRatio) {\n    let newBounds = [\n      [-Infinity, -Infinity],\n      [Infinity, Infinity]\n    ];\n    if (!this.invalidExtent) {\n      newBounds = padBounds(bBoxToBounds(this.extent), bufferRatio);\n    }\n    return newBounds[0].concat(newBounds[1]);\n  }\n};\nexport {\n  Source as default\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}