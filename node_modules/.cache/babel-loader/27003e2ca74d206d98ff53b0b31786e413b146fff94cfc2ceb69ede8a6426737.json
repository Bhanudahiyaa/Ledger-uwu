{"ast":null,"code":"export function round(num, precision = 0) {\n  return Number.isInteger(num) ? num : +num.toFixed(precision);\n}\nexport function random(min, max) {\n  let mmin;\n  let mmax;\n  if (max == null) {\n    mmax = min == null ? 1 : min;\n    mmin = 0;\n  } else {\n    mmax = max;\n    mmin = min == null ? 0 : min;\n  }\n  if (mmax < mmin) {\n    const temp = mmin;\n    mmin = mmax;\n    mmax = temp;\n  }\n  return Math.floor(Math.random() * (mmax - mmin + 1) + mmin);\n}\nexport function clamp(value, min, max) {\n  if (Number.isNaN(value)) {\n    return NaN;\n  }\n  if (Number.isNaN(min) || Number.isNaN(max)) {\n    return 0;\n  }\n  return min < max ? value < min ? min : value > max ? max : value : value < max ? max : value > min ? min : value;\n}\nexport function snapToGrid(value, gridSize) {\n  return gridSize * Math.round(value / gridSize);\n}\nexport function containsPoint(rect, point) {\n  return point != null && rect != null && point.x >= rect.x && point.x <= rect.x + rect.width && point.y >= rect.y && point.y <= rect.y + rect.height;\n}\nexport function squaredLength(p1, p2) {\n  const dx = p1.x - p2.x;\n  const dy = p1.y - p2.y;\n  return dx * dx + dy * dy;\n}","map":{"version":3,"names":["round","num","precision","Number","isInteger","toFixed","random","min","max","mmin","mmax","temp","Math","floor","clamp","value","isNaN","NaN","snapToGrid","gridSize","containsPoint","rect","point","x","width","y","height","squaredLength","p1","p2","dx","dy"],"sources":["/Users/bhanudahiya/Desktop/ledger-IQ/node_modules/@antv/x6/src/geometry/util.ts"],"sourcesContent":["import { Point } from './point'\nimport { Rectangle } from './rectangle'\n\nexport function round(num: number, precision = 0) {\n  return Number.isInteger(num) ? num : +num.toFixed(precision)\n}\n\nexport function random(): number\nexport function random(max: number): number\nexport function random(min: number, max: number): number\nexport function random(min?: number, max?: number): number {\n  let mmin\n  let mmax\n\n  if (max == null) {\n    mmax = min == null ? 1 : min\n    mmin = 0\n  } else {\n    mmax = max\n    mmin = min == null ? 0 : min\n  }\n\n  if (mmax < mmin) {\n    const temp = mmin\n    mmin = mmax\n    mmax = temp\n  }\n\n  return Math.floor(Math.random() * (mmax - mmin + 1) + mmin)\n}\n\nexport function clamp(value: number, min: number, max: number) {\n  if (Number.isNaN(value)) {\n    return NaN\n  }\n\n  if (Number.isNaN(min) || Number.isNaN(max)) {\n    return 0\n  }\n\n  return min < max\n    ? value < min\n      ? min\n      : value > max\n      ? max\n      : value\n    : value < max\n    ? max\n    : value > min\n    ? min\n    : value\n}\n\nexport function snapToGrid(value: number, gridSize: number) {\n  return gridSize * Math.round(value / gridSize)\n}\n\nexport function containsPoint(\n  rect: Rectangle.RectangleLike,\n  point: Point.PointLike,\n) {\n  return (\n    point != null &&\n    rect != null &&\n    point.x >= rect.x &&\n    point.x <= rect.x + rect.width &&\n    point.y >= rect.y &&\n    point.y <= rect.y + rect.height\n  )\n}\n\nexport function squaredLength(p1: Point.PointLike, p2: Point.PointLike) {\n  const dx = p1.x - p2.x\n  const dy = p1.y - p2.y\n  return dx * dx + dy * dy\n}\n"],"mappings":"AAGA,OAAM,SAAUA,KAAKA,CAACC,GAAW,EAAEC,SAAS,GAAG,CAAC;EAC9C,OAAOC,MAAM,CAACC,SAAS,CAACH,GAAG,CAAC,GAAGA,GAAG,GAAG,CAACA,GAAG,CAACI,OAAO,CAACH,SAAS,CAAC;AAC9D;AAKA,OAAM,SAAUI,MAAMA,CAACC,GAAY,EAAEC,GAAY;EAC/C,IAAIC,IAAI;EACR,IAAIC,IAAI;EAER,IAAIF,GAAG,IAAI,IAAI,EAAE;IACfE,IAAI,GAAGH,GAAG,IAAI,IAAI,GAAG,CAAC,GAAGA,GAAG;IAC5BE,IAAI,GAAG,CAAC;GACT,MAAM;IACLC,IAAI,GAAGF,GAAG;IACVC,IAAI,GAAGF,GAAG,IAAI,IAAI,GAAG,CAAC,GAAGA,GAAG;;EAG9B,IAAIG,IAAI,GAAGD,IAAI,EAAE;IACf,MAAME,IAAI,GAAGF,IAAI;IACjBA,IAAI,GAAGC,IAAI;IACXA,IAAI,GAAGC,IAAI;;EAGb,OAAOC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACN,MAAM,EAAE,IAAII,IAAI,GAAGD,IAAI,GAAG,CAAC,CAAC,GAAGA,IAAI,CAAC;AAC7D;AAEA,OAAM,SAAUK,KAAKA,CAACC,KAAa,EAAER,GAAW,EAAEC,GAAW;EAC3D,IAAIL,MAAM,CAACa,KAAK,CAACD,KAAK,CAAC,EAAE;IACvB,OAAOE,GAAG;;EAGZ,IAAId,MAAM,CAACa,KAAK,CAACT,GAAG,CAAC,IAAIJ,MAAM,CAACa,KAAK,CAACR,GAAG,CAAC,EAAE;IAC1C,OAAO,CAAC;;EAGV,OAAOD,GAAG,GAAGC,GAAG,GACZO,KAAK,GAAGR,GAAG,GACTA,GAAG,GACHQ,KAAK,GAAGP,GAAG,GACXA,GAAG,GACHO,KAAK,GACPA,KAAK,GAAGP,GAAG,GACXA,GAAG,GACHO,KAAK,GAAGR,GAAG,GACXA,GAAG,GACHQ,KAAK;AACX;AAEA,OAAM,SAAUG,UAAUA,CAACH,KAAa,EAAEI,QAAgB;EACxD,OAAOA,QAAQ,GAAGP,IAAI,CAACZ,KAAK,CAACe,KAAK,GAAGI,QAAQ,CAAC;AAChD;AAEA,OAAM,SAAUC,aAAaA,CAC3BC,IAA6B,EAC7BC,KAAsB;EAEtB,OACEA,KAAK,IAAI,IAAI,IACbD,IAAI,IAAI,IAAI,IACZC,KAAK,CAACC,CAAC,IAAIF,IAAI,CAACE,CAAC,IACjBD,KAAK,CAACC,CAAC,IAAIF,IAAI,CAACE,CAAC,GAAGF,IAAI,CAACG,KAAK,IAC9BF,KAAK,CAACG,CAAC,IAAIJ,IAAI,CAACI,CAAC,IACjBH,KAAK,CAACG,CAAC,IAAIJ,IAAI,CAACI,CAAC,GAAGJ,IAAI,CAACK,MAAM;AAEnC;AAEA,OAAM,SAAUC,aAAaA,CAACC,EAAmB,EAAEC,EAAmB;EACpE,MAAMC,EAAE,GAAGF,EAAE,CAACL,CAAC,GAAGM,EAAE,CAACN,CAAC;EACtB,MAAMQ,EAAE,GAAGH,EAAE,CAACH,CAAC,GAAGI,EAAE,CAACJ,CAAC;EACtB,OAAOK,EAAE,GAAGA,EAAE,GAAGC,EAAE,GAAGA,EAAE;AAC1B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}