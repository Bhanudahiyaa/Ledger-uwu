{"ast":null,"code":"import util from './util';\nconst addBorderSegments = g => {\n  var _a;\n  const dfs = v => {\n    const children = g.children(v);\n    const node = g.node(v);\n    if (children === null || children === void 0 ? void 0 : children.length) {\n      children.forEach(child => dfs(child));\n    }\n    if (node.hasOwnProperty('minRank')) {\n      node.borderLeft = [];\n      node.borderRight = [];\n      for (let rank = node.minRank, maxRank = node.maxRank + 1; rank < maxRank; ++rank) {\n        addBorderNode(g, \"borderLeft\", \"_bl\", v, node, rank);\n        addBorderNode(g, \"borderRight\", \"_br\", v, node, rank);\n      }\n    }\n  };\n  (_a = g.children()) === null || _a === void 0 ? void 0 : _a.forEach(child => dfs(child));\n};\nconst addBorderNode = (g, prop, prefix, sg, sgNode, rank) => {\n  const label = {\n    rank,\n    width: 0,\n    height: 0,\n    borderType: prop\n  };\n  const prev = sgNode[prop][rank - 1];\n  const curr = util.addDummyNode(g, \"border\", label, prefix);\n  sgNode[prop][rank] = curr;\n  g.setParent(curr, sg);\n  if (prev) {\n    g.setEdge(prev, curr, {\n      weight: 1\n    });\n  }\n};\nexport default addBorderSegments;","map":{"version":3,"names":["util","addBorderSegments","g","dfs","v","children","node","length","forEach","child","hasOwnProperty","borderLeft","borderRight","rank","minRank","maxRank","addBorderNode","_a","prop","prefix","sg","sgNode","label","width","height","borderType","prev","curr","addDummyNode","setParent","setEdge","weight"],"sources":["../../../../src/layout/dagre/src/add-border-segments.ts"],"sourcesContent":[null],"mappings":"AACA,OAAOA,IAAI,MAAM,QAAQ;AAIzB,MAAMC,iBAAiB,GAAIC,CAAQ,IAAI;;EACrC,MAAMC,GAAG,GAAIC,CAAS,IAAI;IACxB,MAAMC,QAAQ,GAAGH,CAAC,CAACG,QAAQ,CAACD,CAAC,CAAC;IAC9B,MAAME,IAAI,GAAQJ,CAAC,CAACI,IAAI,CAACF,CAAC,CAAC;IAC3B,IAAIC,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEE,MAAM,EAAE;MACpBF,QAAQ,CAACG,OAAO,CAAEC,KAAK,IAAKN,GAAG,CAACM,KAAK,CAAC,CAAC;;IAGzC,IAAIH,IAAI,CAACI,cAAc,CAAC,SAAS,CAAC,EAAE;MAClCJ,IAAI,CAACK,UAAU,GAAG,EAAE;MACpBL,IAAI,CAACM,WAAW,GAAG,EAAE;MACrB,KAAK,IAAIC,IAAI,GAAGP,IAAI,CAACQ,OAAO,EAAEC,OAAO,GAAGT,IAAI,CAACS,OAAO,GAAG,CAAC,EACtDF,IAAI,GAAGE,OAAO,EACd,EAAEF,IAAI,EAAE;QACRG,aAAa,CAACd,CAAC,EAAE,YAAY,EAAE,KAAK,EAAEE,CAAC,EAAEE,IAAI,EAAEO,IAAI,CAAC;QACpDG,aAAa,CAACd,CAAC,EAAE,aAAa,EAAE,KAAK,EAAEE,CAAC,EAAEE,IAAI,EAAEO,IAAI,CAAC;;;EAG3D,CAAC;EAED,CAAAI,EAAA,GAAAf,CAAC,CAACG,QAAQ,EAAE,cAAAY,EAAA,uBAAAA,EAAA,CAAET,OAAO,CAAEC,KAAK,IAAKN,GAAG,CAACM,KAAK,CAAC,CAAC;AAC9C,CAAC;AAED,MAAMO,aAAa,GAAGA,CAACd,CAAQ,EAAEgB,IAAY,EAAEC,MAAc,EAAEC,EAAU,EAAEC,MAAW,EAAER,IAAY,KAAI;EACtG,MAAMS,KAAK,GAAG;IAAET,IAAI;IAAEU,KAAK,EAAE,CAAC;IAAEC,MAAM,EAAE,CAAC;IAAEC,UAAU,EAAEP;EAAI,CAAE;EAC7D,MAAMQ,IAAI,GAAGL,MAAM,CAACH,IAAI,CAAC,CAACL,IAAI,GAAG,CAAC,CAAC;EACnC,MAAMc,IAAI,GAAG3B,IAAI,CAAC4B,YAAY,CAAC1B,CAAC,EAAE,QAAQ,EAAEoB,KAAK,EAAEH,MAAM,CAAC;EAC1DE,MAAM,CAACH,IAAI,CAAC,CAACL,IAAI,CAAC,GAAGc,IAAI;EACzBzB,CAAC,CAAC2B,SAAS,CAACF,IAAI,EAAEP,EAAE,CAAC;EACrB,IAAIM,IAAI,EAAE;IACRxB,CAAC,CAAC4B,OAAO,CAACJ,IAAI,EAAEC,IAAI,EAAE;MAAEI,MAAM,EAAE;IAAC,CAAE,CAAC;;AAExC,CAAC;AAED,eAAe9B,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}