{"ast":null,"code":"import { __rest } from \"tslib\";\nimport { Source } from '@antv/l7';\nimport { Map } from '../map';\nimport { deepAssign } from '../../utils';\nimport { TextLayer } from '../../layers/text-layer';\nimport { PlotType } from '../../types';\nimport { MappingSource } from '../../adaptor/source';\nimport { isEqual } from '@antv/util';\nimport { getTheme } from '../../theme';\nconst DEFAULT_OPTIONS = {\n  autoFit: false\n};\nexport class Plot extends Map {\n  constructor(container, options) {\n    if (typeof container === 'string' || container instanceof Element) {\n      if (options === undefined) {\n        throw new Error('options is undefined');\n      }\n      super(options);\n      this.container = this.createContainer(container);\n      this.theme = this.createTheme();\n      this.scene = this.createScene();\n      this.registerResources();\n      this.initSource();\n    } else {\n      super(container);\n    }\n  }\n  /**\n   * 初始化数据\n   */\n  initSource() {\n    this.source = this.createSource();\n    this.render();\n    this.inited = true;\n  }\n  /**\n   * 初始化图层事件\n   */\n  initLayersEvent() {\n    //\n  }\n  /**\n   * 获取默认配置\n   */\n  getDefaultOptions() {\n    return Plot.DefaultOptions;\n  }\n  /**\n   * 创建 source 实例\n   */\n  createSource() {\n    const _a = this.options.source,\n      {\n        data,\n        aggregation\n      } = _a,\n      sourceCFG = __rest(_a, [\"data\", \"aggregation\"]);\n    aggregation && MappingSource.aggregation(sourceCFG, aggregation);\n    const source = new Source(data, sourceCFG);\n    return source;\n  }\n  /**\n   * 创建数据标签图层\n   */\n  createLabelLayer(source, label, plotLayerConfig) {\n    const {\n      visible,\n      minZoom,\n      maxZoom,\n      zIndex = 0\n    } = plotLayerConfig || {};\n    const textLayer = new TextLayer(Object.assign({\n      name: 'labelLayer',\n      visible,\n      minZoom,\n      maxZoom,\n      zIndex: zIndex + 0.1,\n      source\n    }, label));\n    return textLayer;\n  }\n  /**\n   * 更新数据标签图层\n   */\n  updateLabelLayer(source, label, plotLayerConfig, labelLayer) {\n    if (label) {\n      if (labelLayer) {\n        labelLayer.update(Object.assign({}, label));\n      } else {\n        labelLayer = this.createLabelLayer(source, label, plotLayerConfig);\n        this.layerGroup.addLayer(labelLayer);\n      }\n    } else if (label === false) {\n      labelLayer && this.layerGroup.removeLayer(labelLayer);\n    }\n  }\n  /**\n   * 渲染\n   */\n  render() {\n    const layerGroup = this.createLayers(this.source);\n    if (this.inited) {\n      this.layerGroup.removeAllLayer();\n      layerGroup.addTo(this.scene);\n      this.layerGroup = layerGroup;\n      // this.scene.render();\n    } else {\n      this.layerGroup = layerGroup;\n      if (this.scene['sceneService'].loaded) {\n        this.onSceneLoaded();\n      } else {\n        this.scene.once('loaded', () => {\n          this.onSceneLoaded();\n        });\n      }\n    }\n    this.initLayersEvent();\n  }\n  /**\n   * scene 加载成功回调\n   */\n  onSceneLoaded() {\n    this.sceneLoaded = true;\n    if (this.layerGroup.isEmpty()) {\n      this.onLayersLoaded();\n    } else {\n      this.layerGroup.once('inited-all', () => {\n        this.onLayersLoaded();\n      });\n    }\n    this.layerGroup.addTo(this.scene);\n  }\n  /**\n   * 图层加载成功回调\n   */\n  onLayersLoaded() {\n    this.layersLoaded = true;\n    this.initComponents();\n    this.loaded = true;\n    this.emit('loaded');\n  }\n  /**\n   * 挂载到容器\n   * 用于高级图表 L7Plot 挂载单个图表示例\n   */\n  attachToScene(scene, theme) {\n    this.scene = scene;\n    this.theme = theme ? theme : getTheme('default');\n    this.registerResources();\n    this.initSource();\n  }\n  /**\n   * 取消挂载到容器上的 scene\n   * 用于高级图表 L7Plot 挂载单个图表示例\n   */\n  unattachFromScene() {\n    var _a;\n    this.removeAllLayer();\n    (_a = this.tooltip) === null || _a === void 0 ? void 0 : _a.destroy();\n  }\n  /**\n   * 添加到容器\n   * 用于 L7 Scene 与图表混合使用场景\n   */\n  addToScene(scene) {\n    this.attachToScene(scene);\n  }\n  /**\n   * 从容器上移除\n   * 用于 L7 Scene 与图表混合使用场景\n   */\n  removeFromScene() {\n    var _a;\n    this.removeAllLayer();\n    this.removeScaleControl();\n    this.removeZoomControl();\n    this.removeLayerMenuControl();\n    this.removeLegendControl();\n    (_a = this.tooltip) === null || _a === void 0 ? void 0 : _a.destroy();\n  }\n  /**\n   * 更新: 更新配置且重新渲染\n   */\n  update(options) {\n    this.updateOption(options);\n    if (options.map && !isEqual(this.lastOptions.map, this.options.map)) {\n      this.updateMap(options.map);\n    }\n    this.scene.setEnableRender(false);\n    if (options.source && !isEqual(this.lastOptions.source, this.options.source)) {\n      const _a = options.source,\n        {\n          data\n        } = _a,\n        sourceConfig = __rest(_a, [\"data\"]);\n      this.changeData(data, sourceConfig);\n    }\n    // this.updateLayers(options);\n    this.scene.setEnableRender(true);\n    this.render();\n    this.updateComponents();\n    this.emit('update');\n  }\n  /**\n   * 更新: 更新数据\n   */\n  changeData(data, cfg) {\n    this.options.source = deepAssign({}, this.options.source, Object.assign({\n      data\n    }, cfg));\n    const _a = this.options.source,\n      {\n        aggregation\n      } = _a,\n      sourceCFG = __rest(_a, [\"aggregation\"]);\n    aggregation && MappingSource.aggregation(sourceCFG, aggregation);\n    this.source.setData(this.options.source.data, sourceCFG);\n    // 更新 legend\n    // TODO: 数据更新后，图层尚未执行更新，后续加图层 update 事件来解决\n    const legend = this.options.legend;\n    if (legend) {\n      setTimeout(() => {\n        this.updateLegendControl(legend);\n      }, 500);\n    }\n    this.emit('change-data');\n  }\n}\n/**\n * 默认的 options 配置项\n */\nPlot.DefaultOptions = DEFAULT_OPTIONS;\n/**\n * 地图图表类型\n */\nPlot.PlotType = PlotType;","map":{"version":3,"names":["Source","Map","deepAssign","TextLayer","PlotType","MappingSource","isEqual","getTheme","DEFAULT_OPTIONS","autoFit","Plot","constructor","container","options","Element","undefined","Error","createContainer","theme","createTheme","scene","createScene","registerResources","initSource","source","createSource","render","inited","initLayersEvent","getDefaultOptions","DefaultOptions","_a","data","aggregation","sourceCFG","__rest","createLabelLayer","label","plotLayerConfig","visible","minZoom","maxZoom","zIndex","textLayer","Object","assign","name","updateLabelLayer","labelLayer","update","layerGroup","addLayer","removeLayer","createLayers","removeAllLayer","addTo","loaded","onSceneLoaded","once","sceneLoaded","isEmpty","onLayersLoaded","layersLoaded","initComponents","emit","attachToScene","unattachFromScene","tooltip","destroy","addToScene","removeFromScene","removeScaleControl","removeZoomControl","removeLayerMenuControl","removeLegendControl","updateOption","map","lastOptions","updateMap","setEnableRender","sourceConfig","changeData","updateComponents","cfg","setData","legend","setTimeout","updateLegendControl"],"sources":["../../../../src/core/plot/index.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}