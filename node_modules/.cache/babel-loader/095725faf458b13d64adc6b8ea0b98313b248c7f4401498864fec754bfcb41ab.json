{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { AttributeType, gl } from '@antv/l7-core';\nimport BaseModel from \"../../core/BaseModel\";\nimport { PointImageTriangulation } from \"../../core/triangulation\";\n/* babel-plugin-inline-import '../shaders/image/image_frag.glsl' */\nconst pointImageFrag = \"layout(std140) uniform commonUniforms {\\n  vec2 u_textSize;\\n  float u_raisingHeight;\\n  float u_heightfixed;\\n};\\n\\nuniform sampler2D u_texture;\\n\\nin vec4 v_color;\\nin vec2 v_uv;\\nin float v_opacity;\\n\\n#pragma include \\\"picking\\\"\\n\\nout vec4 outputColor;\\n\\nvoid main(){\\n  vec2 pos = v_uv / u_textSize + gl_PointCoord / u_textSize * 64.;\\n  vec4 textureColor;\\n\\n  // Y = 0.299R + 0.587G + 0.114B // \\u4EAE\\u5EA6\\u63D0\\u53D6\\n  \\n  textureColor = texture(SAMPLER_2D(u_texture), pos);\\n\\n  // Tip: \\u53BB\\u9664\\u8FB9\\u7F18\\u90E8\\u5206 mipmap \\u5BFC\\u81F4\\u7684\\u6DF7\\u5408\\u53D8\\u6697\\n  float fragmengTocenter = distance(vec2(0.5), gl_PointCoord);\\n  if(fragmengTocenter >= 0.5) {\\n        float luma = 0.299 * textureColor.r + 0.587 * textureColor.g + 0.114 * textureColor.b;\\n        textureColor.a *= luma;\\n  }\\n  \\n  if(all(lessThan(v_color, vec4(1.0+0.00001))) && all(greaterThan(v_color, vec4(1.0-0.00001))) || v_color==vec4(1.0)){\\n        outputColor= textureColor;\\n  }else {\\n        outputColor= step(0.01, textureColor.z) * v_color;\\n  }\\n  outputColor.a *= v_opacity;\\n  if (outputColor.a < 0.01) {\\n      discard;\\n  }\\n  outputColor = filterColor(outputColor);\\n}\\n\";\n/* babel-plugin-inline-import '../shaders/image/image_vert.glsl' */\nconst pointImageVert = \"layout(location = ATTRIBUTE_LOCATION_POSITION) in vec3 a_Position;\\nlayout(location = ATTRIBUTE_LOCATION_POSITION_64LOW) in vec2 a_Position64Low;\\nlayout(location = ATTRIBUTE_LOCATION_COLOR) in vec4 a_Color;\\nlayout(location = ATTRIBUTE_LOCATION_SIZE) in float a_Size;\\nlayout(location = ATTRIBUTE_LOCATION_UV) in vec2 a_Uv;\\n\\nlayout(std140) uniform commonUniforms {\\n  vec2 u_textSize;\\n  float u_raisingHeight;\\n  float u_heightfixed;\\n};\\n\\nout vec4 v_color;\\nout vec2 v_uv;\\nout float v_opacity;\\n\\n#pragma include \\\"projection\\\"\\n#pragma include \\\"picking\\\"\\n\\nvoid main() {\\n  // cal style mapping - \\u6570\\u636E\\u7EB9\\u7406\\u6620\\u5C04\\u90E8\\u5206\\u7684\\u8BA1\\u7B97\\n  v_color = a_Color;\\n  v_opacity = opacity;\\n  v_uv = a_Uv;\\n  vec4 project_pos = project_position(vec4(a_Position, 1.0), a_Position64Low);\\n\\n  vec2 offset = project_pixel(offsets);\\n\\n  float raisingHeight = u_raisingHeight;\\n  if (u_heightfixed < 1.0) {\\n    // false\\n    raisingHeight = project_pixel(u_raisingHeight);\\n  } else {\\n    if (\\n      u_CoordinateSystem == COORDINATE_SYSTEM_LNGLAT ||\\n      u_CoordinateSystem == COORDINATE_SYSTEM_LNGLAT_OFFSET\\n    ) {\\n      float mapboxZoomScale = 4.0 / pow(2.0, 21.0 - u_Zoom);\\n      raisingHeight = u_raisingHeight * mapboxZoomScale;\\n    }\\n  }\\n\\n  gl_Position = project_common_position_to_clipspace(vec4(project_pos.xy + offset, raisingHeight, 1.0));\\n\\n  gl_PointSize = a_Size * 2.0 * u_DevicePixelRatio;\\n  setPickingColor(a_PickingColor);\\n}\\n\";\nexport default class ImageModel extends BaseModel {\n  constructor(...args) {\n    super(...args);\n    _defineProperty(this, \"texture\", void 0);\n    _defineProperty(this, \"updateTexture\", () => {\n      const {\n        createTexture2D\n      } = this.rendererService;\n      if (this.texture) {\n        this.texture.update({\n          data: this.iconService.getCanvas(),\n          mag: 'linear',\n          min: 'linear mipmap nearest',\n          mipmap: true\n        });\n        // 更新完纹理后在更新的图层的时候需要更新所有的图层\n        // this.layer.layerModelNeedUpdate = true;\n        setTimeout(() => {\n          // 延迟渲染\n          this.layerService.throttleRenderLayers();\n        });\n        return;\n      }\n      this.texture = createTexture2D({\n        data: this.iconService.getCanvas(),\n        mag: gl.LINEAR,\n        min: gl.LINEAR_MIPMAP_LINEAR,\n        premultiplyAlpha: false,\n        width: 1024,\n        height: this.iconService.canvasHeight || 128,\n        mipmap: true\n      });\n    });\n  }\n  get attributeLocation() {\n    return Object.assign(super.attributeLocation, {\n      MAX: super.attributeLocation.MAX,\n      SIZE: 9,\n      UV: 10\n    });\n  }\n  getUninforms() {\n    // ThreeJS 图层兼容\n    if (this.rendererService.getDirty()) {\n      var _this$texture;\n      (_this$texture = this.texture) === null || _this$texture === void 0 || _this$texture.bind();\n    }\n    const commonInfo = this.getCommonUniformsInfo();\n    const attributeInfo = this.getUniformsBufferInfo(this.getStyleAttribute());\n    this.updateStyleUnifoms();\n    return _objectSpread(_objectSpread({}, commonInfo.uniformsOption), attributeInfo.uniformsOption);\n  }\n  getCommonUniformsInfo() {\n    const {\n      raisingHeight = 0,\n      heightfixed = false\n    } = this.layer.getLayerConfig();\n    const commonOptions = {\n      u_textSize: [1024, this.iconService.canvasHeight || 128],\n      u_raisingHeight: Number(raisingHeight),\n      u_heightfixed: Number(heightfixed),\n      u_texture: this.texture\n    };\n    this.textures = [this.texture];\n    const commonBufferInfo = this.getUniformsBufferInfo(commonOptions);\n    return commonBufferInfo;\n  }\n  initModels() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      _this.iconService.on('imageUpdate', _this.updateTexture);\n      _this.updateTexture();\n      return _this.buildModels();\n    })();\n  }\n  clearModels() {\n    var _this$texture2;\n    (_this$texture2 = this.texture) === null || _this$texture2 === void 0 || _this$texture2.destroy();\n    this.iconService.off('imageUpdate', this.updateTexture);\n  }\n  buildModels() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      _this2.initUniformsBuffer();\n      const model = yield _this2.layer.buildLayerModel({\n        moduleName: 'pointImage',\n        vertexShader: pointImageVert,\n        fragmentShader: pointImageFrag,\n        triangulation: PointImageTriangulation,\n        defines: _this2.getDefines(),\n        inject: _this2.getInject(),\n        depth: {\n          enable: false\n        },\n        primitive: gl.POINTS\n      });\n      return [model];\n    })();\n  }\n  registerBuiltinAttributes() {\n    // 注册 Position 属性 64 位地位部分，经纬度数据开启双精度，避免大于 20层级以上出现数据偏移\n    this.registerPosition64LowAttribute();\n\n    // point layer size;\n    this.styleAttributeService.registerStyleAttribute({\n      name: 'size',\n      type: AttributeType.Attribute,\n      descriptor: {\n        name: 'a_Size',\n        shaderLocation: this.attributeLocation.SIZE,\n        buffer: {\n          // give the WebGL driver a hint that this buffer may change\n          usage: gl.DYNAMIC_DRAW,\n          data: [],\n          type: gl.FLOAT\n        },\n        size: 1,\n        update: feature => {\n          const {\n            size = 5\n          } = feature;\n          return Array.isArray(size) ? [size[0]] : [size];\n        }\n      }\n    });\n\n    // point layer uv;\n    this.styleAttributeService.registerStyleAttribute({\n      name: 'uv',\n      type: AttributeType.Attribute,\n      descriptor: {\n        name: 'a_Uv',\n        shaderLocation: this.attributeLocation.UV,\n        buffer: {\n          // give the WebGL driver a hint that this buffer may change\n          usage: gl.DYNAMIC_DRAW,\n          data: [],\n          type: gl.FLOAT\n        },\n        size: 2,\n        update: feature => {\n          const iconMap = this.iconService.getIconMap();\n          const {\n            shape\n          } = feature;\n          const {\n            x,\n            y\n          } = iconMap[shape] || {\n            x: -64,\n            y: -64\n          }; // 非画布区域，默认的图标改为透明\n          return [x, y];\n        }\n      }\n    });\n  }\n}","map":{"version":3,"names":["_asyncToGenerator","_objectSpread","_defineProperty","AttributeType","gl","BaseModel","PointImageTriangulation","pointImageFrag","pointImageVert","ImageModel","constructor","args","createTexture2D","rendererService","texture","update","data","iconService","getCanvas","mag","min","mipmap","setTimeout","layerService","throttleRenderLayers","LINEAR","LINEAR_MIPMAP_LINEAR","premultiplyAlpha","width","height","canvasHeight","attributeLocation","Object","assign","MAX","SIZE","UV","getUninforms","getDirty","_this$texture","bind","commonInfo","getCommonUniformsInfo","attributeInfo","getUniformsBufferInfo","getStyleAttribute","updateStyleUnifoms","uniformsOption","raisingHeight","heightfixed","layer","getLayerConfig","commonOptions","u_textSize","u_raisingHeight","Number","u_heightfixed","u_texture","textures","commonBufferInfo","initModels","_this","on","updateTexture","buildModels","clearModels","_this$texture2","destroy","off","_this2","initUniformsBuffer","model","buildLayerModel","moduleName","vertexShader","fragmentShader","triangulation","defines","getDefines","inject","getInject","depth","enable","primitive","POINTS","registerBuiltinAttributes","registerPosition64LowAttribute","styleAttributeService","registerStyleAttribute","name","type","Attribute","descriptor","shaderLocation","buffer","usage","DYNAMIC_DRAW","FLOAT","size","feature","Array","isArray","iconMap","getIconMap","shape","x","y"],"sources":["/Users/bhanudahiya/Desktop/ledger-IQ/node_modules/@antv/l7-layers/es/point/models/image.js"],"sourcesContent":["import _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { AttributeType, gl } from '@antv/l7-core';\nimport BaseModel from \"../../core/BaseModel\";\nimport { PointImageTriangulation } from \"../../core/triangulation\";\n/* babel-plugin-inline-import '../shaders/image/image_frag.glsl' */\nconst pointImageFrag = \"layout(std140) uniform commonUniforms {\\n  vec2 u_textSize;\\n  float u_raisingHeight;\\n  float u_heightfixed;\\n};\\n\\nuniform sampler2D u_texture;\\n\\nin vec4 v_color;\\nin vec2 v_uv;\\nin float v_opacity;\\n\\n#pragma include \\\"picking\\\"\\n\\nout vec4 outputColor;\\n\\nvoid main(){\\n  vec2 pos = v_uv / u_textSize + gl_PointCoord / u_textSize * 64.;\\n  vec4 textureColor;\\n\\n  // Y = 0.299R + 0.587G + 0.114B // \\u4EAE\\u5EA6\\u63D0\\u53D6\\n  \\n  textureColor = texture(SAMPLER_2D(u_texture), pos);\\n\\n  // Tip: \\u53BB\\u9664\\u8FB9\\u7F18\\u90E8\\u5206 mipmap \\u5BFC\\u81F4\\u7684\\u6DF7\\u5408\\u53D8\\u6697\\n  float fragmengTocenter = distance(vec2(0.5), gl_PointCoord);\\n  if(fragmengTocenter >= 0.5) {\\n        float luma = 0.299 * textureColor.r + 0.587 * textureColor.g + 0.114 * textureColor.b;\\n        textureColor.a *= luma;\\n  }\\n  \\n  if(all(lessThan(v_color, vec4(1.0+0.00001))) && all(greaterThan(v_color, vec4(1.0-0.00001))) || v_color==vec4(1.0)){\\n        outputColor= textureColor;\\n  }else {\\n        outputColor= step(0.01, textureColor.z) * v_color;\\n  }\\n  outputColor.a *= v_opacity;\\n  if (outputColor.a < 0.01) {\\n      discard;\\n  }\\n  outputColor = filterColor(outputColor);\\n}\\n\";\n/* babel-plugin-inline-import '../shaders/image/image_vert.glsl' */\nconst pointImageVert = \"layout(location = ATTRIBUTE_LOCATION_POSITION) in vec3 a_Position;\\nlayout(location = ATTRIBUTE_LOCATION_POSITION_64LOW) in vec2 a_Position64Low;\\nlayout(location = ATTRIBUTE_LOCATION_COLOR) in vec4 a_Color;\\nlayout(location = ATTRIBUTE_LOCATION_SIZE) in float a_Size;\\nlayout(location = ATTRIBUTE_LOCATION_UV) in vec2 a_Uv;\\n\\nlayout(std140) uniform commonUniforms {\\n  vec2 u_textSize;\\n  float u_raisingHeight;\\n  float u_heightfixed;\\n};\\n\\nout vec4 v_color;\\nout vec2 v_uv;\\nout float v_opacity;\\n\\n#pragma include \\\"projection\\\"\\n#pragma include \\\"picking\\\"\\n\\nvoid main() {\\n  // cal style mapping - \\u6570\\u636E\\u7EB9\\u7406\\u6620\\u5C04\\u90E8\\u5206\\u7684\\u8BA1\\u7B97\\n  v_color = a_Color;\\n  v_opacity = opacity;\\n  v_uv = a_Uv;\\n  vec4 project_pos = project_position(vec4(a_Position, 1.0), a_Position64Low);\\n\\n  vec2 offset = project_pixel(offsets);\\n\\n  float raisingHeight = u_raisingHeight;\\n  if (u_heightfixed < 1.0) {\\n    // false\\n    raisingHeight = project_pixel(u_raisingHeight);\\n  } else {\\n    if (\\n      u_CoordinateSystem == COORDINATE_SYSTEM_LNGLAT ||\\n      u_CoordinateSystem == COORDINATE_SYSTEM_LNGLAT_OFFSET\\n    ) {\\n      float mapboxZoomScale = 4.0 / pow(2.0, 21.0 - u_Zoom);\\n      raisingHeight = u_raisingHeight * mapboxZoomScale;\\n    }\\n  }\\n\\n  gl_Position = project_common_position_to_clipspace(vec4(project_pos.xy + offset, raisingHeight, 1.0));\\n\\n  gl_PointSize = a_Size * 2.0 * u_DevicePixelRatio;\\n  setPickingColor(a_PickingColor);\\n}\\n\";\nexport default class ImageModel extends BaseModel {\n  constructor(...args) {\n    super(...args);\n    _defineProperty(this, \"texture\", void 0);\n    _defineProperty(this, \"updateTexture\", () => {\n      const {\n        createTexture2D\n      } = this.rendererService;\n      if (this.texture) {\n        this.texture.update({\n          data: this.iconService.getCanvas(),\n          mag: 'linear',\n          min: 'linear mipmap nearest',\n          mipmap: true\n        });\n        // 更新完纹理后在更新的图层的时候需要更新所有的图层\n        // this.layer.layerModelNeedUpdate = true;\n        setTimeout(() => {\n          // 延迟渲染\n          this.layerService.throttleRenderLayers();\n        });\n        return;\n      }\n      this.texture = createTexture2D({\n        data: this.iconService.getCanvas(),\n        mag: gl.LINEAR,\n        min: gl.LINEAR_MIPMAP_LINEAR,\n        premultiplyAlpha: false,\n        width: 1024,\n        height: this.iconService.canvasHeight || 128,\n        mipmap: true\n      });\n    });\n  }\n  get attributeLocation() {\n    return Object.assign(super.attributeLocation, {\n      MAX: super.attributeLocation.MAX,\n      SIZE: 9,\n      UV: 10\n    });\n  }\n  getUninforms() {\n    // ThreeJS 图层兼容\n    if (this.rendererService.getDirty()) {\n      var _this$texture;\n      (_this$texture = this.texture) === null || _this$texture === void 0 || _this$texture.bind();\n    }\n    const commonInfo = this.getCommonUniformsInfo();\n    const attributeInfo = this.getUniformsBufferInfo(this.getStyleAttribute());\n    this.updateStyleUnifoms();\n    return _objectSpread(_objectSpread({}, commonInfo.uniformsOption), attributeInfo.uniformsOption);\n  }\n  getCommonUniformsInfo() {\n    const {\n      raisingHeight = 0,\n      heightfixed = false\n    } = this.layer.getLayerConfig();\n    const commonOptions = {\n      u_textSize: [1024, this.iconService.canvasHeight || 128],\n      u_raisingHeight: Number(raisingHeight),\n      u_heightfixed: Number(heightfixed),\n      u_texture: this.texture\n    };\n    this.textures = [this.texture];\n    const commonBufferInfo = this.getUniformsBufferInfo(commonOptions);\n    return commonBufferInfo;\n  }\n  initModels() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      _this.iconService.on('imageUpdate', _this.updateTexture);\n      _this.updateTexture();\n      return _this.buildModels();\n    })();\n  }\n  clearModels() {\n    var _this$texture2;\n    (_this$texture2 = this.texture) === null || _this$texture2 === void 0 || _this$texture2.destroy();\n    this.iconService.off('imageUpdate', this.updateTexture);\n  }\n  buildModels() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      _this2.initUniformsBuffer();\n      const model = yield _this2.layer.buildLayerModel({\n        moduleName: 'pointImage',\n        vertexShader: pointImageVert,\n        fragmentShader: pointImageFrag,\n        triangulation: PointImageTriangulation,\n        defines: _this2.getDefines(),\n        inject: _this2.getInject(),\n        depth: {\n          enable: false\n        },\n        primitive: gl.POINTS\n      });\n      return [model];\n    })();\n  }\n  registerBuiltinAttributes() {\n    // 注册 Position 属性 64 位地位部分，经纬度数据开启双精度，避免大于 20层级以上出现数据偏移\n    this.registerPosition64LowAttribute();\n\n    // point layer size;\n    this.styleAttributeService.registerStyleAttribute({\n      name: 'size',\n      type: AttributeType.Attribute,\n      descriptor: {\n        name: 'a_Size',\n        shaderLocation: this.attributeLocation.SIZE,\n        buffer: {\n          // give the WebGL driver a hint that this buffer may change\n          usage: gl.DYNAMIC_DRAW,\n          data: [],\n          type: gl.FLOAT\n        },\n        size: 1,\n        update: feature => {\n          const {\n            size = 5\n          } = feature;\n          return Array.isArray(size) ? [size[0]] : [size];\n        }\n      }\n    });\n\n    // point layer uv;\n    this.styleAttributeService.registerStyleAttribute({\n      name: 'uv',\n      type: AttributeType.Attribute,\n      descriptor: {\n        name: 'a_Uv',\n        shaderLocation: this.attributeLocation.UV,\n        buffer: {\n          // give the WebGL driver a hint that this buffer may change\n          usage: gl.DYNAMIC_DRAW,\n          data: [],\n          type: gl.FLOAT\n        },\n        size: 2,\n        update: feature => {\n          const iconMap = this.iconService.getIconMap();\n          const {\n            shape\n          } = feature;\n          const {\n            x,\n            y\n          } = iconMap[shape] || {\n            x: -64,\n            y: -64\n          }; // 非画布区域，默认的图标改为透明\n          return [x, y];\n        }\n      }\n    });\n  }\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}