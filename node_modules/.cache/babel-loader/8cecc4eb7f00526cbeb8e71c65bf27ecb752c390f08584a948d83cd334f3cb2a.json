{"ast":null,"code":"var __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\nvar __async = (__this, __arguments, generator) => {\n  return new Promise((resolve, reject) => {\n    var fulfilled = value => {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var rejected = value => {\n      try {\n        step(generator.throw(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var step = x => x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);\n    step((generator = generator.apply(__this, __arguments)).next());\n  });\n};\n\n// src/utils/tile/getRasterData.ts\nimport { getArrayBuffer, makeXMLHttpRequestPromise } from \"@antv/l7-utils\";\nimport { processRasterData } from \"../bandOperation/bands\";\nimport { bindCancel, getTileBandParams } from \"./request\";\nvar getRasterFile = (tile, requestParameters, callback, rasterFormat, operation) => __async(void 0, null, function* () {\n  const tileBandParams = getTileBandParams(requestParameters.url);\n  if (tileBandParams.length > 1) {\n    const {\n      rasterFiles,\n      xhrList,\n      errList\n    } = yield getMultiArrayBuffer(tileBandParams, requestParameters);\n    bindCancel(tile, xhrList);\n    if (errList.length > 0) {\n      callback(errList, null);\n      return;\n    }\n    processRasterData(rasterFiles, rasterFormat, operation, callback);\n  } else {\n    const xhr = getArrayBuffer(requestParameters, (err, imgData) => {\n      if (err) {\n        callback(err);\n      } else if (imgData) {\n        const rasterFiles = [{\n          data: imgData,\n          bands: tileBandParams[0].bands\n        }];\n        processRasterData(rasterFiles, rasterFormat, operation, callback);\n      }\n    });\n    bindCancel(tile, [xhr]);\n  }\n});\nfunction getMultiArrayBuffer(tileBandParams, requestParameters) {\n  return __async(this, null, function* () {\n    const rasterFiles = [];\n    const xhrList = [];\n    const errList = [];\n    for (let i = 0; i < tileBandParams.length; i++) {\n      const tileBandParam = tileBandParams[i];\n      const params = __spreadProps(__spreadValues({}, requestParameters), {\n        url: tileBandParam.url\n      });\n      const bands = tileBandParam.bands;\n      const {\n        err,\n        data,\n        xhr\n      } = yield makeXMLHttpRequestPromise(__spreadProps(__spreadValues({}, params), {\n        type: \"arrayBuffer\"\n      }));\n      if (err) {\n        errList.push(err);\n      }\n      xhrList.push(xhr);\n      rasterFiles.push({\n        data,\n        bands\n      });\n    }\n    return {\n      rasterFiles,\n      xhrList,\n      errList\n    };\n  });\n}\nexport { getRasterFile };","map":{"version":3,"names":["__defProp","Object","defineProperty","__defProps","defineProperties","__getOwnPropDescs","getOwnPropertyDescriptors","__getOwnPropSymbols","getOwnPropertySymbols","__hasOwnProp","prototype","hasOwnProperty","__propIsEnum","propertyIsEnumerable","__defNormalProp","obj","key","value","enumerable","configurable","writable","__spreadValues","a","b","prop","call","__spreadProps","__async","__this","__arguments","generator","Promise","resolve","reject","fulfilled","step","next","e","rejected","throw","x","done","then","apply","getArrayBuffer","makeXMLHttpRequestPromise","processRasterData","bindCancel","getTileBandParams","getRasterFile","tile","requestParameters","callback","rasterFormat","operation","tileBandParams","url","length","rasterFiles","xhrList","errList","getMultiArrayBuffer","xhr","err","imgData","data","bands","i","tileBandParam","params","type","push"],"sources":["/Users/bhanudahiya/Desktop/ledger-IQ/node_modules/@antv/l7-source/es/utils/tile/getRasterData.js"],"sourcesContent":["var __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\nvar __async = (__this, __arguments, generator) => {\n  return new Promise((resolve, reject) => {\n    var fulfilled = (value) => {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var rejected = (value) => {\n      try {\n        step(generator.throw(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var step = (x) => x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);\n    step((generator = generator.apply(__this, __arguments)).next());\n  });\n};\n\n// src/utils/tile/getRasterData.ts\nimport { getArrayBuffer, makeXMLHttpRequestPromise } from \"@antv/l7-utils\";\nimport { processRasterData } from \"../bandOperation/bands\";\nimport { bindCancel, getTileBandParams } from \"./request\";\nvar getRasterFile = (tile, requestParameters, callback, rasterFormat, operation) => __async(void 0, null, function* () {\n  const tileBandParams = getTileBandParams(requestParameters.url);\n  if (tileBandParams.length > 1) {\n    const { rasterFiles, xhrList, errList } = yield getMultiArrayBuffer(\n      tileBandParams,\n      requestParameters\n    );\n    bindCancel(tile, xhrList);\n    if (errList.length > 0) {\n      callback(errList, null);\n      return;\n    }\n    processRasterData(rasterFiles, rasterFormat, operation, callback);\n  } else {\n    const xhr = getArrayBuffer(requestParameters, (err, imgData) => {\n      if (err) {\n        callback(err);\n      } else if (imgData) {\n        const rasterFiles = [\n          {\n            data: imgData,\n            bands: tileBandParams[0].bands\n          }\n        ];\n        processRasterData(rasterFiles, rasterFormat, operation, callback);\n      }\n    });\n    bindCancel(tile, [xhr]);\n  }\n});\nfunction getMultiArrayBuffer(tileBandParams, requestParameters) {\n  return __async(this, null, function* () {\n    const rasterFiles = [];\n    const xhrList = [];\n    const errList = [];\n    for (let i = 0; i < tileBandParams.length; i++) {\n      const tileBandParam = tileBandParams[i];\n      const params = __spreadProps(__spreadValues({}, requestParameters), {\n        url: tileBandParam.url\n      });\n      const bands = tileBandParam.bands;\n      const { err, data, xhr } = yield makeXMLHttpRequestPromise(__spreadProps(__spreadValues({}, params), {\n        type: \"arrayBuffer\"\n      }));\n      if (err) {\n        errList.push(err);\n      }\n      xhrList.push(xhr);\n      rasterFiles.push({\n        data,\n        bands\n      });\n    }\n    return { rasterFiles, xhrList, errList };\n  });\n}\nexport {\n  getRasterFile\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}