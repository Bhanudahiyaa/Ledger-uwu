{"ast":null,"code":"import { __awaiter, __decorate, __metadata } from \"tslib\";\nimport ReactDOM from 'react-dom';\nimport { Graph as X6Graph, Dom } from '@antv/x6';\nimport { DisposableCollection, Disposable } from '../../common/disposable';\nimport { Deferred } from '../../common/deferred';\nimport { IGraphOptionProvider } from './config';\nimport { singleton, inject, Syringe } from 'mana-syringe';\nimport { IGraphCommandService } from '../../command';\nimport { IModelService } from '../../model-service/interface';\nimport { IHookService } from '../../hooks';\nimport { getEdgeReactComponent } from '../../command-contributions/components/context';\nimport { XFLOW_DEFAULT_EDGE } from '../../constants';\n/** !!! 所有需要使用Graph相关信息的地方, 都统一使用IGraphProvider来获取 */\nexport const IGraphProvider = Symbol('IGraphProvider');\nexport const ICommandServiceProvider = Symbol('ICommandServiceProvider');\nexport const IModelServiceProvider = Symbol('IModelServiceProvider');\nlet GraphManager = class GraphManager {\n  constructor() {\n    /** 处理画布实例的销毁 */\n    this.toDispose = new DisposableCollection();\n    /** 储存画布实例 */\n    this.graphMap = new Map();\n    /** 获取X6 Graph 实例 */\n    this.getGraph = graphId => __awaiter(this, void 0, void 0, function* () {\n      let graphDefer = this.graphMap.get(graphId);\n      if (!graphDefer) {\n        graphDefer = new Deferred();\n        this.graphMap.set(graphId, graphDefer);\n        const options = yield this.optionProvider.getOptions();\n        /** 获取hooks实例： hooks方便其他组件可以修改注册graphOpions/events */\n        const hooks = this.hookService.hookProvider();\n        /** 执行hooks：获取graphOptions */\n        const mergedOptions = yield hooks.graphOptions.call(options.x6Options);\n        const {\n          graphContainer,\n          edgeRender,\n          nodeRender,\n          edgeTypeParser\n        } = options;\n        /** 执行hooks：获取edge label render */\n        const edgeRenderMap = yield hooks.reactEdgeLabelRender.call(edgeRender);\n        /** 执行hooks：更新nodeRender */\n        yield hooks.reactNodeRender.call(nodeRender);\n        const {\n          clientHeight,\n          clientWidth\n        } = graphContainer;\n        const commandService = yield this.commandServiceProvider.getCommandService();\n        const modelService = yield this.modelServiceProvider.getModelService();\n        /** 实例化 X6 Graph */\n        const graph = new X6Graph(Object.assign(Object.assign({\n          container: graphContainer,\n          width: clientWidth,\n          height: clientHeight\n        }, mergedOptions), {\n          /** X6提供了边渲染的钩子, 可以在这里设置边上需要渲染的React内容 */\n          onEdgeLabelRendered: args => {\n            const {\n              edge,\n              container\n            } = args;\n            this.renderEdgeReactLabel({\n              edge,\n              container,\n              edgeRenderMap,\n              edgeTypeParser,\n              modelService,\n              commandService\n            });\n          }\n        }));\n        /** 执行hooks：绑定事件执行api */\n        yield hooks.afterGraphInit.call({\n          graph,\n          commandService,\n          modelService,\n          options\n        });\n        graphDefer.resolve(graph);\n        graph.on('node:moved', ({\n          node\n        }) => {\n          const nodeData = node.getData();\n          const position = node.position();\n          node.setData(Object.assign(Object.assign({}, nodeData), {\n            x: position === null || position === void 0 ? void 0 : position.x,\n            y: position === null || position === void 0 ? void 0 : position.y\n          }));\n        });\n        graph.on('node:resized', ({\n          node\n        }) => {\n          const nodeData = node.getData();\n          const size = node.size();\n          node.setData(Object.assign(Object.assign({}, nodeData), {\n            width: size === null || size === void 0 ? void 0 : size.width,\n            height: size === null || size === void 0 ? void 0 : size.height\n          }));\n        });\n        this.toDispose.push(Disposable.create(() => __awaiter(this, void 0, void 0, function* () {\n          yield hooks.beforeGraphDestroy.call({\n            graph,\n            commandService,\n            modelService,\n            options\n          });\n          this.graphMap.delete(graphId);\n          graph.dispose();\n        })));\n      }\n      return graphDefer.promise;\n    });\n    this.renderEdgeReactLabel = args => __awaiter(this, void 0, void 0, function* () {\n      const {\n        container,\n        edgeTypeParser,\n        edge,\n        edgeRenderMap,\n        commandService,\n        modelService\n      } = args;\n      const renderKey = edgeTypeParser(edge === null || edge === void 0 ? void 0 : edge.data) || XFLOW_DEFAULT_EDGE;\n      const reactComponent = edgeRenderMap.get(renderKey);\n      if (!reactComponent) {\n        return;\n      }\n      if (edge && (edge === null || edge === void 0 ? void 0 : edge.data) && reactComponent) {\n        const content = this.edgeAppendForeignObject(edge, container);\n        const WrappedReactComponent = getEdgeReactComponent(reactComponent, commandService, modelService)(edge);\n        ReactDOM.render(WrappedReactComponent, content);\n      }\n    });\n  }\n  /** 实现在连线上渲染React节点 */\n  edgeAppendForeignObject(x6Edge, container) {\n    const fo = Dom.createSvgElement('foreignObject');\n    const body = Dom.createElementNS('body', Dom.ns.xhtml);\n    const content = Dom.createElementNS('div', Dom.ns.xhtml);\n    const edgeData = x6Edge === null || x6Edge === void 0 ? void 0 : x6Edge.data;\n    const foWidth = (edgeData === null || edgeData === void 0 ? void 0 : edgeData.edgeContentWidth) || 100;\n    const foHeight = (edgeData === null || edgeData === void 0 ? void 0 : edgeData.edgeContentHeight) || 30;\n    fo.setAttribute('width', `${foWidth}`);\n    fo.setAttribute('height', `${foHeight}`);\n    fo.setAttribute('x', `${-1.0 * foWidth / 2}`);\n    fo.setAttribute('y', `${-1.0 * foHeight / 2}`);\n    body.setAttribute('xhtmls', Dom.ns.xhtml);\n    body.style.width = '100%';\n    body.style.height = '100%';\n    body.style.padding = '0';\n    body.style.margin = '0';\n    body.style.background = 'unset';\n    body.style.overflow = 'visible';\n    body.className = 'xflow-edge-label-body';\n    content.style.width = '100%';\n    content.style.height = '100%';\n    body.appendChild(content);\n    fo.appendChild(body);\n    container.appendChild(fo);\n    return content;\n  }\n  dispose() {\n    this.toDispose.dispose();\n  }\n};\n__decorate([inject(IGraphOptionProvider), __metadata(\"design:type\", Object)], GraphManager.prototype, \"optionProvider\", void 0);\n__decorate([inject(IHookService), __metadata(\"design:type\", Object)], GraphManager.prototype, \"hookService\", void 0);\n__decorate([inject(ICommandServiceProvider), __metadata(\"design:type\", Object)], GraphManager.prototype, \"commandServiceProvider\", void 0);\n__decorate([inject(IModelServiceProvider), __metadata(\"design:type\", Object)], GraphManager.prototype, \"modelServiceProvider\", void 0);\nGraphManager = __decorate([singleton()], GraphManager);\nexport { GraphManager };\nexport const registerGraphModule = register => {\n  /** 注册GraphManager */\n  register(GraphManager);\n  register(IGraphProvider, {\n    lifecycle: Syringe.Lifecycle.singleton,\n    useDynamic: context => {\n      return {\n        getGraphInstance: () => __awaiter(void 0, void 0, void 0, function* () {\n          const graphManager = context.container.get(GraphManager);\n          const graphOptionProvider = context.container.get(IGraphOptionProvider);\n          const graphConfig = yield graphOptionProvider === null || graphOptionProvider === void 0 ? void 0 : graphOptionProvider.getOptions();\n          const x6Graph = yield graphManager === null || graphManager === void 0 ? void 0 : graphManager.getGraph(graphConfig.graphId);\n          return x6Graph;\n        }),\n        getGraphOptions: () => __awaiter(void 0, void 0, void 0, function* () {\n          const graphOptionProvider = context.container.get(IGraphOptionProvider);\n          return graphOptionProvider === null || graphOptionProvider === void 0 ? void 0 : graphOptionProvider.getOptions();\n        })\n      };\n    }\n  });\n  register(ICommandServiceProvider, {\n    lifecycle: Syringe.Lifecycle.singleton,\n    useDynamic: context => {\n      return {\n        getCommandService: () => __awaiter(void 0, void 0, void 0, function* () {\n          const commandService = context.container.get(IGraphCommandService);\n          return commandService;\n        })\n      };\n    }\n  });\n  register(IModelServiceProvider, {\n    lifecycle: Syringe.Lifecycle.singleton,\n    useDynamic: context => {\n      return {\n        getModelService: () => __awaiter(void 0, void 0, void 0, function* () {\n          const modelService = context.container.get(IModelService);\n          return modelService;\n        })\n      };\n    }\n  });\n};","map":{"version":3,"names":["ReactDOM","Graph","X6Graph","Dom","DisposableCollection","Disposable","Deferred","IGraphOptionProvider","singleton","inject","Syringe","IGraphCommandService","IModelService","IHookService","getEdgeReactComponent","XFLOW_DEFAULT_EDGE","IGraphProvider","Symbol","ICommandServiceProvider","IModelServiceProvider","GraphManager","constructor","toDispose","graphMap","Map","getGraph","graphId","__awaiter","graphDefer","get","set","options","optionProvider","getOptions","hooks","hookService","hookProvider","mergedOptions","graphOptions","call","x6Options","graphContainer","edgeRender","nodeRender","edgeTypeParser","edgeRenderMap","reactEdgeLabelRender","reactNodeRender","clientHeight","clientWidth","commandService","commandServiceProvider","getCommandService","modelService","modelServiceProvider","getModelService","graph","Object","assign","container","width","height","onEdgeLabelRendered","args","edge","renderEdgeReactLabel","afterGraphInit","resolve","on","node","nodeData","getData","position","setData","x","y","size","push","create","beforeGraphDestroy","delete","dispose","promise","renderKey","data","reactComponent","content","edgeAppendForeignObject","WrappedReactComponent","render","x6Edge","fo","createSvgElement","body","createElementNS","ns","xhtml","edgeData","foWidth","edgeContentWidth","foHeight","edgeContentHeight","setAttribute","style","padding","margin","background","overflow","className","appendChild","__decorate","registerGraphModule","register","lifecycle","Lifecycle","useDynamic","context","getGraphInstance","graphManager","graphOptionProvider","graphConfig","x6Graph","getGraphOptions"],"sources":["../../../src/xflow-main/graph/graph-provider.tsx"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}