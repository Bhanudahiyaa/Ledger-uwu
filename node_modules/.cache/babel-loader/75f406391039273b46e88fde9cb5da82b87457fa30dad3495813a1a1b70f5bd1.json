{"ast":null,"code":"import { Widget } from '../common';\nimport { Dom } from '../../util';\nimport { Angle, Point } from '../../geometry';\nexport class Knob extends Widget {\n  get node() {\n    return this.cell;\n  }\n  get metadata() {\n    const meta = this.cell.prop('knob');\n    if (Array.isArray(meta)) {\n      if (this.options.index != null) {\n        return meta[this.options.index];\n      }\n      return null;\n    }\n    return meta;\n  }\n  init(options) {\n    this.options = Object.assign({}, options);\n    this.render();\n    this.startListening();\n  }\n  startListening() {\n    this.delegateEvents({\n      mousedown: 'onMouseDown',\n      touchstart: 'onMouseDown'\n    });\n    this.model.on('*', this.update, this);\n    this.graph.on('scale', this.update, this);\n    this.graph.on('translate', this.update, this);\n    this.model.on('reseted', this.remove, this);\n    this.node.on('removed', this.remove, this);\n    this.view.on('node:resize:mousedown', this.onTransform, this);\n    this.view.on('node:rotate:mousedown', this.onTransform, this);\n    this.view.on('node:resize:mouseup', this.onTransformed, this);\n    this.view.on('node:rotate:mouseup', this.onTransformed, this);\n    this.view.on('cell:knob:mousedown', this.onKnobMouseDown, this);\n    this.view.on('cell:knob:mouseup', this.onKnobMouseUp, this);\n    super.startListening();\n  }\n  stopListening() {\n    this.undelegateEvents();\n    this.model.off('*', this.update, this);\n    this.graph.off('scale', this.update, this);\n    this.graph.off('translate', this.update, this);\n    this.model.off('reseted', this.remove, this);\n    this.node.off('removed', this.remove, this);\n    this.view.off('node:resize:mousedown', this.onTransform, this);\n    this.view.off('node:rotate:mousedown', this.onTransform, this);\n    this.view.off('node:resize:mouseup', this.onTransformed, this);\n    this.view.off('node:rotate:mouseup', this.onTransformed, this);\n    this.view.off('cell:knob:mousedown', this.onKnobMouseDown, this);\n    this.view.off('cell:knob:mouseup', this.onKnobMouseUp, this);\n    super.stopListening();\n  }\n  render() {\n    this.container = document.createElement('div');\n    Dom.addClass(this.container, this.prefixClassName('widget-knob'));\n    if (this.options.className) {\n      Dom.addClass(this.container, this.options.className);\n    }\n    this.view.addClass(Private.KNOB);\n    this.graph.container.appendChild(this.container);\n    this.update();\n    return this;\n  }\n  remove() {\n    this.view.removeClass(Private.KNOB);\n    return super.remove();\n  }\n  update() {\n    if (this.metadata) {\n      const {\n        update,\n        position\n      } = this.metadata;\n      const args = {\n        knob: this,\n        cell: this.cell,\n        node: this.node\n      };\n      if (position) {\n        const pos = position.call(this.graph, Object.assign({}, args));\n        if (pos) {\n          const ctm = this.graph.matrix();\n          const bbox = this.node.getBBox();\n          const angle = Angle.normalize(this.node.getAngle());\n          const local = Point.create(pos);\n          if (angle !== 0) {\n            local.rotate(-angle, {\n              x: bbox.width / 2,\n              y: bbox.height / 2\n            });\n          }\n          local.translate(bbox).scale(ctm.a, ctm.d).translate(ctm.e, ctm.f);\n          this.container.style.left = `${local.x}px`;\n          this.container.style.top = `${local.y}px`;\n        }\n      }\n      if (update) {\n        update.call(this.graph, Object.assign({}, args));\n      }\n    }\n  }\n  hide() {\n    this.container.style.display = 'none';\n  }\n  show() {\n    this.container.style.display = '';\n  }\n  onTransform() {\n    this.hide();\n  }\n  onTransformed() {\n    this.show();\n  }\n  onKnobMouseDown({\n    knob\n  }) {\n    if (this.cid !== knob.cid) {\n      this.hide();\n    }\n  }\n  onKnobMouseUp() {\n    this.show();\n  }\n  notify(name, evt) {\n    if (this.view) {\n      const e = this.view.normalizeEvent(evt);\n      const localPoint = this.graph.snapToGrid(e.clientX, e.clientY);\n      this.view.notify(`cell:${name}`, {\n        e,\n        view: this.view,\n        node: this.node,\n        cell: this.cell,\n        x: localPoint.x,\n        y: localPoint.y,\n        knob: this\n      });\n      if (this.cell.isNode()) {\n        this.view.notify(`node:${name}`, {\n          e,\n          view: this.view,\n          node: this.node,\n          cell: this.cell,\n          x: localPoint.x,\n          y: localPoint.y,\n          knob: this\n        });\n      } else if (this.cell.isEdge()) {\n        this.view.notify(`edge:${name}`, {\n          e,\n          view: this.view,\n          edge: this.cell,\n          cell: this.cell,\n          x: localPoint.x,\n          y: localPoint.y,\n          knob: this\n        });\n      }\n    }\n  }\n  onMouseDown(e) {\n    e.stopPropagation();\n    this.setEventData(e, {\n      knobbing: false,\n      originX: e.clientX,\n      originY: e.clientY,\n      clientX: e.clientX,\n      clientY: e.clientY\n    });\n    this.graph.view.undelegateEvents();\n    this.delegateDocumentEvents(Private.documentEvents, e.data);\n    if (this.metadata && this.metadata.onMouseDown) {\n      this.metadata.onMouseDown.call(this.graph, {\n        e,\n        data: this.getEventData(e),\n        knob: this,\n        cell: this.cell,\n        node: this.node\n      });\n    }\n    this.notify('knob:mousedown', e);\n  }\n  onMouseMove(e) {\n    const data = this.getEventData(e);\n    const view = this.graph.findViewByCell(this.node);\n    if (!data.knobbing) {\n      data.knobbing = true;\n      if (view) {\n        view.addClass(Private.KNOBBING);\n        this.notify('knob', e);\n      }\n      this.model.startBatch('knob', {\n        cid: this.cid\n      });\n    }\n    data.clientX = e.clientX;\n    data.clientY = e.clientY;\n    if (this.metadata && this.metadata.onMouseMove) {\n      const ctm = this.graph.matrix();\n      const dx = (e.clientX - data.originX) / ctm.a;\n      const dy = (e.clientY - data.originY) / ctm.d;\n      const angle = this.node.getAngle();\n      const delta = new Point(dx, dy).rotate(angle);\n      this.metadata.onMouseMove.call(this.graph, {\n        e,\n        data,\n        deltaX: delta.x,\n        deltaY: delta.y,\n        knob: this,\n        cell: this.cell,\n        node: this.node\n      });\n    }\n    this.notify('knobbing', e);\n    this.notify('knob:mousemove', e);\n  }\n  onMouseUp(e) {\n    this.undelegateDocumentEvents();\n    this.graph.view.delegateEvents();\n    const data = this.getEventData(e);\n    const view = this.graph.findViewByCell(this.node);\n    if (data.knobbing) {\n      if (view) {\n        view.removeClass(Private.KNOBBING);\n      }\n      if (this.metadata && this.metadata.onMouseUp) {\n        this.metadata.onMouseUp.call(this.graph, {\n          e,\n          data,\n          knob: this,\n          cell: this.cell,\n          node: this.node\n        });\n      }\n      this.model.stopBatch('knob', {\n        cid: this.cid\n      });\n      this.notify('knobbed', e);\n    }\n    this.notify('knob:mouseup', e);\n  }\n}\nvar Private;\n(function (Private) {\n  Private.KNOB = 'has-widget-knob';\n  Private.KNOBBING = 'node-knobbing';\n  Private.documentEvents = {\n    mousemove: 'onMouseMove',\n    touchmove: 'onMouseMove',\n    mouseup: 'onMouseUp',\n    touchend: 'onMouseUp'\n  };\n})(Private || (Private = {}));","map":{"version":3,"names":["Widget","Dom","Angle","Point","Knob","node","cell","metadata","meta","prop","Array","isArray","options","index","init","Object","assign","render","startListening","delegateEvents","mousedown","touchstart","model","on","update","graph","remove","view","onTransform","onTransformed","onKnobMouseDown","onKnobMouseUp","stopListening","undelegateEvents","off","container","document","createElement","addClass","prefixClassName","className","Private","KNOB","appendChild","removeClass","position","args","knob","pos","call","ctm","matrix","bbox","getBBox","angle","normalize","getAngle","local","create","rotate","x","width","y","height","translate","scale","a","d","e","f","style","left","top","hide","display","show","cid","notify","name","evt","normalizeEvent","localPoint","snapToGrid","clientX","clientY","isNode","isEdge","edge","onMouseDown","stopPropagation","setEventData","knobbing","originX","originY","delegateDocumentEvents","documentEvents","data","getEventData","onMouseMove","findViewByCell","KNOBBING","startBatch","dx","dy","delta","deltaX","deltaY","onMouseUp","undelegateDocumentEvents","stopBatch","mousemove","touchmove","mouseup","touchend"],"sources":["/Users/bhanudahiya/Desktop/ledger-IQ/node_modules/@antv/x6/src/addon/knob/index.ts"],"sourcesContent":["import { Widget } from '../common'\nimport { KeyValue } from '../../types'\nimport { Cell } from '../../model/cell'\nimport { Node } from '../../model/node'\nimport { Edge } from '../../model/edge'\nimport { NodeView } from '../../view/node'\nimport { EdgeView } from '../../view/edge'\nimport { Graph } from '../../graph/graph'\nimport { Dom } from '../../util'\nimport { Angle, Point } from '../../geometry'\n\nexport class Knob extends Widget<Knob.Options> {\n  public container: HTMLDivElement\n\n  protected get node() {\n    return this.cell as Node\n  }\n\n  protected get metadata() {\n    const meta = this.cell.prop('knob')\n    if (Array.isArray(meta)) {\n      if (this.options.index != null) {\n        return meta[this.options.index]\n      }\n      return null\n    }\n    return meta as Knob.Metadata\n  }\n\n  protected init(options: Knob.Options) {\n    this.options = { ...options }\n    this.render()\n    this.startListening()\n  }\n\n  protected startListening() {\n    this.delegateEvents({\n      mousedown: 'onMouseDown',\n      touchstart: 'onMouseDown',\n    })\n\n    this.model.on('*', this.update, this)\n    this.graph.on('scale', this.update, this)\n    this.graph.on('translate', this.update, this)\n\n    this.model.on('reseted', this.remove, this)\n    this.node.on('removed', this.remove, this)\n\n    this.view.on('node:resize:mousedown', this.onTransform, this)\n    this.view.on('node:rotate:mousedown', this.onTransform, this)\n    this.view.on('node:resize:mouseup', this.onTransformed, this)\n    this.view.on('node:rotate:mouseup', this.onTransformed, this)\n    this.view.on('cell:knob:mousedown', this.onKnobMouseDown, this)\n    this.view.on('cell:knob:mouseup', this.onKnobMouseUp, this)\n\n    super.startListening()\n  }\n\n  protected stopListening() {\n    this.undelegateEvents()\n\n    this.model.off('*', this.update, this)\n    this.graph.off('scale', this.update, this)\n    this.graph.off('translate', this.update, this)\n\n    this.model.off('reseted', this.remove, this)\n    this.node.off('removed', this.remove, this)\n\n    this.view.off('node:resize:mousedown', this.onTransform, this)\n    this.view.off('node:rotate:mousedown', this.onTransform, this)\n    this.view.off('node:resize:mouseup', this.onTransformed, this)\n    this.view.off('node:rotate:mouseup', this.onTransformed, this)\n    this.view.off('cell:knob:mousedown', this.onKnobMouseDown, this)\n    this.view.off('cell:knob:mouseup', this.onKnobMouseUp, this)\n\n    super.stopListening()\n  }\n\n  render() {\n    this.container = document.createElement('div')\n    Dom.addClass(this.container, this.prefixClassName('widget-knob'))\n    if (this.options.className) {\n      Dom.addClass(this.container, this.options.className)\n    }\n\n    this.view.addClass(Private.KNOB)\n    this.graph.container.appendChild(this.container)\n    this.update()\n\n    return this\n  }\n\n  remove() {\n    this.view.removeClass(Private.KNOB)\n    return super.remove()\n  }\n\n  protected update() {\n    if (this.metadata) {\n      const { update, position } = this.metadata\n      const args = {\n        knob: this,\n        cell: this.cell,\n        node: this.node,\n      }\n\n      if (position) {\n        const pos = position.call(this.graph, { ...args })\n        if (pos) {\n          const ctm = this.graph.matrix()\n          const bbox = this.node.getBBox()\n          const angle = Angle.normalize(this.node.getAngle())\n          const local = Point.create(pos)\n          if (angle !== 0) {\n            local.rotate(-angle, { x: bbox.width / 2, y: bbox.height / 2 })\n          }\n          local.translate(bbox).scale(ctm.a, ctm.d).translate(ctm.e, ctm.f)\n          this.container.style.left = `${local.x}px`\n          this.container.style.top = `${local.y}px`\n        }\n      }\n\n      if (update) {\n        update.call(this.graph, { ...args })\n      }\n    }\n  }\n\n  protected hide() {\n    this.container.style.display = 'none'\n  }\n\n  protected show() {\n    this.container.style.display = ''\n  }\n\n  protected onTransform() {\n    this.hide()\n  }\n\n  protected onTransformed() {\n    this.show()\n  }\n\n  protected onKnobMouseDown({ knob }: { knob: Knob }) {\n    if (this.cid !== knob.cid) {\n      this.hide()\n    }\n  }\n\n  protected onKnobMouseUp() {\n    this.show()\n  }\n\n  protected notify(name: string, evt: JQuery.TriggeredEvent) {\n    if (this.view) {\n      const e = this.view.normalizeEvent(evt) as JQuery.MouseDownEvent\n      const localPoint = this.graph.snapToGrid(e.clientX, e.clientY)\n      this.view.notify(`cell:${name}`, {\n        e,\n        view: this.view,\n        node: this.node,\n        cell: this.cell,\n        x: localPoint.x,\n        y: localPoint.y,\n        knob: this,\n      })\n\n      if (this.cell.isNode()) {\n        this.view.notify(`node:${name}`, {\n          e,\n          view: this.view as NodeView,\n          node: this.node,\n          cell: this.cell,\n          x: localPoint.x,\n          y: localPoint.y,\n          knob: this,\n        })\n      } else if (this.cell.isEdge()) {\n        this.view.notify(`edge:${name}`, {\n          e,\n          view: this.view as EdgeView,\n          edge: this.cell as Edge,\n          cell: this.cell,\n          x: localPoint.x,\n          y: localPoint.y,\n          knob: this,\n        })\n      }\n    }\n  }\n\n  protected onMouseDown(e: JQuery.MouseDownEvent) {\n    e.stopPropagation()\n\n    this.setEventData<EventData.Knob>(e, {\n      knobbing: false,\n      originX: e.clientX,\n      originY: e.clientY,\n      clientX: e.clientX,\n      clientY: e.clientY,\n    })\n\n    this.graph.view.undelegateEvents()\n    this.delegateDocumentEvents(Private.documentEvents, e.data)\n    if (this.metadata && this.metadata.onMouseDown) {\n      this.metadata.onMouseDown.call(this.graph, {\n        e,\n        data: this.getEventData<EventData.Knob>(e),\n        knob: this,\n        cell: this.cell,\n        node: this.node,\n      })\n    }\n    this.notify('knob:mousedown', e)\n  }\n\n  protected onMouseMove(e: JQuery.MouseMoveEvent) {\n    const data = this.getEventData<EventData.Knob>(e)\n    const view = this.graph.findViewByCell(this.node) as NodeView\n\n    if (!data.knobbing) {\n      data.knobbing = true\n      if (view) {\n        view.addClass(Private.KNOBBING)\n        this.notify('knob', e)\n      }\n      this.model.startBatch('knob', { cid: this.cid })\n    }\n\n    data.clientX = e.clientX\n    data.clientY = e.clientY\n\n    if (this.metadata && this.metadata.onMouseMove) {\n      const ctm = this.graph.matrix()\n      const dx = (e.clientX - data.originX) / ctm.a\n      const dy = (e.clientY - data.originY) / ctm.d\n      const angle = this.node.getAngle()\n      const delta = new Point(dx, dy).rotate(angle)\n      this.metadata.onMouseMove.call(this.graph, {\n        e,\n        data,\n        deltaX: delta.x,\n        deltaY: delta.y,\n        knob: this,\n        cell: this.cell,\n        node: this.node,\n      })\n    }\n\n    this.notify('knobbing', e)\n    this.notify('knob:mousemove', e)\n  }\n\n  protected onMouseUp(e: JQuery.MouseUpEvent) {\n    this.undelegateDocumentEvents()\n    this.graph.view.delegateEvents()\n    const data = this.getEventData<EventData.Knob>(e)\n    const view = this.graph.findViewByCell(this.node) as NodeView\n    if (data.knobbing) {\n      if (view) {\n        view.removeClass(Private.KNOBBING)\n      }\n\n      if (this.metadata && this.metadata.onMouseUp) {\n        this.metadata.onMouseUp.call(this.graph, {\n          e,\n          data,\n          knob: this,\n          cell: this.cell,\n          node: this.node,\n        })\n      }\n\n      this.model.stopBatch('knob', { cid: this.cid })\n      this.notify('knobbed', e)\n    }\n    this.notify('knob:mouseup', e)\n  }\n}\n\nexport namespace Knob {\n  export interface Options extends Widget.Options {\n    className?: string\n    index?: number\n  }\n\n  interface UpdateArgs {\n    cell: Cell\n    node: Node\n    knob: Knob\n  }\n\n  interface HandlerArgs<T> extends UpdateArgs {\n    e: T\n    data: EventData.Knob\n  }\n\n  export interface Metadata {\n    enabled?: boolean | ((this: Graph, node: Node) => boolean)\n    update?: (this: Graph, args: UpdateArgs) => void\n    position?: (this: Graph, args: UpdateArgs) => Point.PointLike\n    onMouseDown?: (\n      this: Graph,\n      args: HandlerArgs<JQuery.MouseDownEvent>,\n    ) => void\n    onMouseMove?: (\n      this: Graph,\n      args: HandlerArgs<JQuery.MouseMoveEvent> & {\n        deltaX: number\n        deltaY: number\n      },\n    ) => void\n    onMouseUp?: (this: Graph, args: HandlerArgs<JQuery.MouseUpEvent>) => void\n  }\n}\n\nnamespace Private {\n  export const KNOB = 'has-widget-knob'\n  export const KNOBBING = 'node-knobbing'\n\n  export const documentEvents = {\n    mousemove: 'onMouseMove',\n    touchmove: 'onMouseMove',\n    mouseup: 'onMouseUp',\n    touchend: 'onMouseUp',\n  }\n}\n\nnamespace EventData {\n  export interface Knob extends KeyValue {\n    knobbing: boolean\n    originX: number\n    originY: number\n    clientX: number\n    clientY: number\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}