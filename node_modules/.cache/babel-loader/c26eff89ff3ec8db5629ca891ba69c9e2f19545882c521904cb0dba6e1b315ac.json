{"ast":null,"code":"export function getUniformLengthByType(type) {\n  let arrayLength = 0;\n  switch (type) {\n    case 'vec2':\n    case 'ivec2':\n      arrayLength = 2;\n      break;\n    case 'vec3':\n    case 'ivec3':\n      arrayLength = 3;\n      break;\n    case 'vec4':\n    case 'ivec4':\n    case 'mat2':\n      arrayLength = 4;\n      break;\n    case 'mat3':\n      arrayLength = 9;\n      break;\n    case 'mat4':\n      arrayLength = 16;\n      break;\n    default:\n  }\n  return arrayLength;\n}\nconst uniformRegExp = /uniform\\s+(bool|float|int|vec2|vec3|vec4|ivec2|ivec3|ivec4|mat2|mat3|mat4|sampler2D|samplerCube)\\s+([\\s\\S]*?);/g;\nfunction fillUniforms(content, uniformPrefix = false) {\n  const uniforms = {};\n  content = content.replace(uniformRegExp, (_, type, c) => {\n    const defaultValues = c.split(':');\n    const uniformName = defaultValues[0].trim();\n    let defaultValue = '';\n    if (defaultValues.length > 1) {\n      defaultValue = defaultValues[1].trim();\n    }\n\n    // set default value for uniform according to its type\n    // eg. vec2 u -> [0.0, 0.0]\n    switch (type) {\n      case 'bool':\n        defaultValue = defaultValue === 'true';\n        break;\n      case 'float':\n      case 'int':\n        defaultValue = Number(defaultValue);\n        break;\n      case 'vec2':\n      case 'vec3':\n      case 'vec4':\n      case 'ivec2':\n      case 'ivec3':\n      case 'ivec4':\n      case 'mat2':\n      case 'mat3':\n      case 'mat4':\n        if (defaultValue) {\n          defaultValue = defaultValue.replace('[', '').replace(']', '').split(',').reduce((prev, cur) => {\n            prev.push(Number(cur.trim()));\n            return prev;\n          }, []);\n        } else {\n          defaultValue = new Array(getUniformLengthByType(type)).fill(0);\n        }\n        break;\n      default:\n    }\n\n    // @ts-ignore\n    uniforms[uniformName] = defaultValue;\n    return `${uniformPrefix ? 'uniform ' : ''}${type} ${uniformName};\\n`;\n  });\n  return {\n    content,\n    uniforms\n  };\n}\nexport function extractUniforms(content) {\n  // eslint-disable-next-line prefer-const\n  let {\n    content: c,\n    uniforms: u\n  } = fillUniforms(content, true);\n  c = c.replace(/(\\s*uniform\\s*.*\\s*){((?:\\s*.*\\s*)*?)};/g, (substr, header, uniforms) => {\n    uniforms = uniforms.trim().replace(/^.*$/gm, uniform => {\n      return `uniform ${uniform}`;\n    });\n    const {\n      content: cc,\n      uniforms: uu\n    } = fillUniforms(uniforms);\n    Object.assign(u, uu);\n    return `${header}{\\n${cc}\\n};`;\n  });\n  return {\n    content: c,\n    uniforms: u\n  };\n}\nexport function removeDuplicateUniforms(content) {\n  const uniforms = {};\n  return content.replace(uniformRegExp, (_, type, uniformName) => {\n    const name = uniformName.trim();\n    if (!uniforms[name]) {\n      uniforms[name] = true;\n      return `uniform ${type} ${name};\\n`;\n    } else {\n      return '';\n    }\n  });\n}","map":{"version":3,"names":["getUniformLengthByType","type","arrayLength","uniformRegExp","fillUniforms","content","uniformPrefix","uniforms","replace","_","c","defaultValues","split","uniformName","trim","defaultValue","length","Number","reduce","prev","cur","push","Array","fill","extractUniforms","u","substr","header","uniform","cc","uu","Object","assign","removeDuplicateUniforms","name"],"sources":["/Users/bhanudahiya/Desktop/ledger-IQ/node_modules/@antv/l7-core/es/utils/shader-module.js"],"sourcesContent":["export function getUniformLengthByType(type) {\n  let arrayLength = 0;\n  switch (type) {\n    case 'vec2':\n    case 'ivec2':\n      arrayLength = 2;\n      break;\n    case 'vec3':\n    case 'ivec3':\n      arrayLength = 3;\n      break;\n    case 'vec4':\n    case 'ivec4':\n    case 'mat2':\n      arrayLength = 4;\n      break;\n    case 'mat3':\n      arrayLength = 9;\n      break;\n    case 'mat4':\n      arrayLength = 16;\n      break;\n    default:\n  }\n  return arrayLength;\n}\nconst uniformRegExp = /uniform\\s+(bool|float|int|vec2|vec3|vec4|ivec2|ivec3|ivec4|mat2|mat3|mat4|sampler2D|samplerCube)\\s+([\\s\\S]*?);/g;\nfunction fillUniforms(content, uniformPrefix = false) {\n  const uniforms = {};\n  content = content.replace(uniformRegExp, (_, type, c) => {\n    const defaultValues = c.split(':');\n    const uniformName = defaultValues[0].trim();\n    let defaultValue = '';\n    if (defaultValues.length > 1) {\n      defaultValue = defaultValues[1].trim();\n    }\n\n    // set default value for uniform according to its type\n    // eg. vec2 u -> [0.0, 0.0]\n    switch (type) {\n      case 'bool':\n        defaultValue = defaultValue === 'true';\n        break;\n      case 'float':\n      case 'int':\n        defaultValue = Number(defaultValue);\n        break;\n      case 'vec2':\n      case 'vec3':\n      case 'vec4':\n      case 'ivec2':\n      case 'ivec3':\n      case 'ivec4':\n      case 'mat2':\n      case 'mat3':\n      case 'mat4':\n        if (defaultValue) {\n          defaultValue = defaultValue.replace('[', '').replace(']', '').split(',').reduce((prev, cur) => {\n            prev.push(Number(cur.trim()));\n            return prev;\n          }, []);\n        } else {\n          defaultValue = new Array(getUniformLengthByType(type)).fill(0);\n        }\n        break;\n      default:\n    }\n\n    // @ts-ignore\n    uniforms[uniformName] = defaultValue;\n    return `${uniformPrefix ? 'uniform ' : ''}${type} ${uniformName};\\n`;\n  });\n  return {\n    content,\n    uniforms\n  };\n}\nexport function extractUniforms(content) {\n  // eslint-disable-next-line prefer-const\n  let {\n    content: c,\n    uniforms: u\n  } = fillUniforms(content, true);\n  c = c.replace(/(\\s*uniform\\s*.*\\s*){((?:\\s*.*\\s*)*?)};/g, (substr, header, uniforms) => {\n    uniforms = uniforms.trim().replace(/^.*$/gm, uniform => {\n      return `uniform ${uniform}`;\n    });\n    const {\n      content: cc,\n      uniforms: uu\n    } = fillUniforms(uniforms);\n    Object.assign(u, uu);\n    return `${header}{\\n${cc}\\n};`;\n  });\n  return {\n    content: c,\n    uniforms: u\n  };\n}\nexport function removeDuplicateUniforms(content) {\n  const uniforms = {};\n  return content.replace(uniformRegExp, (_, type, uniformName) => {\n    const name = uniformName.trim();\n    if (!uniforms[name]) {\n      uniforms[name] = true;\n      return `uniform ${type} ${name};\\n`;\n    } else {\n      return '';\n    }\n  });\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}