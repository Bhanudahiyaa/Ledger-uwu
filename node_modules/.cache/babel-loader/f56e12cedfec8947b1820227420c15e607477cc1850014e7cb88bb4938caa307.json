{"ast":null,"code":"import { pick } from '@antv/util';\nimport { Plot } from '../../core/plot';\nimport { DEFAULT_OPTIONS } from './constants';\nimport { ArcLayer } from '../../layers/arc-layer';\nimport { DotLayer } from '../../layers/dot-layer';\nimport { TextLayer } from '../../layers/text-layer';\nimport { LayerGroup } from '../../core/layer/layer-group';\nexport class Flow extends Plot {\n  constructor() {\n    super(...arguments);\n    /**\n     * 图表类型\n     */\n    this.type = Plot.PlotType.Flow;\n  }\n  /**\n   * 获取默认配置\n   */\n  getDefaultOptions() {\n    return Flow.DefaultOptions;\n  }\n  /**\n   * 创建图层\n   */\n  createLayers(source) {\n    this.flowLayer = new ArcLayer(Object.assign({\n      name: 'flowLayer',\n      source\n    }, pick(this.options, ArcLayer.LayerOptionsKeys)));\n    const layerGroup = new LayerGroup([this.flowLayer]);\n    if (this.options.radiation) {\n      this.radiationLayer = this.createRadiationLayer(source);\n      layerGroup.addLayer(this.radiationLayer);\n    }\n    if (this.options.label) {\n      this.labelLayer = this.createLabelLayer(source, this.options.label);\n      layerGroup.addLayer(this.labelLayer);\n    }\n    return layerGroup;\n  }\n  /**\n   * 解析流向图起终点数据\n   */\n  parserPointData(source) {\n    // const pointMap = {};\n    const data = [];\n    source.data.dataArray.forEach(item => {\n      const {\n        coordinates\n      } = item;\n      // [startPoint, endPoint]\n      const [, endPoint] = coordinates;\n      // if (isUndefined(pointMap[startPoint.toString()])) {\n      //   data.push({ ...item, coordinates: startPoint });\n      //   pointMap[startPoint.toString()] = true;\n      // }\n      data.push(Object.assign(Object.assign({}, item), {\n        coordinates: endPoint\n      }));\n    });\n    return data;\n  }\n  /**\n   * 创建辐射圈图层\n   */\n  createRadiationLayer(source) {\n    const data = this.parserPointData(source);\n    const {\n      enabled = true,\n      color,\n      size = 20,\n      shape = 'circle',\n      animate = true\n    } = this.options.radiation || {};\n    const radiationLayer = new DotLayer({\n      name: 'radiationLayer',\n      source: {\n        data,\n        parser: {\n          type: 'json',\n          coordinates: 'coordinates'\n        }\n      },\n      visible: enabled,\n      color,\n      size,\n      shape,\n      animate\n    });\n    const updateCallback = () => {\n      const data = this.parserPointData(this.source);\n      radiationLayer.layer.setData(data);\n    };\n    source.on('update', updateCallback);\n    radiationLayer.on('remove', () => {\n      source.off('update', updateCallback);\n    });\n    return radiationLayer;\n  }\n  /**\n   * 创建数据标签图层\n   */\n  createLabelLayer(source, label) {\n    const data = this.parserPointData(source);\n    const {\n      visible,\n      minZoom,\n      maxZoom,\n      zIndex = 0\n    } = this.options;\n    const labelLayer = new TextLayer(Object.assign({\n      name: 'labelLayer',\n      source: {\n        data,\n        parser: {\n          type: 'json',\n          coordinates: 'coordinates'\n        }\n      },\n      visible,\n      minZoom,\n      maxZoom,\n      zIndex: zIndex + 0.1\n    }, label));\n    const updateCallback = () => {\n      const data = this.parserPointData(this.source);\n      labelLayer.layer.setData(data);\n    };\n    source.on('update', updateCallback);\n    labelLayer.on('remove', () => {\n      source.off('update', updateCallback);\n    });\n    return labelLayer;\n  }\n  /**\n   * 更新图层\n   */\n  updateLayers(options) {\n    const flowLayerConfig = pick(options, ArcLayer.LayerOptionsKeys);\n    this.flowLayer.update(flowLayerConfig);\n    if (options.radiation) {\n      if (this.radiationLayer) {\n        const radiation = Object.assign(Object.assign({}, options.radiation), {\n          visible: options.radiation.enabled\n        });\n        this.radiationLayer.update(radiation);\n      } else {\n        this.radiationLayer = this.createRadiationLayer(this.source);\n        this.layerGroup.addLayer(this.radiationLayer);\n      }\n    }\n    this.updateLabelLayer(this.source, options.label, this.options, this.labelLayer);\n  }\n  /**\n   * 实现 legend 配置项\n   */\n  getLegendOptions() {\n    const colorLegendItems = this.flowLayer.getColorLegendItems();\n    if (colorLegendItems.length !== 0) {\n      return {\n        type: 'category',\n        items: colorLegendItems\n      };\n    }\n    return {};\n  }\n}\n/**\n * 默认配置项\n */\nFlow.DefaultOptions = DEFAULT_OPTIONS;","map":{"version":3,"names":["pick","Plot","DEFAULT_OPTIONS","ArcLayer","DotLayer","TextLayer","LayerGroup","Flow","constructor","type","PlotType","getDefaultOptions","DefaultOptions","createLayers","source","flowLayer","Object","assign","name","options","LayerOptionsKeys","layerGroup","radiation","radiationLayer","createRadiationLayer","addLayer","label","labelLayer","createLabelLayer","parserPointData","data","dataArray","forEach","item","coordinates","endPoint","push","enabled","color","size","shape","animate","parser","visible","updateCallback","layer","setData","on","off","minZoom","maxZoom","zIndex","updateLayers","flowLayerConfig","update","updateLabelLayer","getLegendOptions","colorLegendItems","getColorLegendItems","length","items"],"sources":["../../../../src/plots/flow/index.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}