{"ast":null,"code":"import { snapToGrid as snap } from '../geometry/util';\nimport { normalize } from '../registry/marker/util';\nimport { Config } from './config';\nexport var Util;\n(function (Util) {\n  Util.snapToGrid = snap;\n  Util.normalizeMarker = normalize;\n  function prefix(suffix) {\n    return `${Config.prefixCls}-${suffix}`;\n  }\n  Util.prefix = prefix;\n})(Util || (Util = {}));\n(function (Util) {\n  function makeTree(parent, options, parentNode, collector = []) {\n    const children = typeof options.children === 'function' ? options.children(parent) : parent[options.children || 'children'];\n    if (!parentNode) {\n      parentNode = options.createNode(parent); // eslint-disable-line\n      collector.push(parentNode);\n    }\n    if (Array.isArray(children)) {\n      children.forEach(child => {\n        const node = options.createNode(child);\n        const edge = options.createEdge(parentNode, node);\n        collector.push(node, edge);\n        this.makeTree(child, options, node, collector);\n      });\n    }\n    return collector;\n  }\n  Util.makeTree = makeTree;\n})(Util || (Util = {}));","map":{"version":3,"names":["snapToGrid","snap","normalize","Config","Util","normalizeMarker","prefix","suffix","prefixCls","makeTree","parent","options","parentNode","collector","children","createNode","push","Array","isArray","forEach","child","node","edge","createEdge"],"sources":["/Users/bhanudahiya/Desktop/ledger-IQ/node_modules/@antv/x6/src/global/util.ts"],"sourcesContent":["import { KeyValue } from '../types'\nimport { snapToGrid as snap } from '../geometry/util'\nimport { normalize } from '../registry/marker/util'\nimport { Cell } from '../model/cell'\nimport { Node } from '../model/node'\nimport { Edge } from '../model/edge'\nimport { Config } from './config'\n\nexport namespace Util {\n  export const snapToGrid = snap\n  export const normalizeMarker = normalize\n\n  export function prefix(suffix: string) {\n    return `${Config.prefixCls}-${suffix}`\n  }\n}\n\nexport namespace Util {\n  export interface TreeItem extends KeyValue {\n    name: string\n  }\n\n  export interface MakeTreeOptions {\n    children?: string | ((parent: TreeItem) => TreeItem[])\n    createNode: (metadata: TreeItem) => Node\n    createEdge: (parent: Node, child: Node) => Edge\n  }\n\n  export function makeTree(\n    parent: TreeItem,\n    options: MakeTreeOptions,\n    parentNode: Node,\n    collector: Cell[] = [],\n  ) {\n    const children =\n      typeof options.children === 'function'\n        ? options.children(parent)\n        : parent[options.children || 'children']\n\n    if (!parentNode) {\n      parentNode = options.createNode(parent) // eslint-disable-line\n      collector.push(parentNode)\n    }\n\n    if (Array.isArray(children)) {\n      children.forEach((child: TreeItem) => {\n        const node = options.createNode(child)\n        const edge = options.createEdge(parentNode, node)\n        collector.push(node, edge)\n        this.makeTree(child, options, node, collector)\n      })\n    }\n\n    return collector\n  }\n}\n"],"mappings":"AACA,SAASA,UAAU,IAAIC,IAAI,QAAQ,kBAAkB;AACrD,SAASC,SAAS,QAAQ,yBAAyB;AAInD,SAASC,MAAM,QAAQ,UAAU;AAEjC,OAAM,IAAWC,IAAI;AAArB,WAAiBA,IAAI;EACNA,IAAA,CAAAJ,UAAU,GAAGC,IAAI;EACjBG,IAAA,CAAAC,eAAe,GAAGH,SAAS;EAExC,SAAgBI,MAAMA,CAACC,MAAc;IACnC,OAAO,GAAGJ,MAAM,CAACK,SAAS,IAAID,MAAM,EAAE;EACxC;EAFgBH,IAAA,CAAAE,MAAM,GAAAA,MAErB;AACH,CAAC,EAPgBF,IAAI,KAAJA,IAAI;AASrB,WAAiBA,IAAI;EAWnB,SAAgBK,QAAQA,CACtBC,MAAgB,EAChBC,OAAwB,EACxBC,UAAgB,EAChBC,SAAA,GAAoB,EAAE;IAEtB,MAAMC,QAAQ,GACZ,OAAOH,OAAO,CAACG,QAAQ,KAAK,UAAU,GAClCH,OAAO,CAACG,QAAQ,CAACJ,MAAM,CAAC,GACxBA,MAAM,CAACC,OAAO,CAACG,QAAQ,IAAI,UAAU,CAAC;IAE5C,IAAI,CAACF,UAAU,EAAE;MACfA,UAAU,GAAGD,OAAO,CAACI,UAAU,CAACL,MAAM,CAAC,EAAC;MACxCG,SAAS,CAACG,IAAI,CAACJ,UAAU,CAAC;;IAG5B,IAAIK,KAAK,CAACC,OAAO,CAACJ,QAAQ,CAAC,EAAE;MAC3BA,QAAQ,CAACK,OAAO,CAAEC,KAAe,IAAI;QACnC,MAAMC,IAAI,GAAGV,OAAO,CAACI,UAAU,CAACK,KAAK,CAAC;QACtC,MAAME,IAAI,GAAGX,OAAO,CAACY,UAAU,CAACX,UAAU,EAAES,IAAI,CAAC;QACjDR,SAAS,CAACG,IAAI,CAACK,IAAI,EAAEC,IAAI,CAAC;QAC1B,IAAI,CAACb,QAAQ,CAACW,KAAK,EAAET,OAAO,EAAEU,IAAI,EAAER,SAAS,CAAC;MAChD,CAAC,CAAC;;IAGJ,OAAOA,SAAS;EAClB;EA1BgBT,IAAA,CAAAK,QAAQ,GAAAA,QA0BvB;AACH,CAAC,EAtCgBL,IAAI,KAAJA,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}