{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport React, { useCallback } from 'react';\nimport { XFlowGraphCommands, MODELS, XFlowNodeCommands, XFlowEdgeCommands } from '@antv/xflow-core';\nimport { onConfigChange } from '../flowchart-canvas/utils';\nimport { FormItemWrapper } from '../canvas-json-schema-form';\nimport { usePanelContext } from '../base-panel/context';\nimport useAsync from './useAsync';\nexport const FlowchartFormWrapper = props => {\n  const {\n    controlSchema,\n    children,\n    type: formType = 'node'\n  } = props;\n  const {\n    commandService,\n    modelService\n  } = usePanelContext();\n  const getSelectNode = useCallback(() => __awaiter(void 0, void 0, void 0, function* () {\n    const {\n      data\n    } = yield MODELS.SELECTED_NODE.useValue(modelService);\n    return data;\n  }), [modelService]);\n  const getSelectEdge = useCallback(() => __awaiter(void 0, void 0, void 0, function* () {\n    const cell = yield MODELS.SELECTED_CELL.useValue(modelService);\n    const data = cell.getData();\n    return Object.assign({\n      id: cell.id\n    }, data);\n  }), [modelService]);\n  const {\n    data,\n    loading\n  } = useAsync(formType === 'edge' ? getSelectEdge : getSelectNode);\n  React.useEffect(() => {\n    commandService.executeCommand(XFlowGraphCommands.SAVE_GRAPH_DATA.id, {\n      saveGraphDataService: (meta, graph) => __awaiter(void 0, void 0, void 0, function* () {\n        return {\n          err: null,\n          data: graph,\n          meta\n        };\n      })\n    });\n  }, [commandService]);\n  const updateNode = value => __awaiter(void 0, void 0, void 0, function* () {\n    const currentNodeData = yield getSelectNode();\n    const nodeConfig = Object.assign(Object.assign({}, currentNodeData), value);\n    yield commandService.executeCommand(XFlowNodeCommands.UPDATE_NODE.id, {\n      nodeConfig\n    });\n    onConfigChange({\n      type: 'update:node',\n      config: nodeConfig\n    });\n  });\n  const updateEdge = (value, type = 'line', key) => __awaiter(void 0, void 0, void 0, function* () {\n    var _a;\n    const currentEdgeData = yield getSelectEdge();\n    // 更新线、文本样式\n    const edgeConfig = Object.assign(Object.assign(Object.assign({}, currentEdgeData), key ? value[key] : value), {\n      attrs: Object.assign(Object.assign({}, currentEdgeData.attrs), {\n        [type]: Object.assign(Object.assign({}, (_a = currentEdgeData.attrs) === null || _a === void 0 ? void 0 : _a[type]), key ? value[key] : value)\n      })\n    });\n    yield commandService.executeCommand(XFlowEdgeCommands.UPDATE_EDGE.id, {\n      edgeConfig\n    });\n    onConfigChange({\n      type: 'update:edge',\n      config: edgeConfig\n    });\n  });\n  const updateGroup = value => __awaiter(void 0, void 0, void 0, function* () {\n    const currentGroupData = yield getSelectNode();\n    const nodeConfig = Object.assign(Object.assign({}, currentGroupData), value);\n    yield commandService.executeCommand(XFlowNodeCommands.UPDATE_NODE.id, {\n      nodeConfig\n    });\n    onConfigChange({\n      type: 'update:group',\n      config: nodeConfig\n    });\n  });\n  if (loading) {\n    return null;\n  }\n  return React.createElement(FormItemWrapper, {\n    schema: controlSchema\n  }, () => {\n    return children(Object.assign({}, data), {\n      updateNode,\n      updateEdge,\n      updateGroup\n    });\n  });\n};","map":{"version":3,"names":["React","useCallback","XFlowGraphCommands","MODELS","XFlowNodeCommands","XFlowEdgeCommands","onConfigChange","FormItemWrapper","usePanelContext","useAsync","FlowchartFormWrapper","props","controlSchema","children","type","formType","commandService","modelService","getSelectNode","__awaiter","data","SELECTED_NODE","useValue","getSelectEdge","cell","SELECTED_CELL","getData","Object","assign","id","loading","useEffect","executeCommand","SAVE_GRAPH_DATA","saveGraphDataService","meta","graph","err","updateNode","value","currentNodeData","nodeConfig","UPDATE_NODE","config","updateEdge","key","currentEdgeData","edgeConfig","attrs","_a","UPDATE_EDGE","updateGroup","currentGroupData","createElement","schema"],"sources":["../../src/flowchart-editor-panel/form-wrapper.tsx"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}