{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { DOM } from \"../util/dom\";\nimport { LngLat } from \"../geo/lng_lat\";\nimport { browser } from \"../util/browser\";\nimport { bezier, defaultEasing, interpolates } from \"../util/util\";\nimport { TransformProvider } from \"./transform-provider\";\n// deltaY value for mouse scroll wheel identification\nconst wheelZoomDelta = 4.000244140625;\n\n// These magic numbers control the rate of zoom. Trackpad events fire at a greater\n// frequency than mouse scroll wheel, so reduce the zoom rate per wheel tick\nconst defaultZoomRate = 1 / 100;\nconst wheelZoomRate = 1 / 450;\n\n// upper bound on how much we scale the map in any single render frame; this\n// is used to limit zoom rate in the case of very fast scrolling\nconst maxScalePerFrame = 2;\n\n/**\n * The `ScrollZoomHandler` allows the user to zoom the map by scrolling.\n *\n * @group Handlers\n */\nexport class ScrollZoomHandler {\n  /** @internal */\n  constructor(map, triggerRenderFrame) {\n    _defineProperty(this, \"_map\", void 0);\n    _defineProperty(this, \"_tr\", void 0);\n    _defineProperty(this, \"_enabled\", void 0);\n    _defineProperty(this, \"_active\", void 0);\n    _defineProperty(this, \"_zooming\", void 0);\n    _defineProperty(this, \"_aroundCenter\", void 0);\n    _defineProperty(this, \"_around\", void 0);\n    _defineProperty(this, \"_aroundPoint\", void 0);\n    _defineProperty(this, \"_type\", void 0);\n    _defineProperty(this, \"_lastValue\", void 0);\n    _defineProperty(this, \"_timeout\", void 0);\n    // used for delayed-handling of a single wheel movement\n    _defineProperty(this, \"_finishTimeout\", void 0);\n    // used to delay final '{move,zoom}end' events\n    _defineProperty(this, \"_lastWheelEvent\", void 0);\n    _defineProperty(this, \"_lastWheelEventTime\", void 0);\n    _defineProperty(this, \"_startZoom\", void 0);\n    _defineProperty(this, \"_targetZoom\", void 0);\n    _defineProperty(this, \"_delta\", void 0);\n    _defineProperty(this, \"_easing\", void 0);\n    _defineProperty(this, \"_prevEase\", void 0);\n    _defineProperty(this, \"_frameId\", void 0);\n    _defineProperty(this, \"_triggerRenderFrame\", void 0);\n    _defineProperty(this, \"_defaultZoomRate\", void 0);\n    _defineProperty(this, \"_wheelZoomRate\", void 0);\n    _defineProperty(this, \"_onTimeout\", initialEvent => {\n      this._type = 'wheel';\n      this._delta -= this._lastValue;\n      if (!this._active) {\n        this._start(initialEvent);\n      }\n    });\n    this._map = map;\n    this._tr = new TransformProvider(map);\n    this._triggerRenderFrame = triggerRenderFrame;\n    this._delta = 0;\n    this._defaultZoomRate = defaultZoomRate;\n    this._wheelZoomRate = wheelZoomRate;\n  }\n\n  /**\n   * Set the zoom rate of a trackpad\n   * @param zoomRate - 1/100 The rate used to scale trackpad movement to a zoom value.\n   * @example\n   * Speed up trackpad zoom\n   * ```ts\n   * map.scrollZoom.setZoomRate(1/25);\n   * ```\n   */\n  setZoomRate(zoomRate) {\n    this._defaultZoomRate = zoomRate;\n  }\n\n  /**\n   * Set the zoom rate of a mouse wheel\n   * @param wheelZoomRate - 1/450 The rate used to scale mouse wheel movement to a zoom value.\n   * @example\n   * Slow down zoom of mouse wheel\n   * ```ts\n   * map.scrollZoom.setWheelZoomRate(1/600);\n   * ```\n   */\n  setWheelZoomRate(wheelZoomRate) {\n    this._wheelZoomRate = wheelZoomRate;\n  }\n\n  /**\n   * Returns a Boolean indicating whether the \"scroll to zoom\" interaction is enabled.\n   * @returns `true` if the \"scroll to zoom\" interaction is enabled.\n   */\n  isEnabled() {\n    return !!this._enabled;\n  }\n\n  /*\n   * Active state is turned on and off with every scroll wheel event and is set back to false before the map\n   * render is called, so _active is not a good candidate for determining if a scroll zoom animation is in\n   * progress.\n   */\n  isActive() {\n    return !!this._active || this._finishTimeout !== undefined;\n  }\n  isZooming() {\n    return !!this._zooming;\n  }\n\n  /**\n   * Enables the \"scroll to zoom\" interaction.\n   *\n   * @param options - Options object.\n   * @example\n   * ```ts\n   * map.scrollZoom.enable();\n   * map.scrollZoom.enable({ around: 'center' })\n   * ```\n   */\n  enable(options) {\n    if (this.isEnabled()) return;\n    this._enabled = true;\n    this._aroundCenter = !!options && options.around === 'center';\n  }\n\n  /**\n   * Disables the \"scroll to zoom\" interaction.\n   *\n   * @example\n   * ```ts\n   * map.scrollZoom.disable();\n   * ```\n   */\n  disable() {\n    if (!this.isEnabled()) return;\n    this._enabled = false;\n  }\n  wheel(e) {\n    if (!this.isEnabled()) return;\n    if (this._map.cooperativeGestures.isEnabled() && !e[this._map.cooperativeGestures._bypassKey]) {\n      return;\n    }\n    let value = e.deltaMode === WheelEvent.DOM_DELTA_LINE ? e.deltaY * 40 : e.deltaY;\n    const now = browser.now(),\n      timeDelta = now - (this._lastWheelEventTime || 0);\n    this._lastWheelEventTime = now;\n    if (value !== 0 && value % wheelZoomDelta === 0) {\n      // This one is definitely a mouse wheel event.\n      this._type = 'wheel';\n    } else if (value !== 0 && Math.abs(value) < 4) {\n      // This one is definitely a trackpad event because it is so small.\n      this._type = 'trackpad';\n    } else if (timeDelta > 400) {\n      // This is likely a new scroll action.\n      this._type = null;\n      this._lastValue = value;\n\n      // Start a timeout in case this was a singular event, and dely it by up to 40ms.\n      this._timeout = setTimeout(this._onTimeout, 40, e);\n    } else if (!this._type) {\n      // This is a repeating event, but we don't know the type of event just yet.\n      // If the delta per time is small, we assume it's a fast trackpad; otherwise we switch into wheel mode.\n      this._type = Math.abs(timeDelta * value) < 200 ? 'trackpad' : 'wheel';\n\n      // Make sure our delayed event isn't fired again, because we accumulate\n      // the previous event (which was less than 40ms ago) into this event.\n      if (this._timeout) {\n        clearTimeout(this._timeout);\n        this._timeout = null;\n        value += this._lastValue;\n      }\n    }\n\n    // Slow down zoom if shift key is held for more precise zooming\n    if (e.shiftKey && value) value = value / 4;\n\n    // Only fire the callback if we actually know what type of scrolling device the user uses.\n    if (this._type) {\n      this._lastWheelEvent = e;\n      this._delta -= value;\n      if (!this._active) {\n        this._start(e);\n      }\n    }\n    e.preventDefault();\n  }\n  _start(e) {\n    if (!this._delta) return;\n    if (this._frameId) {\n      this._frameId = null;\n    }\n    this._active = true;\n    if (!this.isZooming()) {\n      this._zooming = true;\n    }\n    if (this._finishTimeout) {\n      clearTimeout(this._finishTimeout);\n      delete this._finishTimeout;\n    }\n    const pos = DOM.mousePos(this._map.getCanvasContainer(), e);\n    const tr = this._tr;\n    if (pos.y > tr.transform.height / 2 - tr.transform.getHorizon()) {\n      this._around = LngLat.convert(this._aroundCenter ? tr.center : tr.unproject(pos));\n    } else {\n      // Do not use current cursor position if above the horizon to avoid 'unproject' this point\n      // as it is not mapped into 'coords' framebuffer or inversible with 'pixelMatrixInverse'.\n      this._around = LngLat.convert(tr.center);\n    }\n    this._aroundPoint = tr.transform.locationPoint(this._around);\n    if (!this._frameId) {\n      this._frameId = true;\n      this._triggerRenderFrame();\n    }\n  }\n  renderFrame() {\n    if (!this._frameId) return;\n    this._frameId = null;\n    if (!this.isActive()) return;\n    const tr = this._tr.transform;\n\n    // if we've had scroll events since the last render frame, consume the\n    // accumulated delta, and update the target zoom level accordingly\n    if (this._delta !== 0) {\n      // For trackpad events and single mouse wheel ticks, use the default zoom rate\n      const zoomRate = this._type === 'wheel' && Math.abs(this._delta) > wheelZoomDelta ? this._wheelZoomRate : this._defaultZoomRate;\n      // Scale by sigmoid of scroll wheel delta.\n      let scale = maxScalePerFrame / (1 + Math.exp(-Math.abs(this._delta * zoomRate)));\n      if (this._delta < 0 && scale !== 0) {\n        scale = 1 / scale;\n      }\n      const fromScale = typeof this._targetZoom === 'number' ? tr.zoomScale(this._targetZoom) : tr.scale;\n      this._targetZoom = Math.min(tr.maxZoom, Math.max(tr.minZoom, tr.scaleZoom(fromScale * scale)));\n\n      // if this is a mouse wheel, refresh the starting zoom and easing\n      // function we're using to smooth out the zooming between wheel\n      // events\n      if (this._type === 'wheel') {\n        this._startZoom = tr.zoom;\n        this._easing = this._smoothOutEasing(200);\n      }\n      this._delta = 0;\n    }\n    const targetZoom = typeof this._targetZoom === 'number' ? this._targetZoom : tr.zoom;\n    const startZoom = this._startZoom;\n    const easing = this._easing;\n    let finished = false;\n    let zoom;\n    if (this._type === 'wheel' && startZoom && easing) {\n      const t = Math.min((browser.now() - this._lastWheelEventTime) / 200, 1);\n      const k = easing(t);\n      zoom = interpolates.number(startZoom, targetZoom, k);\n      if (t < 1) {\n        if (!this._frameId) {\n          this._frameId = true;\n        }\n      } else {\n        finished = true;\n      }\n    } else {\n      zoom = targetZoom;\n      finished = true;\n    }\n    this._active = true;\n    if (finished) {\n      this._active = false;\n      this._finishTimeout = setTimeout(() => {\n        this._zooming = false;\n        this._triggerRenderFrame();\n        delete this._targetZoom;\n        delete this._finishTimeout;\n      }, 200);\n    }\n    return {\n      noInertia: true,\n      needsRenderFrame: !finished,\n      zoomDelta: zoom - tr.zoom,\n      around: this._aroundPoint,\n      originalEvent: this._lastWheelEvent\n    };\n  }\n  _smoothOutEasing(duration) {\n    let easing = defaultEasing;\n    if (this._prevEase) {\n      const currentEase = this._prevEase;\n      const t = (browser.now() - currentEase.start) / currentEase.duration;\n      const speed = currentEase.easing(t + 0.01) - currentEase.easing(t);\n\n      // Quick hack to make new bezier that is continuous with last\n      const x = 0.27 / Math.sqrt(speed * speed + 0.0001) * 0.01;\n      const y = Math.sqrt(0.27 * 0.27 - x * x);\n      easing = bezier(x, y, 0.25, 1);\n    }\n    this._prevEase = {\n      start: browser.now(),\n      duration,\n      easing\n    };\n    return easing;\n  }\n  reset() {\n    this._active = false;\n    this._zooming = false;\n    delete this._targetZoom;\n    if (this._finishTimeout) {\n      clearTimeout(this._finishTimeout);\n      delete this._finishTimeout;\n    }\n  }\n}","map":{"version":3,"names":["_defineProperty","DOM","LngLat","browser","bezier","defaultEasing","interpolates","TransformProvider","wheelZoomDelta","defaultZoomRate","wheelZoomRate","maxScalePerFrame","ScrollZoomHandler","constructor","map","triggerRenderFrame","initialEvent","_type","_delta","_lastValue","_active","_start","_map","_tr","_triggerRenderFrame","_defaultZoomRate","_wheelZoomRate","setZoomRate","zoomRate","setWheelZoomRate","isEnabled","_enabled","isActive","_finishTimeout","undefined","isZooming","_zooming","enable","options","_aroundCenter","around","disable","wheel","e","cooperativeGestures","_bypassKey","value","deltaMode","WheelEvent","DOM_DELTA_LINE","deltaY","now","timeDelta","_lastWheelEventTime","Math","abs","_timeout","setTimeout","_onTimeout","clearTimeout","shiftKey","_lastWheelEvent","preventDefault","_frameId","pos","mousePos","getCanvasContainer","tr","y","transform","height","getHorizon","_around","convert","center","unproject","_aroundPoint","locationPoint","renderFrame","scale","exp","fromScale","_targetZoom","zoomScale","min","maxZoom","max","minZoom","scaleZoom","_startZoom","zoom","_easing","_smoothOutEasing","targetZoom","startZoom","easing","finished","t","k","number","noInertia","needsRenderFrame","zoomDelta","originalEvent","duration","_prevEase","currentEase","start","speed","x","sqrt","reset"],"sources":["/Users/bhanudahiya/Desktop/ledger-IQ/node_modules/@antv/l7-map/es/map/handler/scroll_zoom.js"],"sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { DOM } from \"../util/dom\";\nimport { LngLat } from \"../geo/lng_lat\";\nimport { browser } from \"../util/browser\";\nimport { bezier, defaultEasing, interpolates } from \"../util/util\";\nimport { TransformProvider } from \"./transform-provider\";\n// deltaY value for mouse scroll wheel identification\nconst wheelZoomDelta = 4.000244140625;\n\n// These magic numbers control the rate of zoom. Trackpad events fire at a greater\n// frequency than mouse scroll wheel, so reduce the zoom rate per wheel tick\nconst defaultZoomRate = 1 / 100;\nconst wheelZoomRate = 1 / 450;\n\n// upper bound on how much we scale the map in any single render frame; this\n// is used to limit zoom rate in the case of very fast scrolling\nconst maxScalePerFrame = 2;\n\n/**\n * The `ScrollZoomHandler` allows the user to zoom the map by scrolling.\n *\n * @group Handlers\n */\nexport class ScrollZoomHandler {\n  /** @internal */\n  constructor(map, triggerRenderFrame) {\n    _defineProperty(this, \"_map\", void 0);\n    _defineProperty(this, \"_tr\", void 0);\n    _defineProperty(this, \"_enabled\", void 0);\n    _defineProperty(this, \"_active\", void 0);\n    _defineProperty(this, \"_zooming\", void 0);\n    _defineProperty(this, \"_aroundCenter\", void 0);\n    _defineProperty(this, \"_around\", void 0);\n    _defineProperty(this, \"_aroundPoint\", void 0);\n    _defineProperty(this, \"_type\", void 0);\n    _defineProperty(this, \"_lastValue\", void 0);\n    _defineProperty(this, \"_timeout\", void 0);\n    // used for delayed-handling of a single wheel movement\n    _defineProperty(this, \"_finishTimeout\", void 0);\n    // used to delay final '{move,zoom}end' events\n    _defineProperty(this, \"_lastWheelEvent\", void 0);\n    _defineProperty(this, \"_lastWheelEventTime\", void 0);\n    _defineProperty(this, \"_startZoom\", void 0);\n    _defineProperty(this, \"_targetZoom\", void 0);\n    _defineProperty(this, \"_delta\", void 0);\n    _defineProperty(this, \"_easing\", void 0);\n    _defineProperty(this, \"_prevEase\", void 0);\n    _defineProperty(this, \"_frameId\", void 0);\n    _defineProperty(this, \"_triggerRenderFrame\", void 0);\n    _defineProperty(this, \"_defaultZoomRate\", void 0);\n    _defineProperty(this, \"_wheelZoomRate\", void 0);\n    _defineProperty(this, \"_onTimeout\", initialEvent => {\n      this._type = 'wheel';\n      this._delta -= this._lastValue;\n      if (!this._active) {\n        this._start(initialEvent);\n      }\n    });\n    this._map = map;\n    this._tr = new TransformProvider(map);\n    this._triggerRenderFrame = triggerRenderFrame;\n    this._delta = 0;\n    this._defaultZoomRate = defaultZoomRate;\n    this._wheelZoomRate = wheelZoomRate;\n  }\n\n  /**\n   * Set the zoom rate of a trackpad\n   * @param zoomRate - 1/100 The rate used to scale trackpad movement to a zoom value.\n   * @example\n   * Speed up trackpad zoom\n   * ```ts\n   * map.scrollZoom.setZoomRate(1/25);\n   * ```\n   */\n  setZoomRate(zoomRate) {\n    this._defaultZoomRate = zoomRate;\n  }\n\n  /**\n   * Set the zoom rate of a mouse wheel\n   * @param wheelZoomRate - 1/450 The rate used to scale mouse wheel movement to a zoom value.\n   * @example\n   * Slow down zoom of mouse wheel\n   * ```ts\n   * map.scrollZoom.setWheelZoomRate(1/600);\n   * ```\n   */\n  setWheelZoomRate(wheelZoomRate) {\n    this._wheelZoomRate = wheelZoomRate;\n  }\n\n  /**\n   * Returns a Boolean indicating whether the \"scroll to zoom\" interaction is enabled.\n   * @returns `true` if the \"scroll to zoom\" interaction is enabled.\n   */\n  isEnabled() {\n    return !!this._enabled;\n  }\n\n  /*\n   * Active state is turned on and off with every scroll wheel event and is set back to false before the map\n   * render is called, so _active is not a good candidate for determining if a scroll zoom animation is in\n   * progress.\n   */\n  isActive() {\n    return !!this._active || this._finishTimeout !== undefined;\n  }\n  isZooming() {\n    return !!this._zooming;\n  }\n\n  /**\n   * Enables the \"scroll to zoom\" interaction.\n   *\n   * @param options - Options object.\n   * @example\n   * ```ts\n   * map.scrollZoom.enable();\n   * map.scrollZoom.enable({ around: 'center' })\n   * ```\n   */\n  enable(options) {\n    if (this.isEnabled()) return;\n    this._enabled = true;\n    this._aroundCenter = !!options && options.around === 'center';\n  }\n\n  /**\n   * Disables the \"scroll to zoom\" interaction.\n   *\n   * @example\n   * ```ts\n   * map.scrollZoom.disable();\n   * ```\n   */\n  disable() {\n    if (!this.isEnabled()) return;\n    this._enabled = false;\n  }\n  wheel(e) {\n    if (!this.isEnabled()) return;\n    if (this._map.cooperativeGestures.isEnabled() && !e[this._map.cooperativeGestures._bypassKey]) {\n      return;\n    }\n    let value = e.deltaMode === WheelEvent.DOM_DELTA_LINE ? e.deltaY * 40 : e.deltaY;\n    const now = browser.now(),\n      timeDelta = now - (this._lastWheelEventTime || 0);\n    this._lastWheelEventTime = now;\n    if (value !== 0 && value % wheelZoomDelta === 0) {\n      // This one is definitely a mouse wheel event.\n      this._type = 'wheel';\n    } else if (value !== 0 && Math.abs(value) < 4) {\n      // This one is definitely a trackpad event because it is so small.\n      this._type = 'trackpad';\n    } else if (timeDelta > 400) {\n      // This is likely a new scroll action.\n      this._type = null;\n      this._lastValue = value;\n\n      // Start a timeout in case this was a singular event, and dely it by up to 40ms.\n      this._timeout = setTimeout(this._onTimeout, 40, e);\n    } else if (!this._type) {\n      // This is a repeating event, but we don't know the type of event just yet.\n      // If the delta per time is small, we assume it's a fast trackpad; otherwise we switch into wheel mode.\n      this._type = Math.abs(timeDelta * value) < 200 ? 'trackpad' : 'wheel';\n\n      // Make sure our delayed event isn't fired again, because we accumulate\n      // the previous event (which was less than 40ms ago) into this event.\n      if (this._timeout) {\n        clearTimeout(this._timeout);\n        this._timeout = null;\n        value += this._lastValue;\n      }\n    }\n\n    // Slow down zoom if shift key is held for more precise zooming\n    if (e.shiftKey && value) value = value / 4;\n\n    // Only fire the callback if we actually know what type of scrolling device the user uses.\n    if (this._type) {\n      this._lastWheelEvent = e;\n      this._delta -= value;\n      if (!this._active) {\n        this._start(e);\n      }\n    }\n    e.preventDefault();\n  }\n  _start(e) {\n    if (!this._delta) return;\n    if (this._frameId) {\n      this._frameId = null;\n    }\n    this._active = true;\n    if (!this.isZooming()) {\n      this._zooming = true;\n    }\n    if (this._finishTimeout) {\n      clearTimeout(this._finishTimeout);\n      delete this._finishTimeout;\n    }\n    const pos = DOM.mousePos(this._map.getCanvasContainer(), e);\n    const tr = this._tr;\n    if (pos.y > tr.transform.height / 2 - tr.transform.getHorizon()) {\n      this._around = LngLat.convert(this._aroundCenter ? tr.center : tr.unproject(pos));\n    } else {\n      // Do not use current cursor position if above the horizon to avoid 'unproject' this point\n      // as it is not mapped into 'coords' framebuffer or inversible with 'pixelMatrixInverse'.\n      this._around = LngLat.convert(tr.center);\n    }\n    this._aroundPoint = tr.transform.locationPoint(this._around);\n    if (!this._frameId) {\n      this._frameId = true;\n      this._triggerRenderFrame();\n    }\n  }\n  renderFrame() {\n    if (!this._frameId) return;\n    this._frameId = null;\n    if (!this.isActive()) return;\n    const tr = this._tr.transform;\n\n    // if we've had scroll events since the last render frame, consume the\n    // accumulated delta, and update the target zoom level accordingly\n    if (this._delta !== 0) {\n      // For trackpad events and single mouse wheel ticks, use the default zoom rate\n      const zoomRate = this._type === 'wheel' && Math.abs(this._delta) > wheelZoomDelta ? this._wheelZoomRate : this._defaultZoomRate;\n      // Scale by sigmoid of scroll wheel delta.\n      let scale = maxScalePerFrame / (1 + Math.exp(-Math.abs(this._delta * zoomRate)));\n      if (this._delta < 0 && scale !== 0) {\n        scale = 1 / scale;\n      }\n      const fromScale = typeof this._targetZoom === 'number' ? tr.zoomScale(this._targetZoom) : tr.scale;\n      this._targetZoom = Math.min(tr.maxZoom, Math.max(tr.minZoom, tr.scaleZoom(fromScale * scale)));\n\n      // if this is a mouse wheel, refresh the starting zoom and easing\n      // function we're using to smooth out the zooming between wheel\n      // events\n      if (this._type === 'wheel') {\n        this._startZoom = tr.zoom;\n        this._easing = this._smoothOutEasing(200);\n      }\n      this._delta = 0;\n    }\n    const targetZoom = typeof this._targetZoom === 'number' ? this._targetZoom : tr.zoom;\n    const startZoom = this._startZoom;\n    const easing = this._easing;\n    let finished = false;\n    let zoom;\n    if (this._type === 'wheel' && startZoom && easing) {\n      const t = Math.min((browser.now() - this._lastWheelEventTime) / 200, 1);\n      const k = easing(t);\n      zoom = interpolates.number(startZoom, targetZoom, k);\n      if (t < 1) {\n        if (!this._frameId) {\n          this._frameId = true;\n        }\n      } else {\n        finished = true;\n      }\n    } else {\n      zoom = targetZoom;\n      finished = true;\n    }\n    this._active = true;\n    if (finished) {\n      this._active = false;\n      this._finishTimeout = setTimeout(() => {\n        this._zooming = false;\n        this._triggerRenderFrame();\n        delete this._targetZoom;\n        delete this._finishTimeout;\n      }, 200);\n    }\n    return {\n      noInertia: true,\n      needsRenderFrame: !finished,\n      zoomDelta: zoom - tr.zoom,\n      around: this._aroundPoint,\n      originalEvent: this._lastWheelEvent\n    };\n  }\n  _smoothOutEasing(duration) {\n    let easing = defaultEasing;\n    if (this._prevEase) {\n      const currentEase = this._prevEase;\n      const t = (browser.now() - currentEase.start) / currentEase.duration;\n      const speed = currentEase.easing(t + 0.01) - currentEase.easing(t);\n\n      // Quick hack to make new bezier that is continuous with last\n      const x = 0.27 / Math.sqrt(speed * speed + 0.0001) * 0.01;\n      const y = Math.sqrt(0.27 * 0.27 - x * x);\n      easing = bezier(x, y, 0.25, 1);\n    }\n    this._prevEase = {\n      start: browser.now(),\n      duration,\n      easing\n    };\n    return easing;\n  }\n  reset() {\n    this._active = false;\n    this._zooming = false;\n    delete this._targetZoom;\n    if (this._finishTimeout) {\n      clearTimeout(this._finishTimeout);\n      delete this._finishTimeout;\n    }\n  }\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}