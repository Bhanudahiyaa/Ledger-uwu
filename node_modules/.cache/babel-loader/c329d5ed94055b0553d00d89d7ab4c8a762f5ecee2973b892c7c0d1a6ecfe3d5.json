{"ast":null,"code":"export let ShapeType3D = /*#__PURE__*/function (ShapeType3D) {\n  ShapeType3D[\"CYLINDER\"] = \"cylinder\";\n  ShapeType3D[\"SQUARECOLUMN\"] = \"squareColumn\";\n  ShapeType3D[\"TRIANGLECOLUMN\"] = \"triangleColumn\";\n  ShapeType3D[\"HEXAGONCOLUMN\"] = \"hexagonColumn\";\n  ShapeType3D[\"PENTAGONCOLUMN\"] = \"pentagonColumn\";\n  return ShapeType3D;\n}({});\nexport let ShapeType2D = /*#__PURE__*/function (ShapeType2D) {\n  ShapeType2D[\"CIRCLE\"] = \"circle\";\n  ShapeType2D[\"SQUARE\"] = \"square\";\n  ShapeType2D[\"TRIANGLE\"] = \"triangle\";\n  ShapeType2D[\"HEXAGON\"] = \"hexagon\";\n  ShapeType2D[\"PENTAGON\"] = \"pentagon\";\n  return ShapeType2D;\n}({});\n\n/**\n * 生成规则多边形顶点个数\n * @param pointCount  顶点个数 3 => 三角形\n * @param start 顶点起始角度 调整图形的方向\n */\nexport function polygonPath(pointCount, start = 0) {\n  const step = Math.PI * 2 / pointCount;\n  const line = [];\n  for (let i = 0; i < pointCount; i++) {\n    line.push(step * i + start * Math.PI / 12);\n  }\n  const path = line.map(t => {\n    const x = Math.sin(t + Math.PI / 4);\n    const y = Math.cos(t + Math.PI / 4);\n    return [x, y, 0];\n  });\n  // path.push(path[0]);\n  return path;\n}\nexport function circle() {\n  return polygonPath(30);\n}\nexport function square() {\n  return polygonPath(4);\n}\nexport function triangle() {\n  return polygonPath(3);\n}\nexport function hexagon() {\n  return polygonPath(6, 1);\n}\nexport function pentagon() {\n  return polygonPath(5);\n}\nexport const geometryShape = {\n  [ShapeType2D.CIRCLE]: circle,\n  [ShapeType2D.HEXAGON]: hexagon,\n  [ShapeType2D.TRIANGLE]: triangle,\n  [ShapeType2D.SQUARE]: square,\n  [ShapeType2D.PENTAGON]: pentagon,\n  [ShapeType3D.CYLINDER]: circle,\n  [ShapeType3D.HEXAGONCOLUMN]: hexagon,\n  [ShapeType3D.TRIANGLECOLUMN]: triangle,\n  [ShapeType3D.SQUARECOLUMN]: square,\n  [ShapeType3D.PENTAGONCOLUMN]: pentagon\n};","map":{"version":3,"names":["ShapeType3D","ShapeType2D","polygonPath","pointCount","start","step","Math","PI","line","i","push","path","map","t","x","sin","y","cos","circle","square","triangle","hexagon","pentagon","geometryShape","CIRCLE","HEXAGON","TRIANGLE","SQUARE","PENTAGON","CYLINDER","HEXAGONCOLUMN","TRIANGLECOLUMN","SQUARECOLUMN","PENTAGONCOLUMN"],"sources":["/Users/bhanudahiya/Desktop/ledger-IQ/node_modules/@antv/l7-layers/es/core/shape/Path.js"],"sourcesContent":["export let ShapeType3D = /*#__PURE__*/function (ShapeType3D) {\n  ShapeType3D[\"CYLINDER\"] = \"cylinder\";\n  ShapeType3D[\"SQUARECOLUMN\"] = \"squareColumn\";\n  ShapeType3D[\"TRIANGLECOLUMN\"] = \"triangleColumn\";\n  ShapeType3D[\"HEXAGONCOLUMN\"] = \"hexagonColumn\";\n  ShapeType3D[\"PENTAGONCOLUMN\"] = \"pentagonColumn\";\n  return ShapeType3D;\n}({});\nexport let ShapeType2D = /*#__PURE__*/function (ShapeType2D) {\n  ShapeType2D[\"CIRCLE\"] = \"circle\";\n  ShapeType2D[\"SQUARE\"] = \"square\";\n  ShapeType2D[\"TRIANGLE\"] = \"triangle\";\n  ShapeType2D[\"HEXAGON\"] = \"hexagon\";\n  ShapeType2D[\"PENTAGON\"] = \"pentagon\";\n  return ShapeType2D;\n}({});\n\n/**\n * 生成规则多边形顶点个数\n * @param pointCount  顶点个数 3 => 三角形\n * @param start 顶点起始角度 调整图形的方向\n */\nexport function polygonPath(pointCount, start = 0) {\n  const step = Math.PI * 2 / pointCount;\n  const line = [];\n  for (let i = 0; i < pointCount; i++) {\n    line.push(step * i + start * Math.PI / 12);\n  }\n  const path = line.map(t => {\n    const x = Math.sin(t + Math.PI / 4);\n    const y = Math.cos(t + Math.PI / 4);\n    return [x, y, 0];\n  });\n  // path.push(path[0]);\n  return path;\n}\nexport function circle() {\n  return polygonPath(30);\n}\nexport function square() {\n  return polygonPath(4);\n}\nexport function triangle() {\n  return polygonPath(3);\n}\nexport function hexagon() {\n  return polygonPath(6, 1);\n}\nexport function pentagon() {\n  return polygonPath(5);\n}\nexport const geometryShape = {\n  [ShapeType2D.CIRCLE]: circle,\n  [ShapeType2D.HEXAGON]: hexagon,\n  [ShapeType2D.TRIANGLE]: triangle,\n  [ShapeType2D.SQUARE]: square,\n  [ShapeType2D.PENTAGON]: pentagon,\n  [ShapeType3D.CYLINDER]: circle,\n  [ShapeType3D.HEXAGONCOLUMN]: hexagon,\n  [ShapeType3D.TRIANGLECOLUMN]: triangle,\n  [ShapeType3D.SQUARECOLUMN]: square,\n  [ShapeType3D.PENTAGONCOLUMN]: pentagon\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}