{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { extend } from \"./util\";\n\n/**\n * A listener method used as a callback to events\n */\n\nfunction _addEventListener(type, listener, listenerList) {\n  const listenerExists = listenerList[type] && listenerList[type].indexOf(listener) !== -1;\n  if (!listenerExists) {\n    listenerList[type] = listenerList[type] || [];\n    listenerList[type].push(listener);\n  }\n}\nfunction _removeEventListener(type, listener, listenerList) {\n  if (listenerList && listenerList[type]) {\n    const index = listenerList[type].indexOf(listener);\n    if (index !== -1) {\n      listenerList[type].splice(index, 1);\n    }\n  }\n}\n\n/**\n * The event class\n */\nexport class Event {\n  constructor(type, data = {}) {\n    _defineProperty(this, \"type\", void 0);\n    extend(this, data);\n    this.type = type;\n  }\n}\n/**\n * An error event\n */\nexport class ErrorEvent extends Event {\n  constructor(error, data = {}) {\n    super('error', data);\n    _defineProperty(this, \"error\", void 0);\n    this.error = error;\n  }\n}\n\n/**\n * Methods mixed in to other classes for event capabilities.\n *\n * @group Event Related\n */\nexport class Evented {\n  constructor() {\n    _defineProperty(this, \"_listeners\", void 0);\n    _defineProperty(this, \"_oneTimeListeners\", void 0);\n    _defineProperty(this, \"_eventedParent\", void 0);\n    _defineProperty(this, \"_eventedParentData\", void 0);\n  }\n  /**\n   * Adds a listener to a specified event type.\n   *\n   * @param type - The event type to add a listen for.\n   * @param listener - The function to be called when the event is fired.\n   * The listener function is called with the data object passed to `fire`,\n   * extended with `target` and `type` properties.\n   */\n  on(type, listener) {\n    this._listeners = this._listeners || {};\n    _addEventListener(type, listener, this._listeners);\n    return this;\n  }\n\n  /**\n   * Removes a previously registered event listener.\n   *\n   * @param type - The event type to remove listeners for.\n   * @param listener - The listener function to remove.\n   */\n  off(type, listener) {\n    _removeEventListener(type, listener, this._listeners);\n    _removeEventListener(type, listener, this._oneTimeListeners);\n    return this;\n  }\n\n  /**\n   * Adds a listener that will be called only once to a specified event type.\n   *\n   * The listener will be called first time the event fires after the listener is registered.\n   *\n   * @param type - The event type to listen for.\n   * @param listener - The function to be called when the event is fired the first time.\n   * @returns `this` or a promise if a listener is not provided\n   */\n  once(type, listener) {\n    if (!listener) {\n      return new Promise(resolve => this.once(type, resolve));\n    }\n    this._oneTimeListeners = this._oneTimeListeners || {};\n    _addEventListener(type, listener, this._oneTimeListeners);\n    return this;\n  }\n  fire(event, properties) {\n    // Compatibility with (type: string, properties: Object) signature from previous versions.\n    // See https://github.com/mapbox/mapbox-gl-js/issues/6522,\n    //     https://github.com/mapbox/mapbox-gl-draw/issues/766\n    if (typeof event === 'string') {\n      event = new Event(event, properties || {});\n    }\n    const type = event.type;\n    if (this.listens(type)) {\n      event.target = this;\n\n      // make sure adding or removing listeners inside other listeners won't cause an infinite loop\n      const listeners = this._listeners && this._listeners[type] ? this._listeners[type].slice() : [];\n      for (const listener of listeners) {\n        listener.call(this, event);\n      }\n      const oneTimeListeners = this._oneTimeListeners && this._oneTimeListeners[type] ? this._oneTimeListeners[type].slice() : [];\n      for (const listener of oneTimeListeners) {\n        _removeEventListener(type, listener, this._oneTimeListeners);\n        listener.call(this, event);\n      }\n      const parent = this._eventedParent;\n      if (parent) {\n        extend(event, typeof this._eventedParentData === 'function' ? this._eventedParentData() : this._eventedParentData);\n        parent.fire(event);\n      }\n\n      // To ensure that no error events are dropped, print them to the\n      // console if they have no listeners.\n    } else if (event instanceof ErrorEvent) {\n      console.error(event.error);\n    }\n    return this;\n  }\n  emit(event, properties) {\n    return this.fire(event, properties);\n  }\n\n  /**\n   * Returns a true if this instance of Evented or any forwardeed instances of Evented have a listener for the specified type.\n   *\n   * @param type - The event type\n   * @returns `true` if there is at least one registered listener for specified event type, `false` otherwise\n   */\n  listens(type) {\n    return this._listeners && this._listeners[type] && this._listeners[type].length > 0 || this._oneTimeListeners && this._oneTimeListeners[type] && this._oneTimeListeners[type].length > 0 || this._eventedParent && this._eventedParent.listens(type);\n  }\n\n  /**\n   * Bubble all events fired by this instance of Evented to this parent instance of Evented.\n   */\n  setEventedParent(parent, data) {\n    if (parent) {\n      this._eventedParent = parent;\n    }\n    this._eventedParentData = data;\n    return this;\n  }\n}","map":{"version":3,"names":["_defineProperty","extend","_addEventListener","type","listener","listenerList","listenerExists","indexOf","push","_removeEventListener","index","splice","Event","constructor","data","ErrorEvent","error","Evented","on","_listeners","off","_oneTimeListeners","once","Promise","resolve","fire","event","properties","listens","target","listeners","slice","call","oneTimeListeners","parent","_eventedParent","_eventedParentData","console","emit","length","setEventedParent"],"sources":["/Users/bhanudahiya/Desktop/ledger-IQ/node_modules/@antv/l7-map/es/map/util/evented.js"],"sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { extend } from \"./util\";\n\n/**\n * A listener method used as a callback to events\n */\n\nfunction _addEventListener(type, listener, listenerList) {\n  const listenerExists = listenerList[type] && listenerList[type].indexOf(listener) !== -1;\n  if (!listenerExists) {\n    listenerList[type] = listenerList[type] || [];\n    listenerList[type].push(listener);\n  }\n}\nfunction _removeEventListener(type, listener, listenerList) {\n  if (listenerList && listenerList[type]) {\n    const index = listenerList[type].indexOf(listener);\n    if (index !== -1) {\n      listenerList[type].splice(index, 1);\n    }\n  }\n}\n\n/**\n * The event class\n */\nexport class Event {\n  constructor(type, data = {}) {\n    _defineProperty(this, \"type\", void 0);\n    extend(this, data);\n    this.type = type;\n  }\n}\n/**\n * An error event\n */\nexport class ErrorEvent extends Event {\n  constructor(error, data = {}) {\n    super('error', data);\n    _defineProperty(this, \"error\", void 0);\n    this.error = error;\n  }\n}\n\n/**\n * Methods mixed in to other classes for event capabilities.\n *\n * @group Event Related\n */\nexport class Evented {\n  constructor() {\n    _defineProperty(this, \"_listeners\", void 0);\n    _defineProperty(this, \"_oneTimeListeners\", void 0);\n    _defineProperty(this, \"_eventedParent\", void 0);\n    _defineProperty(this, \"_eventedParentData\", void 0);\n  }\n  /**\n   * Adds a listener to a specified event type.\n   *\n   * @param type - The event type to add a listen for.\n   * @param listener - The function to be called when the event is fired.\n   * The listener function is called with the data object passed to `fire`,\n   * extended with `target` and `type` properties.\n   */\n  on(type, listener) {\n    this._listeners = this._listeners || {};\n    _addEventListener(type, listener, this._listeners);\n    return this;\n  }\n\n  /**\n   * Removes a previously registered event listener.\n   *\n   * @param type - The event type to remove listeners for.\n   * @param listener - The listener function to remove.\n   */\n  off(type, listener) {\n    _removeEventListener(type, listener, this._listeners);\n    _removeEventListener(type, listener, this._oneTimeListeners);\n    return this;\n  }\n\n  /**\n   * Adds a listener that will be called only once to a specified event type.\n   *\n   * The listener will be called first time the event fires after the listener is registered.\n   *\n   * @param type - The event type to listen for.\n   * @param listener - The function to be called when the event is fired the first time.\n   * @returns `this` or a promise if a listener is not provided\n   */\n  once(type, listener) {\n    if (!listener) {\n      return new Promise(resolve => this.once(type, resolve));\n    }\n    this._oneTimeListeners = this._oneTimeListeners || {};\n    _addEventListener(type, listener, this._oneTimeListeners);\n    return this;\n  }\n  fire(event, properties) {\n    // Compatibility with (type: string, properties: Object) signature from previous versions.\n    // See https://github.com/mapbox/mapbox-gl-js/issues/6522,\n    //     https://github.com/mapbox/mapbox-gl-draw/issues/766\n    if (typeof event === 'string') {\n      event = new Event(event, properties || {});\n    }\n    const type = event.type;\n    if (this.listens(type)) {\n      event.target = this;\n\n      // make sure adding or removing listeners inside other listeners won't cause an infinite loop\n      const listeners = this._listeners && this._listeners[type] ? this._listeners[type].slice() : [];\n      for (const listener of listeners) {\n        listener.call(this, event);\n      }\n      const oneTimeListeners = this._oneTimeListeners && this._oneTimeListeners[type] ? this._oneTimeListeners[type].slice() : [];\n      for (const listener of oneTimeListeners) {\n        _removeEventListener(type, listener, this._oneTimeListeners);\n        listener.call(this, event);\n      }\n      const parent = this._eventedParent;\n      if (parent) {\n        extend(event, typeof this._eventedParentData === 'function' ? this._eventedParentData() : this._eventedParentData);\n        parent.fire(event);\n      }\n\n      // To ensure that no error events are dropped, print them to the\n      // console if they have no listeners.\n    } else if (event instanceof ErrorEvent) {\n      console.error(event.error);\n    }\n    return this;\n  }\n  emit(event, properties) {\n    return this.fire(event, properties);\n  }\n\n  /**\n   * Returns a true if this instance of Evented or any forwardeed instances of Evented have a listener for the specified type.\n   *\n   * @param type - The event type\n   * @returns `true` if there is at least one registered listener for specified event type, `false` otherwise\n   */\n  listens(type) {\n    return this._listeners && this._listeners[type] && this._listeners[type].length > 0 || this._oneTimeListeners && this._oneTimeListeners[type] && this._oneTimeListeners[type].length > 0 || this._eventedParent && this._eventedParent.listens(type);\n  }\n\n  /**\n   * Bubble all events fired by this instance of Evented to this parent instance of Evented.\n   */\n  setEventedParent(parent, data) {\n    if (parent) {\n      this._eventedParent = parent;\n    }\n    this._eventedParentData = data;\n    return this;\n  }\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}