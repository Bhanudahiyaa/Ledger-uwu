{"ast":null,"code":"// src/regl/ReglTexture2D.ts\nimport { gl } from \"@antv/l7-core\";\nimport { colorSpaceMap, dataTypeMap, filterMap, formatMap, mipmapMap, wrapModeMap } from \"./constants\";\nvar ReglTexture2D = class {\n  constructor(reGl, options) {\n    this.isDestroy = false;\n    const {\n      data,\n      type = gl.UNSIGNED_BYTE,\n      width,\n      height,\n      flipY = false,\n      format = gl.RGBA,\n      mipmap = false,\n      wrapS = gl.CLAMP_TO_EDGE,\n      wrapT = gl.CLAMP_TO_EDGE,\n      aniso = 0,\n      alignment = 1,\n      premultiplyAlpha = false,\n      mag = gl.NEAREST,\n      min = gl.NEAREST,\n      colorSpace = gl.BROWSER_DEFAULT_WEBGL,\n      x = 0,\n      y = 0,\n      copy = false\n    } = options;\n    this.width = width;\n    this.height = height;\n    const textureOptions = {\n      width,\n      height,\n      // @ts-ignore\n      type: dataTypeMap[type],\n      format: formatMap[format],\n      wrapS: wrapModeMap[wrapS],\n      wrapT: wrapModeMap[wrapT],\n      // @ts-ignore\n      mag: filterMap[mag],\n      min: filterMap[min],\n      alignment,\n      flipY,\n      colorSpace: colorSpaceMap[colorSpace],\n      premultiplyAlpha,\n      aniso,\n      // copy pixels from current bind framebuffer\n      x,\n      y,\n      copy\n    };\n    if (data) {\n      textureOptions.data = data;\n    }\n    if (typeof mipmap === \"number\") {\n      textureOptions.mipmap = mipmapMap[mipmap];\n    } else if (typeof mipmap === \"boolean\") {\n      textureOptions.mipmap = mipmap;\n    }\n    this.texture = reGl.texture(textureOptions);\n  }\n  get() {\n    return this.texture;\n  }\n  update(props = {}) {\n    this.texture(props);\n  }\n  bind() {\n    this.texture._texture.bind();\n  }\n  resize({\n    width,\n    height\n  }) {\n    this.texture.resize(width, height);\n    this.width = width;\n    this.height = height;\n  }\n  getSize() {\n    return [this.width, this.height];\n  }\n  destroy() {\n    var _a;\n    if (!this.isDestroy) {\n      (_a = this.texture) == null ? void 0 : _a.destroy();\n    }\n    this.isDestroy = true;\n  }\n};\nexport { ReglTexture2D as default };","map":{"version":3,"names":["gl","colorSpaceMap","dataTypeMap","filterMap","formatMap","mipmapMap","wrapModeMap","ReglTexture2D","constructor","reGl","options","isDestroy","data","type","UNSIGNED_BYTE","width","height","flipY","format","RGBA","mipmap","wrapS","CLAMP_TO_EDGE","wrapT","aniso","alignment","premultiplyAlpha","mag","NEAREST","min","colorSpace","BROWSER_DEFAULT_WEBGL","x","y","copy","textureOptions","texture","get","update","props","bind","_texture","resize","getSize","destroy","_a","default"],"sources":["/Users/bhanudahiya/Desktop/ledger-IQ/node_modules/@antv/l7-renderer/es/regl/ReglTexture2D.js"],"sourcesContent":["// src/regl/ReglTexture2D.ts\nimport { gl } from \"@antv/l7-core\";\nimport {\n  colorSpaceMap,\n  dataTypeMap,\n  filterMap,\n  formatMap,\n  mipmapMap,\n  wrapModeMap\n} from \"./constants\";\nvar ReglTexture2D = class {\n  constructor(reGl, options) {\n    this.isDestroy = false;\n    const {\n      data,\n      type = gl.UNSIGNED_BYTE,\n      width,\n      height,\n      flipY = false,\n      format = gl.RGBA,\n      mipmap = false,\n      wrapS = gl.CLAMP_TO_EDGE,\n      wrapT = gl.CLAMP_TO_EDGE,\n      aniso = 0,\n      alignment = 1,\n      premultiplyAlpha = false,\n      mag = gl.NEAREST,\n      min = gl.NEAREST,\n      colorSpace = gl.BROWSER_DEFAULT_WEBGL,\n      x = 0,\n      y = 0,\n      copy = false\n    } = options;\n    this.width = width;\n    this.height = height;\n    const textureOptions = {\n      width,\n      height,\n      // @ts-ignore\n      type: dataTypeMap[type],\n      format: formatMap[format],\n      wrapS: wrapModeMap[wrapS],\n      wrapT: wrapModeMap[wrapT],\n      // @ts-ignore\n      mag: filterMap[mag],\n      min: filterMap[min],\n      alignment,\n      flipY,\n      colorSpace: colorSpaceMap[colorSpace],\n      premultiplyAlpha,\n      aniso,\n      // copy pixels from current bind framebuffer\n      x,\n      y,\n      copy\n    };\n    if (data) {\n      textureOptions.data = data;\n    }\n    if (typeof mipmap === \"number\") {\n      textureOptions.mipmap = mipmapMap[mipmap];\n    } else if (typeof mipmap === \"boolean\") {\n      textureOptions.mipmap = mipmap;\n    }\n    this.texture = reGl.texture(textureOptions);\n  }\n  get() {\n    return this.texture;\n  }\n  update(props = {}) {\n    this.texture(props);\n  }\n  bind() {\n    this.texture._texture.bind();\n  }\n  resize({ width, height }) {\n    this.texture.resize(width, height);\n    this.width = width;\n    this.height = height;\n  }\n  getSize() {\n    return [this.width, this.height];\n  }\n  destroy() {\n    var _a;\n    if (!this.isDestroy) {\n      (_a = this.texture) == null ? void 0 : _a.destroy();\n    }\n    this.isDestroy = true;\n  }\n};\nexport {\n  ReglTexture2D as default\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}