{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Rectangle } from '../geometry';\nimport { NumberExt, JQuery, Dom, Unit, Vector } from '../util';\nimport { Base } from './base';\nexport class PrintManager extends Base {\n  show(options = {}) {\n    const localOptions = Object.assign(Object.assign({}, PrintManager.defaultOptions), options);\n    const $pages = this.createPrintPages(localOptions);\n    localOptions.ready($pages, $pages => this.showPrintWindow($pages, localOptions), {\n      sheetSize: this.getSheetSize(localOptions)\n    });\n  }\n  get className() {\n    return this.view.prefixClassName('graph-print');\n  }\n  showPrintWindow($pages, options) {\n    if ($pages) {\n      const $body = JQuery(document.body);\n      const $container = JQuery(this.view.container);\n      const bodyClassName = this.view.prefixClassName('graph-printing');\n      $body.addClass(bodyClassName);\n      const $detached = $container.children().detach();\n      $pages.forEach($page => {\n        $page.removeClass(`${this.className}-preview`).addClass(`${this.className}-ready`).appendTo($body);\n      });\n      let ret = false;\n      const cb = () => {\n        if (!ret) {\n          ret = true;\n          $body.removeClass(bodyClassName);\n          $pages.forEach($page => $page.remove());\n          $container.append($detached);\n          JQuery(`#${this.styleSheetId}`).remove();\n          this.graph.trigger('after:print', options);\n          JQuery(window).off('afterprint', cb);\n        }\n      };\n      JQuery(window).one('afterprint', cb);\n      setTimeout(cb, 200);\n      window.print();\n    }\n  }\n  createPrintPage(pageArea, options) {\n    this.graph.trigger('before:print', options);\n    const $page = JQuery('<div/>').addClass(this.className);\n    const $wrap = JQuery('<div/>').addClass(this.view.prefixClassName('graph-print-inner')).css('position', 'relative');\n    if (options.size) {\n      $page.addClass(`${this.className}-size-${options.size}`);\n    }\n    const vSVG = Vector.create(this.view.svg).clone();\n    const vStage = vSVG.findOne(`.${this.view.prefixClassName('graph-svg-stage')}`);\n    $wrap.append(vSVG.node);\n    const sheetSize = this.getSheetSize(options);\n    const graphArea = this.graph.transform.getGraphArea();\n    const s = this.graph.transform.getScale();\n    const ts = this.graph.translate();\n    const matrix = Dom.createSVGMatrix().translate(ts.tx / s.sx, ts.ty / s.sy);\n    const info = this.getPageInfo(graphArea, pageArea, sheetSize);\n    const scale = info.scale;\n    const bbox = info.bbox;\n    $wrap.css({\n      left: 0,\n      top: 0\n    });\n    vSVG.attr({\n      width: bbox.width * scale,\n      height: bbox.height * scale,\n      style: 'position:relative',\n      viewBox: [bbox.x, bbox.y, bbox.width, bbox.height].join(' ')\n    });\n    vStage.attr('transform', Dom.matrixToTransformString(matrix));\n    $page.append($wrap);\n    $page.addClass(`${this.className}-preview`);\n    return {\n      $page,\n      sheetSize\n    };\n  }\n  createPrintPages(options) {\n    let ret;\n    const area = this.getPrintArea(options);\n    const $pages = [];\n    if (options.page) {\n      const pageSize = this.getPageSize(area, options.page);\n      const pageAreas = this.getPageAreas(area, pageSize);\n      pageAreas.forEach(pageArea => {\n        ret = this.createPrintPage(pageArea, options);\n        $pages.push(ret.$page);\n      });\n    } else {\n      ret = this.createPrintPage(area, options);\n      $pages.push(ret.$page);\n    }\n    if (ret) {\n      const size = {\n        width: ret.sheetSize.cssWidth,\n        height: ret.sheetSize.cssHeight\n      };\n      this.updatePrintStyle(size, options);\n    }\n    return $pages;\n  }\n  get styleSheetId() {\n    return this.view.prefixClassName('graph-print-style');\n  }\n  updatePrintStyle(size, options) {\n    const sizeCSS = Object.keys(size).reduce((memo, key) => `${memo} ${key}:${size[key]};`, '');\n    const margin = NumberExt.normalizeSides(options.margin);\n    const marginUnit = options.marginUnit || '';\n    const sheetUnit = options.sheetUnit || '';\n    const css = `\n      @media print {\n        .${this.className}.${this.className}-ready {\n          ${sizeCSS}\n        }\n\n        @page {\n          margin:\n          ${[margin.top + marginUnit, margin.right + marginUnit, margin.bottom + marginUnit, margin.left + marginUnit].join(' ')};\n          size: ${options.sheet.width + sheetUnit} ${options.sheet.height + sheetUnit};\n\n        .${this.className}.${this.className}-preview {\n          ${sizeCSS}\n        }\n      }`;\n    const id = this.styleSheetId;\n    const $style = JQuery(`#${id}`);\n    if ($style.length) {\n      $style.html(css);\n    } else {\n      JQuery('head').append(`'<style type=\"text/css\" id=\"${id}\">${css}</style>'`);\n    }\n  }\n  getPrintArea(options) {\n    let area = options.area;\n    if (!area) {\n      const padding = NumberExt.normalizeSides(options.padding);\n      area = this.graph.getContentArea().moveAndExpand({\n        x: -padding.left,\n        y: -padding.top,\n        width: padding.left + padding.right,\n        height: padding.top + padding.bottom\n      });\n    }\n    return area;\n  }\n  getPageSize(area, poster) {\n    if (typeof poster === 'object') {\n      const raw = poster;\n      const page = {\n        width: raw.width,\n        height: raw.height\n      };\n      if (page.width == null) {\n        page.width = Math.ceil(area.width / (raw.columns || 1));\n      }\n      if (page.height == null) {\n        page.height = Math.ceil(area.height / (raw.rows || 1));\n      }\n      return page;\n    }\n    return {\n      width: area.width,\n      height: area.height\n    };\n  }\n  getPageAreas(area, pageSize) {\n    const pages = [];\n    const width = pageSize.width;\n    const height = pageSize.height;\n    for (let w = 0, n = 0; w < area.height && n < 200; w += height, n += 1) {\n      for (let h = 0, m = 0; h < area.width && m < 200; h += width, m += 1) {\n        pages.push(new Rectangle(area.x + h, area.y + w, width, height));\n      }\n    }\n    return pages;\n  }\n  getSheetSize(options) {\n    const sheet = options.sheet;\n    const margin = NumberExt.normalizeSides(options.margin);\n    const marginUnit = options.marginUnit || '';\n    const sheetUnit = options.sheetUnit || '';\n    const cssWidth =\n    // eslint-disable-next-line\n    `calc(${sheet.width}${sheetUnit} - ${margin.left + margin.right}${marginUnit})`;\n    const cssHeight =\n    // eslint-disable-next-line\n    `calc(${sheet.height}${sheetUnit} - ${margin.top + margin.bottom}${marginUnit})`;\n    const ret = Unit.measure(cssWidth, cssHeight);\n    return {\n      cssWidth,\n      cssHeight,\n      width: ret.width,\n      height: ret.height\n    };\n  }\n  getPageInfo(graphArea, pageArea, sheetSize) {\n    const bbox = new Rectangle(pageArea.x - graphArea.x, pageArea.y - graphArea.y, pageArea.width, pageArea.height);\n    const pageRatio = bbox.width / bbox.height;\n    const graphRatio = sheetSize.width / sheetSize.height;\n    return {\n      bbox,\n      scale: graphRatio < pageRatio ? sheetSize.width / bbox.width : sheetSize.height / bbox.height,\n      fitHorizontal: graphRatio < pageRatio\n    };\n  }\n  dispose() {}\n}\n__decorate([Base.dispose()], PrintManager.prototype, \"dispose\", null);\n(function (PrintManager) {\n  PrintManager.defaultOptions = {\n    page: false,\n    sheet: {\n      width: 210,\n      height: 297\n    },\n    sheetUnit: 'mm',\n    margin: 0.4,\n    marginUnit: 'in',\n    padding: 5,\n    ready: ($pages, readyToPrint) => readyToPrint($pages)\n  };\n})(PrintManager || (PrintManager = {}));","map":{"version":3,"names":["Rectangle","NumberExt","JQuery","Dom","Unit","Vector","Base","PrintManager","show","options","localOptions","Object","assign","defaultOptions","$pages","createPrintPages","ready","showPrintWindow","sheetSize","getSheetSize","className","view","prefixClassName","$body","document","body","$container","container","bodyClassName","addClass","$detached","children","detach","forEach","$page","removeClass","appendTo","ret","cb","remove","append","styleSheetId","graph","trigger","window","off","one","setTimeout","print","createPrintPage","pageArea","$wrap","css","size","vSVG","create","svg","clone","vStage","findOne","node","graphArea","transform","getGraphArea","s","getScale","ts","translate","matrix","createSVGMatrix","tx","sx","ty","sy","info","getPageInfo","scale","bbox","left","top","attr","width","height","style","viewBox","x","y","join","matrixToTransformString","area","getPrintArea","page","pageSize","getPageSize","pageAreas","getPageAreas","push","cssWidth","cssHeight","updatePrintStyle","sizeCSS","keys","reduce","memo","key","margin","normalizeSides","marginUnit","sheetUnit","right","bottom","sheet","id","$style","length","html","padding","getContentArea","moveAndExpand","poster","raw","Math","ceil","columns","rows","pages","w","n","h","m","measure","pageRatio","graphRatio","fitHorizontal","dispose","__decorate","readyToPrint"],"sources":["/Users/bhanudahiya/Desktop/ledger-IQ/node_modules/@antv/x6/src/graph/print.ts"],"sourcesContent":["import { Size, KeyValue } from '../types'\nimport { Rectangle } from '../geometry'\nimport { NumberExt, JQuery, Dom, Unit, Vector } from '../util'\nimport { Base } from './base'\n\nexport class PrintManager extends Base {\n  show(options: Partial<PrintManager.Options> = {}) {\n    const localOptions = {\n      ...PrintManager.defaultOptions,\n      ...options,\n    } as PrintManager.Options\n\n    const $pages = this.createPrintPages(localOptions)\n    localOptions.ready(\n      $pages,\n      ($pages) => this.showPrintWindow($pages, localOptions),\n      {\n        sheetSize: this.getSheetSize(localOptions),\n      },\n    )\n  }\n\n  protected get className() {\n    return this.view.prefixClassName('graph-print')\n  }\n\n  protected showPrintWindow(\n    $pages: JQuery<HTMLElement>[] | false,\n    options: PrintManager.Options,\n  ) {\n    if ($pages) {\n      const $body = JQuery(document.body)\n      const $container = JQuery(this.view.container)\n      const bodyClassName = this.view.prefixClassName('graph-printing')\n      $body.addClass(bodyClassName)\n      const $detached = $container.children().detach()\n      $pages.forEach(($page) => {\n        $page\n          .removeClass(`${this.className}-preview`)\n          .addClass(`${this.className}-ready`)\n          .appendTo($body)\n      })\n\n      let ret = false\n      const cb = () => {\n        if (!ret) {\n          ret = true\n          $body.removeClass(bodyClassName)\n          $pages.forEach(($page) => $page.remove())\n          $container.append($detached)\n          JQuery(`#${this.styleSheetId}`).remove()\n          this.graph.trigger('after:print', options)\n          JQuery(window).off('afterprint', cb)\n        }\n      }\n\n      JQuery(window).one('afterprint', cb)\n      setTimeout(cb, 200)\n      window.print()\n    }\n  }\n\n  protected createPrintPage(\n    pageArea: Rectangle.RectangleLike,\n    options: PrintManager.Options,\n  ) {\n    this.graph.trigger('before:print', options)\n\n    const $page = JQuery('<div/>').addClass(this.className)\n    const $wrap = JQuery('<div/>')\n      .addClass(this.view.prefixClassName('graph-print-inner'))\n      .css('position', 'relative')\n\n    if (options.size) {\n      $page.addClass(`${this.className}-size-${options.size}`)\n    }\n\n    const vSVG = Vector.create(this.view.svg).clone()\n    const vStage = vSVG.findOne(\n      `.${this.view.prefixClassName('graph-svg-stage')}`,\n    )!\n\n    $wrap.append(vSVG.node)\n\n    const sheetSize = this.getSheetSize(options)\n    const graphArea = this.graph.transform.getGraphArea()\n    const s = this.graph.transform.getScale()\n    const ts = this.graph.translate()\n    const matrix = Dom.createSVGMatrix().translate(ts.tx / s.sx, ts.ty / s.sy)\n    const info = this.getPageInfo(graphArea, pageArea, sheetSize)\n    const scale = info.scale\n    const bbox = info.bbox\n\n    $wrap.css({\n      left: 0,\n      top: 0,\n    })\n\n    vSVG.attr({\n      width: bbox.width * scale,\n      height: bbox.height * scale,\n      style: 'position:relative',\n      viewBox: [bbox.x, bbox.y, bbox.width, bbox.height].join(' '),\n    })\n\n    vStage.attr('transform', Dom.matrixToTransformString(matrix))\n    $page.append($wrap)\n    $page.addClass(`${this.className}-preview`)\n\n    return {\n      $page,\n      sheetSize,\n    }\n  }\n\n  protected createPrintPages(options: PrintManager.Options) {\n    let ret\n    const area = this.getPrintArea(options)\n    const $pages = []\n\n    if (options.page) {\n      const pageSize = this.getPageSize(area, options.page)\n      const pageAreas = this.getPageAreas(area, pageSize)\n      pageAreas.forEach((pageArea) => {\n        ret = this.createPrintPage(pageArea, options)\n        $pages.push(ret.$page)\n      })\n    } else {\n      ret = this.createPrintPage(area, options)\n      $pages.push(ret.$page)\n    }\n\n    if (ret) {\n      const size = {\n        width: ret.sheetSize.cssWidth,\n        height: ret.sheetSize.cssHeight,\n      }\n      this.updatePrintStyle(size, options)\n    }\n\n    return $pages\n  }\n\n  protected get styleSheetId() {\n    return this.view.prefixClassName('graph-print-style')\n  }\n\n  protected updatePrintStyle(\n    size: KeyValue<string>,\n    options: PrintManager.Options,\n  ) {\n    const sizeCSS = Object.keys(size).reduce(\n      (memo, key) => `${memo} ${key}:${size[key]};`,\n      '',\n    )\n\n    const margin = NumberExt.normalizeSides(options.margin)\n    const marginUnit = options.marginUnit || ''\n    const sheetUnit = options.sheetUnit || ''\n\n    const css = `\n      @media print {\n        .${this.className}.${this.className}-ready {\n          ${sizeCSS}\n        }\n\n        @page {\n          margin:\n          ${[\n            margin.top + marginUnit,\n            margin.right + marginUnit,\n            margin.bottom + marginUnit,\n            margin.left + marginUnit,\n          ].join(' ')};\n          size: ${options.sheet.width + sheetUnit} ${\n      options.sheet.height + sheetUnit\n    };\n\n        .${this.className}.${this.className}-preview {\n          ${sizeCSS}\n        }\n      }`\n\n    const id = this.styleSheetId\n    const $style = JQuery(`#${id}`)\n    if ($style.length) {\n      $style.html(css)\n    } else {\n      JQuery('head').append(\n        `'<style type=\"text/css\" id=\"${id}\">${css}</style>'`, // lgtm[js/html-constructed-from-input]\n      )\n    }\n  }\n\n  protected getPrintArea(options: PrintManager.Options) {\n    let area = options.area\n    if (!area) {\n      const padding = NumberExt.normalizeSides(options.padding)\n      area = this.graph.getContentArea().moveAndExpand({\n        x: -padding.left,\n        y: -padding.top,\n        width: padding.left + padding.right,\n        height: padding.top + padding.bottom,\n      })\n    }\n    return area\n  }\n\n  protected getPageSize(\n    area: Rectangle.RectangleLike,\n    poster: PrintManager.Page,\n  ): Size {\n    if (typeof poster === 'object') {\n      const raw = poster as any\n      const page = {\n        width: raw.width,\n        height: raw.height,\n      }\n\n      if (page.width == null) {\n        page.width = Math.ceil(area.width / (raw.columns || 1))\n      }\n\n      if (page.height == null) {\n        page.height = Math.ceil(area.height / (raw.rows || 1))\n      }\n\n      return page\n    }\n\n    return {\n      width: area.width,\n      height: area.height,\n    }\n  }\n\n  protected getPageAreas(area: Rectangle.RectangleLike, pageSize: Size) {\n    const pages = []\n    const width = pageSize.width\n    const height = pageSize.height\n\n    for (let w = 0, n = 0; w < area.height && n < 200; w += height, n += 1) {\n      for (let h = 0, m = 0; h < area.width && m < 200; h += width, m += 1) {\n        pages.push(new Rectangle(area.x + h, area.y + w, width, height))\n      }\n    }\n\n    return pages\n  }\n\n  protected getSheetSize(\n    options: PrintManager.Options,\n  ): PrintManager.SheetSize {\n    const sheet = options.sheet\n    const margin = NumberExt.normalizeSides(options.margin)\n    const marginUnit = options.marginUnit || ''\n    const sheetUnit = options.sheetUnit || ''\n\n    const cssWidth =\n      // eslint-disable-next-line\n      `calc(${sheet.width}${sheetUnit} - ${\n        margin.left + margin.right\n      }${marginUnit})`\n\n    const cssHeight =\n      // eslint-disable-next-line\n      `calc(${sheet.height}${sheetUnit} - ${\n        margin.top + margin.bottom\n      }${marginUnit})`\n\n    const ret = Unit.measure(cssWidth, cssHeight)\n    return {\n      cssWidth,\n      cssHeight,\n      width: ret.width,\n      height: ret.height,\n    }\n  }\n\n  protected getPageInfo(\n    graphArea: Rectangle.RectangleLike,\n    pageArea: Rectangle.RectangleLike,\n    sheetSize: Size,\n  ) {\n    const bbox = new Rectangle(\n      pageArea.x - graphArea.x,\n      pageArea.y - graphArea.y,\n      pageArea.width,\n      pageArea.height,\n    )\n    const pageRatio = bbox.width / bbox.height\n    const graphRatio = sheetSize.width / sheetSize.height\n\n    return {\n      bbox,\n      scale:\n        graphRatio < pageRatio\n          ? sheetSize.width / bbox.width\n          : sheetSize.height / bbox.height,\n      fitHorizontal: graphRatio < pageRatio,\n    }\n  }\n\n  @Base.dispose()\n  dispose() {}\n}\n\nexport namespace PrintManager {\n  export type Page =\n    | boolean\n    | Size\n    | {\n        rows: number\n        columns: number\n      }\n\n  export interface Options {\n    size?: string\n    sheet: Size\n    sheetUnit?: Unit\n    area?: Rectangle.RectangleLike\n    page?: Page\n    margin?: NumberExt.SideOptions\n    marginUnit?: Unit\n    padding?: NumberExt.SideOptions\n    ready: (\n      $pages: JQuery<HTMLElement>[],\n      readyToPrint: ($pages: JQuery<HTMLElement>[] | false) => any,\n      options: {\n        sheetSize: SheetSize\n      },\n    ) => any\n  }\n\n  export interface SheetSize extends Size {\n    cssWidth: string\n    cssHeight: string\n  }\n\n  export const defaultOptions: Options = {\n    page: false,\n    sheet: {\n      width: 210,\n      height: 297,\n    },\n    sheetUnit: 'mm',\n    margin: 0.4,\n    marginUnit: 'in',\n    padding: 5,\n    ready: ($pages, readyToPrint) => readyToPrint($pages),\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}