{"ast":null,"code":"import { __awaiter, __decorate, __metadata } from \"tslib\";\n/* eslint-disable @typescript-eslint/no-redeclare */\n/* eslint-disable no-await-in-loop */\n/* eslint-disable max-classes-per-file */\nimport { inject, singleton, contrib, Contribution } from 'mana-syringe';\nimport { Node as X6Node, Edge as X6Edge } from '@antv/x6';\nimport { IGraphProvider } from '../xflow-main/graph/graph-provider';\nimport { IGraphCommandService } from '../command/interface';\nimport { IModelService } from '../model-service';\nimport { IFrontendApplicationContribution } from './interface';\nimport { cellsToJson } from '../common/graph-utils';\nexport { IFrontendApplicationContribution } from './interface';\nconst TIMER_WARNING_THRESHOLD = 100;\nlet FrontendApplication = class FrontendApplication {\n  constructor() {\n    /** 获取画布实例 */\n    this.getGraphInstance = () => {\n      return this.graphProvider.getGraphInstance();\n    };\n    /** 获取画布配置项 */\n    this.getGraphConfig = () => {\n      return this.graphProvider.getGraphOptions();\n    };\n    /** 获取画布配置项 */\n    this.getGraphData = () => __awaiter(this, void 0, void 0, function* () {\n      const graph = yield this.graphProvider.getGraphInstance();\n      const cells = graph.getCells();\n      return cellsToJson(cells);\n    });\n    /** 获取画布所有节点 */\n    this.getAllNodes = () => __awaiter(this, void 0, void 0, function* () {\n      const graph = yield this.graphProvider.getGraphInstance();\n      return graph.getNodes();\n    });\n    /** 获取画布节点 */\n    this.getNodeById = nodeId => __awaiter(this, void 0, void 0, function* () {\n      const graph = yield this.graphProvider.getGraphInstance();\n      return graph.getCellById(nodeId);\n    });\n    /** 获取画布所有连线 */\n    this.getAllEdges = () => __awaiter(this, void 0, void 0, function* () {\n      const graph = yield this.graphProvider.getGraphInstance();\n      return graph.getEdges();\n    });\n    /** 获取画布连线 */\n    this.getEdgeById = edgeId => __awaiter(this, void 0, void 0, function* () {\n      const graph = yield this.graphProvider.getGraphInstance();\n      return graph.getCellById(edgeId);\n    });\n    /** 更新节点样式 */\n    this.updateNodeAttrs = (node, attrs) => __awaiter(this, void 0, void 0, function* () {\n      if (node instanceof X6Node) {\n        node.setAttrs(attrs);\n      } else {\n        const x6Node = yield this.getNodeById(node);\n        x6Node.setAttrs(attrs);\n      }\n    });\n    /** 更新连线样式 */\n    this.updateEdgeAttrs = (edge, attrs) => __awaiter(this, void 0, void 0, function* () {\n      if (edge instanceof X6Edge) {\n        edge.setAttrs(attrs);\n      } else {\n        const x6Edge = yield this.getEdgeById(edge);\n        x6Edge.setAttrs(attrs);\n      }\n    });\n    /** 平移画布 */\n    this.translateGraph = (tx, ty) => __awaiter(this, void 0, void 0, function* () {\n      const graph = yield this.graphProvider.getGraphInstance();\n      const currentTranslate = graph.translate();\n      graph.translate(currentTranslate.tx + tx, currentTranslate.ty + ty);\n    });\n  }\n  /** 启动app */\n  start() {\n    return __awaiter(this, void 0, void 0, function* () {\n      yield this.startContributions();\n      this.registerEventListeners();\n    });\n  }\n  /** 暴露命令的执行接口 */\n  executeCommand(commandId, cmdArgs, hook = []) {\n    return this.commandService.executeCommand(commandId, cmdArgs, hook);\n  }\n  /** 暴露命令的批量执行接口 */\n  executeCommandPipeline(cmdOptions) {\n    return this.commandService.executeCommandPipeline(cmdOptions);\n  }\n  /**\n   * Register global event listeners.\n   */\n  registerEventListeners() {\n    /** 触发app的卸载逻辑 */\n    window.addEventListener('unload', () => {\n      this.stopContributions();\n    });\n  }\n  /**\n   * Initialize and start the frontend application contributions.\n   */\n  startContributions() {\n    return __awaiter(this, void 0, void 0, function* () {\n      console.log(this.contributions.getContributions());\n      for (const contribution of this.contributions.getContributions()) {\n        if (contribution.onStart) {\n          try {\n            yield this.measure(`${contribution.constructor.name}.onStart`, () => contribution.onStart(this));\n          } catch (error) {\n            console.error('Could not start contribution', error);\n          }\n        }\n      }\n    });\n  }\n  /**\n   * Stop the frontend application contributions. This is called when the window is unloaded.\n   */\n  stopContributions() {\n    console.info('>>> Stopping frontend contributions...');\n    for (const contribution of this.contributions.getContributions()) {\n      if (contribution.onStop) {\n        try {\n          contribution.onStop(this);\n        } catch (error) {\n          console.error('Could not stop contribution', error);\n        }\n      }\n    }\n    console.info('<<< All frontend contributions have been stopped.');\n  }\n  measure(name, fn) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const startMark = `${name}-start`;\n      const endMark = `${name}-end`;\n      performance.mark(startMark);\n      const result = yield fn();\n      performance.mark(endMark);\n      performance.measure(name, startMark, endMark);\n      for (const item of performance.getEntriesByName(name)) {\n        const contribution = `Frontend ${item.name}`;\n        if (item.duration > TIMER_WARNING_THRESHOLD) {\n          console.warn(`${contribution} is slow, took: ${item.duration.toFixed(1)} ms`);\n        } else {\n          console.debug(`${contribution} took: ${item.duration.toFixed(1)} ms`);\n        }\n      }\n      performance.clearMeasures(name);\n      return result;\n    });\n  }\n};\n__decorate([contrib(IFrontendApplicationContribution), __metadata(\"design:type\", Object)], FrontendApplication.prototype, \"contributions\", void 0);\n__decorate([inject(IGraphProvider), __metadata(\"design:type\", Object)], FrontendApplication.prototype, \"graphProvider\", void 0);\n__decorate([inject(IGraphCommandService), __metadata(\"design:type\", Object)], FrontendApplication.prototype, \"commandService\", void 0);\n__decorate([inject(IModelService), __metadata(\"design:type\", Object)], FrontendApplication.prototype, \"modelService\", void 0);\nFrontendApplication = __decorate([singleton()], FrontendApplication);\nexport { FrontendApplication };","map":{"version":3,"names":["inject","singleton","contrib","Contribution","Node","X6Node","Edge","X6Edge","IGraphProvider","IGraphCommandService","IModelService","IFrontendApplicationContribution","cellsToJson","TIMER_WARNING_THRESHOLD","FrontendApplication","constructor","getGraphInstance","graphProvider","getGraphConfig","getGraphOptions","getGraphData","__awaiter","graph","cells","getCells","getAllNodes","getNodes","getNodeById","nodeId","getCellById","getAllEdges","getEdges","getEdgeById","edgeId","updateNodeAttrs","node","attrs","setAttrs","x6Node","updateEdgeAttrs","edge","x6Edge","translateGraph","tx","ty","currentTranslate","translate","start","startContributions","registerEventListeners","executeCommand","commandId","cmdArgs","hook","commandService","executeCommandPipeline","cmdOptions","window","addEventListener","stopContributions","console","log","contributions","getContributions","contribution","onStart","measure","name","error","info","onStop","fn","startMark","endMark","performance","mark","result","item","getEntriesByName","duration","warn","toFixed","debug","clearMeasures","__decorate"],"sources":["../../src/xflow-main/application.ts"],"sourcesContent":[null],"mappings":";AAAA;AACA;AACA;AACA,SAASA,MAAM,EAAEC,SAAS,EAAEC,OAAO,EAAEC,YAAY,QAAQ,cAAc;AAEvE,SAASC,IAAI,IAAIC,MAAM,EAAEC,IAAI,IAAIC,MAAM,QAAQ,UAAU;AAIzD,SAASC,cAAc,QAAQ,oCAAoC;AACnE,SAASC,oBAAoB,QAAQ,sBAAsB;AAC3D,SAASC,aAAa,QAAQ,kBAAkB;AAChD,SAASC,gCAAgC,QAAQ,aAAa;AAC9D,SAASC,WAAW,QAAQ,uBAAuB;AAEnD,SAASD,gCAAgC,QAAQ,aAAa;AAE9D,MAAME,uBAAuB,GAAG,GAAG;AAG5B,IAAMC,mBAAmB,GAAzB,MAAMA,mBAAmB;EAAzBC,YAAA;IAuBL;IACO,KAAAC,gBAAgB,GAAG,MAAK;MAC7B,OAAO,IAAI,CAACC,aAAa,CAACD,gBAAgB,EAAE;IAC9C,CAAC;IAED;IACO,KAAAE,cAAc,GAAG,MAAK;MAC3B,OAAO,IAAI,CAACD,aAAa,CAACE,eAAe,EAAE;IAC7C,CAAC;IAED;IACO,KAAAC,YAAY,GAAG,MAAWC,SAAA;MAC/B,MAAMC,KAAK,GAAG,MAAM,IAAI,CAACL,aAAa,CAACD,gBAAgB,EAAE;MACzD,MAAMO,KAAK,GAAGD,KAAK,CAACE,QAAQ,EAAE;MAC9B,OAAOZ,WAAW,CAACW,KAAK,CAAC;IAC3B,CAAC;IAED;IACO,KAAAE,WAAW,GAAG,MAAWJ,SAAA;MAC9B,MAAMC,KAAK,GAAG,MAAM,IAAI,CAACL,aAAa,CAACD,gBAAgB,EAAE;MACzD,OAAOM,KAAK,CAACI,QAAQ,EAAE;IACzB,CAAC;IAED;IACO,KAAAC,WAAW,GAAUC,MAAc,IAAIP,SAAA;MAC5C,MAAMC,KAAK,GAAG,MAAM,IAAI,CAACL,aAAa,CAACD,gBAAgB,EAAE;MACzD,OAAOM,KAAK,CAACO,WAAW,CAACD,MAAM,CAAW;IAC5C,CAAC;IAED;IACO,KAAAE,WAAW,GAAG,MAAWT,SAAA;MAC9B,MAAMC,KAAK,GAAG,MAAM,IAAI,CAACL,aAAa,CAACD,gBAAgB,EAAE;MACzD,OAAOM,KAAK,CAACS,QAAQ,EAAE;IACzB,CAAC;IAED;IACO,KAAAC,WAAW,GAAUC,MAAc,IAAIZ,SAAA;MAC5C,MAAMC,KAAK,GAAG,MAAM,IAAI,CAACL,aAAa,CAACD,gBAAgB,EAAE;MACzD,OAAOM,KAAK,CAACO,WAAW,CAACI,MAAM,CAAW;IAC5C,CAAC;IAED;IACO,KAAAC,eAAe,GAAG,CAAOC,IAAqB,EAAEC,KAA8B,KAAIf,SAAA;MACvF,IAAIc,IAAI,YAAY9B,MAAM,EAAE;QAC1B8B,IAAI,CAACE,QAAQ,CAACD,KAAK,CAAC;OACrB,MAAM;QACL,MAAME,MAAM,GAAG,MAAM,IAAI,CAACX,WAAW,CAACQ,IAAI,CAAC;QAC3CG,MAAM,CAACD,QAAQ,CAACD,KAAK,CAAC;;IAE1B,CAAC;IAED;IACO,KAAAG,eAAe,GAAG,CAAOC,IAAqB,EAAEJ,KAA8B,KAAIf,SAAA;MACvF,IAAImB,IAAI,YAAYjC,MAAM,EAAE;QAC1BiC,IAAI,CAACH,QAAQ,CAACD,KAAK,CAAC;OACrB,MAAM;QACL,MAAMK,MAAM,GAAG,MAAM,IAAI,CAACT,WAAW,CAACQ,IAAI,CAAC;QAC3CC,MAAM,CAACJ,QAAQ,CAACD,KAAK,CAAC;;IAE1B,CAAC;IAED;IACO,KAAAM,cAAc,GAAG,CAAOC,EAAU,EAAEC,EAAU,KAAIvB,SAAA;MACvD,MAAMC,KAAK,GAAG,MAAM,IAAI,CAACL,aAAa,CAACD,gBAAgB,EAAE;MACzD,MAAM6B,gBAAgB,GAAGvB,KAAK,CAACwB,SAAS,EAAE;MAC1CxB,KAAK,CAACwB,SAAS,CAACD,gBAAgB,CAACF,EAAE,GAAGA,EAAE,EAAEE,gBAAgB,CAACD,EAAE,GAAGA,EAAE,CAAC;IACrE,CAAC;EA+EH;EAvJE;EACaG,KAAKA,CAAA;;MAChB,MAAM,IAAI,CAACC,kBAAkB,EAAE;MAC/B,IAAI,CAACC,sBAAsB,EAAE;IAC/B,CAAC;;EAsED;EACOC,cAAcA,CACnBC,SAAiB,EACjBC,OAAa,EACbC,IAAA,GAAmC,EAAE;IAErC,OAAO,IAAI,CAACC,cAAc,CAACJ,cAAc,CAAeC,SAAS,EAAEC,OAAO,EAAEC,IAAI,CAAC;EACnF;EAEA;EACOE,sBAAsBA,CAACC,UAAmC;IAC/D,OAAO,IAAI,CAACF,cAAc,CAACC,sBAAsB,CAACC,UAAU,CAAC;EAC/D;EAEA;;;EAGUP,sBAAsBA,CAAA;IAC9B;IACAQ,MAAM,CAACC,gBAAgB,CAAC,QAAQ,EAAE,MAAK;MACrC,IAAI,CAACC,iBAAiB,EAAE;IAC1B,CAAC,CAAC;EACJ;EAEA;;;EAGgBX,kBAAkBA,CAAA;;MAChCY,OAAO,CAACC,GAAG,CAAC,IAAI,CAACC,aAAa,CAACC,gBAAgB,EAAE,CAAC;MAClD,KAAK,MAAMC,YAAY,IAAI,IAAI,CAACF,aAAa,CAACC,gBAAgB,EAAE,EAAE;QAChE,IAAIC,YAAY,CAACC,OAAO,EAAE;UACxB,IAAI;YACF,MAAM,IAAI,CAACC,OAAO,CAAC,GAAGF,YAAY,CAACjD,WAAW,CAACoD,IAAI,UAAU,EAAE,MAC7DH,YAAY,CAACC,OAAQ,CAAC,IAAI,CAAC,CAC5B;WACF,CAAC,OAAOG,KAAK,EAAE;YACdR,OAAO,CAACQ,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;;;;IAI5D,CAAC;;EAED;;;EAGUT,iBAAiBA,CAAA;IACzBC,OAAO,CAACS,IAAI,CAAC,wCAAwC,CAAC;IACtD,KAAK,MAAML,YAAY,IAAI,IAAI,CAACF,aAAa,CAACC,gBAAgB,EAAE,EAAE;MAChE,IAAIC,YAAY,CAACM,MAAM,EAAE;QACvB,IAAI;UACFN,YAAY,CAACM,MAAM,CAAC,IAAI,CAAC;SAC1B,CAAC,OAAOF,KAAK,EAAE;UACdR,OAAO,CAACQ,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;;;;IAIzDR,OAAO,CAACS,IAAI,CAAC,mDAAmD,CAAC;EACnE;EAEgBH,OAAOA,CAAIC,IAAY,EAAEI,EAAyB;;MAChE,MAAMC,SAAS,GAAG,GAAGL,IAAI,QAAQ;MACjC,MAAMM,OAAO,GAAG,GAAGN,IAAI,MAAM;MAC7BO,WAAW,CAACC,IAAI,CAACH,SAAS,CAAC;MAC3B,MAAMI,MAAM,GAAG,MAAML,EAAE,EAAE;MACzBG,WAAW,CAACC,IAAI,CAACF,OAAO,CAAC;MACzBC,WAAW,CAACR,OAAO,CAACC,IAAI,EAAEK,SAAS,EAAEC,OAAO,CAAC;MAC7C,KAAK,MAAMI,IAAI,IAAIH,WAAW,CAACI,gBAAgB,CAACX,IAAI,CAAC,EAAE;QACrD,MAAMH,YAAY,GAAG,YAAYa,IAAI,CAACV,IAAI,EAAE;QAC5C,IAAIU,IAAI,CAACE,QAAQ,GAAGlE,uBAAuB,EAAE;UAC3C+C,OAAO,CAACoB,IAAI,CAAC,GAAGhB,YAAY,mBAAmBa,IAAI,CAACE,QAAQ,CAACE,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC;SAC9E,MAAM;UACLrB,OAAO,CAACsB,KAAK,CAAC,GAAGlB,YAAY,UAAUa,IAAI,CAACE,QAAQ,CAACE,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC;;;MAGzEP,WAAW,CAACS,aAAa,CAAChB,IAAI,CAAC;MAC/B,OAAOS,MAAM;IACf,CAAC;;CACF;AAtKCQ,UAAA,EAAClF,OAAO,CAACS,gCAAgC,CAAC,E,2FACgD;AAG1FyE,UAAA,EAACpF,MAAM,CAACQ,cAAc,CAAC,E,2FACuB;AAG9C4E,UAAA,EAACpF,MAAM,CAACS,oBAAoB,CAAC,E,4FACwB;AAGrD2E,UAAA,EAACpF,MAAM,CAACU,aAAa,CAAC,E,0FACsB;AAfjCI,mBAAmB,GAAAsE,UAAA,EAD/BnF,SAAS,EAAE,C,EACCa,mBAAmB,CAwK/B;SAxKYA,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}