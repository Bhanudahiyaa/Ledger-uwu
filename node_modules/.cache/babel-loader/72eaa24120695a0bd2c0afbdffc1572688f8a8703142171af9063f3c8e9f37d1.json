{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { AttributeType, gl } from '@antv/l7-core';\nimport { fp64LowPart } from '@antv/l7-utils';\nimport BaseModel from \"../../core/BaseModel\";\nimport { FlowLineTriangulation } from \"../../core/line_trangluation\";\n/* babel-plugin-inline-import '../shaders/flow/flow_line_frag.glsl' */\nconst flow_line_frag = \"// #extension GL_OES_standard_derivatives : enable\\n\\nin vec4 v_color;\\nout vec4 outputColor;\\n\\n\\n// line texture\\n\\n#pragma include \\\"picking\\\"\\n\\nvoid main() {\\n  outputColor = v_color;\\n  outputColor = filterColor(outputColor);\\n}\\n\";\n/* babel-plugin-inline-import '../shaders/flow/flow_line_vert.glsl' */\nconst flow_line_vert = \"layout(location = ATTRIBUTE_LOCATION_POSITION) in vec3 a_Position;\\nlayout(location = ATTRIBUTE_LOCATION_COLOR) in vec4 a_Color;\\nlayout(location = ATTRIBUTE_LOCATION_SIZE) in vec2 a_Size;\\nlayout(location = ATTRIBUTE_LOCATION_INSTANCE) in vec4 a_Instance;\\nlayout(location = ATTRIBUTE_LOCATION_INSTANCE_64LOW) in vec4 a_Instance64Low;\\nlayout(location = ATTRIBUTE_LOCATION_NORMAL) in vec3 a_Normal;\\n\\nlayout(std140) uniform commonUniorm {\\n  float u_gap_width: 1.0;\\n  float u_stroke_width: 1.0;\\n  float u_stroke_opacity: 1.0;\\n};\\n\\n#pragma include \\\"projection\\\"\\n#pragma include \\\"project\\\"\\n#pragma include \\\"picking\\\"\\n\\nout vec4 v_color;\\n\\nvec2 project_pixel_offset(vec2 offsets) {\\n  vec2 data = project_pixel(offsets);\\n\\n  return vec2(data.x, -data.y);\\n}\\n\\nvec2 line_dir(vec2 target, vec2 source) {\\n  return normalize(ProjectFlat(target) - ProjectFlat(source));\\n}\\n\\n\\nvoid main() {\\n  // \\u900F\\u660E\\u5EA6\\u8BA1\\u7B97\\n  vec2 source_world = a_Instance.rg; // \\u8D77\\u70B9\\n  vec2 target_world = a_Instance.ba; // \\u7EC8\\u70B9\\n  vec2 flowlineDir = line_dir(target_world, source_world);\\n  vec2 perpendicularDir = vec2(-flowlineDir.y, flowlineDir.x);\\n\\n  vec2 position = mix(source_world, target_world, a_Position.x);\\n  vec2 position64Low = mix(a_Instance64Low.rg, a_Instance64Low.ba, a_Position.x);\\n\\n  float lengthCommon = length(\\n    project_position(vec4(target_world, 0, 1)) - project_position(vec4(source_world, 0, 1))\\n  );\\n  vec2 offsetDistances = a_Size.x * project_pixel_offset(vec2(a_Position.y, a_Position.z)); // Mapbox || \\u9AD8\\u5FB7\\n  vec2 limitedOffsetDistances = clamp(\\n    offsetDistances,\\n    project_pixel(-lengthCommon * 0.2),\\n    project_pixel(lengthCommon * 0.2)\\n  );\\n\\n  float startOffsetCommon = project_pixel(offsets[0]);\\n  float endOffsetCommon = project_pixel(offsets[1]);\\n  float endpointOffset = mix(\\n    clamp(startOffsetCommon, 0.0, lengthCommon * 0.2),\\n    -clamp(endOffsetCommon, 0.0, lengthCommon * 0.2),\\n    a_Position.x\\n  );\\n\\n  vec2 normalsCommon = u_stroke_width * project_pixel_offset(vec2(a_Normal.x, a_Normal.y));\\n\\n  float gapCommon = -1. * project_pixel(u_gap_width);\\n  vec3 offsetCommon = vec3(\\n    flowlineDir * (limitedOffsetDistances[1] + normalsCommon.y + endpointOffset * 1.05) -\\n      perpendicularDir * (limitedOffsetDistances[0] + gapCommon + normalsCommon.x),\\n    0.0\\n  );\\n\\n  vec4 project_pos = project_position(vec4(position.xy, 0, 1.0), position64Low);\\n\\n  vec4 fillColor = vec4(a_Color.rgb, a_Color.a * opacity);\\n  v_color = mix(fillColor, vec4(u_stroke.xyz, u_stroke.w * fillColor.w * u_stroke_opacity), a_Normal.z);\\n\\n  gl_Position = project_common_position_to_clipspace(vec4(project_pos.xy +  offsetCommon.xy, 0., 1.0));\\n\\n  setPickingColor(a_PickingColor);\\n}\\n\";\nexport default class FlowLineModel extends BaseModel {\n  get attributeLocation() {\n    return Object.assign(super.attributeLocation, {\n      MAX: super.attributeLocation.MAX,\n      SIZE: 9,\n      INSTANCE: 10,\n      INSTANCE_64LOW: 11,\n      NORMAL: 12\n    });\n  }\n  getCommonUniformsInfo() {\n    const {\n      gapWidth = 2,\n      strokeWidth = 1,\n      strokeOpacity = 1\n    } = this.layer.getLayerConfig();\n    const commonOptions = {\n      u_gap_width: gapWidth,\n      u_stroke_width: strokeWidth,\n      u_stroke_opacity: strokeOpacity\n    };\n    const commonBufferInfo = this.getUniformsBufferInfo(commonOptions);\n    return commonBufferInfo;\n  }\n  initModels() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      _this.initUniformsBuffer();\n      return _this.buildModels();\n    })();\n  }\n  buildModels() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      const modelFill = yield _this2.layer.buildLayerModel({\n        moduleName: 'flow_line',\n        vertexShader: flow_line_vert,\n        fragmentShader: flow_line_frag,\n        defines: _this2.getDefines(),\n        inject: _this2.getInject(),\n        triangulation: FlowLineTriangulation,\n        styleOption: _this2.layer.getLayerConfig().symbol,\n        primitive: gl.TRIANGLES,\n        depth: {\n          enable: false\n        },\n        pick: false\n      });\n      return [modelFill];\n    })();\n  }\n  registerBuiltinAttributes() {\n    // 注册 Style 参与数据映射的内置属性\n    this.styleAttributeService.registerStyleAttribute({\n      name: 'size',\n      type: AttributeType.Attribute,\n      descriptor: {\n        name: 'a_Size',\n        // 宽度\n        shaderLocation: this.attributeLocation.SIZE,\n        buffer: {\n          // give the WebGL driver a hint that this buffer may change\n          usage: gl.DYNAMIC_DRAW,\n          data: [],\n          type: gl.FLOAT\n        },\n        size: 2,\n        update: feature => {\n          const {\n            size = 1\n          } = feature;\n          return Array.isArray(size) ? [size[0], size[1]] : [size, 0];\n        }\n      }\n    });\n    this.styleAttributeService.registerStyleAttribute({\n      name: 'instance',\n      // 弧线起始点信息\n      type: AttributeType.Attribute,\n      descriptor: {\n        name: 'a_Instance',\n        shaderLocation: this.attributeLocation.INSTANCE,\n        buffer: {\n          usage: gl.STATIC_DRAW,\n          data: [],\n          type: gl.FLOAT\n        },\n        size: 4,\n        update: (feature, featureIdx, vertex) => {\n          return [vertex[3], vertex[4], vertex[5], vertex[6]];\n        }\n      }\n    });\n\n    // save low part for enabled double precision INSTANCE attribute\n    this.styleAttributeService.registerStyleAttribute({\n      name: 'instance64Low',\n      type: AttributeType.Attribute,\n      descriptor: {\n        name: 'a_Instance64Low',\n        shaderLocation: this.attributeLocation.INSTANCE_64LOW,\n        buffer: {\n          usage: gl.STATIC_DRAW,\n          data: [],\n          type: gl.FLOAT\n        },\n        size: 4,\n        update: (feature, featureIdx, vertex) => {\n          return [fp64LowPart(vertex[3]), fp64LowPart(vertex[4]), fp64LowPart(vertex[5]), fp64LowPart(vertex[6])];\n        }\n      }\n    });\n    this.styleAttributeService.registerStyleAttribute({\n      name: 'normal',\n      type: AttributeType.Attribute,\n      descriptor: {\n        name: 'a_Normal',\n        shaderLocation: this.attributeLocation.NORMAL,\n        buffer: {\n          usage: gl.STATIC_DRAW,\n          data: [],\n          type: gl.FLOAT\n        },\n        size: 3,\n        update: (feature, featureIdx, vertex, attributeIdx, normal) => {\n          return normal;\n        }\n      }\n    });\n  }\n}","map":{"version":3,"names":["_asyncToGenerator","AttributeType","gl","fp64LowPart","BaseModel","FlowLineTriangulation","flow_line_frag","flow_line_vert","FlowLineModel","attributeLocation","Object","assign","MAX","SIZE","INSTANCE","INSTANCE_64LOW","NORMAL","getCommonUniformsInfo","gapWidth","strokeWidth","strokeOpacity","layer","getLayerConfig","commonOptions","u_gap_width","u_stroke_width","u_stroke_opacity","commonBufferInfo","getUniformsBufferInfo","initModels","_this","initUniformsBuffer","buildModels","_this2","modelFill","buildLayerModel","moduleName","vertexShader","fragmentShader","defines","getDefines","inject","getInject","triangulation","styleOption","symbol","primitive","TRIANGLES","depth","enable","pick","registerBuiltinAttributes","styleAttributeService","registerStyleAttribute","name","type","Attribute","descriptor","shaderLocation","buffer","usage","DYNAMIC_DRAW","data","FLOAT","size","update","feature","Array","isArray","STATIC_DRAW","featureIdx","vertex","attributeIdx","normal"],"sources":["/Users/bhanudahiya/Desktop/ledger-IQ/node_modules/@antv/l7-layers/es/line/models/flow.js"],"sourcesContent":["import _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { AttributeType, gl } from '@antv/l7-core';\nimport { fp64LowPart } from '@antv/l7-utils';\nimport BaseModel from \"../../core/BaseModel\";\nimport { FlowLineTriangulation } from \"../../core/line_trangluation\";\n/* babel-plugin-inline-import '../shaders/flow/flow_line_frag.glsl' */\nconst flow_line_frag = \"// #extension GL_OES_standard_derivatives : enable\\n\\nin vec4 v_color;\\nout vec4 outputColor;\\n\\n\\n// line texture\\n\\n#pragma include \\\"picking\\\"\\n\\nvoid main() {\\n  outputColor = v_color;\\n  outputColor = filterColor(outputColor);\\n}\\n\";\n/* babel-plugin-inline-import '../shaders/flow/flow_line_vert.glsl' */\nconst flow_line_vert = \"layout(location = ATTRIBUTE_LOCATION_POSITION) in vec3 a_Position;\\nlayout(location = ATTRIBUTE_LOCATION_COLOR) in vec4 a_Color;\\nlayout(location = ATTRIBUTE_LOCATION_SIZE) in vec2 a_Size;\\nlayout(location = ATTRIBUTE_LOCATION_INSTANCE) in vec4 a_Instance;\\nlayout(location = ATTRIBUTE_LOCATION_INSTANCE_64LOW) in vec4 a_Instance64Low;\\nlayout(location = ATTRIBUTE_LOCATION_NORMAL) in vec3 a_Normal;\\n\\nlayout(std140) uniform commonUniorm {\\n  float u_gap_width: 1.0;\\n  float u_stroke_width: 1.0;\\n  float u_stroke_opacity: 1.0;\\n};\\n\\n#pragma include \\\"projection\\\"\\n#pragma include \\\"project\\\"\\n#pragma include \\\"picking\\\"\\n\\nout vec4 v_color;\\n\\nvec2 project_pixel_offset(vec2 offsets) {\\n  vec2 data = project_pixel(offsets);\\n\\n  return vec2(data.x, -data.y);\\n}\\n\\nvec2 line_dir(vec2 target, vec2 source) {\\n  return normalize(ProjectFlat(target) - ProjectFlat(source));\\n}\\n\\n\\nvoid main() {\\n  // \\u900F\\u660E\\u5EA6\\u8BA1\\u7B97\\n  vec2 source_world = a_Instance.rg; // \\u8D77\\u70B9\\n  vec2 target_world = a_Instance.ba; // \\u7EC8\\u70B9\\n  vec2 flowlineDir = line_dir(target_world, source_world);\\n  vec2 perpendicularDir = vec2(-flowlineDir.y, flowlineDir.x);\\n\\n  vec2 position = mix(source_world, target_world, a_Position.x);\\n  vec2 position64Low = mix(a_Instance64Low.rg, a_Instance64Low.ba, a_Position.x);\\n\\n  float lengthCommon = length(\\n    project_position(vec4(target_world, 0, 1)) - project_position(vec4(source_world, 0, 1))\\n  );\\n  vec2 offsetDistances = a_Size.x * project_pixel_offset(vec2(a_Position.y, a_Position.z)); // Mapbox || \\u9AD8\\u5FB7\\n  vec2 limitedOffsetDistances = clamp(\\n    offsetDistances,\\n    project_pixel(-lengthCommon * 0.2),\\n    project_pixel(lengthCommon * 0.2)\\n  );\\n\\n  float startOffsetCommon = project_pixel(offsets[0]);\\n  float endOffsetCommon = project_pixel(offsets[1]);\\n  float endpointOffset = mix(\\n    clamp(startOffsetCommon, 0.0, lengthCommon * 0.2),\\n    -clamp(endOffsetCommon, 0.0, lengthCommon * 0.2),\\n    a_Position.x\\n  );\\n\\n  vec2 normalsCommon = u_stroke_width * project_pixel_offset(vec2(a_Normal.x, a_Normal.y));\\n\\n  float gapCommon = -1. * project_pixel(u_gap_width);\\n  vec3 offsetCommon = vec3(\\n    flowlineDir * (limitedOffsetDistances[1] + normalsCommon.y + endpointOffset * 1.05) -\\n      perpendicularDir * (limitedOffsetDistances[0] + gapCommon + normalsCommon.x),\\n    0.0\\n  );\\n\\n  vec4 project_pos = project_position(vec4(position.xy, 0, 1.0), position64Low);\\n\\n  vec4 fillColor = vec4(a_Color.rgb, a_Color.a * opacity);\\n  v_color = mix(fillColor, vec4(u_stroke.xyz, u_stroke.w * fillColor.w * u_stroke_opacity), a_Normal.z);\\n\\n  gl_Position = project_common_position_to_clipspace(vec4(project_pos.xy +  offsetCommon.xy, 0., 1.0));\\n\\n  setPickingColor(a_PickingColor);\\n}\\n\";\nexport default class FlowLineModel extends BaseModel {\n  get attributeLocation() {\n    return Object.assign(super.attributeLocation, {\n      MAX: super.attributeLocation.MAX,\n      SIZE: 9,\n      INSTANCE: 10,\n      INSTANCE_64LOW: 11,\n      NORMAL: 12\n    });\n  }\n  getCommonUniformsInfo() {\n    const {\n      gapWidth = 2,\n      strokeWidth = 1,\n      strokeOpacity = 1\n    } = this.layer.getLayerConfig();\n    const commonOptions = {\n      u_gap_width: gapWidth,\n      u_stroke_width: strokeWidth,\n      u_stroke_opacity: strokeOpacity\n    };\n    const commonBufferInfo = this.getUniformsBufferInfo(commonOptions);\n    return commonBufferInfo;\n  }\n  initModels() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      _this.initUniformsBuffer();\n      return _this.buildModels();\n    })();\n  }\n  buildModels() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      const modelFill = yield _this2.layer.buildLayerModel({\n        moduleName: 'flow_line',\n        vertexShader: flow_line_vert,\n        fragmentShader: flow_line_frag,\n        defines: _this2.getDefines(),\n        inject: _this2.getInject(),\n        triangulation: FlowLineTriangulation,\n        styleOption: _this2.layer.getLayerConfig().symbol,\n        primitive: gl.TRIANGLES,\n        depth: {\n          enable: false\n        },\n        pick: false\n      });\n      return [modelFill];\n    })();\n  }\n  registerBuiltinAttributes() {\n    // 注册 Style 参与数据映射的内置属性\n    this.styleAttributeService.registerStyleAttribute({\n      name: 'size',\n      type: AttributeType.Attribute,\n      descriptor: {\n        name: 'a_Size',\n        // 宽度\n        shaderLocation: this.attributeLocation.SIZE,\n        buffer: {\n          // give the WebGL driver a hint that this buffer may change\n          usage: gl.DYNAMIC_DRAW,\n          data: [],\n          type: gl.FLOAT\n        },\n        size: 2,\n        update: feature => {\n          const {\n            size = 1\n          } = feature;\n          return Array.isArray(size) ? [size[0], size[1]] : [size, 0];\n        }\n      }\n    });\n    this.styleAttributeService.registerStyleAttribute({\n      name: 'instance',\n      // 弧线起始点信息\n      type: AttributeType.Attribute,\n      descriptor: {\n        name: 'a_Instance',\n        shaderLocation: this.attributeLocation.INSTANCE,\n        buffer: {\n          usage: gl.STATIC_DRAW,\n          data: [],\n          type: gl.FLOAT\n        },\n        size: 4,\n        update: (feature, featureIdx, vertex) => {\n          return [vertex[3], vertex[4], vertex[5], vertex[6]];\n        }\n      }\n    });\n\n    // save low part for enabled double precision INSTANCE attribute\n    this.styleAttributeService.registerStyleAttribute({\n      name: 'instance64Low',\n      type: AttributeType.Attribute,\n      descriptor: {\n        name: 'a_Instance64Low',\n        shaderLocation: this.attributeLocation.INSTANCE_64LOW,\n        buffer: {\n          usage: gl.STATIC_DRAW,\n          data: [],\n          type: gl.FLOAT\n        },\n        size: 4,\n        update: (feature, featureIdx, vertex) => {\n          return [fp64LowPart(vertex[3]), fp64LowPart(vertex[4]), fp64LowPart(vertex[5]), fp64LowPart(vertex[6])];\n        }\n      }\n    });\n    this.styleAttributeService.registerStyleAttribute({\n      name: 'normal',\n      type: AttributeType.Attribute,\n      descriptor: {\n        name: 'a_Normal',\n        shaderLocation: this.attributeLocation.NORMAL,\n        buffer: {\n          usage: gl.STATIC_DRAW,\n          data: [],\n          type: gl.FLOAT\n        },\n        size: 3,\n        update: (feature, featureIdx, vertex, attributeIdx, normal) => {\n          return normal;\n        }\n      }\n    });\n  }\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}