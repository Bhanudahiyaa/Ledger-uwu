{"ast":null,"code":"export default class Grid {\n  constructor() {\n    this.cells = [];\n    this.columnNum = 0;\n    this.rowNum = 0;\n    this.additionColumn = [];\n    this.additionRow = [];\n  }\n  init(width, height, gridSize) {\n    this.cells = [];\n    this.CELL_W = gridSize.CELL_W || Grid.DEFAULT_CELL_W;\n    this.CELL_H = gridSize.CELL_H || Grid.DEFAULT_CELL_H;\n    this.columnNum = Math.ceil(width / this.CELL_W);\n    this.rowNum = Math.ceil(height / this.CELL_H);\n    Grid.MIN_DIST = Math.pow(width, 2) + Math.pow(height, 2);\n    for (let i = 0; i < this.columnNum; i++) {\n      const tmp = [];\n      for (let j = 0; j < this.rowNum; j++) {\n        const cell = {\n          dx: i,\n          dy: j,\n          x: i * this.CELL_W,\n          y: j * this.CELL_H,\n          occupied: false\n        };\n        tmp.push(cell);\n      }\n      this.cells.push(tmp);\n    }\n  }\n  findGridByNodeId(nodeId) {\n    var _a, _b;\n    for (let i = 0; i < this.columnNum; i++) {\n      for (let j = 0; j < this.rowNum; j++) {\n        if (this.cells[i][j].node) {\n          if (((_b = (_a = this.cells[i][j]) === null || _a === void 0 ? void 0 : _a.node) === null || _b === void 0 ? void 0 : _b.id) === nodeId) {\n            return {\n              column: i,\n              row: j\n            };\n          }\n        }\n      }\n    }\n    return null;\n  }\n  sqdist(a, b) {\n    return Math.pow(a.x - b.x, 2) + Math.pow(a.y - b.y, 2);\n  }\n  occupyNearest(p) {\n    let minDist = Grid.MIN_DIST;\n    let d;\n    let candidate = null;\n    for (let i = 0; i < this.columnNum; i++) {\n      for (let j = 0; j < this.rowNum; j++) {\n        if (!this.cells[i][j].occupied && (d = this.sqdist(p, this.cells[i][j])) < minDist) {\n          minDist = d;\n          candidate = this.cells[i][j];\n        }\n      }\n    }\n    if (candidate) {\n      candidate.occupied = true;\n    }\n    return candidate;\n  }\n  insertColumn(columnIndex, length) {\n    if (length <= 0) return;\n    // 插入空列\n    for (let i = 0; i < length; i++) {\n      this.cells[i + this.columnNum] = [];\n      for (let j = 0; j < this.rowNum; j++) {\n        this.cells[i + this.columnNum][j] = {\n          dx: i,\n          dy: j,\n          x: i * this.CELL_W,\n          y: j * this.CELL_H,\n          occupied: false,\n          node: null\n        };\n      }\n    }\n    // 交换数据\n    for (let i = this.columnNum - 1; i > columnIndex; i--) {\n      for (let j = 0; j < this.rowNum; j++) {\n        this.cells[i + length][j] = Object.assign(Object.assign({}, this.cells[i][j]), {\n          x: (i + length) * this.CELL_W,\n          y: j * this.CELL_H\n        });\n        this.cells[i][j] = {\n          x: i * this.CELL_W,\n          y: j * this.CELL_H,\n          occupied: true,\n          node: null\n        };\n      }\n    }\n    // 已有行列的处理\n    for (let j = 0; j < this.additionColumn.length; j++) {\n      if (this.additionColumn[j] >= columnIndex) {\n        this.additionColumn[j] += length;\n      }\n    }\n    // 记录新增的行列\n    for (let i = 0; i < length; i++) {\n      this.additionColumn.push(columnIndex + i + 1);\n    }\n    this.columnNum += length;\n  }\n  insertRow(rowIndex, length) {\n    if (length <= 0) return;\n    // 插入空行\n    for (let j = 0; j < length; j++) {\n      for (let i = 0; i < this.columnNum; i++) {\n        this.cells[i][j + this.rowNum] = {\n          dx: i,\n          dy: j,\n          x: i * this.CELL_W,\n          y: j * this.CELL_H,\n          occupied: false,\n          node: null\n        };\n      }\n    }\n    // 交换数据\n    for (let i = 0; i < this.columnNum; i++) {\n      for (let j = this.rowNum - 1; j > rowIndex; j--) {\n        this.cells[i][j + length] = Object.assign(Object.assign({}, this.cells[i][j]), {\n          dx: i,\n          dy: j + length,\n          x: i * this.CELL_W,\n          y: (j + length) * this.CELL_H\n        });\n        this.cells[i][j] = {\n          dx: i,\n          dy: j,\n          x: i * this.CELL_W,\n          y: j * this.CELL_H,\n          occupied: false,\n          node: null\n        };\n      }\n    }\n    // 已有行列的处理\n    for (let j = 0; j < this.additionRow.length; j++) {\n      if (this.additionRow[j] >= rowIndex) {\n        this.additionRow[j] += length;\n      }\n    }\n    // 记录新增的行列\n    for (let i = 0; i < length; i++) {\n      this.additionRow.push(rowIndex + i + 1);\n    }\n    this.rowNum += length;\n  }\n  getNodes() {\n    const nodes = [];\n    for (let i = 0; i < this.columnNum; i++) {\n      for (let j = 0; j < this.rowNum; j++) {\n        if (this.cells[i][j].node) {\n          nodes.push(this.cells[i][j]);\n        }\n      }\n    }\n    return nodes;\n  }\n}\nGrid.MIN_DIST = 50;\nGrid.DEFAULT_CELL_W = 80;\nGrid.DEFAULT_CELL_H = 80;","map":{"version":3,"names":["Grid","constructor","cells","columnNum","rowNum","additionColumn","additionRow","init","width","height","gridSize","CELL_W","DEFAULT_CELL_W","CELL_H","DEFAULT_CELL_H","Math","ceil","MIN_DIST","pow","i","tmp","j","cell","dx","dy","x","y","occupied","push","findGridByNodeId","nodeId","node","_b","_a","id","column","row","sqdist","a","b","occupyNearest","p","minDist","d","candidate","insertColumn","columnIndex","length","Object","assign","insertRow","rowIndex","getNodes","nodes"],"sources":["../../../src/layout/er/grid.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}