{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { createL7Icon } from \"../utils/icon\";\nimport SelectControl from \"./baseControl/selectControl\";\nexport { LayerSwitch };\nfunction isLayerSwitchItem(obj) {\n  return Object.keys(obj !== null && obj !== void 0 ? obj : {}).every(key => ['layer', 'name', 'img'].includes(key));\n}\nexport default class LayerSwitch extends SelectControl {\n  constructor(...args) {\n    super(...args);\n    _defineProperty(this, \"onLayerChange\", () => {\n      var _this$controlOption$l;\n      if ((_this$controlOption$l = this.controlOption.layers) !== null && _this$controlOption$l !== void 0 && _this$controlOption$l.length) {\n        return;\n      }\n      this.selectValue = this.getLayerVisible();\n      this.setOptions({\n        options: this.getLayerOptions()\n      });\n    });\n    _defineProperty(this, \"onLayerVisibleChane\", () => {\n      this.setSelectValue(this.getLayerVisible());\n    });\n    _defineProperty(this, \"onSelectChange\", () => {\n      this.layers.forEach(layer => {\n        const needShow = this.selectValue.includes(layer.name);\n        const isShow = layer.isVisible();\n        if (needShow && !isShow) {\n          layer.show();\n        }\n        if (!needShow && isShow) {\n          layer.hide();\n        }\n      });\n    });\n  }\n  get layers() {\n    const layerService = this.layerService;\n    const {\n      layers\n    } = this.controlOption;\n    if (Array.isArray(layers) && layers.length) {\n      const layerInstances = [];\n      layers.forEach(layer => {\n        if (layer instanceof Object) {\n          if (isLayerSwitchItem(layer)) {\n            layerInstances.push(layer.layer);\n          } else {\n            layerInstances.push(layer);\n          }\n        }\n        if (typeof layer === 'string') {\n          const targetLayer = layerService.getLayer(layer) || layerService.getLayerByName(layer);\n          if (targetLayer) {\n            layerInstances.push(targetLayer);\n          }\n        }\n      });\n      return layerInstances;\n    }\n    return layerService.getLayers() || [];\n  }\n  getDefault(option) {\n    var _option$multiple;\n    return _objectSpread(_objectSpread({}, super.getDefault(option)), {}, {\n      title: '图层控制',\n      btnIcon: createL7Icon('l7-icon-layer'),\n      options: [],\n      multiple: (_option$multiple = option === null || option === void 0 ? void 0 : option.multiple) !== null && _option$multiple !== void 0 ? _option$multiple : true\n    });\n  }\n  getLayerVisible() {\n    return this.layers.filter(layer => layer.isVisible()).map(layer => layer.name);\n  }\n  getLayerOptions() {\n    const {\n      layers\n    } = this.controlOption;\n    const isAllImg = layers === null || layers === void 0 ? void 0 : layers.every(item => item.img);\n    if (layers) {\n      return layers === null || layers === void 0 ? void 0 : layers.map(layer => {\n        if (isLayerSwitchItem(layer)) {\n          return {\n            text: layer.name || layer.layer.name,\n            value: layer.layer.name,\n            img: isAllImg ? layer.img : undefined\n          };\n        } else if (typeof layer === 'string') {\n          const targetLayer = this.layerService.getLayer(layer) || this.layerService.getLayerByName(layer);\n          return {\n            text: targetLayer === null || targetLayer === void 0 ? void 0 : targetLayer.name,\n            value: targetLayer === null || targetLayer === void 0 ? void 0 : targetLayer.name\n          };\n        }\n        return {\n          text: layer.name,\n          value: layer.name\n        };\n      });\n    }\n    return this.layers.map(layer => {\n      return {\n        text: layer.name,\n        value: layer.name\n      };\n    });\n  }\n  setOptions(option) {\n    const isLayerChange = this.checkUpdateOption(option, ['layers', 'multiple']);\n    super.setOptions(option);\n    if (isLayerChange) {\n      if (this.controlOption.multiple === false) {\n        this.handleSingleSelection();\n      }\n      this.selectValue = this.getLayerVisible();\n      this.controlOption.options = this.getLayerOptions();\n      this.popper.setContent(this.getPopperContent(this.controlOption.options));\n    }\n  }\n\n  // TODO: 单选模式下，目前默认展示第一项，通过用户提供defaultValue展示默认选项的属性待开发\n  // 如果是单选模式，则只显示第一个图层\n  handleSingleSelection() {\n    this.layers.forEach((layer, index) => {\n      index === 0 ? layer.show() : layer.hide();\n    });\n  }\n  onAdd() {\n    var _this$controlOption$o;\n    if (this.controlOption.multiple === false) {\n      this.handleSingleSelection();\n    }\n    if (!((_this$controlOption$o = this.controlOption.options) !== null && _this$controlOption$o !== void 0 && _this$controlOption$o.length)) {\n      this.controlOption.options = this.getLayerOptions();\n    }\n    if (!this.controlOption.defaultValue) {\n      this.controlOption.defaultValue = this.getLayerVisible();\n    }\n    this.on('selectChange', this.onSelectChange);\n    this.layerService.on('layerChange', this.onLayerChange);\n    return super.onAdd();\n  }\n  onRemove() {\n    this.off('selectChange', this.onSelectChange);\n    this.layerService.off('layerChange', this.onLayerChange);\n  }\n  getIsMultiple() {\n    return this.controlOption.multiple;\n  }\n}","map":{"version":3,"names":["_objectSpread","_defineProperty","createL7Icon","SelectControl","LayerSwitch","isLayerSwitchItem","obj","Object","keys","every","key","includes","constructor","args","_this$controlOption$l","controlOption","layers","length","selectValue","getLayerVisible","setOptions","options","getLayerOptions","setSelectValue","forEach","layer","needShow","name","isShow","isVisible","show","hide","layerService","Array","isArray","layerInstances","push","targetLayer","getLayer","getLayerByName","getLayers","getDefault","option","_option$multiple","title","btnIcon","multiple","filter","map","isAllImg","item","img","text","value","undefined","isLayerChange","checkUpdateOption","handleSingleSelection","popper","setContent","getPopperContent","index","onAdd","_this$controlOption$o","defaultValue","on","onSelectChange","onLayerChange","onRemove","off","getIsMultiple"],"sources":["/Users/bhanudahiya/Desktop/ledger-IQ/node_modules/@antv/l7-component/es/control/layerSwitch.js"],"sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { createL7Icon } from \"../utils/icon\";\nimport SelectControl from \"./baseControl/selectControl\";\nexport { LayerSwitch };\nfunction isLayerSwitchItem(obj) {\n  return Object.keys(obj !== null && obj !== void 0 ? obj : {}).every(key => ['layer', 'name', 'img'].includes(key));\n}\nexport default class LayerSwitch extends SelectControl {\n  constructor(...args) {\n    super(...args);\n    _defineProperty(this, \"onLayerChange\", () => {\n      var _this$controlOption$l;\n      if ((_this$controlOption$l = this.controlOption.layers) !== null && _this$controlOption$l !== void 0 && _this$controlOption$l.length) {\n        return;\n      }\n      this.selectValue = this.getLayerVisible();\n      this.setOptions({\n        options: this.getLayerOptions()\n      });\n    });\n    _defineProperty(this, \"onLayerVisibleChane\", () => {\n      this.setSelectValue(this.getLayerVisible());\n    });\n    _defineProperty(this, \"onSelectChange\", () => {\n      this.layers.forEach(layer => {\n        const needShow = this.selectValue.includes(layer.name);\n        const isShow = layer.isVisible();\n        if (needShow && !isShow) {\n          layer.show();\n        }\n        if (!needShow && isShow) {\n          layer.hide();\n        }\n      });\n    });\n  }\n  get layers() {\n    const layerService = this.layerService;\n    const {\n      layers\n    } = this.controlOption;\n    if (Array.isArray(layers) && layers.length) {\n      const layerInstances = [];\n      layers.forEach(layer => {\n        if (layer instanceof Object) {\n          if (isLayerSwitchItem(layer)) {\n            layerInstances.push(layer.layer);\n          } else {\n            layerInstances.push(layer);\n          }\n        }\n        if (typeof layer === 'string') {\n          const targetLayer = layerService.getLayer(layer) || layerService.getLayerByName(layer);\n          if (targetLayer) {\n            layerInstances.push(targetLayer);\n          }\n        }\n      });\n      return layerInstances;\n    }\n    return layerService.getLayers() || [];\n  }\n  getDefault(option) {\n    var _option$multiple;\n    return _objectSpread(_objectSpread({}, super.getDefault(option)), {}, {\n      title: '图层控制',\n      btnIcon: createL7Icon('l7-icon-layer'),\n      options: [],\n      multiple: (_option$multiple = option === null || option === void 0 ? void 0 : option.multiple) !== null && _option$multiple !== void 0 ? _option$multiple : true\n    });\n  }\n  getLayerVisible() {\n    return this.layers.filter(layer => layer.isVisible()).map(layer => layer.name);\n  }\n  getLayerOptions() {\n    const {\n      layers\n    } = this.controlOption;\n    const isAllImg = layers === null || layers === void 0 ? void 0 : layers.every(item => item.img);\n    if (layers) {\n      return layers === null || layers === void 0 ? void 0 : layers.map(layer => {\n        if (isLayerSwitchItem(layer)) {\n          return {\n            text: layer.name || layer.layer.name,\n            value: layer.layer.name,\n            img: isAllImg ? layer.img : undefined\n          };\n        } else if (typeof layer === 'string') {\n          const targetLayer = this.layerService.getLayer(layer) || this.layerService.getLayerByName(layer);\n          return {\n            text: targetLayer === null || targetLayer === void 0 ? void 0 : targetLayer.name,\n            value: targetLayer === null || targetLayer === void 0 ? void 0 : targetLayer.name\n          };\n        }\n        return {\n          text: layer.name,\n          value: layer.name\n        };\n      });\n    }\n    return this.layers.map(layer => {\n      return {\n        text: layer.name,\n        value: layer.name\n      };\n    });\n  }\n  setOptions(option) {\n    const isLayerChange = this.checkUpdateOption(option, ['layers', 'multiple']);\n    super.setOptions(option);\n    if (isLayerChange) {\n      if (this.controlOption.multiple === false) {\n        this.handleSingleSelection();\n      }\n      this.selectValue = this.getLayerVisible();\n      this.controlOption.options = this.getLayerOptions();\n      this.popper.setContent(this.getPopperContent(this.controlOption.options));\n    }\n  }\n\n  // TODO: 单选模式下，目前默认展示第一项，通过用户提供defaultValue展示默认选项的属性待开发\n  // 如果是单选模式，则只显示第一个图层\n  handleSingleSelection() {\n    this.layers.forEach((layer, index) => {\n      index === 0 ? layer.show() : layer.hide();\n    });\n  }\n  onAdd() {\n    var _this$controlOption$o;\n    if (this.controlOption.multiple === false) {\n      this.handleSingleSelection();\n    }\n    if (!((_this$controlOption$o = this.controlOption.options) !== null && _this$controlOption$o !== void 0 && _this$controlOption$o.length)) {\n      this.controlOption.options = this.getLayerOptions();\n    }\n    if (!this.controlOption.defaultValue) {\n      this.controlOption.defaultValue = this.getLayerVisible();\n    }\n    this.on('selectChange', this.onSelectChange);\n    this.layerService.on('layerChange', this.onLayerChange);\n    return super.onAdd();\n  }\n  onRemove() {\n    this.off('selectChange', this.onSelectChange);\n    this.layerService.off('layerChange', this.onLayerChange);\n  }\n  getIsMultiple() {\n    return this.controlOption.multiple;\n  }\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}