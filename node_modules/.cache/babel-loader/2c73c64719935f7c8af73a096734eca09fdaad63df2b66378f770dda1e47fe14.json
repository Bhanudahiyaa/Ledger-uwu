{"ast":null,"code":"import util from '../util';\nimport { alignCoordinates, balance, findSmallestWidthAlignment, findType1Conflicts, findType2Conflicts, horizontalCompaction, verticalAlignment } from './bk';\nconst positionY = g => {\n  const layering = util.buildLayerMatrix(g);\n  const rankSep = g.graph().ranksep;\n  let prevY = 0;\n  layering === null || layering === void 0 ? void 0 : layering.forEach(layer => {\n    const heights = layer.map(v => g.node(v).height);\n    const maxHeight = Math.max(...heights);\n    layer === null || layer === void 0 ? void 0 : layer.forEach(v => {\n      g.node(v).y = prevY + maxHeight / 2;\n    });\n    prevY += maxHeight + rankSep;\n  });\n};\nconst positionX = g => {\n  const layering = util.buildLayerMatrix(g);\n  const conflicts = Object.assign(findType1Conflicts(g, layering), findType2Conflicts(g, layering));\n  const xss = {};\n  let adjustedLayering;\n  [\"u\", \"d\"].forEach(vert => {\n    // @ts-ignore\n    adjustedLayering = vert === \"u\" ? layering : Object.values(layering).reverse();\n    [\"l\", \"r\"].forEach(horiz => {\n      if (horiz === \"r\") {\n        // @ts-ignore\n        adjustedLayering = adjustedLayering.map(inner => Object.values(inner).reverse());\n      }\n      const neighborFn = (vert === \"u\" ? g.predecessors : g.successors).bind(g);\n      const align = verticalAlignment(g, adjustedLayering, conflicts, neighborFn);\n      const xs = horizontalCompaction(g, adjustedLayering, align.root, align.align, horiz === \"r\");\n      if (horiz === \"r\") {\n        Object.keys(xs).forEach(xsKey => xs[xsKey] = -xs[xsKey]);\n      }\n      xss[vert + horiz] = xs;\n    });\n  });\n  const smallestWidth = findSmallestWidthAlignment(g, xss);\n  smallestWidth && alignCoordinates(xss, smallestWidth);\n  return balance(xss, g.graph().align);\n};\nconst position = g => {\n  var _a;\n  // tslint:disable-next-line\n  g = util.asNonCompoundGraph(g);\n  positionY(g);\n  const xs = positionX(g);\n  (_a = Object.keys(xs)) === null || _a === void 0 ? void 0 : _a.forEach(key => {\n    g.node(key).x = xs[key];\n  });\n};\nexport default position;","map":{"version":3,"names":["util","alignCoordinates","balance","findSmallestWidthAlignment","findType1Conflicts","findType2Conflicts","horizontalCompaction","verticalAlignment","positionY","g","layering","buildLayerMatrix","rankSep","graph","ranksep","prevY","forEach","layer","heights","map","v","node","height","maxHeight","Math","max","y","positionX","conflicts","Object","assign","xss","adjustedLayering","vert","values","reverse","horiz","inner","neighborFn","predecessors","successors","bind","align","xs","root","keys","xsKey","smallestWidth","position","asNonCompoundGraph","_a","key","x"],"sources":["../../../../../src/layout/dagre/src/position/index.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}