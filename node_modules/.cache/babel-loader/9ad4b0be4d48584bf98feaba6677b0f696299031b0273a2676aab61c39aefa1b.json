{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n/**\n * A {@link DragPanHandler} options object\n */\n\n/**\n * The `DragPanHandler` allows the user to pan the map by clicking and dragging\n * the cursor.\n *\n * @group Handlers\n */\nexport class DragPanHandler {\n  /** @internal */\n  constructor(el, mousePan, touchPan) {\n    _defineProperty(this, \"_el\", void 0);\n    _defineProperty(this, \"_mousePan\", void 0);\n    _defineProperty(this, \"_touchPan\", void 0);\n    _defineProperty(this, \"_inertiaOptions\", void 0);\n    this._el = el;\n    this._mousePan = mousePan;\n    this._touchPan = touchPan;\n  }\n\n  /**\n   * Enables the \"drag to pan\" interaction.\n   *\n   * @param options - Options object\n   * @example\n   * ```ts\n   *   map.dragPan.enable();\n   *   map.dragPan.enable({\n   *      linearity: 0.3,\n   *      easing: bezier(0, 0, 0.3, 1),\n   *      maxSpeed: 1400,\n   *      deceleration: 2500,\n   *   });\n   * ```\n   */\n  enable(options) {\n    this._inertiaOptions = options || {};\n    this._mousePan.enable();\n    this._touchPan.enable();\n    this._el.classList.add('l7-touch-drag-pan');\n  }\n\n  /**\n   * Disables the \"drag to pan\" interaction.\n   *\n   * @example\n   * ```ts\n   * map.dragPan.disable();\n   * ```\n   */\n  disable() {\n    this._mousePan.disable();\n    this._touchPan.disable();\n    this._el.classList.remove('l7-touch-drag-pan');\n  }\n\n  /**\n   * Returns a Boolean indicating whether the \"drag to pan\" interaction is enabled.\n   *\n   * @returns `true` if the \"drag to pan\" interaction is enabled.\n   */\n  isEnabled() {\n    return this._mousePan.isEnabled() && this._touchPan.isEnabled();\n  }\n\n  /**\n   * Returns a Boolean indicating whether the \"drag to pan\" interaction is active, i.e. currently being used.\n   *\n   * @returns `true` if the \"drag to pan\" interaction is active.\n   */\n  isActive() {\n    return this._mousePan.isActive() || this._touchPan.isActive();\n  }\n}","map":{"version":3,"names":["_defineProperty","DragPanHandler","constructor","el","mousePan","touchPan","_el","_mousePan","_touchPan","enable","options","_inertiaOptions","classList","add","disable","remove","isEnabled","isActive"],"sources":["/Users/bhanudahiya/Desktop/ledger-IQ/node_modules/@antv/l7-map/es/map/handler/shim/drag_pan.js"],"sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n/**\n * A {@link DragPanHandler} options object\n */\n\n/**\n * The `DragPanHandler` allows the user to pan the map by clicking and dragging\n * the cursor.\n *\n * @group Handlers\n */\nexport class DragPanHandler {\n  /** @internal */\n  constructor(el, mousePan, touchPan) {\n    _defineProperty(this, \"_el\", void 0);\n    _defineProperty(this, \"_mousePan\", void 0);\n    _defineProperty(this, \"_touchPan\", void 0);\n    _defineProperty(this, \"_inertiaOptions\", void 0);\n    this._el = el;\n    this._mousePan = mousePan;\n    this._touchPan = touchPan;\n  }\n\n  /**\n   * Enables the \"drag to pan\" interaction.\n   *\n   * @param options - Options object\n   * @example\n   * ```ts\n   *   map.dragPan.enable();\n   *   map.dragPan.enable({\n   *      linearity: 0.3,\n   *      easing: bezier(0, 0, 0.3, 1),\n   *      maxSpeed: 1400,\n   *      deceleration: 2500,\n   *   });\n   * ```\n   */\n  enable(options) {\n    this._inertiaOptions = options || {};\n    this._mousePan.enable();\n    this._touchPan.enable();\n    this._el.classList.add('l7-touch-drag-pan');\n  }\n\n  /**\n   * Disables the \"drag to pan\" interaction.\n   *\n   * @example\n   * ```ts\n   * map.dragPan.disable();\n   * ```\n   */\n  disable() {\n    this._mousePan.disable();\n    this._touchPan.disable();\n    this._el.classList.remove('l7-touch-drag-pan');\n  }\n\n  /**\n   * Returns a Boolean indicating whether the \"drag to pan\" interaction is enabled.\n   *\n   * @returns `true` if the \"drag to pan\" interaction is enabled.\n   */\n  isEnabled() {\n    return this._mousePan.isEnabled() && this._touchPan.isEnabled();\n  }\n\n  /**\n   * Returns a Boolean indicating whether the \"drag to pan\" interaction is active, i.e. currently being used.\n   *\n   * @returns `true` if the \"drag to pan\" interaction is active.\n   */\n  isActive() {\n    return this._mousePan.isActive() || this._touchPan.isActive();\n  }\n}"],"mappings":"AAAA,OAAOA,eAAe,MAAM,2CAA2C;AACvE;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,cAAc,CAAC;EAC1B;EACAC,WAAWA,CAACC,EAAE,EAAEC,QAAQ,EAAEC,QAAQ,EAAE;IAClCL,eAAe,CAAC,IAAI,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;IACpCA,eAAe,CAAC,IAAI,EAAE,WAAW,EAAE,KAAK,CAAC,CAAC;IAC1CA,eAAe,CAAC,IAAI,EAAE,WAAW,EAAE,KAAK,CAAC,CAAC;IAC1CA,eAAe,CAAC,IAAI,EAAE,iBAAiB,EAAE,KAAK,CAAC,CAAC;IAChD,IAAI,CAACM,GAAG,GAAGH,EAAE;IACb,IAAI,CAACI,SAAS,GAAGH,QAAQ;IACzB,IAAI,CAACI,SAAS,GAAGH,QAAQ;EAC3B;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEI,MAAMA,CAACC,OAAO,EAAE;IACd,IAAI,CAACC,eAAe,GAAGD,OAAO,IAAI,CAAC,CAAC;IACpC,IAAI,CAACH,SAAS,CAACE,MAAM,CAAC,CAAC;IACvB,IAAI,CAACD,SAAS,CAACC,MAAM,CAAC,CAAC;IACvB,IAAI,CAACH,GAAG,CAACM,SAAS,CAACC,GAAG,CAAC,mBAAmB,CAAC;EAC7C;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACEC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACP,SAAS,CAACO,OAAO,CAAC,CAAC;IACxB,IAAI,CAACN,SAAS,CAACM,OAAO,CAAC,CAAC;IACxB,IAAI,CAACR,GAAG,CAACM,SAAS,CAACG,MAAM,CAAC,mBAAmB,CAAC;EAChD;;EAEA;AACF;AACA;AACA;AACA;EACEC,SAASA,CAAA,EAAG;IACV,OAAO,IAAI,CAACT,SAAS,CAACS,SAAS,CAAC,CAAC,IAAI,IAAI,CAACR,SAAS,CAACQ,SAAS,CAAC,CAAC;EACjE;;EAEA;AACF;AACA;AACA;AACA;EACEC,QAAQA,CAAA,EAAG;IACT,OAAO,IAAI,CAACV,SAAS,CAACU,QAAQ,CAAC,CAAC,IAAI,IAAI,CAACT,SAAS,CAACS,QAAQ,CAAC,CAAC;EAC/D;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}