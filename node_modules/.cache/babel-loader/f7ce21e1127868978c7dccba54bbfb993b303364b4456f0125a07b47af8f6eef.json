{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport Point from '@mapbox/point-geometry';\nimport { browser } from \"./util/browser\";\nimport { bezier, clamp, extend } from \"./util/util\";\nconst defaultInertiaOptions = {\n  linearity: 0.3,\n  easing: bezier(0, 0, 0.3, 1)\n};\nconst defaultPanInertiaOptions = extend({\n  deceleration: 2500,\n  maxSpeed: 1400\n}, defaultInertiaOptions);\nconst defaultZoomInertiaOptions = extend({\n  deceleration: 20,\n  maxSpeed: 1400\n}, defaultInertiaOptions);\nconst defaultBearingInertiaOptions = extend({\n  deceleration: 1000,\n  maxSpeed: 360\n}, defaultInertiaOptions);\nconst defaultPitchInertiaOptions = extend({\n  deceleration: 1000,\n  maxSpeed: 90\n}, defaultInertiaOptions);\nexport class HandlerInertia {\n  constructor(map) {\n    _defineProperty(this, \"_map\", void 0);\n    _defineProperty(this, \"_inertiaBuffer\", void 0);\n    this._map = map;\n    this.clear();\n  }\n  clear() {\n    this._inertiaBuffer = [];\n  }\n  record(settings) {\n    this._drainInertiaBuffer();\n    this._inertiaBuffer.push({\n      time: browser.now(),\n      settings\n    });\n  }\n  _drainInertiaBuffer() {\n    const inertia = this._inertiaBuffer,\n      now = browser.now(),\n      cutoff = 160; //msec\n\n    while (inertia.length > 0 && now - inertia[0].time > cutoff) inertia.shift();\n  }\n  _onMoveEnd(panInertiaOptions) {\n    this._drainInertiaBuffer();\n    if (this._inertiaBuffer.length < 2) {\n      return;\n    }\n    const deltas = {\n      zoom: 0,\n      bearing: 0,\n      pitch: 0,\n      pan: new Point(0, 0),\n      pinchAround: undefined,\n      around: undefined\n    };\n    for (const {\n      settings\n    } of this._inertiaBuffer) {\n      deltas.zoom += settings.zoomDelta || 0;\n      deltas.bearing += settings.bearingDelta || 0;\n      deltas.pitch += settings.pitchDelta || 0;\n      if (settings.panDelta) deltas.pan._add(settings.panDelta);\n      if (settings.around) deltas.around = settings.around;\n      if (settings.pinchAround) deltas.pinchAround = settings.pinchAround;\n    }\n    const lastEntry = this._inertiaBuffer[this._inertiaBuffer.length - 1];\n    const duration = lastEntry.time - this._inertiaBuffer[0].time;\n    const easeOptions = {};\n    if (deltas.pan.mag()) {\n      const result = calculateEasing(deltas.pan.mag(), duration, extend({}, defaultPanInertiaOptions, panInertiaOptions || {}));\n      easeOptions.offset = deltas.pan.mult(result.amount / deltas.pan.mag());\n      easeOptions.center = this._map.transform.center;\n      extendDuration(easeOptions, result);\n    }\n    if (deltas.zoom) {\n      const result = calculateEasing(deltas.zoom, duration, defaultZoomInertiaOptions);\n      easeOptions.zoom = this._map.transform.zoom + result.amount;\n      extendDuration(easeOptions, result);\n    }\n    if (deltas.bearing) {\n      const result = calculateEasing(deltas.bearing, duration, defaultBearingInertiaOptions);\n      easeOptions.bearing = this._map.transform.bearing + clamp(result.amount, -179, 179);\n      extendDuration(easeOptions, result);\n    }\n    if (deltas.pitch) {\n      const result = calculateEasing(deltas.pitch, duration, defaultPitchInertiaOptions);\n      easeOptions.pitch = this._map.transform.pitch + result.amount;\n      extendDuration(easeOptions, result);\n    }\n    if (easeOptions.zoom || easeOptions.bearing) {\n      const last = deltas.pinchAround === undefined ? deltas.around : deltas.pinchAround;\n      easeOptions.around = last ? this._map.unproject(last) : this._map.getCenter();\n    }\n    this.clear();\n    return extend(easeOptions, {\n      noMoveStart: true\n    });\n  }\n}\n\n// Unfortunately zoom, bearing, etc can't have different durations and easings so\n// we need to choose one. We use the longest duration and it's corresponding easing.\nfunction extendDuration(easeOptions, result) {\n  if (!easeOptions.duration || easeOptions.duration < result.duration) {\n    easeOptions.duration = result.duration;\n    easeOptions.easing = result.easing;\n  }\n}\nfunction calculateEasing(amount, inertiaDuration, inertiaOptions) {\n  const {\n    maxSpeed,\n    linearity,\n    deceleration\n  } = inertiaOptions;\n  const speed = clamp(amount * linearity / (inertiaDuration / 1000), -maxSpeed, maxSpeed);\n  const duration = Math.abs(speed) / (deceleration * linearity);\n  return {\n    easing: inertiaOptions.easing,\n    duration: duration * 1000,\n    amount: speed * (duration / 2)\n  };\n}","map":{"version":3,"names":["_defineProperty","Point","browser","bezier","clamp","extend","defaultInertiaOptions","linearity","easing","defaultPanInertiaOptions","deceleration","maxSpeed","defaultZoomInertiaOptions","defaultBearingInertiaOptions","defaultPitchInertiaOptions","HandlerInertia","constructor","map","_map","clear","_inertiaBuffer","record","settings","_drainInertiaBuffer","push","time","now","inertia","cutoff","length","shift","_onMoveEnd","panInertiaOptions","deltas","zoom","bearing","pitch","pan","pinchAround","undefined","around","zoomDelta","bearingDelta","pitchDelta","panDelta","_add","lastEntry","duration","easeOptions","mag","result","calculateEasing","offset","mult","amount","center","transform","extendDuration","last","unproject","getCenter","noMoveStart","inertiaDuration","inertiaOptions","speed","Math","abs"],"sources":["/Users/bhanudahiya/Desktop/ledger-IQ/node_modules/@antv/l7-map/es/map/handler_inertia.js"],"sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport Point from '@mapbox/point-geometry';\nimport { browser } from \"./util/browser\";\nimport { bezier, clamp, extend } from \"./util/util\";\nconst defaultInertiaOptions = {\n  linearity: 0.3,\n  easing: bezier(0, 0, 0.3, 1)\n};\nconst defaultPanInertiaOptions = extend({\n  deceleration: 2500,\n  maxSpeed: 1400\n}, defaultInertiaOptions);\nconst defaultZoomInertiaOptions = extend({\n  deceleration: 20,\n  maxSpeed: 1400\n}, defaultInertiaOptions);\nconst defaultBearingInertiaOptions = extend({\n  deceleration: 1000,\n  maxSpeed: 360\n}, defaultInertiaOptions);\nconst defaultPitchInertiaOptions = extend({\n  deceleration: 1000,\n  maxSpeed: 90\n}, defaultInertiaOptions);\nexport class HandlerInertia {\n  constructor(map) {\n    _defineProperty(this, \"_map\", void 0);\n    _defineProperty(this, \"_inertiaBuffer\", void 0);\n    this._map = map;\n    this.clear();\n  }\n  clear() {\n    this._inertiaBuffer = [];\n  }\n  record(settings) {\n    this._drainInertiaBuffer();\n    this._inertiaBuffer.push({\n      time: browser.now(),\n      settings\n    });\n  }\n  _drainInertiaBuffer() {\n    const inertia = this._inertiaBuffer,\n      now = browser.now(),\n      cutoff = 160; //msec\n\n    while (inertia.length > 0 && now - inertia[0].time > cutoff) inertia.shift();\n  }\n  _onMoveEnd(panInertiaOptions) {\n    this._drainInertiaBuffer();\n    if (this._inertiaBuffer.length < 2) {\n      return;\n    }\n    const deltas = {\n      zoom: 0,\n      bearing: 0,\n      pitch: 0,\n      pan: new Point(0, 0),\n      pinchAround: undefined,\n      around: undefined\n    };\n    for (const {\n      settings\n    } of this._inertiaBuffer) {\n      deltas.zoom += settings.zoomDelta || 0;\n      deltas.bearing += settings.bearingDelta || 0;\n      deltas.pitch += settings.pitchDelta || 0;\n      if (settings.panDelta) deltas.pan._add(settings.panDelta);\n      if (settings.around) deltas.around = settings.around;\n      if (settings.pinchAround) deltas.pinchAround = settings.pinchAround;\n    }\n    const lastEntry = this._inertiaBuffer[this._inertiaBuffer.length - 1];\n    const duration = lastEntry.time - this._inertiaBuffer[0].time;\n    const easeOptions = {};\n    if (deltas.pan.mag()) {\n      const result = calculateEasing(deltas.pan.mag(), duration, extend({}, defaultPanInertiaOptions, panInertiaOptions || {}));\n      easeOptions.offset = deltas.pan.mult(result.amount / deltas.pan.mag());\n      easeOptions.center = this._map.transform.center;\n      extendDuration(easeOptions, result);\n    }\n    if (deltas.zoom) {\n      const result = calculateEasing(deltas.zoom, duration, defaultZoomInertiaOptions);\n      easeOptions.zoom = this._map.transform.zoom + result.amount;\n      extendDuration(easeOptions, result);\n    }\n    if (deltas.bearing) {\n      const result = calculateEasing(deltas.bearing, duration, defaultBearingInertiaOptions);\n      easeOptions.bearing = this._map.transform.bearing + clamp(result.amount, -179, 179);\n      extendDuration(easeOptions, result);\n    }\n    if (deltas.pitch) {\n      const result = calculateEasing(deltas.pitch, duration, defaultPitchInertiaOptions);\n      easeOptions.pitch = this._map.transform.pitch + result.amount;\n      extendDuration(easeOptions, result);\n    }\n    if (easeOptions.zoom || easeOptions.bearing) {\n      const last = deltas.pinchAround === undefined ? deltas.around : deltas.pinchAround;\n      easeOptions.around = last ? this._map.unproject(last) : this._map.getCenter();\n    }\n    this.clear();\n    return extend(easeOptions, {\n      noMoveStart: true\n    });\n  }\n}\n\n// Unfortunately zoom, bearing, etc can't have different durations and easings so\n// we need to choose one. We use the longest duration and it's corresponding easing.\nfunction extendDuration(easeOptions, result) {\n  if (!easeOptions.duration || easeOptions.duration < result.duration) {\n    easeOptions.duration = result.duration;\n    easeOptions.easing = result.easing;\n  }\n}\nfunction calculateEasing(amount, inertiaDuration, inertiaOptions) {\n  const {\n    maxSpeed,\n    linearity,\n    deceleration\n  } = inertiaOptions;\n  const speed = clamp(amount * linearity / (inertiaDuration / 1000), -maxSpeed, maxSpeed);\n  const duration = Math.abs(speed) / (deceleration * linearity);\n  return {\n    easing: inertiaOptions.easing,\n    duration: duration * 1000,\n    amount: speed * (duration / 2)\n  };\n}"],"mappings":"AAAA,OAAOA,eAAe,MAAM,2CAA2C;AACvE,OAAOC,KAAK,MAAM,wBAAwB;AAC1C,SAASC,OAAO,QAAQ,gBAAgB;AACxC,SAASC,MAAM,EAAEC,KAAK,EAAEC,MAAM,QAAQ,aAAa;AACnD,MAAMC,qBAAqB,GAAG;EAC5BC,SAAS,EAAE,GAAG;EACdC,MAAM,EAAEL,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC;AAC7B,CAAC;AACD,MAAMM,wBAAwB,GAAGJ,MAAM,CAAC;EACtCK,YAAY,EAAE,IAAI;EAClBC,QAAQ,EAAE;AACZ,CAAC,EAAEL,qBAAqB,CAAC;AACzB,MAAMM,yBAAyB,GAAGP,MAAM,CAAC;EACvCK,YAAY,EAAE,EAAE;EAChBC,QAAQ,EAAE;AACZ,CAAC,EAAEL,qBAAqB,CAAC;AACzB,MAAMO,4BAA4B,GAAGR,MAAM,CAAC;EAC1CK,YAAY,EAAE,IAAI;EAClBC,QAAQ,EAAE;AACZ,CAAC,EAAEL,qBAAqB,CAAC;AACzB,MAAMQ,0BAA0B,GAAGT,MAAM,CAAC;EACxCK,YAAY,EAAE,IAAI;EAClBC,QAAQ,EAAE;AACZ,CAAC,EAAEL,qBAAqB,CAAC;AACzB,OAAO,MAAMS,cAAc,CAAC;EAC1BC,WAAWA,CAACC,GAAG,EAAE;IACfjB,eAAe,CAAC,IAAI,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;IACrCA,eAAe,CAAC,IAAI,EAAE,gBAAgB,EAAE,KAAK,CAAC,CAAC;IAC/C,IAAI,CAACkB,IAAI,GAAGD,GAAG;IACf,IAAI,CAACE,KAAK,CAAC,CAAC;EACd;EACAA,KAAKA,CAAA,EAAG;IACN,IAAI,CAACC,cAAc,GAAG,EAAE;EAC1B;EACAC,MAAMA,CAACC,QAAQ,EAAE;IACf,IAAI,CAACC,mBAAmB,CAAC,CAAC;IAC1B,IAAI,CAACH,cAAc,CAACI,IAAI,CAAC;MACvBC,IAAI,EAAEvB,OAAO,CAACwB,GAAG,CAAC,CAAC;MACnBJ;IACF,CAAC,CAAC;EACJ;EACAC,mBAAmBA,CAAA,EAAG;IACpB,MAAMI,OAAO,GAAG,IAAI,CAACP,cAAc;MACjCM,GAAG,GAAGxB,OAAO,CAACwB,GAAG,CAAC,CAAC;MACnBE,MAAM,GAAG,GAAG,CAAC,CAAC;;IAEhB,OAAOD,OAAO,CAACE,MAAM,GAAG,CAAC,IAAIH,GAAG,GAAGC,OAAO,CAAC,CAAC,CAAC,CAACF,IAAI,GAAGG,MAAM,EAAED,OAAO,CAACG,KAAK,CAAC,CAAC;EAC9E;EACAC,UAAUA,CAACC,iBAAiB,EAAE;IAC5B,IAAI,CAACT,mBAAmB,CAAC,CAAC;IAC1B,IAAI,IAAI,CAACH,cAAc,CAACS,MAAM,GAAG,CAAC,EAAE;MAClC;IACF;IACA,MAAMI,MAAM,GAAG;MACbC,IAAI,EAAE,CAAC;MACPC,OAAO,EAAE,CAAC;MACVC,KAAK,EAAE,CAAC;MACRC,GAAG,EAAE,IAAIpC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;MACpBqC,WAAW,EAAEC,SAAS;MACtBC,MAAM,EAAED;IACV,CAAC;IACD,KAAK,MAAM;MACTjB;IACF,CAAC,IAAI,IAAI,CAACF,cAAc,EAAE;MACxBa,MAAM,CAACC,IAAI,IAAIZ,QAAQ,CAACmB,SAAS,IAAI,CAAC;MACtCR,MAAM,CAACE,OAAO,IAAIb,QAAQ,CAACoB,YAAY,IAAI,CAAC;MAC5CT,MAAM,CAACG,KAAK,IAAId,QAAQ,CAACqB,UAAU,IAAI,CAAC;MACxC,IAAIrB,QAAQ,CAACsB,QAAQ,EAAEX,MAAM,CAACI,GAAG,CAACQ,IAAI,CAACvB,QAAQ,CAACsB,QAAQ,CAAC;MACzD,IAAItB,QAAQ,CAACkB,MAAM,EAAEP,MAAM,CAACO,MAAM,GAAGlB,QAAQ,CAACkB,MAAM;MACpD,IAAIlB,QAAQ,CAACgB,WAAW,EAAEL,MAAM,CAACK,WAAW,GAAGhB,QAAQ,CAACgB,WAAW;IACrE;IACA,MAAMQ,SAAS,GAAG,IAAI,CAAC1B,cAAc,CAAC,IAAI,CAACA,cAAc,CAACS,MAAM,GAAG,CAAC,CAAC;IACrE,MAAMkB,QAAQ,GAAGD,SAAS,CAACrB,IAAI,GAAG,IAAI,CAACL,cAAc,CAAC,CAAC,CAAC,CAACK,IAAI;IAC7D,MAAMuB,WAAW,GAAG,CAAC,CAAC;IACtB,IAAIf,MAAM,CAACI,GAAG,CAACY,GAAG,CAAC,CAAC,EAAE;MACpB,MAAMC,MAAM,GAAGC,eAAe,CAAClB,MAAM,CAACI,GAAG,CAACY,GAAG,CAAC,CAAC,EAAEF,QAAQ,EAAE1C,MAAM,CAAC,CAAC,CAAC,EAAEI,wBAAwB,EAAEuB,iBAAiB,IAAI,CAAC,CAAC,CAAC,CAAC;MACzHgB,WAAW,CAACI,MAAM,GAAGnB,MAAM,CAACI,GAAG,CAACgB,IAAI,CAACH,MAAM,CAACI,MAAM,GAAGrB,MAAM,CAACI,GAAG,CAACY,GAAG,CAAC,CAAC,CAAC;MACtED,WAAW,CAACO,MAAM,GAAG,IAAI,CAACrC,IAAI,CAACsC,SAAS,CAACD,MAAM;MAC/CE,cAAc,CAACT,WAAW,EAAEE,MAAM,CAAC;IACrC;IACA,IAAIjB,MAAM,CAACC,IAAI,EAAE;MACf,MAAMgB,MAAM,GAAGC,eAAe,CAAClB,MAAM,CAACC,IAAI,EAAEa,QAAQ,EAAEnC,yBAAyB,CAAC;MAChFoC,WAAW,CAACd,IAAI,GAAG,IAAI,CAAChB,IAAI,CAACsC,SAAS,CAACtB,IAAI,GAAGgB,MAAM,CAACI,MAAM;MAC3DG,cAAc,CAACT,WAAW,EAAEE,MAAM,CAAC;IACrC;IACA,IAAIjB,MAAM,CAACE,OAAO,EAAE;MAClB,MAAMe,MAAM,GAAGC,eAAe,CAAClB,MAAM,CAACE,OAAO,EAAEY,QAAQ,EAAElC,4BAA4B,CAAC;MACtFmC,WAAW,CAACb,OAAO,GAAG,IAAI,CAACjB,IAAI,CAACsC,SAAS,CAACrB,OAAO,GAAG/B,KAAK,CAAC8C,MAAM,CAACI,MAAM,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;MACnFG,cAAc,CAACT,WAAW,EAAEE,MAAM,CAAC;IACrC;IACA,IAAIjB,MAAM,CAACG,KAAK,EAAE;MAChB,MAAMc,MAAM,GAAGC,eAAe,CAAClB,MAAM,CAACG,KAAK,EAAEW,QAAQ,EAAEjC,0BAA0B,CAAC;MAClFkC,WAAW,CAACZ,KAAK,GAAG,IAAI,CAAClB,IAAI,CAACsC,SAAS,CAACpB,KAAK,GAAGc,MAAM,CAACI,MAAM;MAC7DG,cAAc,CAACT,WAAW,EAAEE,MAAM,CAAC;IACrC;IACA,IAAIF,WAAW,CAACd,IAAI,IAAIc,WAAW,CAACb,OAAO,EAAE;MAC3C,MAAMuB,IAAI,GAAGzB,MAAM,CAACK,WAAW,KAAKC,SAAS,GAAGN,MAAM,CAACO,MAAM,GAAGP,MAAM,CAACK,WAAW;MAClFU,WAAW,CAACR,MAAM,GAAGkB,IAAI,GAAG,IAAI,CAACxC,IAAI,CAACyC,SAAS,CAACD,IAAI,CAAC,GAAG,IAAI,CAACxC,IAAI,CAAC0C,SAAS,CAAC,CAAC;IAC/E;IACA,IAAI,CAACzC,KAAK,CAAC,CAAC;IACZ,OAAOd,MAAM,CAAC2C,WAAW,EAAE;MACzBa,WAAW,EAAE;IACf,CAAC,CAAC;EACJ;AACF;;AAEA;AACA;AACA,SAASJ,cAAcA,CAACT,WAAW,EAAEE,MAAM,EAAE;EAC3C,IAAI,CAACF,WAAW,CAACD,QAAQ,IAAIC,WAAW,CAACD,QAAQ,GAAGG,MAAM,CAACH,QAAQ,EAAE;IACnEC,WAAW,CAACD,QAAQ,GAAGG,MAAM,CAACH,QAAQ;IACtCC,WAAW,CAACxC,MAAM,GAAG0C,MAAM,CAAC1C,MAAM;EACpC;AACF;AACA,SAAS2C,eAAeA,CAACG,MAAM,EAAEQ,eAAe,EAAEC,cAAc,EAAE;EAChE,MAAM;IACJpD,QAAQ;IACRJ,SAAS;IACTG;EACF,CAAC,GAAGqD,cAAc;EAClB,MAAMC,KAAK,GAAG5D,KAAK,CAACkD,MAAM,GAAG/C,SAAS,IAAIuD,eAAe,GAAG,IAAI,CAAC,EAAE,CAACnD,QAAQ,EAAEA,QAAQ,CAAC;EACvF,MAAMoC,QAAQ,GAAGkB,IAAI,CAACC,GAAG,CAACF,KAAK,CAAC,IAAItD,YAAY,GAAGH,SAAS,CAAC;EAC7D,OAAO;IACLC,MAAM,EAAEuD,cAAc,CAACvD,MAAM;IAC7BuC,QAAQ,EAAEA,QAAQ,GAAG,IAAI;IACzBO,MAAM,EAAEU,KAAK,IAAIjB,QAAQ,GAAG,CAAC;EAC/B,CAAC;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}