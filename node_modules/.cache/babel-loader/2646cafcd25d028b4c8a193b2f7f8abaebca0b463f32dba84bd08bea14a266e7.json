{"ast":null,"code":"var __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\n\n// src/transform/hexagon.ts\nimport { Satistics, aProjectFlat } from \"@antv/l7-utils\";\nimport { hexbin } from \"d3-hexbin\";\nvar R_EARTH = 6378e3;\nfunction pointToHexbin(data, option) {\n  const dataArray = data.dataArray;\n  const {\n    size = 10,\n    method = \"sum\"\n  } = option;\n  const pixlSize = size / (2 * Math.PI * R_EARTH) * (256 << 20) / 2;\n  const screenPoints = dataArray.map(point => {\n    const [x, y] = aProjectFlat(point.coordinates);\n    return __spreadProps(__spreadValues({}, point), {\n      coordinates: [x, y]\n    });\n  });\n  const newHexbin = hexbin().radius(pixlSize).x(d => d.coordinates[0]).y(d => d.coordinates[1]);\n  const hexbinBins = newHexbin(screenPoints);\n  const result = {\n    dataArray: hexbinBins.map((hex, index) => {\n      if (option.field && method) {\n        const columns = Satistics.getColumn(hex, option.field);\n        hex[method] = Satistics.statMap[method](columns);\n      }\n      return {\n        [option.method]: hex[method],\n        count: hex.length,\n        rawData: hex,\n        coordinates: [hex.x, hex.y],\n        _id: index\n      };\n    }),\n    radius: pixlSize,\n    xOffset: pixlSize,\n    yOffset: pixlSize,\n    type: \"hexagon\"\n  };\n  return result;\n}\nexport { pointToHexbin };","map":{"version":3,"names":["__defProp","Object","defineProperty","__defProps","defineProperties","__getOwnPropDescs","getOwnPropertyDescriptors","__getOwnPropSymbols","getOwnPropertySymbols","__hasOwnProp","prototype","hasOwnProperty","__propIsEnum","propertyIsEnumerable","__defNormalProp","obj","key","value","enumerable","configurable","writable","__spreadValues","a","b","prop","call","__spreadProps","Satistics","aProjectFlat","hexbin","R_EARTH","pointToHexbin","data","option","dataArray","size","method","pixlSize","Math","PI","screenPoints","map","point","x","y","coordinates","newHexbin","radius","d","hexbinBins","result","hex","index","field","columns","getColumn","statMap","count","length","rawData","_id","xOffset","yOffset","type"],"sources":["/Users/bhanudahiya/Desktop/ledger-IQ/node_modules/@antv/l7-source/es/transform/hexagon.js"],"sourcesContent":["var __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\n\n// src/transform/hexagon.ts\nimport { Satistics, aProjectFlat } from \"@antv/l7-utils\";\nimport { hexbin } from \"d3-hexbin\";\nvar R_EARTH = 6378e3;\nfunction pointToHexbin(data, option) {\n  const dataArray = data.dataArray;\n  const { size = 10, method = \"sum\" } = option;\n  const pixlSize = size / (2 * Math.PI * R_EARTH) * (256 << 20) / 2;\n  const screenPoints = dataArray.map((point) => {\n    const [x, y] = aProjectFlat(point.coordinates);\n    return __spreadProps(__spreadValues({}, point), {\n      coordinates: [x, y]\n    });\n  });\n  const newHexbin = hexbin().radius(pixlSize).x((d) => d.coordinates[0]).y((d) => d.coordinates[1]);\n  const hexbinBins = newHexbin(screenPoints);\n  const result = {\n    dataArray: hexbinBins.map((hex, index) => {\n      if (option.field && method) {\n        const columns = Satistics.getColumn(hex, option.field);\n        hex[method] = Satistics.statMap[method](columns);\n      }\n      return {\n        [option.method]: hex[method],\n        count: hex.length,\n        rawData: hex,\n        coordinates: [hex.x, hex.y],\n        _id: index\n      };\n    }),\n    radius: pixlSize,\n    xOffset: pixlSize,\n    yOffset: pixlSize,\n    type: \"hexagon\"\n  };\n  return result;\n}\nexport {\n  pointToHexbin\n};\n"],"mappings":"AAAA,IAAIA,SAAS,GAAGC,MAAM,CAACC,cAAc;AACrC,IAAIC,UAAU,GAAGF,MAAM,CAACG,gBAAgB;AACxC,IAAIC,iBAAiB,GAAGJ,MAAM,CAACK,yBAAyB;AACxD,IAAIC,mBAAmB,GAAGN,MAAM,CAACO,qBAAqB;AACtD,IAAIC,YAAY,GAAGR,MAAM,CAACS,SAAS,CAACC,cAAc;AAClD,IAAIC,YAAY,GAAGX,MAAM,CAACS,SAAS,CAACG,oBAAoB;AACxD,IAAIC,eAAe,GAAGA,CAACC,GAAG,EAAEC,GAAG,EAAEC,KAAK,KAAKD,GAAG,IAAID,GAAG,GAAGf,SAAS,CAACe,GAAG,EAAEC,GAAG,EAAE;EAAEE,UAAU,EAAE,IAAI;EAAEC,YAAY,EAAE,IAAI;EAAEC,QAAQ,EAAE,IAAI;EAAEH;AAAM,CAAC,CAAC,GAAGF,GAAG,CAACC,GAAG,CAAC,GAAGC,KAAK;AAC/J,IAAII,cAAc,GAAGA,CAACC,CAAC,EAAEC,CAAC,KAAK;EAC7B,KAAK,IAAIC,IAAI,IAAID,CAAC,KAAKA,CAAC,GAAG,CAAC,CAAC,CAAC,EAC5B,IAAId,YAAY,CAACgB,IAAI,CAACF,CAAC,EAAEC,IAAI,CAAC,EAC5BV,eAAe,CAACQ,CAAC,EAAEE,IAAI,EAAED,CAAC,CAACC,IAAI,CAAC,CAAC;EACrC,IAAIjB,mBAAmB,EACrB,KAAK,IAAIiB,IAAI,IAAIjB,mBAAmB,CAACgB,CAAC,CAAC,EAAE;IACvC,IAAIX,YAAY,CAACa,IAAI,CAACF,CAAC,EAAEC,IAAI,CAAC,EAC5BV,eAAe,CAACQ,CAAC,EAAEE,IAAI,EAAED,CAAC,CAACC,IAAI,CAAC,CAAC;EACrC;EACF,OAAOF,CAAC;AACV,CAAC;AACD,IAAII,aAAa,GAAGA,CAACJ,CAAC,EAAEC,CAAC,KAAKpB,UAAU,CAACmB,CAAC,EAAEjB,iBAAiB,CAACkB,CAAC,CAAC,CAAC;;AAEjE;AACA,SAASI,SAAS,EAAEC,YAAY,QAAQ,gBAAgB;AACxD,SAASC,MAAM,QAAQ,WAAW;AAClC,IAAIC,OAAO,GAAG,MAAM;AACpB,SAASC,aAAaA,CAACC,IAAI,EAAEC,MAAM,EAAE;EACnC,MAAMC,SAAS,GAAGF,IAAI,CAACE,SAAS;EAChC,MAAM;IAAEC,IAAI,GAAG,EAAE;IAAEC,MAAM,GAAG;EAAM,CAAC,GAAGH,MAAM;EAC5C,MAAMI,QAAQ,GAAGF,IAAI,IAAI,CAAC,GAAGG,IAAI,CAACC,EAAE,GAAGT,OAAO,CAAC,IAAI,GAAG,IAAI,EAAE,CAAC,GAAG,CAAC;EACjE,MAAMU,YAAY,GAAGN,SAAS,CAACO,GAAG,CAAEC,KAAK,IAAK;IAC5C,MAAM,CAACC,CAAC,EAAEC,CAAC,CAAC,GAAGhB,YAAY,CAACc,KAAK,CAACG,WAAW,CAAC;IAC9C,OAAOnB,aAAa,CAACL,cAAc,CAAC,CAAC,CAAC,EAAEqB,KAAK,CAAC,EAAE;MAC9CG,WAAW,EAAE,CAACF,CAAC,EAAEC,CAAC;IACpB,CAAC,CAAC;EACJ,CAAC,CAAC;EACF,MAAME,SAAS,GAAGjB,MAAM,CAAC,CAAC,CAACkB,MAAM,CAACV,QAAQ,CAAC,CAACM,CAAC,CAAEK,CAAC,IAAKA,CAAC,CAACH,WAAW,CAAC,CAAC,CAAC,CAAC,CAACD,CAAC,CAAEI,CAAC,IAAKA,CAAC,CAACH,WAAW,CAAC,CAAC,CAAC,CAAC;EACjG,MAAMI,UAAU,GAAGH,SAAS,CAACN,YAAY,CAAC;EAC1C,MAAMU,MAAM,GAAG;IACbhB,SAAS,EAAEe,UAAU,CAACR,GAAG,CAAC,CAACU,GAAG,EAAEC,KAAK,KAAK;MACxC,IAAInB,MAAM,CAACoB,KAAK,IAAIjB,MAAM,EAAE;QAC1B,MAAMkB,OAAO,GAAG3B,SAAS,CAAC4B,SAAS,CAACJ,GAAG,EAAElB,MAAM,CAACoB,KAAK,CAAC;QACtDF,GAAG,CAACf,MAAM,CAAC,GAAGT,SAAS,CAAC6B,OAAO,CAACpB,MAAM,CAAC,CAACkB,OAAO,CAAC;MAClD;MACA,OAAO;QACL,CAACrB,MAAM,CAACG,MAAM,GAAGe,GAAG,CAACf,MAAM,CAAC;QAC5BqB,KAAK,EAAEN,GAAG,CAACO,MAAM;QACjBC,OAAO,EAAER,GAAG;QACZN,WAAW,EAAE,CAACM,GAAG,CAACR,CAAC,EAAEQ,GAAG,CAACP,CAAC,CAAC;QAC3BgB,GAAG,EAAER;MACP,CAAC;IACH,CAAC,CAAC;IACFL,MAAM,EAAEV,QAAQ;IAChBwB,OAAO,EAAExB,QAAQ;IACjByB,OAAO,EAAEzB,QAAQ;IACjB0B,IAAI,EAAE;EACR,CAAC;EACD,OAAOb,MAAM;AACf;AACA,SACEnB,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}