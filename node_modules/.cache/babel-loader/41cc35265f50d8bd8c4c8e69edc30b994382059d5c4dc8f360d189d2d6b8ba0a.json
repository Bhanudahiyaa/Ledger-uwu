{"ast":null,"code":"import _typeof from \"@babel/runtime/helpers/typeof\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\nimport { gl } from '@antv/g-webgpu-core';\nimport { extractUniforms } from '../utils/uniform';\nimport { blendEquationMap, blendFuncMap, cullFaceMap, depthFuncMap, primitiveMap, stencilFuncMap, stencilOpMap } from './constants';\n\n/**\n * adaptor for regl.DrawCommand\n */\nvar ReglModel = /*#__PURE__*/function () {\n  function ReglModel(reGl, options) {\n    _classCallCheck(this, ReglModel);\n    this.reGl = void 0;\n    this.drawCommand = void 0;\n    this.uniforms = {};\n    this.reGl = reGl;\n    var vs = options.vs,\n      fs = options.fs,\n      defines = options.defines,\n      attributes = options.attributes,\n      uniforms = options.uniforms,\n      primitive = options.primitive,\n      count = options.count,\n      elements = options.elements,\n      depth = options.depth,\n      blend = options.blend,\n      stencil = options.stencil,\n      cull = options.cull,\n      instances = options.instances,\n      scissor = options.scissor,\n      viewport = options.viewport;\n    var reglUniforms = {};\n    if (uniforms) {\n      this.uniforms = extractUniforms(uniforms);\n      Object.keys(uniforms).forEach(function (uniformName) {\n        // use regl prop API\n        // @ts-ignore\n        reglUniforms[uniformName] = reGl.prop(uniformName);\n      });\n    }\n    var reglAttributes = {};\n    Object.keys(attributes).forEach(function (name) {\n      reglAttributes[name] = attributes[name].get();\n    });\n    var defineStmts = defines && this.generateDefines(defines) || '';\n    var drawParams = {\n      attributes: reglAttributes,\n      frag: \"#ifdef GL_FRAGMENT_PRECISION_HIGH\\n  precision highp float;\\n#else\\n  precision mediump float;\\n#endif\\n\".concat(defineStmts, \"\\n\").concat(fs),\n      uniforms: reglUniforms,\n      vert: \"\\n\".concat(defineStmts, \"\\n\").concat(vs),\n      primitive: primitiveMap[primitive === undefined ? gl.TRIANGLES : primitive]\n    };\n    if (instances) {\n      drawParams.instances = instances;\n    } // elements 中可能包含 count，此时不应传入\n\n    if (count) {\n      drawParams.count = count;\n    }\n    if (elements) {\n      drawParams.elements = elements.get();\n    }\n    if (scissor) {\n      drawParams.scissor = scissor;\n    }\n    if (viewport) {\n      drawParams.viewport = viewport;\n    }\n    this.initDepthDrawParams({\n      depth: depth\n    }, drawParams);\n    this.initBlendDrawParams({\n      blend: blend\n    }, drawParams);\n    this.initStencilDrawParams({\n      stencil: stencil\n    }, drawParams);\n    this.initCullDrawParams({\n      cull: cull\n    }, drawParams);\n    this.drawCommand = reGl(drawParams);\n  }\n  _createClass(ReglModel, [{\n    key: \"addUniforms\",\n    value: function addUniforms(uniforms) {\n      this.uniforms = _objectSpread(_objectSpread({}, this.uniforms), extractUniforms(uniforms));\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(options) {\n      var uniforms = _objectSpread(_objectSpread({}, this.uniforms), extractUniforms(options.uniforms || {}));\n      var reglDrawProps = {};\n      Object.keys(uniforms).forEach(function (uniformName) {\n        var type = _typeof(uniforms[uniformName]);\n        if (type === 'boolean' || type === 'number' || Array.isArray(uniforms[uniformName]) ||\n        // @ts-ignore\n        uniforms[uniformName].BYTES_PER_ELEMENT) {\n          reglDrawProps[uniformName] = uniforms[uniformName];\n        } else if (type === 'string') {// TODO: image url\n        } else {\n          reglDrawProps[uniformName] = uniforms[uniformName].get();\n        }\n      });\n      this.drawCommand(reglDrawProps);\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {// don't need do anything since we will call `rendererService.cleanup()`\n    }\n    /**\n     * @see https://github.com/regl-project/regl/blob/gh-pages/API.md#depth-buffer\n     */\n  }, {\n    key: \"initDepthDrawParams\",\n    value: function initDepthDrawParams(_ref, drawParams) {\n      var depth = _ref.depth;\n      if (depth) {\n        drawParams.depth = {\n          enable: depth.enable === undefined ? true : !!depth.enable,\n          mask: depth.mask === undefined ? true : !!depth.mask,\n          func: depthFuncMap[depth.func || gl.LESS],\n          range: depth.range || [0, 1]\n        };\n      }\n    }\n    /**\n     * @see https://github.com/regl-project/regl/blob/gh-pages/API.md#blending\n     */\n  }, {\n    key: \"initBlendDrawParams\",\n    value: function initBlendDrawParams(_ref2, drawParams) {\n      var blend = _ref2.blend;\n      if (blend) {\n        var enable = blend.enable,\n          func = blend.func,\n          equation = blend.equation,\n          _blend$color = blend.color,\n          color = _blend$color === void 0 ? [0, 0, 0, 0] : _blend$color; // @ts-ignore\n\n        drawParams.blend = {\n          enable: !!enable,\n          func: {\n            srcRGB: blendFuncMap[func && func.srcRGB || gl.SRC_ALPHA],\n            srcAlpha: blendFuncMap[func && func.srcAlpha || gl.SRC_ALPHA],\n            dstRGB: blendFuncMap[func && func.dstRGB || gl.ONE_MINUS_SRC_ALPHA],\n            dstAlpha: blendFuncMap[func && func.dstAlpha || gl.ONE_MINUS_SRC_ALPHA]\n          },\n          equation: {\n            rgb: blendEquationMap[equation && equation.rgb || gl.FUNC_ADD],\n            alpha: blendEquationMap[equation && equation.alpha || gl.FUNC_ADD]\n          },\n          color: color\n        };\n      }\n    }\n    /**\n     * @see https://github.com/regl-project/regl/blob/gh-pages/API.md#stencil\n     */\n  }, {\n    key: \"initStencilDrawParams\",\n    value: function initStencilDrawParams(_ref3, drawParams) {\n      var stencil = _ref3.stencil;\n      if (stencil) {\n        var enable = stencil.enable,\n          _stencil$mask = stencil.mask,\n          mask = _stencil$mask === void 0 ? -1 : _stencil$mask,\n          _stencil$func = stencil.func,\n          func = _stencil$func === void 0 ? {\n            cmp: gl.ALWAYS,\n            ref: 0,\n            mask: -1\n          } : _stencil$func,\n          _stencil$opFront = stencil.opFront,\n          opFront = _stencil$opFront === void 0 ? {\n            fail: gl.KEEP,\n            zfail: gl.KEEP,\n            zpass: gl.KEEP\n          } : _stencil$opFront,\n          _stencil$opBack = stencil.opBack,\n          opBack = _stencil$opBack === void 0 ? {\n            fail: gl.KEEP,\n            zfail: gl.KEEP,\n            zpass: gl.KEEP\n          } : _stencil$opBack;\n        drawParams.stencil = {\n          enable: !!enable,\n          mask: mask,\n          func: _objectSpread(_objectSpread({}, func), {}, {\n            cmp: stencilFuncMap[func.cmp]\n          }),\n          opFront: {\n            fail: stencilOpMap[opFront.fail],\n            zfail: stencilOpMap[opFront.zfail],\n            zpass: stencilOpMap[opFront.zpass]\n          },\n          opBack: {\n            fail: stencilOpMap[opBack.fail],\n            zfail: stencilOpMap[opBack.zfail],\n            zpass: stencilOpMap[opBack.zpass]\n          }\n        };\n      }\n    }\n    /**\n     * @see https://github.com/regl-project/regl/blob/gh-pages/API.md#culling\n     */\n  }, {\n    key: \"initCullDrawParams\",\n    value: function initCullDrawParams(_ref4, drawParams) {\n      var cull = _ref4.cull;\n      if (cull) {\n        var enable = cull.enable,\n          _cull$face = cull.face,\n          face = _cull$face === void 0 ? gl.BACK : _cull$face;\n        drawParams.cull = {\n          enable: !!enable,\n          face: cullFaceMap[face]\n        };\n      }\n    }\n  }, {\n    key: \"generateDefines\",\n    value: function generateDefines(defines) {\n      return Object.keys(defines).map(function (name) {\n        return \"#define \".concat(name, \" \").concat(Number(defines[name]));\n      }).join('\\n');\n    }\n  }]);\n  return ReglModel;\n}();\nexport { ReglModel as default };","map":{"version":3,"names":["gl","extractUniforms","blendEquationMap","blendFuncMap","cullFaceMap","depthFuncMap","primitiveMap","stencilFuncMap","stencilOpMap","ReglModel","reGl","options","_classCallCheck","drawCommand","uniforms","vs","fs","defines","attributes","primitive","count","elements","depth","blend","stencil","cull","instances","scissor","viewport","reglUniforms","Object","keys","forEach","uniformName","prop","reglAttributes","name","get","defineStmts","generateDefines","drawParams","frag","concat","vert","undefined","TRIANGLES","initDepthDrawParams","initBlendDrawParams","initStencilDrawParams","initCullDrawParams","_objectSpread","reglDrawProps","type","_typeof","Array","isArray","BYTES_PER_ELEMENT","_ref","enable","mask","func","LESS","range","_ref2","equation","_blend$color","color","srcRGB","SRC_ALPHA","srcAlpha","dstRGB","ONE_MINUS_SRC_ALPHA","dstAlpha","rgb","FUNC_ADD","alpha","_ref3","_stencil$mask","_stencil$func","cmp","ALWAYS","ref","_stencil$opFront","opFront","fail","KEEP","zfail","zpass","_stencil$opBack","opBack","_ref4","_cull$face","face","BACK","map","Number","join"],"sources":["/Users/bhanudahiya/Desktop/ledger-IQ/node_modules/@antv/g-webgpu-engine/src/webgl/ReglModel.ts"],"sourcesContent":["import {\n  gl,\n  IModel,\n  IModelDrawOptions,\n  IModelInitializationOptions,\n  IUniform,\n} from '@antv/g-webgpu-core';\nimport regl from 'regl';\nimport { extractUniforms } from '../utils/uniform';\nimport {\n  blendEquationMap,\n  blendFuncMap,\n  cullFaceMap,\n  depthFuncMap,\n  primitiveMap,\n  stencilFuncMap,\n  stencilOpMap,\n} from './constants';\nimport ReglAttribute from './ReglAttribute';\nimport ReglElements from './ReglElements';\nimport ReglFramebuffer from './ReglFramebuffer';\nimport ReglTexture2D from './ReglTexture2D';\n\n/**\n * adaptor for regl.DrawCommand\n */\nexport default class ReglModel implements IModel {\n  private reGl: regl.Regl;\n  private drawCommand: regl.DrawCommand;\n  private uniforms: {\n    [key: string]: IUniform;\n  } = {};\n\n  constructor(reGl: regl.Regl, options: IModelInitializationOptions) {\n    this.reGl = reGl;\n    const {\n      vs,\n      fs,\n      defines,\n      attributes,\n      uniforms,\n      primitive,\n      count,\n      elements,\n      depth,\n      blend,\n      stencil,\n      cull,\n      instances,\n      scissor,\n      // @ts-ignore\n      viewport,\n    } = options;\n    const reglUniforms: { [key: string]: IUniform } = {};\n    if (uniforms) {\n      this.uniforms = extractUniforms(uniforms);\n      Object.keys(uniforms).forEach((uniformName) => {\n        // use regl prop API\n        // @ts-ignore\n        reglUniforms[uniformName] = reGl.prop(uniformName);\n      });\n    }\n\n    const reglAttributes: { [key: string]: regl.Attribute } = {};\n    Object.keys(attributes).forEach((name: string) => {\n      reglAttributes[name] = (attributes[name] as ReglAttribute).get();\n    });\n\n    const defineStmts = (defines && this.generateDefines(defines)) || '';\n    const drawParams: regl.DrawConfig = {\n      attributes: reglAttributes,\n      frag: `#ifdef GL_FRAGMENT_PRECISION_HIGH\n  precision highp float;\n#else\n  precision mediump float;\n#endif\n${defineStmts}\n${fs}`,\n      uniforms: reglUniforms,\n      vert: `\n${defineStmts}\n${vs}`,\n      primitive:\n        primitiveMap[primitive === undefined ? gl.TRIANGLES : primitive],\n    };\n    if (instances) {\n      drawParams.instances = instances;\n    }\n\n    // elements 中可能包含 count，此时不应传入\n    if (count) {\n      drawParams.count = count;\n    }\n\n    if (elements) {\n      drawParams.elements = (elements as ReglElements).get();\n    }\n\n    if (scissor) {\n      drawParams.scissor = scissor;\n    }\n\n    if (viewport) {\n      drawParams.viewport = viewport;\n    }\n\n    this.initDepthDrawParams({ depth }, drawParams);\n    this.initBlendDrawParams({ blend }, drawParams);\n    this.initStencilDrawParams({ stencil }, drawParams);\n    this.initCullDrawParams({ cull }, drawParams);\n\n    this.drawCommand = reGl(drawParams);\n  }\n\n  public addUniforms(uniforms: { [key: string]: IUniform }) {\n    this.uniforms = {\n      ...this.uniforms,\n      ...extractUniforms(uniforms),\n    };\n  }\n\n  public draw(options: IModelDrawOptions) {\n    const uniforms: {\n      [key: string]: IUniform;\n    } = {\n      ...this.uniforms,\n      ...extractUniforms(options.uniforms || {}),\n    };\n\n    const reglDrawProps: {\n      [key: string]:\n        | regl.Framebuffer\n        | regl.Texture2D\n        | number\n        | number[]\n        | boolean;\n    } = {};\n\n    Object.keys(uniforms).forEach((uniformName: string) => {\n      const type = typeof uniforms[uniformName];\n      if (\n        type === 'boolean' ||\n        type === 'number' ||\n        Array.isArray(uniforms[uniformName]) ||\n        // @ts-ignore\n        uniforms[uniformName].BYTES_PER_ELEMENT\n      ) {\n        reglDrawProps[uniformName] = uniforms[uniformName] as\n          | number\n          | number[]\n          | boolean;\n      } else if (type === 'string') {\n        // TODO: image url\n      } else {\n        reglDrawProps[uniformName] = (uniforms[uniformName] as\n          | ReglFramebuffer\n          | ReglTexture2D).get();\n      }\n    });\n    this.drawCommand(reglDrawProps);\n  }\n\n  public destroy() {\n    // don't need do anything since we will call `rendererService.cleanup()`\n  }\n\n  /**\n   * @see https://github.com/regl-project/regl/blob/gh-pages/API.md#depth-buffer\n   */\n  private initDepthDrawParams(\n    { depth }: Pick<IModelInitializationOptions, 'depth'>,\n    drawParams: regl.DrawConfig,\n  ) {\n    if (depth) {\n      drawParams.depth = {\n        enable: depth.enable === undefined ? true : !!depth.enable,\n        mask: depth.mask === undefined ? true : !!depth.mask,\n        func: depthFuncMap[depth.func || gl.LESS],\n        range: depth.range || [0, 1],\n      };\n    }\n  }\n\n  /**\n   * @see https://github.com/regl-project/regl/blob/gh-pages/API.md#blending\n   */\n  private initBlendDrawParams(\n    { blend }: Pick<IModelInitializationOptions, 'blend'>,\n    drawParams: regl.DrawConfig,\n  ) {\n    if (blend) {\n      const { enable, func, equation, color = [0, 0, 0, 0] } = blend;\n      // @ts-ignore\n      drawParams.blend = {\n        enable: !!enable,\n        func: {\n          srcRGB: blendFuncMap[(func && func.srcRGB) || gl.SRC_ALPHA],\n          srcAlpha: blendFuncMap[(func && func.srcAlpha) || gl.SRC_ALPHA],\n          dstRGB: blendFuncMap[(func && func.dstRGB) || gl.ONE_MINUS_SRC_ALPHA],\n          dstAlpha:\n            blendFuncMap[(func && func.dstAlpha) || gl.ONE_MINUS_SRC_ALPHA],\n        },\n        equation: {\n          rgb: blendEquationMap[(equation && equation.rgb) || gl.FUNC_ADD],\n          alpha: blendEquationMap[(equation && equation.alpha) || gl.FUNC_ADD],\n        },\n        color,\n      };\n    }\n  }\n\n  /**\n   * @see https://github.com/regl-project/regl/blob/gh-pages/API.md#stencil\n   */\n  private initStencilDrawParams(\n    { stencil }: Pick<IModelInitializationOptions, 'stencil'>,\n    drawParams: regl.DrawConfig,\n  ) {\n    if (stencil) {\n      const {\n        enable,\n        mask = -1,\n        func = {\n          cmp: gl.ALWAYS,\n          ref: 0,\n          mask: -1,\n        },\n        opFront = {\n          fail: gl.KEEP,\n          zfail: gl.KEEP,\n          zpass: gl.KEEP,\n        },\n        opBack = {\n          fail: gl.KEEP,\n          zfail: gl.KEEP,\n          zpass: gl.KEEP,\n        },\n      } = stencil;\n      drawParams.stencil = {\n        enable: !!enable,\n        mask,\n        func: {\n          ...func,\n          cmp: stencilFuncMap[func.cmp],\n        },\n        opFront: {\n          fail: stencilOpMap[opFront.fail],\n          zfail: stencilOpMap[opFront.zfail],\n          zpass: stencilOpMap[opFront.zpass],\n        },\n        opBack: {\n          fail: stencilOpMap[opBack.fail],\n          zfail: stencilOpMap[opBack.zfail],\n          zpass: stencilOpMap[opBack.zpass],\n        },\n      };\n    }\n  }\n\n  /**\n   * @see https://github.com/regl-project/regl/blob/gh-pages/API.md#culling\n   */\n  private initCullDrawParams(\n    { cull }: Pick<IModelInitializationOptions, 'cull'>,\n    drawParams: regl.DrawConfig,\n  ) {\n    if (cull) {\n      const { enable, face = gl.BACK } = cull;\n      drawParams.cull = {\n        enable: !!enable,\n        face: cullFaceMap[face],\n      };\n    }\n  }\n\n  private generateDefines(defines: Record<string, number | boolean>) {\n    return Object.keys(defines)\n      .map((name) => `#define ${name} ${Number(defines[name])}`)\n      .join('\\n');\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SACEA,EADF,QAMO,qBANP;AAQA,SAASC,eAAT,QAAgC,kBAAhC;AACA,SACEC,gBADF,EAEEC,YAFF,EAGEC,WAHF,EAIEC,YAJF,EAKEC,YALF,EAMEC,cANF,EAOEC,YAPF,QAQO,aARP;;AAcA;AACA;AACA;IACqBC,S;EAOnB,SAAAA,UAAYC,IAAZ,EAA6BC,OAA7B,EAAmE;IAAAC,eAAA,OAAAH,SAAA;IAAA,KAN3DC,IAM2D;IAAA,KAL3DG,WAK2D;IAAA,KAJ3DC,QAI2D,GAF/D,EAE+D;IACjE,KAAKJ,IAAL,GAAYA,IAAZ;IADiE,IAG/DK,EAH+D,GAmB7DJ,OAnB6D,CAG/DI,EAH+D;MAI/DC,EAJ+D,GAmB7DL,OAnB6D,CAI/DK,EAJ+D;MAK/DC,OAL+D,GAmB7DN,OAnB6D,CAK/DM,OAL+D;MAM/DC,UAN+D,GAmB7DP,OAnB6D,CAM/DO,UAN+D;MAO/DJ,QAP+D,GAmB7DH,OAnB6D,CAO/DG,QAP+D;MAQ/DK,SAR+D,GAmB7DR,OAnB6D,CAQ/DQ,SAR+D;MAS/DC,KAT+D,GAmB7DT,OAnB6D,CAS/DS,KAT+D;MAU/DC,QAV+D,GAmB7DV,OAnB6D,CAU/DU,QAV+D;MAW/DC,KAX+D,GAmB7DX,OAnB6D,CAW/DW,KAX+D;MAY/DC,KAZ+D,GAmB7DZ,OAnB6D,CAY/DY,KAZ+D;MAa/DC,OAb+D,GAmB7Db,OAnB6D,CAa/Da,OAb+D;MAc/DC,IAd+D,GAmB7Dd,OAnB6D,CAc/Dc,IAd+D;MAe/DC,SAf+D,GAmB7Df,OAnB6D,CAe/De,SAf+D;MAgB/DC,OAhB+D,GAmB7DhB,OAnB6D,CAgB/DgB,OAhB+D;MAkB/DC,QAlB+D,GAmB7DjB,OAnB6D,CAkB/DiB,QAlB+D;IAoBjE,IAAMC,YAAyC,GAAG,EAAlD;IACA,IAAIf,QAAJ,EAAc;MACZ,KAAKA,QAAL,GAAgBb,eAAe,CAACa,QAAD,CAA/B;MACAgB,MAAM,CAACC,IAAP,CAAYjB,QAAZ,EAAsBkB,OAAtB,CAA8B,UAACC,WAAD,EAAiB;QAC7C;QACA;QACAJ,YAAY,CAACI,WAAD,CAAZ,GAA4BvB,IAAI,CAACwB,IAAL,CAAUD,WAAV,CAA5B;MACD,CAJD;IAKD;IAED,IAAME,cAAiD,GAAG,EAA1D;IACAL,MAAM,CAACC,IAAP,CAAYb,UAAZ,EAAwBc,OAAxB,CAAgC,UAACI,IAAD,EAAkB;MAChDD,cAAc,CAACC,IAAD,CAAd,GAAwBlB,UAAU,CAACkB,IAAD,CAAX,CAAoCC,GAApC,EAAvB;IACD,CAFD;IAIA,IAAMC,WAAW,GAAIrB,OAAO,IAAI,KAAKsB,eAAL,CAAqBtB,OAArB,CAAZ,IAA8C,EAAlE;IACA,IAAMuB,UAA2B,GAAG;MAClCtB,UAAU,EAAEiB,cADsB;MAElCM,IAAI,6GAAAC,MAAA,CAKRJ,WALQ,QAAAI,MAAA,CAMR1B,EANQ,CAF8B;MASlCF,QAAQ,EAAEe,YATwB;MAUlCc,IAAI,OAAAD,MAAA,CACRJ,WADQ,QAAAI,MAAA,CAER3B,EAFQ,CAV8B;MAalCI,SAAS,EACPb,YAAY,CAACa,SAAS,KAAKyB,SAAd,GAA0B5C,EAAE,CAAC6C,SAA7B,GAAyC1B,SAA1C;IAdoB,CAApC;IAgBA,IAAIO,SAAJ,EAAe;MACbc,UAAU,CAACd,SAAX,GAAuBA,SAAvB;IACD,CAtDgE,CAwDjE;;IACA,IAAIN,KAAJ,EAAW;MACToB,UAAU,CAACpB,KAAX,GAAmBA,KAAnB;IACD;IAED,IAAIC,QAAJ,EAAc;MACZmB,UAAU,CAACnB,QAAX,GAAuBA,QAAD,CAA2BgB,GAA3B,EAAtB;IACD;IAED,IAAIV,OAAJ,EAAa;MACXa,UAAU,CAACb,OAAX,GAAqBA,OAArB;IACD;IAED,IAAIC,QAAJ,EAAc;MACZY,UAAU,CAACZ,QAAX,GAAsBA,QAAtB;IACD;IAED,KAAKkB,mBAAL,CAAyB;MAAExB,KAAK,EAALA;IAAF,CAAzB,EAAoCkB,UAApC;IACA,KAAKO,mBAAL,CAAyB;MAAExB,KAAK,EAALA;IAAF,CAAzB,EAAoCiB,UAApC;IACA,KAAKQ,qBAAL,CAA2B;MAAExB,OAAO,EAAPA;IAAF,CAA3B,EAAwCgB,UAAxC;IACA,KAAKS,kBAAL,CAAwB;MAAExB,IAAI,EAAJA;IAAF,CAAxB,EAAkCe,UAAlC;IAEA,KAAK3B,WAAL,GAAmBH,IAAI,CAAC8B,UAAD,CAAvB;EACD;;;gCAEkB1B,Q,EAAuC;MACxD,KAAKA,QAAL,GAAAoC,aAAA,CAAAA,aAAA,KACK,KAAKpC,QADV,GAEKb,eAAe,CAACa,QAAD,CAFpB;IAID;;;yBAEWH,O,EAA4B;MACtC,IAAMG,QAEL,GAAAoC,aAAA,CAAAA,aAAA,KACI,KAAKpC,QADT,GAEIb,eAAe,CAACU,OAAO,CAACG,QAAR,IAAoB,EAArB,CAFnB,CAFD;MAOA,IAAMqC,aAOL,GAAG,EAPJ;MASArB,MAAM,CAACC,IAAP,CAAYjB,QAAZ,EAAsBkB,OAAtB,CAA8B,UAACC,WAAD,EAAyB;QACrD,IAAMmB,IAAI,GAAAC,OAAA,CAAUvC,QAAQ,CAACmB,WAAD,CAAlB,CAAV;QACA,IACEmB,IAAI,KAAK,SAAT,IACAA,IAAI,KAAK,QADT,IAEAE,KAAK,CAACC,OAAN,CAAczC,QAAQ,CAACmB,WAAD,CAAtB,CAFA;QAGA;QACAnB,QAAQ,CAACmB,WAAD,CAAR,CAAsBuB,iBALxB,EAME;UACAL,aAAa,CAAClB,WAAD,CAAb,GAA6BnB,QAAQ,CAACmB,WAAD,CAArC;QAID,CAXD,MAWO,IAAImB,IAAI,KAAK,QAAb,EAAuB,CAC5B;QAAA,CADK,MAEA;UACLD,aAAa,CAAClB,WAAD,CAAb,GAA8BnB,QAAQ,CAACmB,WAAD,CAAT,CAEVI,GAFU,EAA7B;QAGD;MACF,CApBD;MAqBA,KAAKxB,WAAL,CAAiBsC,aAAjB;IACD;;;8BAEgB,CACf;IAAA;IAGF;AACF;AACA;;;8CAGIX,U,EACA;MAAA,IAFElB,KAEF,GAAAmC,IAAA,CAFEnC,KAEF;MACA,IAAIA,KAAJ,EAAW;QACTkB,UAAU,CAAClB,KAAX,GAAmB;UACjBoC,MAAM,EAAEpC,KAAK,CAACoC,MAAN,KAAiBd,SAAjB,GAA6B,IAA7B,GAAoC,CAAC,CAACtB,KAAK,CAACoC,MADnC;UAEjBC,IAAI,EAAErC,KAAK,CAACqC,IAAN,KAAef,SAAf,GAA2B,IAA3B,GAAkC,CAAC,CAACtB,KAAK,CAACqC,IAF/B;UAGjBC,IAAI,EAAEvD,YAAY,CAACiB,KAAK,CAACsC,IAAN,IAAc5D,EAAE,CAAC6D,IAAlB,CAHD;UAIjBC,KAAK,EAAExC,KAAK,CAACwC,KAAN,IAAe,CAAC,CAAD,EAAI,CAAJ;QAJL,CAAnB;MAMD;IACF;IAED;AACF;AACA;;;+CAGItB,U,EACA;MAAA,IAFEjB,KAEF,GAAAwC,KAAA,CAFExC,KAEF;MACA,IAAIA,KAAJ,EAAW;QAAA,IACDmC,MADC,GACgDnC,KADhD,CACDmC,MADC;UACOE,IADP,GACgDrC,KADhD,CACOqC,IADP;UACaI,QADb,GACgDzC,KADhD,CACayC,QADb;UAAAC,YAAA,GACgD1C,KADhD,CACuB2C,KADvB;UACuBA,KADvB,GAAAD,YAAA,cAC+B,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAD/B,GAAAA,YAAA,EAET;;QACAzB,UAAU,CAACjB,KAAX,GAAmB;UACjBmC,MAAM,EAAE,CAAC,CAACA,MADO;UAEjBE,IAAI,EAAE;YACJO,MAAM,EAAEhE,YAAY,CAAEyD,IAAI,IAAIA,IAAI,CAACO,MAAd,IAAyBnE,EAAE,CAACoE,SAA7B,CADhB;YAEJC,QAAQ,EAAElE,YAAY,CAAEyD,IAAI,IAAIA,IAAI,CAACS,QAAd,IAA2BrE,EAAE,CAACoE,SAA/B,CAFlB;YAGJE,MAAM,EAAEnE,YAAY,CAAEyD,IAAI,IAAIA,IAAI,CAACU,MAAd,IAAyBtE,EAAE,CAACuE,mBAA7B,CAHhB;YAIJC,QAAQ,EACNrE,YAAY,CAAEyD,IAAI,IAAIA,IAAI,CAACY,QAAd,IAA2BxE,EAAE,CAACuE,mBAA/B;UALV,CAFW;UASjBP,QAAQ,EAAE;YACRS,GAAG,EAAEvE,gBAAgB,CAAE8D,QAAQ,IAAIA,QAAQ,CAACS,GAAtB,IAA8BzE,EAAE,CAAC0E,QAAlC,CADb;YAERC,KAAK,EAAEzE,gBAAgB,CAAE8D,QAAQ,IAAIA,QAAQ,CAACW,KAAtB,IAAgC3E,EAAE,CAAC0E,QAApC;UAFf,CATO;UAajBR,KAAK,EAALA;QAbiB,CAAnB;MAeD;IACF;IAED;AACF;AACA;;;iDAGI1B,U,EACA;MAAA,IAFEhB,OAEF,GAAAoD,KAAA,CAFEpD,OAEF;MACA,IAAIA,OAAJ,EAAa;QAAA,IAETkC,MAFS,GAmBPlC,OAnBO,CAETkC,MAFS;UAAAmB,aAAA,GAmBPrD,OAnBO,CAGTmC,IAHS;UAGTA,IAHS,GAAAkB,aAAA,cAGF,CAAC,CAHC,GAAAA,aAAA;UAAAC,aAAA,GAmBPtD,OAnBO,CAIToC,IAJS;UAITA,IAJS,GAAAkB,aAAA,cAIF;YACLC,GAAG,EAAE/E,EAAE,CAACgF,MADH;YAELC,GAAG,EAAE,CAFA;YAGLtB,IAAI,EAAE,CAAC;UAHF,CAJE,GAAAmB,aAAA;UAAAI,gBAAA,GAmBP1D,OAnBO,CAST2D,OATS;UASTA,OATS,GAAAD,gBAAA,cASC;YACRE,IAAI,EAAEpF,EAAE,CAACqF,IADD;YAERC,KAAK,EAAEtF,EAAE,CAACqF,IAFF;YAGRE,KAAK,EAAEvF,EAAE,CAACqF;UAHF,CATD,GAAAH,gBAAA;UAAAM,eAAA,GAmBPhE,OAnBO,CAcTiE,MAdS;UAcTA,MAdS,GAAAD,eAAA,cAcA;YACPJ,IAAI,EAAEpF,EAAE,CAACqF,IADF;YAEPC,KAAK,EAAEtF,EAAE,CAACqF,IAFH;YAGPE,KAAK,EAAEvF,EAAE,CAACqF;UAHH,CAdA,GAAAG,eAAA;QAoBXhD,UAAU,CAAChB,OAAX,GAAqB;UACnBkC,MAAM,EAAE,CAAC,CAACA,MADS;UAEnBC,IAAI,EAAJA,IAFmB;UAGnBC,IAAI,EAAAV,aAAA,CAAAA,aAAA,KACCU,IADD;YAEFmB,GAAG,EAAExE,cAAc,CAACqD,IAAI,CAACmB,GAAN;UAFjB,EAHe;UAOnBI,OAAO,EAAE;YACPC,IAAI,EAAE5E,YAAY,CAAC2E,OAAO,CAACC,IAAT,CADX;YAEPE,KAAK,EAAE9E,YAAY,CAAC2E,OAAO,CAACG,KAAT,CAFZ;YAGPC,KAAK,EAAE/E,YAAY,CAAC2E,OAAO,CAACI,KAAT;UAHZ,CAPU;UAYnBE,MAAM,EAAE;YACNL,IAAI,EAAE5E,YAAY,CAACiF,MAAM,CAACL,IAAR,CADZ;YAENE,KAAK,EAAE9E,YAAY,CAACiF,MAAM,CAACH,KAAR,CAFb;YAGNC,KAAK,EAAE/E,YAAY,CAACiF,MAAM,CAACF,KAAR;UAHb;QAZW,CAArB;MAkBD;IACF;IAED;AACF;AACA;;;8CAGI/C,U,EACA;MAAA,IAFEf,IAEF,GAAAiE,KAAA,CAFEjE,IAEF;MACA,IAAIA,IAAJ,EAAU;QAAA,IACAiC,MADA,GAC2BjC,IAD3B,CACAiC,MADA;UAAAiC,UAAA,GAC2BlE,IAD3B,CACQmE,IADR;UACQA,IADR,GAAAD,UAAA,cACe3F,EAAE,CAAC6F,IADlB,GAAAF,UAAA;QAERnD,UAAU,CAACf,IAAX,GAAkB;UAChBiC,MAAM,EAAE,CAAC,CAACA,MADM;UAEhBkC,IAAI,EAAExF,WAAW,CAACwF,IAAD;QAFD,CAAlB;MAID;IACF;;;oCAEuB3E,O,EAA2C;MACjE,OAAOa,MAAM,CAACC,IAAP,CAAYd,OAAZ,EACJ6E,GADI,CACA,UAAC1D,IAAD;QAAA,kBAAAM,MAAA,CAAqBN,IAArB,OAAAM,MAAA,CAA6BqD,MAAM,CAAC9E,OAAO,CAACmB,IAAD,CAAR,CAAnC;MAAA,CADA,EAEJ4D,IAFI,CAEC,IAFD,CAAP;IAGD;;;;SA7PkBvF,S","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}