{"ast":null,"code":"import { __awaiter, __decorate, __metadata } from \"tslib\";\n/* eslint-disable @typescript-eslint/no-redeclare */\nimport 'reflect-metadata';\n/** Application 扩展依赖 */\nimport { ICommandHandler, IGraphCommandFactory, IGraphCommandContribution } from '../command/interface';\nimport { inject, singleton } from 'mana-syringe';\nimport { IHookContribution } from '../hooks/interface';\nimport { Disposable, DisposableCollection } from '../common/disposable';\n/** Commands */\nimport { registerNodeCommand, hookhubList as nodeHooks } from './node';\nimport { registerGraphCommand, hookhubList as graphHooks } from './graph';\nimport { registerEdgeCommand, hookhubList as edgeHooks } from './edge';\nimport { registerGroupCommand, hookhubList as groupHooks } from './group';\nimport { registerModelServiceCommand, hookhubList as observablesHooks } from './models';\n/** Command Hooks*/\nimport { HookHub } from '@antv/xflow-hook';\nimport { CommandConfig } from './config';\n/** Commands 配置项目*/\nconst hookhubList = [...nodeHooks, ...edgeHooks, ...groupHooks, ...graphHooks, ...observablesHooks];\nconst defaultHookFactory = () => new HookHub();\nlet XFlowCommandContribution = class XFlowCommandContribution {\n  constructor() {\n    /** 注册钩子 */\n    this.registerHook = hooks => __awaiter(this, void 0, void 0, function* () {\n      const d = hooks.x6Events.registerHook({\n        name: 'bind group node move event',\n        handler: args => __awaiter(this, void 0, void 0, function* () {\n          const event = {\n            eventName: 'node:moving',\n            callback: ({\n              node\n            }) => __awaiter(this, void 0, void 0, function* () {\n              const isGroup = node.prop('isGroup');\n              if (isGroup) {\n                node.prop('originPosition', node.getPosition());\n                return;\n              }\n              const graph = node.model.graph;\n              const {\n                group: groupId\n              } = node.getData();\n              const group = graph.getNodes().find(cell => cell.id === groupId);\n              if (!group) {\n                return;\n              }\n              const isCollapsed = group.getProp('isCollapsed');\n              let originSize = group.getProp('originSize');\n              let hasChange = false;\n              if (originSize == null) {\n                originSize = group.size();\n                group.prop('originSize', originSize);\n              }\n              let originPosition = group.prop('originPosition');\n              if (originPosition == null) {\n                originPosition = group.getPosition();\n                group.prop('originPosition', originPosition);\n              }\n              let x = originPosition.x;\n              let y = originPosition.y;\n              let cornerX = originPosition.x + originSize.width;\n              let cornerY = originPosition.y + originSize.height;\n              const childs = group.getChildren();\n              if (childs) {\n                childs.forEach(child => {\n                  const bbox = child.getBBox().inflate(12);\n                  const corner = bbox.getCorner();\n                  if (bbox.x < x) {\n                    x = bbox.x;\n                    hasChange = true;\n                  }\n                  if (bbox.y < y) {\n                    y = bbox.y;\n                    hasChange = true;\n                  }\n                  if (corner.x > cornerX) {\n                    cornerX = corner.x;\n                    hasChange = true;\n                  }\n                  if (corner.y > cornerY) {\n                    cornerY = corner.y;\n                    hasChange = true;\n                  }\n                });\n              }\n              if (hasChange) {\n                group.prop({\n                  position: {\n                    x,\n                    y\n                  },\n                  size: {\n                    width: cornerX - x,\n                    height: cornerY - y\n                  }\n                });\n                const groupData = Object.assign(Object.assign({}, group.getData()), {\n                  x,\n                  y,\n                  width: cornerX - x,\n                  height: cornerY - y\n                });\n                if (isCollapsed !== true) {\n                  groupData.groupChildrenSize = {\n                    width: cornerX - x,\n                    height: cornerY - y\n                  };\n                }\n                group.setData(groupData);\n              }\n              /**\n               *  updateNodeData:\n               *  1. 折叠时移动更新xy，size需要更新，childrenSize不变\n               *  2. 展开时\n               *      - 移动Group更新xy，size不需要更新，childrenSize不更新\n               *      - 移动children, 更新xy, size childrenSize\n               */\n            })\n          };\n          args.push(event);\n        })\n      });\n      return Disposable.create(() => {\n        d.dispose();\n      });\n    });\n    /** 注册钩子 */\n    this.registerHookHub = registry => __awaiter(this, void 0, void 0, function* () {\n      const toDispose = new DisposableCollection();\n      hookhubList.forEach(({\n        hookKey,\n        createHook = defaultHookFactory\n      }) => {\n        const d = registry.registerHookHub(hookKey, createHook());\n        toDispose.push(d);\n      });\n      this.commandConfig.getConfig().then(({\n        getContributions\n      }) => {\n        const CommandContributions = getContributions();\n        CommandContributions.forEach(({\n          hookKey,\n          createHook = defaultHookFactory\n        }) => {\n          const d = registry.registerHookHub(hookKey, createHook());\n          toDispose.push(d);\n        });\n      });\n      return toDispose;\n    });\n  }\n  /** 注册画布节点命令 */\n  registerGraphCommands(registry) {\n    /** 注册内置的命令 */\n    hookhubList.forEach(({\n      command\n    }) => {\n      registry.registerCommand(command, {\n        createCommand: this.commandFactory\n      });\n    });\n    /** 注册外部传入的命令 */\n    this.commandConfig.getConfig().then(({\n      getContributions\n    }) => {\n      const CommandContributions = getContributions();\n      CommandContributions.forEach(cmd => {\n        registry.registerCommand(cmd.command, {\n          createCommand: this.commandFactory\n        });\n      });\n    });\n  }\n};\n__decorate([inject(IGraphCommandFactory), __metadata(\"design:type\", Function)], XFlowCommandContribution.prototype, \"commandFactory\", void 0);\n__decorate([inject(CommandConfig), __metadata(\"design:type\", CommandConfig\n/** 注册画布节点命令 */)], XFlowCommandContribution.prototype, \"commandConfig\", void 0);\nXFlowCommandContribution = __decorate([singleton({\n  contrib: [IGraphCommandContribution, IHookContribution]\n})], XFlowCommandContribution);\nexport { XFlowCommandContribution };\nexport const registerXFlowCommandContribution = (register, commandConfig) => {\n  /** 扩展 用户自定义命令 */\n  const configContributions = commandConfig.getCommandContributions();\n  configContributions.forEach(execution => {\n    const {\n      CommandHandler,\n      command\n    } = execution;\n    register({\n      token: {\n        token: ICommandHandler,\n        named: command.id\n      },\n      useClass: CommandHandler\n    });\n  });\n  /** 扩展 Graph 命令 */\n  registerGraphCommand(register);\n  /** 扩展 Node 命令 */\n  registerNodeCommand(register);\n  /** 扩展 Edge 命令 */\n  registerEdgeCommand(register);\n  /** 扩展 Edge 命令 */\n  registerGroupCommand(register);\n  /** 扩展 Observable 命令 */\n  registerModelServiceCommand(register);\n  /** 注册 XFlowCommandContribution */\n  register(XFlowCommandContribution);\n};","map":{"version":3,"names":["ICommandHandler","IGraphCommandFactory","IGraphCommandContribution","inject","singleton","IHookContribution","Disposable","DisposableCollection","registerNodeCommand","hookhubList","nodeHooks","registerGraphCommand","graphHooks","registerEdgeCommand","edgeHooks","registerGroupCommand","groupHooks","registerModelServiceCommand","observablesHooks","HookHub","CommandConfig","defaultHookFactory","XFlowCommandContribution","constructor","registerHook","hooks","__awaiter","d","x6Events","name","handler","args","event","eventName","callback","node","isGroup","prop","getPosition","graph","model","group","groupId","getData","getNodes","find","cell","id","isCollapsed","getProp","originSize","hasChange","size","originPosition","x","y","cornerX","width","cornerY","height","childs","getChildren","forEach","child","bbox","getBBox","inflate","corner","getCorner","position","groupData","Object","assign","groupChildrenSize","setData","push","create","dispose","registerHookHub","registry","toDispose","hookKey","createHook","commandConfig","getConfig","then","getContributions","CommandContributions","registerGraphCommands","command","registerCommand","createCommand","commandFactory","cmd","__decorate","contrib","registerXFlowCommandContribution","register","configContributions","getCommandContributions","execution","CommandHandler","token","named","useClass"],"sources":["../../src/command-contributions/command-contribution.ts"],"sourcesContent":[null],"mappings":";AAAA;AACA,OAAO,kBAAkB;AACzB;AACA,SACEA,eAAe,EACfC,oBAAoB,EACpBC,yBAAyB,QACpB,sBAAsB;AAG7B,SAASC,MAAM,EAAEC,SAAS,QAAQ,cAAc;AAGhD,SAASC,iBAAiB,QAAQ,oBAAoB;AACtD,SAASC,UAAU,EAAEC,oBAAoB,QAAQ,sBAAsB;AAEvE;AACA,SAASC,mBAAmB,EAAEC,WAAW,IAAIC,SAAS,QAAQ,QAAQ;AACtE,SAASC,oBAAoB,EAAEF,WAAW,IAAIG,UAAU,QAAQ,SAAS;AACzE,SAASC,mBAAmB,EAAEJ,WAAW,IAAIK,SAAS,QAAQ,QAAQ;AACtE,SAASC,oBAAoB,EAAEN,WAAW,IAAIO,UAAU,QAAQ,SAAS;AACzE,SAASC,2BAA2B,EAAER,WAAW,IAAIS,gBAAgB,QAAQ,UAAU;AAEvF;AACA,SAASC,OAAO,QAAQ,kBAAkB;AAC1C,SAASC,aAAa,QAAQ,UAAU;AAKxC;AACA,MAAMX,WAAW,GAAG,CAAC,GAAGC,SAAS,EAAE,GAAGI,SAAS,EAAE,GAAGE,UAAU,EAAE,GAAGJ,UAAU,EAAE,GAAGM,gBAAgB,CAAC;AAEnG,MAAMG,kBAAkB,GAAGA,CAAA,KAAM,IAAIF,OAAO,EAAE;AAGvC,IAAMG,wBAAwB,GAA9B,MAAMA,wBAAwB;EAA9BC,YAAA;IA6BL;IACA,KAAAC,YAAY,GAAUC,KAAgB,IAAIC,SAAA;MACxC,MAAMC,CAAC,GAAGF,KAAK,CAACG,QAAQ,CAACJ,YAAY,CAAC;QACpCK,IAAI,EAAE,4BAA4B;QAClCC,OAAO,EAAQC,IAAI,IAAGL,SAAA;UACpB,MAAMM,KAAK,GAA0B;YACnCC,SAAS,EAAE,aAAa;YACxBC,QAAQ,EAAEA,CAAO;cAAEC;YAAI,CAAE,KAAIT,SAAA;cAC3B,MAAMU,OAAO,GAAGD,IAAI,CAACE,IAAI,CAAC,SAAS,CAAC;cACpC,IAAID,OAAO,EAAE;gBACXD,IAAI,CAACE,IAAI,CAAC,gBAAgB,EAAEF,IAAI,CAACG,WAAW,EAAE,CAAC;gBAC/C;;cAGF,MAAMC,KAAK,GAAGJ,IAAI,CAACK,KAAK,CAACD,KAAK;cAC9B,MAAM;gBAAEE,KAAK,EAAEC;cAAO,CAAE,GAAGP,IAAI,CAACQ,OAAO,EAAE;cACzC,MAAMF,KAAK,GAAGF,KAAK,CAACK,QAAQ,EAAE,CAACC,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKL,OAAO,CAAC;cAChE,IAAI,CAACD,KAAK,EAAE;gBACV;;cAGF,MAAMO,WAAW,GAAGP,KAAK,CAACQ,OAAO,CAAC,aAAa,CAAC;cAChD,IAAIC,UAAU,GAAGT,KAAK,CAACQ,OAAO,CAAC,YAAY,CAAC;cAC5C,IAAIE,SAAS,GAAG,KAAK;cAErB,IAAID,UAAU,IAAI,IAAI,EAAE;gBACtBA,UAAU,GAAGT,KAAK,CAACW,IAAI,EAAE;gBACzBX,KAAK,CAACJ,IAAI,CAAC,YAAY,EAAEa,UAAU,CAAC;;cAEtC,IAAIG,cAAc,GAAGZ,KAAK,CAACJ,IAAI,CAAC,gBAAgB,CAAC;cACjD,IAAIgB,cAAc,IAAI,IAAI,EAAE;gBAC1BA,cAAc,GAAGZ,KAAK,CAACH,WAAW,EAAE;gBACpCG,KAAK,CAACJ,IAAI,CAAC,gBAAgB,EAAEgB,cAAc,CAAC;;cAG9C,IAAIC,CAAC,GAAGD,cAAc,CAACC,CAAC;cACxB,IAAIC,CAAC,GAAGF,cAAc,CAACE,CAAC;cACxB,IAAIC,OAAO,GAAGH,cAAc,CAACC,CAAC,GAAGJ,UAAU,CAACO,KAAK;cACjD,IAAIC,OAAO,GAAGL,cAAc,CAACE,CAAC,GAAGL,UAAU,CAACS,MAAM;cAClD,MAAMC,MAAM,GAAGnB,KAAK,CAACoB,WAAW,EAAE;cAClC,IAAID,MAAM,EAAE;gBACVA,MAAM,CAACE,OAAO,CAACC,KAAK,IAAG;kBACrB,MAAMC,IAAI,GAAGD,KAAK,CAACE,OAAO,EAAE,CAACC,OAAO,CAAC,EAAE,CAAC;kBACxC,MAAMC,MAAM,GAAGH,IAAI,CAACI,SAAS,EAAE;kBAE/B,IAAIJ,IAAI,CAACV,CAAC,GAAGA,CAAC,EAAE;oBACdA,CAAC,GAAGU,IAAI,CAACV,CAAC;oBACVH,SAAS,GAAG,IAAI;;kBAGlB,IAAIa,IAAI,CAACT,CAAC,GAAGA,CAAC,EAAE;oBACdA,CAAC,GAAGS,IAAI,CAACT,CAAC;oBACVJ,SAAS,GAAG,IAAI;;kBAGlB,IAAIgB,MAAM,CAACb,CAAC,GAAGE,OAAO,EAAE;oBACtBA,OAAO,GAAGW,MAAM,CAACb,CAAC;oBAClBH,SAAS,GAAG,IAAI;;kBAGlB,IAAIgB,MAAM,CAACZ,CAAC,GAAGG,OAAO,EAAE;oBACtBA,OAAO,GAAGS,MAAM,CAACZ,CAAC;oBAClBJ,SAAS,GAAG,IAAI;;gBAEpB,CAAC,CAAC;;cAGJ,IAAIA,SAAS,EAAE;gBACbV,KAAK,CAACJ,IAAI,CAAC;kBACTgC,QAAQ,EAAE;oBAAEf,CAAC;oBAAEC;kBAAC,CAAE;kBAClBH,IAAI,EAAE;oBAAEK,KAAK,EAAED,OAAO,GAAGF,CAAC;oBAAEK,MAAM,EAAED,OAAO,GAAGH;kBAAC;iBAChD,CAAC;gBACF,MAAMe,SAAS,GAAAC,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KACV/B,KAAK,CAACE,OAAO,EAAE;kBAClBW,CAAC;kBACDC,CAAC;kBACDE,KAAK,EAAED,OAAO,GAAGF,CAAC;kBAClBK,MAAM,EAAED,OAAO,GAAGH;gBAAC,EACpB;gBACD,IAAIP,WAAW,KAAK,IAAI,EAAE;kBACxBsB,SAAS,CAACG,iBAAiB,GAAG;oBAAEhB,KAAK,EAAED,OAAO,GAAGF,CAAC;oBAAEK,MAAM,EAAED,OAAO,GAAGH;kBAAC,CAAE;;gBAE3Ed,KAAK,CAACiC,OAAO,CAACJ,SAAS,CAAC;;cAG1B;;;;;;;YAOF,CAAC;WACF;UACDvC,IAAI,CAAC4C,IAAI,CAAC3C,KAAK,CAAC;QAClB,CAAC;OACF,CAAC;MACF,OAAO1B,UAAU,CAACsE,MAAM,CAAC,MAAK;QAC5BjD,CAAC,CAACkD,OAAO,EAAE;MACb,CAAC,CAAC;IACJ,CAAC;IACD;IACA,KAAAC,eAAe,GAAUC,QAAiC,IAAIrD,SAAA;MAC5D,MAAMsD,SAAS,GAAG,IAAIzE,oBAAoB,EAAE;MAC5CE,WAAW,CAACqD,OAAO,CAAC,CAAC;QAAEmB,OAAO;QAAEC,UAAU,GAAG7D;MAAkB,CAAE,KAAI;QACnE,MAAMM,CAAC,GAAGoD,QAAQ,CAACD,eAAe,CAACG,OAAO,EAAEC,UAAU,EAAE,CAAC;QACzDF,SAAS,CAACL,IAAI,CAAChD,CAAC,CAAC;MACnB,CAAC,CAAC;MACF,IAAI,CAACwD,aAAa,CAACC,SAAS,EAAE,CAACC,IAAI,CAAC,CAAC;QAAEC;MAAgB,CAAE,KAAI;QAC3D,MAAMC,oBAAoB,GAAGD,gBAAgB,EAAE;QAC/CC,oBAAoB,CAACzB,OAAO,CAAC,CAAC;UAAEmB,OAAO;UAAEC,UAAU,GAAG7D;QAAkB,CAAE,KAAI;UAC5E,MAAMM,CAAC,GAAGoD,QAAQ,CAACD,eAAe,CAACG,OAAO,EAAEC,UAAU,EAAE,CAAC;UACzDF,SAAS,CAACL,IAAI,CAAChD,CAAC,CAAC;QACnB,CAAC,CAAC;MACJ,CAAC,CAAC;MACF,OAAOqD,SAAS;IAClB,CAAC;EACH;EAvIE;EACAQ,qBAAqBA,CAACT,QAA8B;IAClD;IACAtE,WAAW,CAACqD,OAAO,CAAC,CAAC;MAAE2B;IAAO,CAAE,KAAI;MAClCV,QAAQ,CAACW,eAAe,CAACD,OAAO,EAAE;QAChCE,aAAa,EAAE,IAAI,CAACC;OACrB,CAAC;IACJ,CAAC,CAAC;IACF;IACA,IAAI,CAACT,aAAa,CAACC,SAAS,EAAE,CAACC,IAAI,CAAC,CAAC;MAAEC;IAAgB,CAAE,KAAI;MAC3D,MAAMC,oBAAoB,GAAGD,gBAAgB,EAAE;MAC/CC,oBAAoB,CAACzB,OAAO,CAAC+B,GAAG,IAAG;QACjCd,QAAQ,CAACW,eAAe,CAACG,GAAG,CAACJ,OAAO,EAAE;UACpCE,aAAa,EAAE,IAAI,CAACC;SACrB,CAAC;MACJ,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ;CAsHD;AA9ICE,UAAA,EAAC3F,MAAM,CAACF,oBAAoB,CAAC,E,mGACO;AAGpC6F,UAAA,EAAC3F,MAAM,CAACiB,aAAa,CAAC,E,0BACPA;AAEf,e,gEAF4B;AATjBE,wBAAwB,GAAAwE,UAAA,EADpC1F,SAAS,CAAC;EAAE2F,OAAO,EAAE,CAAC7F,yBAAyB,EAAEG,iBAAiB;AAAC,CAAE,CAAC,C,EAC1DiB,wBAAwB,CAkJpC;SAlJYA,wBAAwB;AAoJrC,OAAO,MAAM0E,gCAAgC,GAAGA,CAC9CC,QAA0B,EAC1Bd,aAA4B,KAC1B;EACF;EACA,MAAMe,mBAAmB,GAAGf,aAAa,CAACgB,uBAAuB,EAAE;EACnED,mBAAmB,CAACpC,OAAO,CAACsC,SAAS,IAAG;IACtC,MAAM;MAAEC,cAAc;MAAEZ;IAAO,CAAE,GAAGW,SAAS;IAC7CH,QAAQ,CAAC;MACPK,KAAK,EAAE;QAAEA,KAAK,EAAEtG,eAAe;QAAEuG,KAAK,EAAEd,OAAO,CAAC1C;MAAE,CAAE;MACpDyD,QAAQ,EAAEH;KACX,CAAC;EACJ,CAAC,CAAC;EAEF;EACA1F,oBAAoB,CAACsF,QAAQ,CAAC;EAC9B;EACAzF,mBAAmB,CAACyF,QAAQ,CAAC;EAC7B;EACApF,mBAAmB,CAACoF,QAAQ,CAAC;EAC7B;EACAlF,oBAAoB,CAACkF,QAAQ,CAAC;EAC9B;EACAhF,2BAA2B,CAACgF,QAAQ,CAAC;EACrC;EACAA,QAAQ,CAAC3E,wBAAwB,CAAC;AACpC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}