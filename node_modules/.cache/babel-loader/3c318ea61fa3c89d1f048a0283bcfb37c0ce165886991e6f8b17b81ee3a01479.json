{"ast":null,"code":"import { AttributeType, gl } from '@antv/l7-core';\nimport { COMMON_ATTRIBUTE_LOCATION } from \"../core/CommonStyleAttribute\";\nimport { isTileGroup } from \"../tile/utils/utils\";\n\n/**\n * 在初始化阶段完成属性的注册，以及首次根据 Layer 指定的三角化方法完成 indices 和 attribute 的创建\n */\nexport default class RegisterStyleAttributePlugin {\n  apply(layer, {\n    styleAttributeService\n  }) {\n    layer.hooks.init.tapPromise('RegisterStyleAttributePlugin', () => {\n      // 过滤 tileGroup layer （瓦片图层不需要注册）\n      if (isTileGroup(layer)) {\n        return;\n      }\n      this.registerBuiltinAttributes(styleAttributeService, layer);\n    });\n  }\n  registerBuiltinAttributes(styleAttributeService, layer) {\n    // MaskLayer 只需要注册 a_Position\n    if (layer.type === 'MaskLayer') {\n      this.registerPositionAttribute(styleAttributeService);\n      return;\n    }\n    // Tip: normal render layer\n    this.registerPositionAttribute(styleAttributeService);\n    // this.registerFilterAttribute(styleAttributeService);//数据层数据过滤\n    this.registerColorAttribute(styleAttributeService);\n  }\n  registerPositionAttribute(styleAttributeService) {\n    styleAttributeService.registerStyleAttribute({\n      name: 'position',\n      type: AttributeType.Attribute,\n      descriptor: {\n        name: 'a_Position',\n        shaderLocation: COMMON_ATTRIBUTE_LOCATION.POSITION,\n        buffer: {\n          data: [],\n          type: gl.FLOAT\n        },\n        size: 3,\n        update: (feature, featureIdx, vertex) => {\n          return vertex.length === 2 ? [vertex[0], vertex[1], 0] : [vertex[0], vertex[1], vertex[2]];\n        }\n      }\n    });\n  }\n  registerColorAttribute(styleAttributeService) {\n    styleAttributeService.registerStyleAttribute({\n      name: 'color',\n      type: AttributeType.Attribute,\n      descriptor: {\n        name: 'a_Color',\n        shaderLocation: COMMON_ATTRIBUTE_LOCATION.COLOR,\n        buffer: {\n          // give the WebGL driver a hint that this buffer may change\n          usage: gl.DYNAMIC_DRAW,\n          data: [],\n          type: gl.FLOAT\n        },\n        size: 4,\n        update: feature => {\n          const {\n            color\n          } = feature;\n          return !color || !color.length ? [1, 1, 1, 1] : color;\n        }\n      }\n    });\n  }\n}","map":{"version":3,"names":["AttributeType","gl","COMMON_ATTRIBUTE_LOCATION","isTileGroup","RegisterStyleAttributePlugin","apply","layer","styleAttributeService","hooks","init","tapPromise","registerBuiltinAttributes","type","registerPositionAttribute","registerColorAttribute","registerStyleAttribute","name","Attribute","descriptor","shaderLocation","POSITION","buffer","data","FLOAT","size","update","feature","featureIdx","vertex","length","COLOR","usage","DYNAMIC_DRAW","color"],"sources":["/Users/bhanudahiya/Desktop/ledger-IQ/node_modules/@antv/l7-layers/es/plugins/RegisterStyleAttributePlugin.js"],"sourcesContent":["import { AttributeType, gl } from '@antv/l7-core';\nimport { COMMON_ATTRIBUTE_LOCATION } from \"../core/CommonStyleAttribute\";\nimport { isTileGroup } from \"../tile/utils/utils\";\n\n/**\n * 在初始化阶段完成属性的注册，以及首次根据 Layer 指定的三角化方法完成 indices 和 attribute 的创建\n */\nexport default class RegisterStyleAttributePlugin {\n  apply(layer, {\n    styleAttributeService\n  }) {\n    layer.hooks.init.tapPromise('RegisterStyleAttributePlugin', () => {\n      // 过滤 tileGroup layer （瓦片图层不需要注册）\n      if (isTileGroup(layer)) {\n        return;\n      }\n      this.registerBuiltinAttributes(styleAttributeService, layer);\n    });\n  }\n  registerBuiltinAttributes(styleAttributeService, layer) {\n    // MaskLayer 只需要注册 a_Position\n    if (layer.type === 'MaskLayer') {\n      this.registerPositionAttribute(styleAttributeService);\n      return;\n    }\n    // Tip: normal render layer\n    this.registerPositionAttribute(styleAttributeService);\n    // this.registerFilterAttribute(styleAttributeService);//数据层数据过滤\n    this.registerColorAttribute(styleAttributeService);\n  }\n  registerPositionAttribute(styleAttributeService) {\n    styleAttributeService.registerStyleAttribute({\n      name: 'position',\n      type: AttributeType.Attribute,\n      descriptor: {\n        name: 'a_Position',\n        shaderLocation: COMMON_ATTRIBUTE_LOCATION.POSITION,\n        buffer: {\n          data: [],\n          type: gl.FLOAT\n        },\n        size: 3,\n        update: (feature, featureIdx, vertex) => {\n          return vertex.length === 2 ? [vertex[0], vertex[1], 0] : [vertex[0], vertex[1], vertex[2]];\n        }\n      }\n    });\n  }\n  registerColorAttribute(styleAttributeService) {\n    styleAttributeService.registerStyleAttribute({\n      name: 'color',\n      type: AttributeType.Attribute,\n      descriptor: {\n        name: 'a_Color',\n        shaderLocation: COMMON_ATTRIBUTE_LOCATION.COLOR,\n        buffer: {\n          // give the WebGL driver a hint that this buffer may change\n          usage: gl.DYNAMIC_DRAW,\n          data: [],\n          type: gl.FLOAT\n        },\n        size: 4,\n        update: feature => {\n          const {\n            color\n          } = feature;\n          return !color || !color.length ? [1, 1, 1, 1] : color;\n        }\n      }\n    });\n  }\n}"],"mappings":"AAAA,SAASA,aAAa,EAAEC,EAAE,QAAQ,eAAe;AACjD,SAASC,yBAAyB,QAAQ,8BAA8B;AACxE,SAASC,WAAW,QAAQ,qBAAqB;;AAEjD;AACA;AACA;AACA,eAAe,MAAMC,4BAA4B,CAAC;EAChDC,KAAKA,CAACC,KAAK,EAAE;IACXC;EACF,CAAC,EAAE;IACDD,KAAK,CAACE,KAAK,CAACC,IAAI,CAACC,UAAU,CAAC,8BAA8B,EAAE,MAAM;MAChE;MACA,IAAIP,WAAW,CAACG,KAAK,CAAC,EAAE;QACtB;MACF;MACA,IAAI,CAACK,yBAAyB,CAACJ,qBAAqB,EAAED,KAAK,CAAC;IAC9D,CAAC,CAAC;EACJ;EACAK,yBAAyBA,CAACJ,qBAAqB,EAAED,KAAK,EAAE;IACtD;IACA,IAAIA,KAAK,CAACM,IAAI,KAAK,WAAW,EAAE;MAC9B,IAAI,CAACC,yBAAyB,CAACN,qBAAqB,CAAC;MACrD;IACF;IACA;IACA,IAAI,CAACM,yBAAyB,CAACN,qBAAqB,CAAC;IACrD;IACA,IAAI,CAACO,sBAAsB,CAACP,qBAAqB,CAAC;EACpD;EACAM,yBAAyBA,CAACN,qBAAqB,EAAE;IAC/CA,qBAAqB,CAACQ,sBAAsB,CAAC;MAC3CC,IAAI,EAAE,UAAU;MAChBJ,IAAI,EAAEZ,aAAa,CAACiB,SAAS;MAC7BC,UAAU,EAAE;QACVF,IAAI,EAAE,YAAY;QAClBG,cAAc,EAAEjB,yBAAyB,CAACkB,QAAQ;QAClDC,MAAM,EAAE;UACNC,IAAI,EAAE,EAAE;UACRV,IAAI,EAAEX,EAAE,CAACsB;QACX,CAAC;QACDC,IAAI,EAAE,CAAC;QACPC,MAAM,EAAEA,CAACC,OAAO,EAAEC,UAAU,EAAEC,MAAM,KAAK;UACvC,OAAOA,MAAM,CAACC,MAAM,KAAK,CAAC,GAAG,CAACD,MAAM,CAAC,CAAC,CAAC,EAAEA,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAACA,MAAM,CAAC,CAAC,CAAC,EAAEA,MAAM,CAAC,CAAC,CAAC,EAAEA,MAAM,CAAC,CAAC,CAAC,CAAC;QAC5F;MACF;IACF,CAAC,CAAC;EACJ;EACAd,sBAAsBA,CAACP,qBAAqB,EAAE;IAC5CA,qBAAqB,CAACQ,sBAAsB,CAAC;MAC3CC,IAAI,EAAE,OAAO;MACbJ,IAAI,EAAEZ,aAAa,CAACiB,SAAS;MAC7BC,UAAU,EAAE;QACVF,IAAI,EAAE,SAAS;QACfG,cAAc,EAAEjB,yBAAyB,CAAC4B,KAAK;QAC/CT,MAAM,EAAE;UACN;UACAU,KAAK,EAAE9B,EAAE,CAAC+B,YAAY;UACtBV,IAAI,EAAE,EAAE;UACRV,IAAI,EAAEX,EAAE,CAACsB;QACX,CAAC;QACDC,IAAI,EAAE,CAAC;QACPC,MAAM,EAAEC,OAAO,IAAI;UACjB,MAAM;YACJO;UACF,CAAC,GAAGP,OAAO;UACX,OAAO,CAACO,KAAK,IAAI,CAACA,KAAK,CAACJ,MAAM,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,GAAGI,KAAK;QACvD;MACF;IACF,CAAC,CAAC;EACJ;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}