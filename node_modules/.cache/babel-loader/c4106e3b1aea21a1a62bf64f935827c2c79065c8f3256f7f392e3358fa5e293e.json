{"ast":null,"code":"import { __awaiter, __decorate, __metadata } from \"tslib\";\nimport { inject, injectable, postConstruct } from 'mana-syringe';\nimport { XFlowGraphCommands } from '../constant';\nimport { ICommandHandler, ICommandContextProvider } from '../../command/interface';\nexport var NsGraphSaveData;\n(function (NsGraphSaveData) {\n  /** Command Id: 用于注册named factory */\n  NsGraphSaveData.command = XFlowGraphCommands.SAVE_GRAPH_DATA;\n  /** hookName */\n  NsGraphSaveData.hookKey = 'saveGraphData';\n})(NsGraphSaveData || (NsGraphSaveData = {}));\nlet GraphSaveDataCommand = class GraphSaveDataCommand {\n  constructor() {\n    /** 执行Cmd */\n    this.execute = () => __awaiter(this, void 0, void 0, function* () {\n      const ctx = this.ctx;\n      const args = ctx.getArgs();\n      const hooks = ctx.getHooks();\n      /** 执行hooks */\n      yield hooks.saveGraphData.call(/** 执行hooks pipeline处理args */\n      args.args, /** 执行 callback */\n      handlerArgs => __awaiter(this, void 0, void 0, function* () {\n        const {\n          saveGraphDataService,\n          includeAttrs\n        } = handlerArgs;\n        const x6Graph = yield ctx.getX6Graph();\n        const x6Nodes = x6Graph.getNodes();\n        const x6Edges = x6Graph.getEdges();\n        const nodes = x6Nodes.map(node => {\n          const data = node.getData();\n          const position = node.position();\n          const size = node.size();\n          const model = Object.assign(Object.assign(Object.assign({\n            id: node.id\n          }, data), position), size);\n          if (includeAttrs) {\n            model.attrs = node.getAttrs();\n          }\n          return model;\n        });\n        const edges = x6Edges.map(edge => {\n          const data = edge.getData();\n          const model = Object.assign({\n            id: edge.id\n          }, data);\n          if (includeAttrs) {\n            model.attrs = edge.getAttrs();\n          }\n          return model;\n        });\n        const graphData = {\n          nodes,\n          edges\n        };\n        const graphMeta = yield this.ctx.getGraphMeta();\n        /** 执行 service */\n        if (saveGraphDataService) {\n          const result = yield saveGraphDataService(graphMeta, graphData);\n          /** 设置结果 */\n          if (result) {\n            this.ctx.setResult(result);\n          }\n        }\n        return {};\n      }), /** 外部的 hook */\n      args.hooks);\n      return this;\n    });\n    /** undo cmd */\n    this.undo = () => __awaiter(this, void 0, void 0, function* () {\n      this.ctx.undo();\n      return this;\n    });\n    /** redo cmd */\n    this.redo = () => __awaiter(this, void 0, void 0, function* () {\n      if (!this.ctx.isUndoable) {\n        yield this.execute();\n      }\n      return this;\n    });\n  }\n  init() {\n    this.ctx = this.contextProvider();\n  }\n  /** isUndoable */\n  isUndoable() {\n    return this.ctx.isUndoable();\n  }\n};\n__decorate([inject(ICommandContextProvider), __metadata(\"design:type\", Object)], GraphSaveDataCommand.prototype, \"contextProvider\", void 0);\n__decorate([postConstruct(), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", []), __metadata(\"design:returntype\", void 0)], GraphSaveDataCommand.prototype, \"init\", null);\nGraphSaveDataCommand = __decorate([injectable({\n  token: {\n    token: ICommandHandler,\n    named: NsGraphSaveData.command.id\n  }\n})\n/** 创建节点命令 */], GraphSaveDataCommand);\nexport { GraphSaveDataCommand };","map":{"version":3,"names":["inject","injectable","postConstruct","XFlowGraphCommands","ICommandHandler","ICommandContextProvider","NsGraphSaveData","command","SAVE_GRAPH_DATA","hookKey","GraphSaveDataCommand","constructor","execute","__awaiter","ctx","args","getArgs","hooks","getHooks","saveGraphData","call","handlerArgs","saveGraphDataService","includeAttrs","x6Graph","getX6Graph","x6Nodes","getNodes","x6Edges","getEdges","nodes","map","node","data","getData","position","size","model","Object","assign","id","attrs","getAttrs","edges","edge","graphData","graphMeta","getGraphMeta","result","setResult","undo","redo","isUndoable","init","contextProvider","__decorate","token","named"],"sources":["../../../src/command-contributions/graph/graph-save-data.ts"],"sourcesContent":[null],"mappings":";AAIA,SAASA,MAAM,EAAEC,UAAU,EAAEC,aAAa,QAAQ,cAAc;AAChE,SAASC,kBAAkB,QAAQ,aAAa;AAChD,SAASC,eAAe,EAAEC,uBAAuB,QAAQ,yBAAyB;AAQlF,OAAM,IAAWC,eAAe;AAAhC,WAAiBA,eAAe;EAC9B;EACaA,eAAA,CAAAC,OAAO,GAAGJ,kBAAkB,CAACK,eAAe;EACzD;EACaF,eAAA,CAAAG,OAAO,GAAG,eAAe;AAgBxC,CAAC,EApBgBH,eAAe,KAAfA,eAAe;AA0BzB,IAAMI,oBAAoB,GAA1B,MAAMA,oBAAoB;EAA1BC,YAAA;IAWL;IACA,KAAAC,OAAO,GAAG,MAAWC,SAAA;MACnB,MAAMC,GAAG,GAAG,IAAI,CAACA,GAAG;MACpB,MAAMC,IAAI,GAAGD,GAAG,CAACE,OAAO,EAAE;MAC1B,MAAMC,KAAK,GAAGH,GAAG,CAACI,QAAQ,EAAE;MAE5B;MACA,MAAMD,KAAK,CAACE,aAAa,CAACC,IAAI,CAC5B;MACAL,IAAI,CAACA,IAAI,EACT;MACMM,WAAW,IAAGR,SAAA;QAClB,MAAM;UAAES,oBAAoB;UAAEC;QAAY,CAAE,GAAGF,WAAW;QAC1D,MAAMG,OAAO,GAAG,MAAMV,GAAG,CAACW,UAAU,EAAE;QACtC,MAAMC,OAAO,GAAGF,OAAO,CAACG,QAAQ,EAAE;QAClC,MAAMC,OAAO,GAAGJ,OAAO,CAACK,QAAQ,EAAE;QAElC,MAAMC,KAAK,GAAGJ,OAAO,CAACK,GAAG,CAACC,IAAI,IAAG;UAC/B,MAAMC,IAAI,GAAGD,IAAI,CAACE,OAAO,EAAuB;UAChD,MAAMC,QAAQ,GAAGH,IAAI,CAACG,QAAQ,EAAE;UAChC,MAAMC,IAAI,GAAGJ,IAAI,CAACI,IAAI,EAAE;UACxB,MAAMC,KAAK,GAAAC,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA;YACTC,EAAE,EAAER,IAAI,CAACQ;UAAE,GACRP,IAAI,GACJE,QAAQ,GACRC,IAAI,CACR;UACD,IAAIb,YAAY,EAAE;YAChBc,KAAK,CAACI,KAAK,GAAGT,IAAI,CAACU,QAAQ,EAAE;;UAE/B,OAAOL,KAAK;QACd,CAAC,CAAC;QAEF,MAAMM,KAAK,GAAGf,OAAO,CAACG,GAAG,CAACa,IAAI,IAAG;UAC/B,MAAMX,IAAI,GAAGW,IAAI,CAACV,OAAO,EAAuB;UAChD,MAAMG,KAAK,GAAAC,MAAA,CAAAC,MAAA;YACTC,EAAE,EAAEI,IAAI,CAACJ;UAAE,GACRP,IAAI,CACR;UACD,IAAIV,YAAY,EAAE;YAChBc,KAAK,CAACI,KAAK,GAAGG,IAAI,CAACF,QAAQ,EAAE;;UAE/B,OAAOL,KAAK;QACd,CAAC,CAAC;QAEF,MAAMQ,SAAS,GAAG;UAAEf,KAAK;UAAEa;QAAK,CAAE;QAClC,MAAMG,SAAS,GAAG,MAAM,IAAI,CAAChC,GAAG,CAACiC,YAAY,EAAE;QAC/C;QACA,IAAIzB,oBAAoB,EAAE;UACxB,MAAM0B,MAAM,GAAG,MAAM1B,oBAAoB,CAACwB,SAAS,EAAED,SAAS,CAAC;UAC/D;UACA,IAAIG,MAAM,EAAE;YACV,IAAI,CAAClC,GAAG,CAACmC,SAAS,CAACD,MAAM,CAAC;;;QAG9B,OAAO,EAAE;MACX,CAAC,GACD;MACAjC,IAAI,CAACE,KAAK,CACX;MAED,OAAO,IAAI;IACb,CAAC;IAED;IACA,KAAAiC,IAAI,GAAG,MAAWrC,SAAA;MAChB,IAAI,CAACC,GAAG,CAACoC,IAAI,EAAE;MACf,OAAO,IAAI;IACb,CAAC;IAED;IACA,KAAAC,IAAI,GAAG,MAAWtC,SAAA;MAChB,IAAI,CAAC,IAAI,CAACC,GAAG,CAACsC,UAAU,EAAE;QACxB,MAAM,IAAI,CAACxC,OAAO,EAAE;;MAEtB,OAAO,IAAI;IACb,CAAC;EAMH;EAtFEyC,IAAIA,CAAA;IACF,IAAI,CAACvC,GAAG,GAAG,IAAI,CAACwC,eAAe,EAAE;EACnC;EAgFA;EACAF,UAAUA,CAAA;IACR,OAAO,IAAI,CAACtC,GAAG,CAACsC,UAAU,EAAE;EAC9B;CACD;AA3FCG,UAAA,EAACvD,MAAM,CAACK,uBAAuB,CAAC,E,8FAA6C;AAI7EkD,UAAA,EAACrD,aAAa,EAAE,E,iKAGf;AATUQ,oBAAoB,GAAA6C,UAAA,EAJhCtD,UAAU,CAAC;EACVuD,KAAK,EAAE;IAAEA,KAAK,EAAEpD,eAAe;IAAEqD,KAAK,EAAEnD,eAAe,CAACC,OAAO,CAACiC;EAAE;CACnE;AACD,c,EACa9B,oBAAoB,CA6FhC;SA7FYA,oBAAoB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}