{"ast":null,"code":"var __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\nvar __async = (__this, __arguments, generator) => {\n  return new Promise((resolve, reject) => {\n    var fulfilled = value => {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var rejected = value => {\n      try {\n        step(generator.throw(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var step = x => x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);\n    step((generator = generator.apply(__this, __arguments)).next());\n  });\n};\n\n// src/parser/geojsonvt.ts\nimport geojsonvt from \"geojson-vt\";\nimport VtSource from \"../source/geojsonvt\";\nvar DEFAULT_CONFIG = {\n  tileSize: 256,\n  minZoom: 0,\n  maxZoom: Infinity,\n  zoomOffset: 0\n};\nfunction signedArea(ring) {\n  let sum = 0;\n  for (let i = 0, len = ring.length, j = len - 1, p1, p2; i < len; j = i++) {\n    p1 = ring[i];\n    p2 = ring[j];\n    sum += (p2.x - p1.x) * (p1.y + p2.y);\n  }\n  return sum;\n}\nfunction classifyRings(rings) {\n  const len = rings.length;\n  if (len <= 1) {\n    return [rings];\n  }\n  const polygons = [];\n  let polygon;\n  let ccw;\n  for (let i = 0; i < len; i++) {\n    const area = signedArea(rings[i]);\n    if (area === 0) {\n      continue;\n    }\n    if (ccw === void 0) {\n      ccw = area < 0;\n    }\n    if (ccw === area < 0) {\n      if (polygon) {\n        polygons.push(polygon);\n      }\n      polygon = [rings[i]];\n    } else {\n      polygon.push(rings[i]);\n    }\n  }\n  if (polygon) {\n    polygons.push(polygon);\n  }\n  return polygons;\n}\nvar VectorTileFeatureTypes = [\"Unknown\", \"Point\", \"LineString\", \"Polygon\"];\nfunction GetGeoJSON(extent, x, y, z, vectorTileFeature) {\n  let coords = vectorTileFeature.geometry;\n  const currenType = vectorTileFeature.type;\n  const currentProperties = vectorTileFeature.tags;\n  const currentId = vectorTileFeature.id;\n  const size = extent * Math.pow(2, z);\n  const x0 = extent * x;\n  const y0 = extent * y;\n  let type = VectorTileFeatureTypes[currenType];\n  let i;\n  let j;\n  function project(line) {\n    for (let index = 0; index < line.length; index++) {\n      const p = line[index];\n      if (p[3]) {\n        break;\n      }\n      const y2 = 180 - (p[1] + y0) * 360 / size;\n      const lng = (p[0] + x0) * 360 / size - 180;\n      const lat = 360 / Math.PI * Math.atan(Math.exp(y2 * Math.PI / 180)) - 90;\n      line[index] = [lng, lat, 0, 1];\n    }\n  }\n  switch (currenType) {\n    case 1:\n      const points = [];\n      for (i = 0; i < coords.length; i++) {\n        points[i] = coords[i][0];\n      }\n      coords = points;\n      project(coords);\n      break;\n    case 2:\n      for (i = 0; i < coords.length; i++) {\n        project(coords[i]);\n      }\n      break;\n    case 3:\n      coords = classifyRings(coords);\n      for (i = 0; i < coords.length; i++) {\n        for (j = 0; j < coords[i].length; j++) {\n          project(coords[i][j]);\n        }\n      }\n      break;\n  }\n  if (coords.length === 1) {\n    coords = coords[0];\n  } else {\n    type = \"Multi\" + type;\n  }\n  const result = {\n    type: \"Feature\",\n    geometry: {\n      type,\n      coordinates: coords\n    },\n    properties: currentProperties,\n    id: currentId,\n    tileOrigin: [0, 0],\n    coord: \"\"\n  };\n  return result;\n}\nvar getVectorTile = (tile, tileIndex, tileParams, extent) => __async(void 0, null, function* () {\n  return new Promise(resolve => {\n    const tileData = tileIndex.getTile(tile.z, tile.x, tile.y);\n    const features = tileData ? tileData.features.map(vectorTileFeature => {\n      return GetGeoJSON(extent, tileParams.x, tileParams.y, tileParams.z, vectorTileFeature);\n    }) : [];\n    const vectorTile = {\n      layers: {\n        defaultLayer: {\n          // @ts-ignore\n          features\n        }\n      }\n    };\n    const vectorSource = new VtSource(vectorTile, tile.x, tile.y, tile.z);\n    resolve(vectorSource);\n  });\n});\nfunction getOption(cfg) {\n  const defaultOptions = {\n    // geojson-vt default options\n    maxZoom: 14,\n    // max zoom to preserve detail on\n    indexMaxZoom: 5,\n    // max zoom in the tile index\n    indexMaxPoints: 1e5,\n    // max number of points per tile in the tile index\n    tolerance: 3,\n    // simplification tolerance (higher means simpler)\n    extent: 4096,\n    // tile extent\n    buffer: 64,\n    // tile buffer on each side\n    lineMetrics: false,\n    // whether to calculate line metrics\n    promoteId: null,\n    // name of a feature property to be promoted to feature.id\n    generateId: true,\n    // whether to generate feature ids. Cannot be used with promoteId\n    debug: 0\n    // logging level (0, 1 or 2)\n  };\n  if (cfg === void 0 || typeof cfg.geojsonvtOptions === \"undefined\") {\n    return defaultOptions;\n  } else {\n    return __spreadValues(__spreadValues({}, defaultOptions), cfg.geojsonvtOptions);\n  }\n}\nfunction geojsonVTTile(data, cfg) {\n  const geojsonOptions = getOption(cfg);\n  const extent = geojsonOptions.extent || 4096;\n  const tileIndex = geojsonvt(data, geojsonOptions);\n  const getTileData = (tileParams, tile) => {\n    return getVectorTile(tile, tileIndex, tileParams, extent);\n  };\n  const tilesetOptions = __spreadProps(__spreadValues(__spreadValues({}, DEFAULT_CONFIG), cfg), {\n    getTileData\n  });\n  return {\n    data,\n    dataArray: [],\n    tilesetOptions,\n    isTile: true\n  };\n}\nexport { geojsonVTTile as default };","map":{"version":3,"names":["__defProp","Object","defineProperty","__defProps","defineProperties","__getOwnPropDescs","getOwnPropertyDescriptors","__getOwnPropSymbols","getOwnPropertySymbols","__hasOwnProp","prototype","hasOwnProperty","__propIsEnum","propertyIsEnumerable","__defNormalProp","obj","key","value","enumerable","configurable","writable","__spreadValues","a","b","prop","call","__spreadProps","__async","__this","__arguments","generator","Promise","resolve","reject","fulfilled","step","next","e","rejected","throw","x","done","then","apply","geojsonvt","VtSource","DEFAULT_CONFIG","tileSize","minZoom","maxZoom","Infinity","zoomOffset","signedArea","ring","sum","i","len","length","j","p1","p2","y","classifyRings","rings","polygons","polygon","ccw","area","push","VectorTileFeatureTypes","GetGeoJSON","extent","z","vectorTileFeature","coords","geometry","currenType","type","currentProperties","tags","currentId","id","size","Math","pow","x0","y0","project","line","index","p","y2","lng","lat","PI","atan","exp","points","result","coordinates","properties","tileOrigin","coord","getVectorTile","tile","tileIndex","tileParams","tileData","getTile","features","map","vectorTile","layers","defaultLayer","vectorSource","getOption","cfg","defaultOptions","indexMaxZoom","indexMaxPoints","tolerance","buffer","lineMetrics","promoteId","generateId","debug","geojsonvtOptions","geojsonVTTile","data","geojsonOptions","getTileData","tilesetOptions","dataArray","isTile","default"],"sources":["/Users/bhanudahiya/Desktop/ledger-IQ/node_modules/@antv/l7-source/es/parser/geojsonvt.js"],"sourcesContent":["var __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\nvar __async = (__this, __arguments, generator) => {\n  return new Promise((resolve, reject) => {\n    var fulfilled = (value) => {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var rejected = (value) => {\n      try {\n        step(generator.throw(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var step = (x) => x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);\n    step((generator = generator.apply(__this, __arguments)).next());\n  });\n};\n\n// src/parser/geojsonvt.ts\nimport geojsonvt from \"geojson-vt\";\nimport VtSource from \"../source/geojsonvt\";\nvar DEFAULT_CONFIG = {\n  tileSize: 256,\n  minZoom: 0,\n  maxZoom: Infinity,\n  zoomOffset: 0\n};\nfunction signedArea(ring) {\n  let sum = 0;\n  for (let i = 0, len = ring.length, j = len - 1, p1, p2; i < len; j = i++) {\n    p1 = ring[i];\n    p2 = ring[j];\n    sum += (p2.x - p1.x) * (p1.y + p2.y);\n  }\n  return sum;\n}\nfunction classifyRings(rings) {\n  const len = rings.length;\n  if (len <= 1) {\n    return [rings];\n  }\n  const polygons = [];\n  let polygon;\n  let ccw;\n  for (let i = 0; i < len; i++) {\n    const area = signedArea(rings[i]);\n    if (area === 0) {\n      continue;\n    }\n    if (ccw === void 0) {\n      ccw = area < 0;\n    }\n    if (ccw === area < 0) {\n      if (polygon) {\n        polygons.push(polygon);\n      }\n      polygon = [rings[i]];\n    } else {\n      polygon.push(rings[i]);\n    }\n  }\n  if (polygon) {\n    polygons.push(polygon);\n  }\n  return polygons;\n}\nvar VectorTileFeatureTypes = [\"Unknown\", \"Point\", \"LineString\", \"Polygon\"];\nfunction GetGeoJSON(extent, x, y, z, vectorTileFeature) {\n  let coords = vectorTileFeature.geometry;\n  const currenType = vectorTileFeature.type;\n  const currentProperties = vectorTileFeature.tags;\n  const currentId = vectorTileFeature.id;\n  const size = extent * Math.pow(2, z);\n  const x0 = extent * x;\n  const y0 = extent * y;\n  let type = VectorTileFeatureTypes[currenType];\n  let i;\n  let j;\n  function project(line) {\n    for (let index = 0; index < line.length; index++) {\n      const p = line[index];\n      if (p[3]) {\n        break;\n      }\n      const y2 = 180 - (p[1] + y0) * 360 / size;\n      const lng = (p[0] + x0) * 360 / size - 180;\n      const lat = 360 / Math.PI * Math.atan(Math.exp(y2 * Math.PI / 180)) - 90;\n      line[index] = [lng, lat, 0, 1];\n    }\n  }\n  switch (currenType) {\n    case 1:\n      const points = [];\n      for (i = 0; i < coords.length; i++) {\n        points[i] = coords[i][0];\n      }\n      coords = points;\n      project(coords);\n      break;\n    case 2:\n      for (i = 0; i < coords.length; i++) {\n        project(coords[i]);\n      }\n      break;\n    case 3:\n      coords = classifyRings(coords);\n      for (i = 0; i < coords.length; i++) {\n        for (j = 0; j < coords[i].length; j++) {\n          project(coords[i][j]);\n        }\n      }\n      break;\n  }\n  if (coords.length === 1) {\n    coords = coords[0];\n  } else {\n    type = \"Multi\" + type;\n  }\n  const result = {\n    type: \"Feature\",\n    geometry: {\n      type,\n      coordinates: coords\n    },\n    properties: currentProperties,\n    id: currentId,\n    tileOrigin: [0, 0],\n    coord: \"\"\n  };\n  return result;\n}\nvar getVectorTile = (tile, tileIndex, tileParams, extent) => __async(void 0, null, function* () {\n  return new Promise((resolve) => {\n    const tileData = tileIndex.getTile(tile.z, tile.x, tile.y);\n    const features = tileData ? tileData.features.map((vectorTileFeature) => {\n      return GetGeoJSON(extent, tileParams.x, tileParams.y, tileParams.z, vectorTileFeature);\n    }) : [];\n    const vectorTile = {\n      layers: {\n        defaultLayer: {\n          // @ts-ignore\n          features\n        }\n      }\n    };\n    const vectorSource = new VtSource(vectorTile, tile.x, tile.y, tile.z);\n    resolve(vectorSource);\n  });\n});\nfunction getOption(cfg) {\n  const defaultOptions = {\n    // geojson-vt default options\n    maxZoom: 14,\n    // max zoom to preserve detail on\n    indexMaxZoom: 5,\n    // max zoom in the tile index\n    indexMaxPoints: 1e5,\n    // max number of points per tile in the tile index\n    tolerance: 3,\n    // simplification tolerance (higher means simpler)\n    extent: 4096,\n    // tile extent\n    buffer: 64,\n    // tile buffer on each side\n    lineMetrics: false,\n    // whether to calculate line metrics\n    promoteId: null,\n    // name of a feature property to be promoted to feature.id\n    generateId: true,\n    // whether to generate feature ids. Cannot be used with promoteId\n    debug: 0\n    // logging level (0, 1 or 2)\n  };\n  if (cfg === void 0 || typeof cfg.geojsonvtOptions === \"undefined\") {\n    return defaultOptions;\n  } else {\n    return __spreadValues(__spreadValues({}, defaultOptions), cfg.geojsonvtOptions);\n  }\n}\nfunction geojsonVTTile(data, cfg) {\n  const geojsonOptions = getOption(cfg);\n  const extent = geojsonOptions.extent || 4096;\n  const tileIndex = geojsonvt(data, geojsonOptions);\n  const getTileData = (tileParams, tile) => {\n    return getVectorTile(tile, tileIndex, tileParams, extent);\n  };\n  const tilesetOptions = __spreadProps(__spreadValues(__spreadValues({}, DEFAULT_CONFIG), cfg), {\n    getTileData\n  });\n  return {\n    data,\n    dataArray: [],\n    tilesetOptions,\n    isTile: true\n  };\n}\nexport {\n  geojsonVTTile as default\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}