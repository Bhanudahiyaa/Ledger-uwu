{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _initializerDefineProperty from \"@babel/runtime/helpers/initializerDefineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _applyDecoratedDescriptor from \"@babel/runtime/helpers/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"@babel/runtime/helpers/initializerWarningHelper\";\nvar _dec, _dec2, _dec3, _dec4, _dec5, _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4, _class3, _temp;\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it.return != null) it.return();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n  return arr2;\n}\nimport { inject, injectable } from 'inversify';\nimport { IDENTIFIER } from '../../../identifier';\nimport { decodePickingColor } from '../../../utils/math';\nimport { RenderPass } from './RenderPass';\nvar PickingStage = {\n  NONE: 0.0,\n  ENCODE: 1.0,\n  HIGHLIGHT: 2.0\n};\n/**\n * color-based picking\n * @see https://threejsfundamentals.org/threejs/lessons/threejs-picking.html\n */\n\nexport var PixelPickingPass = (_dec = injectable(), _dec2 = inject(IDENTIFIER.RenderEngine), _dec3 = inject(IDENTIFIER.ResourcePool), _dec4 = inject(IDENTIFIER.RenderPassFactory), _dec5 = inject(IDENTIFIER.MeshComponentManager), _dec(_class = (_class2 = (_temp = _class3 = /*#__PURE__*/function () {\n  function PixelPickingPass() {\n    var _this = this;\n    _classCallCheck(this, PixelPickingPass);\n    _initializerDefineProperty(this, \"engine\", _descriptor, this);\n    _initializerDefineProperty(this, \"resourcePool\", _descriptor2, this);\n    _initializerDefineProperty(this, \"renderPassFactory\", _descriptor3, this);\n    _initializerDefineProperty(this, \"mesh\", _descriptor4, this);\n    this.pickingFBO = void 0;\n    this.views = void 0;\n    this.highlightEnabled = true;\n    this.highlightColor = [255, 0, 0, 255];\n    this.alreadyInRendering = false;\n    this.setup = function (fg, passNode, pass) {\n      var output = fg.createRenderTarget(passNode, 'picking fbo', {\n        width: 1,\n        height: 1\n      });\n      pass.data = {\n        output: passNode.write(fg, output)\n      }; // 防止被 FrameGraph 剔除\n\n      passNode.hasSideEffect = true;\n    };\n    this.execute = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(fg, pass, views) {\n        var _iterator, _step, _loop;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this.views = views;\n                if (!_this.alreadyInRendering) {\n                  _context.next = 3;\n                  break;\n                }\n                return _context.abrupt(\"return\");\n              case 3:\n                _iterator = _createForOfIteratorHelper(views);\n                try {\n                  _loop = function _loop() {\n                    var view = _step.value;\n                    var _view$getViewport = view.getViewport(),\n                      width = _view$getViewport.width,\n                      height = _view$getViewport.height; // throttled\n\n                    _this.alreadyInRendering = true; // 实例化资源\n\n                    var resourceNode = fg.getResourceNode(pass.data.output);\n                    _this.pickingFBO = _this.resourcePool.getOrCreateResource(resourceNode.resource); // TODO: only draw 1x1 quad, with offset camera\n\n                    _this.pickingFBO.resize({\n                      width: width,\n                      height: height\n                    });\n                    _this.engine.useFramebuffer(_this.pickingFBO, function () {\n                      _this.engine.clear({\n                        framebuffer: _this.pickingFBO,\n                        color: [0, 0, 0, 0],\n                        stencil: 0,\n                        depth: 1\n                      }); // 渲染\n\n                      var renderPass = _this.renderPassFactory(RenderPass.IDENTIFIER); // 修改所有\n\n                      var meshes = [];\n                      var scene = view.getScene();\n                      var _iterator2 = _createForOfIteratorHelper(scene.getEntities()),\n                        _step2;\n                      try {\n                        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                          var meshEntity = _step2.value;\n                          var mesh = _this.mesh.getComponentByEntity(meshEntity);\n                          var material = mesh.material;\n                          material.setUniform('u_PickingStage', PickingStage.ENCODE);\n                          meshes.push(mesh);\n                        } // @ts-ignore\n                      } catch (err) {\n                        _iterator2.e(err);\n                      } finally {\n                        _iterator2.f();\n                      }\n                      renderPass.renderView(view);\n                      meshes.forEach(function (mesh) {\n                        var material = mesh.material;\n                        material.setUniform('u_PickingStage', PickingStage.HIGHLIGHT);\n                      });\n                      _this.alreadyInRendering = false;\n                    });\n                  };\n                  for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                    _loop();\n                  }\n                } catch (err) {\n                  _iterator.e(err);\n                } finally {\n                  _iterator.f();\n                }\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return function (_x, _x2, _x3) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    this.pick = function (_ref2, view) {\n      var x = _ref2.x,\n        y = _ref2.y;\n      var _this$engine = _this.engine,\n        readPixels = _this$engine.readPixels,\n        useFramebuffer = _this$engine.useFramebuffer;\n      var _view$getViewport2 = view.getViewport(),\n        width = _view$getViewport2.width,\n        height = _view$getViewport2.height;\n      var xInDevicePixel = x * window.devicePixelRatio;\n      var yInDevicePixel = y * window.devicePixelRatio; // const xInDevicePixel = x;\n      // const yInDevicePixel = y;\n\n      if (xInDevicePixel > width || xInDevicePixel < 0 || yInDevicePixel > height || yInDevicePixel < 0) {\n        return;\n      }\n      var pickedColors;\n      var pickedFeatureIdx;\n      useFramebuffer(_this.pickingFBO, function () {\n        // avoid realloc\n        pickedColors = readPixels({\n          x: Math.round(xInDevicePixel),\n          // 视口坐标系原点在左上，而 WebGL 在左下，需要翻转 Y 轴\n          y: Math.round(height - (y + 1) * window.devicePixelRatio),\n          // y: Math.round(height - (y + 1)),\n          width: 1,\n          height: 1,\n          data: new Uint8Array(1 * 1 * 4),\n          framebuffer: _this.pickingFBO\n        });\n        if (pickedColors[0] !== 0 || pickedColors[1] !== 0 || pickedColors[2] !== 0) {\n          pickedFeatureIdx = decodePickingColor(pickedColors);\n          if (_this.highlightEnabled) {\n            // 高亮\n            _this.highlightPickedFeature(pickedColors, view);\n          }\n        }\n      });\n      return pickedFeatureIdx;\n    };\n  }\n  _createClass(PixelPickingPass, [{\n    key: \"enableHighlight\",\n    value: function enableHighlight(enabled) {\n      this.highlightEnabled = enabled;\n    }\n  }, {\n    key: \"setHighlightColor\",\n    value: function setHighlightColor(color) {\n      this.highlightColor = color;\n    }\n  }, {\n    key: \"highlightPickedFeature\",\n    /**\n     * highlight 如果直接修改选中 feature 的 buffer，存在两个问题：\n     * 1. 鼠标移走时无法恢复\n     * 2. 无法实现高亮颜色与原始原色的 alpha 混合\n     * 因此高亮还是放在 shader 中做比较好\n     */\n    value: function highlightPickedFeature(pickedColors, view) {\n      if (pickedColors) {\n        var _iterator3 = _createForOfIteratorHelper(view.getScene().getEntities()),\n          _step3;\n        try {\n          for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n            var meshEntity = _step3.value;\n            var mesh = this.mesh.getComponentByEntity(meshEntity);\n            var material = mesh.material;\n            material.setUniform('u_PickingStage', PickingStage.HIGHLIGHT);\n            material.setUniform('u_PickingColor', [pickedColors[0], pickedColors[1], pickedColors[2]]);\n            material.setUniform('u_HighlightColor', this.highlightColor);\n          }\n        } catch (err) {\n          _iterator3.e(err);\n        } finally {\n          _iterator3.f();\n        }\n      }\n    }\n  }]);\n  return PixelPickingPass;\n}(), _class3.IDENTIFIER = 'PixelPicking Pass', _temp), _descriptor = _applyDecoratedDescriptor(_class2.prototype, \"engine\", [_dec2], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, \"resourcePool\", [_dec3], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, \"renderPassFactory\", [_dec4], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, \"mesh\", [_dec5], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _class2)) || _class);","map":{"version":3,"names":["inject","injectable","IDENTIFIER","decodePickingColor","RenderPass","PickingStage","NONE","ENCODE","HIGHLIGHT","PixelPickingPass","_dec","_dec2","RenderEngine","_dec3","ResourcePool","_dec4","RenderPassFactory","_dec5","MeshComponentManager","_class","_class2","_temp","_class3","_this","_classCallCheck","_initializerDefineProperty","_descriptor","_descriptor2","_descriptor3","_descriptor4","pickingFBO","views","highlightEnabled","highlightColor","alreadyInRendering","setup","fg","passNode","pass","output","createRenderTarget","width","height","data","write","hasSideEffect","execute","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_iterator","_step","_loop","wrap","_callee$","_context","prev","next","abrupt","_createForOfIteratorHelper","view","value","_view$getViewport","getViewport","resourceNode","getResourceNode","resourcePool","getOrCreateResource","resource","resize","engine","useFramebuffer","clear","framebuffer","color","stencil","depth","renderPass","renderPassFactory","meshes","scene","getScene","_iterator2","getEntities","_step2","s","n","done","meshEntity","mesh","getComponentByEntity","material","setUniform","push","err","e","f","renderView","forEach","stop","_x","_x2","_x3","apply","arguments","pick","_ref2","x","y","_this$engine","readPixels","_view$getViewport2","xInDevicePixel","window","devicePixelRatio","yInDevicePixel","pickedColors","pickedFeatureIdx","Math","round","Uint8Array","highlightPickedFeature","_createClass","key","enableHighlight","enabled","setHighlightColor","_iterator3","_step3","_applyDecoratedDescriptor","prototype","configurable","enumerable","writable","initializer"],"sources":["/Users/bhanudahiya/Desktop/ledger-IQ/node_modules/@antv/g-webgpu-core/src/components/renderer/passes/PixelPickingPass.ts"],"sourcesContent":["import { inject, injectable, named } from 'inversify';\nimport { ComponentManager } from '../../../ComponentManager';\nimport { IDENTIFIER } from '../../../identifier';\nimport { decodePickingColor } from '../../../utils/math';\nimport { FrameGraphHandle } from '../../framegraph/FrameGraphHandle';\nimport { FrameGraphPass } from '../../framegraph/FrameGraphPass';\nimport { PassNode } from '../../framegraph/PassNode';\nimport { ResourcePool } from '../../framegraph/ResourcePool';\nimport { FrameGraphSystem } from '../../framegraph/System';\nimport { MaterialComponent } from '../../material/MaterialComponent';\nimport { MeshComponent } from '../../mesh/MeshComponent';\nimport { IFramebuffer } from '../IFramebuffer';\nimport { IRendererService, IView } from '../IRendererService';\nimport { IRenderPass } from './IRenderPass';\nimport { RenderPass, RenderPassData } from './RenderPass';\n\nexport interface PixelPickingPassData {\n  output: FrameGraphHandle;\n}\n\nconst PickingStage = {\n  NONE: 0.0,\n  ENCODE: 1.0,\n  HIGHLIGHT: 2.0,\n};\n\n/**\n * color-based picking\n * @see https://threejsfundamentals.org/threejs/lessons/threejs-picking.html\n */\n@injectable()\nexport class PixelPickingPass implements IRenderPass<PixelPickingPassData> {\n  public static IDENTIFIER = 'PixelPicking Pass';\n\n  @inject(IDENTIFIER.RenderEngine)\n  private readonly engine: IRendererService;\n\n  @inject(IDENTIFIER.ResourcePool)\n  private readonly resourcePool: ResourcePool;\n\n  @inject(IDENTIFIER.RenderPassFactory)\n  private readonly renderPassFactory: <T>(name: string) => IRenderPass<T>;\n\n  @inject(IDENTIFIER.MeshComponentManager)\n  private readonly mesh: ComponentManager<MeshComponent>;\n\n  private pickingFBO: IFramebuffer;\n  private views: IView[];\n  private highlightEnabled = true;\n  private highlightColor = [255, 0, 0, 255];\n\n  /**\n   * 简单的 throttle，防止连续触发 hover 时导致频繁渲染到 picking framebuffer\n   */\n  private alreadyInRendering: boolean = false;\n\n  public enableHighlight(enabled: boolean) {\n    this.highlightEnabled = enabled;\n  }\n\n  public setHighlightColor(color: number[]) {\n    this.highlightColor = color;\n  }\n\n  public setup = (\n    fg: FrameGraphSystem,\n    passNode: PassNode,\n    pass: FrameGraphPass<PixelPickingPassData>,\n  ): void => {\n    const output = fg.createRenderTarget(passNode, 'picking fbo', {\n      width: 1,\n      height: 1,\n    });\n\n    pass.data = {\n      output: passNode.write(fg, output),\n    };\n\n    // 防止被 FrameGraph 剔除\n    passNode.hasSideEffect = true;\n  };\n\n  public execute = async (\n    fg: FrameGraphSystem,\n    pass: FrameGraphPass<PixelPickingPassData>,\n    views: IView[],\n  ): Promise<void> => {\n    this.views = views;\n\n    if (this.alreadyInRendering) {\n      return;\n    }\n\n    for (const view of views) {\n      const { width, height } = view.getViewport();\n      // throttled\n      this.alreadyInRendering = true;\n\n      // 实例化资源\n      const resourceNode = fg.getResourceNode(pass.data.output);\n      this.pickingFBO = this.resourcePool.getOrCreateResource(\n        resourceNode.resource,\n      );\n\n      // TODO: only draw 1x1 quad, with offset camera\n      this.pickingFBO.resize({ width, height });\n      this.engine.useFramebuffer(this.pickingFBO, () => {\n        this.engine.clear({\n          framebuffer: this.pickingFBO,\n          color: [0, 0, 0, 0],\n          stencil: 0,\n          depth: 1,\n        });\n\n        // 渲染\n        const renderPass = this.renderPassFactory<RenderPassData>(\n          RenderPass.IDENTIFIER,\n        );\n\n        // 修改所有\n        const meshes: MeshComponent[] = [];\n        const scene = view.getScene();\n        for (const meshEntity of scene.getEntities()) {\n          const mesh = this.mesh.getComponentByEntity(meshEntity)!;\n          const material = mesh.material;\n          material.setUniform('u_PickingStage', PickingStage.ENCODE);\n          meshes.push(mesh);\n        }\n\n        // @ts-ignore\n        renderPass.renderView(view);\n        meshes.forEach((mesh) => {\n          const material = mesh.material;\n          material.setUniform('u_PickingStage', PickingStage.HIGHLIGHT);\n        });\n\n        this.alreadyInRendering = false;\n      });\n    }\n  };\n\n  public pick = ({ x, y }: { x: number; y: number }, view: IView) => {\n    const { readPixels, useFramebuffer } = this.engine;\n    const { width, height } = view.getViewport();\n    const xInDevicePixel = x * window.devicePixelRatio;\n    const yInDevicePixel = y * window.devicePixelRatio;\n    // const xInDevicePixel = x;\n    // const yInDevicePixel = y;\n    if (\n      xInDevicePixel > width ||\n      xInDevicePixel < 0 ||\n      yInDevicePixel > height ||\n      yInDevicePixel < 0\n    ) {\n      return;\n    }\n\n    let pickedColors: Uint8Array | undefined;\n    let pickedFeatureIdx: number | undefined;\n    useFramebuffer(this.pickingFBO, () => {\n      // avoid realloc\n      pickedColors = readPixels({\n        x: Math.round(xInDevicePixel),\n        // 视口坐标系原点在左上，而 WebGL 在左下，需要翻转 Y 轴\n        y: Math.round(height - (y + 1) * window.devicePixelRatio),\n        // y: Math.round(height - (y + 1)),\n        width: 1,\n        height: 1,\n        data: new Uint8Array(1 * 1 * 4),\n        framebuffer: this.pickingFBO,\n      });\n\n      if (\n        pickedColors[0] !== 0 ||\n        pickedColors[1] !== 0 ||\n        pickedColors[2] !== 0\n      ) {\n        pickedFeatureIdx = decodePickingColor(pickedColors);\n\n        if (this.highlightEnabled) {\n          // 高亮\n          this.highlightPickedFeature(pickedColors, view);\n        }\n      }\n    });\n    return pickedFeatureIdx;\n  };\n\n  /**\n   * highlight 如果直接修改选中 feature 的 buffer，存在两个问题：\n   * 1. 鼠标移走时无法恢复\n   * 2. 无法实现高亮颜色与原始原色的 alpha 混合\n   * 因此高亮还是放在 shader 中做比较好\n   */\n  private highlightPickedFeature(\n    pickedColors: Uint8Array | undefined,\n    view: IView,\n  ) {\n    if (pickedColors) {\n      for (const meshEntity of view.getScene().getEntities()) {\n        const mesh = this.mesh.getComponentByEntity(meshEntity)!;\n        const material = mesh.material;\n        material.setUniform('u_PickingStage', PickingStage.HIGHLIGHT);\n\n        material.setUniform('u_PickingColor', [\n          pickedColors[0],\n          pickedColors[1],\n          pickedColors[2],\n        ]);\n        material.setUniform('u_HighlightColor', this.highlightColor);\n      }\n    }\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAASA,MAAT,EAAiBC,UAAjB,QAA0C,WAA1C;AAEA,SAASC,UAAT,QAA2B,qBAA3B;AACA,SAASC,kBAAT,QAAmC,qBAAnC;AAWA,SAASC,UAAT,QAA2C,cAA3C;AAMA,IAAMC,YAAY,GAAG;EACnBC,IAAI,EAAE,GADa;EAEnBC,MAAM,EAAE,GAFW;EAGnBC,SAAS,EAAE;AAHQ,CAArB;AAMA;AACA;AACA;AACA;;AAEA,WAAaC,gBAAb,IAAAC,IAAA,GADCT,UAAU,EACX,EAAAU,KAAA,GAGGX,MAAM,CAACE,UAAU,CAACU,YAAZ,CAHT,EAAAC,KAAA,GAMGb,MAAM,CAACE,UAAU,CAACY,YAAZ,CANT,EAAAC,KAAA,GASGf,MAAM,CAACE,UAAU,CAACc,iBAAZ,CATT,EAAAC,KAAA,GAYGjB,MAAM,CAACE,UAAU,CAACgB,oBAAZ,CAZT,EAAAR,IAAA,CAAAS,MAAA,IAAAC,OAAA,IAAAC,KAAA,GAAAC,OAAA;EAAA,SAAAb,iBAAA;IAAA,IAAAc,KAAA;IAAAC,eAAA,OAAAf,gBAAA;IAAAgB,0BAAA,iBAAAC,WAAA;IAAAD,0BAAA,uBAAAE,YAAA;IAAAF,0BAAA,4BAAAG,YAAA;IAAAH,0BAAA,eAAAI,YAAA;IAAA,KAeUC,UAfV;IAAA,KAgBUC,KAhBV;IAAA,KAiBUC,gBAjBV,GAiB6B,IAjB7B;IAAA,KAkBUC,cAlBV,GAkB2B,CAAC,GAAD,EAAM,CAAN,EAAS,CAAT,EAAY,GAAZ,CAlB3B;IAAA,KAuBUC,kBAvBV,GAuBwC,KAvBxC;IAAA,KAiCSC,KAjCT,GAiCiB,UACbC,EADa,EAEbC,QAFa,EAGbC,IAHa,EAIJ;MACT,IAAMC,MAAM,GAAGH,EAAE,CAACI,kBAAH,CAAsBH,QAAtB,EAAgC,aAAhC,EAA+C;QAC5DI,KAAK,EAAE,CADqD;QAE5DC,MAAM,EAAE;MAFoD,CAA/C,CAAf;MAKAJ,IAAI,CAACK,IAAL,GAAY;QACVJ,MAAM,EAAEF,QAAQ,CAACO,KAAT,CAAeR,EAAf,EAAmBG,MAAnB;MADE,CAAZ,CANS,CAUT;;MACAF,QAAQ,CAACQ,aAAT,GAAyB,IAAzB;IACD,CAjDH;IAAA,KAmDSC,OAnDT;MAAA,IAAAC,IAAA,GAAAC,iBAAA,cAAAC,mBAAA,CAAAC,IAAA,CAmDmB,SAAAC,QACff,EADe,EAEfE,IAFe,EAGfP,KAHe;QAAA,IAAAqB,SAAA,EAAAC,KAAA,EAAAC,KAAA;QAAA,OAAAL,mBAAA,CAAAM,IAAA,UAAAC,SAAAC,QAAA;UAAA;YAAA,QAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;cAAA;gBAKfpC,KAAI,CAACQ,KAAL,GAAaA,KAAb;gBALe,KAOXR,KAAI,CAACW,kBAPM;kBAAAuB,QAAA,CAAAE,IAAA;kBAAA;gBAAA;gBAAA,OAAAF,QAAA,CAAAG,MAAA;cAAA;gBAAAR,SAAA,GAAAS,0BAAA,CAWI9B,KAXJ;gBAAA;kBAAAuB,KAAA,YAAAA,MAAA;oBAAA,IAWJQ,IAXI,GAAAT,KAAA,CAAAU,KAAA;oBAAA,IAAAC,iBAAA,GAYaF,IAAI,CAACG,WAAL,EAZb;sBAYLxB,KAZK,GAAAuB,iBAAA,CAYLvB,KAZK;sBAYEC,MAZF,GAAAsB,iBAAA,CAYEtB,MAZF,EAab;;oBACAnB,KAAI,CAACW,kBAAL,GAA0B,IAA1B,CAda,CAgBb;;oBACA,IAAMgC,YAAY,GAAG9B,EAAE,CAAC+B,eAAH,CAAmB7B,IAAI,CAACK,IAAL,CAAUJ,MAA7B,CAArB;oBACAhB,KAAI,CAACO,UAAL,GAAkBP,KAAI,CAAC6C,YAAL,CAAkBC,mBAAlB,CAChBH,YAAY,CAACI,QADG,CAAlB,CAlBa,CAsBb;;oBACA/C,KAAI,CAACO,UAAL,CAAgByC,MAAhB,CAAuB;sBAAE9B,KAAK,EAALA,KAAF;sBAASC,MAAM,EAANA;oBAAT,CAAvB;oBACAnB,KAAI,CAACiD,MAAL,CAAYC,cAAZ,CAA2BlD,KAAI,CAACO,UAAhC,EAA4C,YAAM;sBAChDP,KAAI,CAACiD,MAAL,CAAYE,KAAZ,CAAkB;wBAChBC,WAAW,EAAEpD,KAAI,CAACO,UADF;wBAEhB8C,KAAK,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAFS;wBAGhBC,OAAO,EAAE,CAHO;wBAIhBC,KAAK,EAAE;sBAJS,CAAlB,EADgD,CAQhD;;sBACA,IAAMC,UAAU,GAAGxD,KAAI,CAACyD,iBAAL,CACjB5E,UAAU,CAACF,UADM,CAAnB,CATgD,CAahD;;sBACA,IAAM+E,MAAuB,GAAG,EAAhC;sBACA,IAAMC,KAAK,GAAGpB,IAAI,CAACqB,QAAL,EAAd;sBAfgD,IAAAC,UAAA,GAAAvB,0BAAA,CAgBvBqB,KAAK,CAACG,WAAN,EAhBuB;wBAAAC,MAAA;sBAAA;wBAgBhD,KAAAF,UAAA,CAAAG,CAAA,MAAAD,MAAA,GAAAF,UAAA,CAAAI,CAAA,IAAAC,IAAA,GAA8C;0BAAA,IAAnCC,UAAmC,GAAAJ,MAAA,CAAAvB,KAAA;0BAC5C,IAAM4B,IAAI,GAAGpE,KAAI,CAACoE,IAAL,CAAUC,oBAAV,CAA+BF,UAA/B,CAAb;0BACA,IAAMG,QAAQ,GAAGF,IAAI,CAACE,QAAtB;0BACAA,QAAQ,CAACC,UAAT,CAAoB,gBAApB,EAAsCzF,YAAY,CAACE,MAAnD;0BACA0E,MAAM,CAACc,IAAP,CAAYJ,IAAZ;wBACD,CArB+C,CAuBhD;sBAvBgD,SAAAK,GAAA;wBAAAZ,UAAA,CAAAa,CAAA,CAAAD,GAAA;sBAAA;wBAAAZ,UAAA,CAAAc,CAAA;sBAAA;sBAwBhDnB,UAAU,CAACoB,UAAX,CAAsBrC,IAAtB;sBACAmB,MAAM,CAACmB,OAAP,CAAe,UAACT,IAAD,EAAU;wBACvB,IAAME,QAAQ,GAAGF,IAAI,CAACE,QAAtB;wBACAA,QAAQ,CAACC,UAAT,CAAoB,gBAApB,EAAsCzF,YAAY,CAACG,SAAnD;sBACD,CAHD;sBAKAe,KAAI,CAACW,kBAAL,GAA0B,KAA1B;oBACD,CA/BD;kBAxBa;kBAWf,KAAAkB,SAAA,CAAAmC,CAAA,MAAAlC,KAAA,GAAAD,SAAA,CAAAoC,CAAA,IAAAC,IAAA,GAA0B;oBAAAnC,KAAA;kBA6CzB;gBAxDc,SAAA0C,GAAA;kBAAA5C,SAAA,CAAA6C,CAAA,CAAAD,GAAA;gBAAA;kBAAA5C,SAAA,CAAA8C,CAAA;gBAAA;cAAA;cAAA;gBAAA,OAAAzC,QAAA,CAAA4C,IAAA;YAAA;UAAA;QAAA,GAAAlD,OAAA;MAAA,CAnDnB;MAAA,iBAAAmD,EAAA,EAAAC,GAAA,EAAAC,GAAA;QAAA,OAAAzD,IAAA,CAAA0D,KAAA,OAAAC,SAAA;MAAA;IAAA;IAAA,KA8GSC,IA9GT,GA8GgB,UAAAC,KAAA,EAAqC9C,IAArC,EAAqD;MAAA,IAAlD+C,CAAkD,GAAAD,KAAA,CAAlDC,CAAkD;QAA/CC,CAA+C,GAAAF,KAAA,CAA/CE,CAA+C;MAAA,IAAAC,YAAA,GAC1BxF,KAAI,CAACiD,MADqB;QACzDwC,UADyD,GAAAD,YAAA,CACzDC,UADyD;QAC7CvC,cAD6C,GAAAsC,YAAA,CAC7CtC,cAD6C;MAAA,IAAAwC,kBAAA,GAEvCnD,IAAI,CAACG,WAAL,EAFuC;QAEzDxB,KAFyD,GAAAwE,kBAAA,CAEzDxE,KAFyD;QAElDC,MAFkD,GAAAuE,kBAAA,CAElDvE,MAFkD;MAGjE,IAAMwE,cAAc,GAAGL,CAAC,GAAGM,MAAM,CAACC,gBAAlC;MACA,IAAMC,cAAc,GAAGP,CAAC,GAAGK,MAAM,CAACC,gBAAlC,CAJiE,CAKjE;MACA;;MACA,IACEF,cAAc,GAAGzE,KAAjB,IACAyE,cAAc,GAAG,CADjB,IAEAG,cAAc,GAAG3E,MAFjB,IAGA2E,cAAc,GAAG,CAJnB,EAKE;QACA;MACD;MAED,IAAIC,YAAJ;MACA,IAAIC,gBAAJ;MACA9C,cAAc,CAAClD,KAAI,CAACO,UAAN,EAAkB,YAAM;QACpC;QACAwF,YAAY,GAAGN,UAAU,CAAC;UACxBH,CAAC,EAAEW,IAAI,CAACC,KAAL,CAAWP,cAAX,CADqB;UAExB;UACAJ,CAAC,EAAEU,IAAI,CAACC,KAAL,CAAW/E,MAAM,GAAG,CAACoE,CAAC,GAAG,CAAL,IAAUK,MAAM,CAACC,gBAArC,CAHqB;UAIxB;UACA3E,KAAK,EAAE,CALiB;UAMxBC,MAAM,EAAE,CANgB;UAOxBC,IAAI,EAAE,IAAI+E,UAAJ,CAAe,IAAI,CAAJ,GAAQ,CAAvB,CAPkB;UAQxB/C,WAAW,EAAEpD,KAAI,CAACO;QARM,CAAD,CAAzB;QAWA,IACEwF,YAAY,CAAC,CAAD,CAAZ,KAAoB,CAApB,IACAA,YAAY,CAAC,CAAD,CAAZ,KAAoB,CADpB,IAEAA,YAAY,CAAC,CAAD,CAAZ,KAAoB,CAHtB,EAIE;UACAC,gBAAgB,GAAGpH,kBAAkB,CAACmH,YAAD,CAArC;UAEA,IAAI/F,KAAI,CAACS,gBAAT,EAA2B;YACzB;YACAT,KAAI,CAACoG,sBAAL,CAA4BL,YAA5B,EAA0CxD,IAA1C;UACD;QACF;MACF,CAzBa,CAAd;MA0BA,OAAOyD,gBAAP;IACD,CA3JH;EAAA;EAAAK,YAAA,CAAAnH,gBAAA;IAAAoH,GAAA;IAAA9D,KAAA,WAAA+D,gBAyByBC,OAzBzB,EAyB2C;MACvC,KAAK/F,gBAAL,GAAwB+F,OAAxB;IACD;EA3BH;IAAAF,GAAA;IAAA9D,KAAA,WAAAiE,kBA6B2BpD,KA7B3B,EA6B4C;MACxC,KAAK3C,cAAL,GAAsB2C,KAAtB;IACD;EA/BH;IAAAiD,GAAA;IA6JE;AACF;AACA;AACA;AACA;AACA;IAlKA9D,KAAA,WAAA4D,uBAoKIL,YApKJ,EAqKIxD,IArKJ,EAsKI;MACA,IAAIwD,YAAJ,EAAkB;QAAA,IAAAW,UAAA,GAAApE,0BAAA,CACSC,IAAI,CAACqB,QAAL,GAAgBE,WAAhB,EADT;UAAA6C,MAAA;QAAA;UAChB,KAAAD,UAAA,CAAA1C,CAAA,MAAA2C,MAAA,GAAAD,UAAA,CAAAzC,CAAA,IAAAC,IAAA,GAAwD;YAAA,IAA7CC,UAA6C,GAAAwC,MAAA,CAAAnE,KAAA;YACtD,IAAM4B,IAAI,GAAG,KAAKA,IAAL,CAAUC,oBAAV,CAA+BF,UAA/B,CAAb;YACA,IAAMG,QAAQ,GAAGF,IAAI,CAACE,QAAtB;YACAA,QAAQ,CAACC,UAAT,CAAoB,gBAApB,EAAsCzF,YAAY,CAACG,SAAnD;YAEAqF,QAAQ,CAACC,UAAT,CAAoB,gBAApB,EAAsC,CACpCwB,YAAY,CAAC,CAAD,CADwB,EAEpCA,YAAY,CAAC,CAAD,CAFwB,EAGpCA,YAAY,CAAC,CAAD,CAHwB,CAAtC;YAKAzB,QAAQ,CAACC,UAAT,CAAoB,kBAApB,EAAwC,KAAK7D,cAA7C;UACD;QAZe,SAAA+D,GAAA;UAAAiC,UAAA,CAAAhC,CAAA,CAAAD,GAAA;QAAA;UAAAiC,UAAA,CAAA/B,CAAA;QAAA;MAajB;IACF;EArLH;EAAA,OAAAzF,gBAAA;AAAA,KAAAa,OAAA,CACgBpB,UADhB,GAC6B,mBAD7B,EAAAmB,KAAA,GAAAK,WAAA,GAAAyG,yBAAA,CAAA/G,OAAA,CAAAgH,SAAA,aAAAzH,KAAA;EAAA0H,YAAA;EAAAC,UAAA;EAAAC,QAAA;EAAAC,WAAA;AAAA,IAAA7G,YAAA,GAAAwG,yBAAA,CAAA/G,OAAA,CAAAgH,SAAA,mBAAAvH,KAAA;EAAAwH,YAAA;EAAAC,UAAA;EAAAC,QAAA;EAAAC,WAAA;AAAA,IAAA5G,YAAA,GAAAuG,yBAAA,CAAA/G,OAAA,CAAAgH,SAAA,wBAAArH,KAAA;EAAAsH,YAAA;EAAAC,UAAA;EAAAC,QAAA;EAAAC,WAAA;AAAA,IAAA3G,YAAA,GAAAsG,yBAAA,CAAA/G,OAAA,CAAAgH,SAAA,WAAAnH,KAAA;EAAAoH,YAAA;EAAAC,UAAA;EAAAC,QAAA;EAAAC,WAAA;AAAA,IAAApH,OAAA,MAAAD,MAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}