{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { AttributeType, gl } from '@antv/l7-core';\nimport { boundsContains, calculateCentroid, lodashUtil, padBounds, rgb2arr } from '@antv/l7-utils';\nimport BaseModel from \"../../core/BaseModel\";\nimport CollisionIndex from \"../../utils/collision-index\";\nimport { getGlyphQuads, shapeText } from \"../../utils/symbol-layout\";\n/* babel-plugin-inline-import '../shaders/text/text_frag.glsl' */\nconst textFrag = \"#define SDF_PX 8.0\\n#define EDGE_GAMMA 0.105\\n#define FONT_SIZE 48.0\\n\\nuniform sampler2D u_sdf_map;\\nlayout(std140) uniform commonUniforms {\\n  vec4 u_stroke_color : [0.0, 0.0, 0.0, 0.0];\\n  vec2 u_sdf_map_size;\\n  float u_raisingHeight: 0.0;\\n  float u_stroke_width : 2;\\n  float u_gamma_scale : 0.5;\\n  float u_halo_blur : 0.5;\\n};\\n\\nin vec2 v_uv;\\nin float v_gamma_scale;\\nin vec4 v_color;\\nin vec4 v_stroke_color;\\nin float v_fontScale;\\n\\nout vec4 outputColor;\\n\\n#pragma include \\\"picking\\\"\\nvoid main() {\\n  // get style data mapping\\n\\n  // get sdf from atlas\\n  float dist = texture(SAMPLER_2D(u_sdf_map), v_uv).a;\\n\\n  lowp float buff = (6.0 - u_stroke_width / v_fontScale) / SDF_PX;\\n  highp float gamma = (u_halo_blur * 1.19 / SDF_PX + EDGE_GAMMA) / (v_fontScale * u_gamma_scale) / 1.0;\\n\\n  highp float gamma_scaled = gamma * v_gamma_scale;\\n\\n  highp float alpha = smoothstep(buff - gamma_scaled, buff + gamma_scaled, dist);\\n\\n  outputColor = mix(v_color, v_stroke_color, smoothstep(0., 0.5, 1.- dist));\\n\\n  outputColor.a *= alpha;\\n   // \\u4F5C\\u4E3A mask \\u6A21\\u677F\\u65F6\\u9700\\u8981\\u4E22\\u5F03\\u900F\\u660E\\u7684\\u50CF\\u7D20\\n  if (outputColor.a < 0.01) {\\n    discard;\\n  }\\n  outputColor = filterColor(outputColor);\\n}\\n\";\n/* babel-plugin-inline-import '../shaders/text/text_vert.glsl' */\nconst textVert = \"#define SDF_PX 8.0\\n#define EDGE_GAMMA 0.105\\n#define FONT_SIZE 24.0\\n\\nlayout(location = ATTRIBUTE_LOCATION_POSITION) in vec3 a_Position;\\nlayout(location = ATTRIBUTE_LOCATION_POSITION_64LOW) in vec2 a_Position64Low;\\nlayout(location = ATTRIBUTE_LOCATION_COLOR) in vec4 a_Color;\\nlayout(location = ATTRIBUTE_LOCATION_SIZE) in float a_Size;\\nlayout(location = ATTRIBUTE_LOCATION_TEXT_OFFSETS) in vec2 a_textOffsets;\\nlayout(location = ATTRIBUTE_LOCATION_UV) in vec2 a_tex;\\n\\nlayout(std140) uniform commonUniforms {\\n  vec4 u_stroke_color : [0.0, 0.0, 0.0, 0.0];\\n  vec2 u_sdf_map_size;\\n  float u_raisingHeight: 0.0;\\n  float u_stroke_width : 2;\\n  float u_gamma_scale : 0.5;\\n  float u_halo_blur : 0.5;\\n};\\n\\nout vec2 v_uv;\\nout float v_gamma_scale;\\nout vec4 v_color;\\nout vec4 v_stroke_color;\\nout float v_fontScale;\\n\\n#pragma include \\\"projection\\\"\\n#pragma include \\\"picking\\\"\\n#pragma include \\\"rotation_2d\\\"\\n\\nvoid main() {\\n  // cal style mapping - \\u6570\\u636E\\u7EB9\\u7406\\u6620\\u5C04\\u90E8\\u5206\\u7684\\u8BA1\\u7B97\\n\\n  v_uv = a_tex / u_sdf_map_size;\\n\\n\\n\\n  v_color = vec4(a_Color.xyz, a_Color.w * opacity);\\n  v_stroke_color = vec4(u_stroke_color.xyz, u_stroke_color.w * opacity);\\n\\n  // \\u6587\\u672C\\u7F29\\u653E\\u6BD4\\u4F8B\\n  float fontScale = a_Size / FONT_SIZE;\\n  v_fontScale = fontScale;\\n\\n  vec4 project_pos = project_position(vec4(a_Position, 1.0), a_Position64Low);\\n  // vec4 projected_position  = project_common_position_to_clipspace(vec4(project_pos.xyz, 1.0));\\n\\n  vec2 offset = rotate_matrix(a_textOffsets,rotation);\\n\\n  // gl_Position = vec4(projected_position.xy / projected_position.w + rotation_matrix * a_textOffsets * fontScale / u_ViewportSize * 2.0 * u_DevicePixelRatio, 0.0, 1.0);\\n\\n  float raiseHeight = u_raisingHeight;\\n  if(u_CoordinateSystem == COORDINATE_SYSTEM_LNGLAT || u_CoordinateSystem == COORDINATE_SYSTEM_LNGLAT_OFFSET) {\\n    float mapboxZoomScale = 4.0/pow(2.0, 21.0 - u_Zoom);\\n    raiseHeight = u_raisingHeight * mapboxZoomScale;\\n  }\\n\\n  vec4 projected_position = project_common_position_to_clipspace(vec4(project_pos.xyz + vec3(0.0, 0.0, raiseHeight), 1.0));\\n\\n  gl_Position = vec4(\\n    projected_position.xy / projected_position.w + offset * fontScale / u_ViewportSize * 2.0 * u_DevicePixelRatio, 0.0, 1.0);\\n  v_gamma_scale = gl_Position.w;\\n  setPickingColor(a_PickingColor);\\n\\n}\\n\";\nconst {\n  isEqual\n} = lodashUtil;\nexport function TextTrianglation(feature) {\n  // @ts-ignore\n  const that = this;\n  const id = feature.id;\n  const vertices = [];\n  const indices = [];\n  if (!that.glyphInfoMap || !that.glyphInfoMap[id]) {\n    return {\n      vertices: [],\n      // [ x, y, z, tex.x,tex.y, offset.x. offset.y]\n      indices: [],\n      size: 7\n    };\n  }\n  const centroid = that.glyphInfoMap[id].centroid; // 计算中心点\n  const coord = centroid.length === 2 ? [centroid[0], centroid[1], 0] : centroid;\n  that.glyphInfoMap[id].glyphQuads.forEach((quad, index) => {\n    vertices.push(...coord, quad.tex.x, quad.tex.y + quad.tex.height, quad.tl.x, quad.tl.y, ...coord, quad.tex.x + quad.tex.width, quad.tex.y + quad.tex.height, quad.tr.x, quad.tr.y, ...coord, quad.tex.x + quad.tex.width, quad.tex.y, quad.br.x, quad.br.y, ...coord, quad.tex.x, quad.tex.y, quad.bl.x, quad.bl.y);\n    indices.push(0 + index * 4, 1 + index * 4, 2 + index * 4, 2 + index * 4, 3 + index * 4, 0 + index * 4);\n  });\n  return {\n    vertices,\n    // [ x, y, z, tex.x,tex.y, offset.x. offset.y]\n    indices,\n    size: 7\n  };\n}\nexport default class TextModel extends BaseModel {\n  constructor(...args) {\n    var _this;\n    super(...args);\n    _this = this;\n    _defineProperty(this, \"glyphInfo\", void 0);\n    _defineProperty(this, \"glyphInfoMap\", {});\n    _defineProperty(this, \"rawEncodeData\", void 0);\n    _defineProperty(this, \"texture\", void 0);\n    _defineProperty(this, \"currentZoom\", -1);\n    _defineProperty(this, \"extent\", void 0);\n    _defineProperty(this, \"textureHeight\", 0);\n    _defineProperty(this, \"textCount\", 0);\n    _defineProperty(this, \"preTextStyle\", {});\n    _defineProperty(this, \"mapping\", /*#__PURE__*/_asyncToGenerator(function* () {\n      _this.initGlyph(); //\n      _this.updateTexture();\n      yield _this.reBuildModel();\n    }));\n  }\n  get attributeLocation() {\n    return Object.assign(super.attributeLocation, {\n      MAX: super.attributeLocation.MAX,\n      SIZE: 9,\n      TEXT_OFFSETS: 10,\n      UV: 11\n    });\n  }\n  getUninforms() {\n    const commoninfo = this.getCommonUniformsInfo();\n    const attributeInfo = this.getUniformsBufferInfo(this.getStyleAttribute());\n    this.updateStyleUnifoms();\n    return _objectSpread(_objectSpread(_objectSpread({}, commoninfo.uniformsOption), attributeInfo.uniformsOption), {\n      u_sdf_map: this.textures[0]\n    });\n  }\n  getCommonUniformsInfo() {\n    const {\n      stroke = '#fff',\n      strokeWidth = 0,\n      halo = 0.5,\n      gamma = 2.0,\n      raisingHeight = 0\n    } = this.layer.getLayerConfig();\n    const mapping = this.getFontServiceMapping();\n    const canvas = this.getFontServiceCanvas();\n    if (mapping && Object.keys(mapping).length !== this.textCount && canvas) {\n      this.updateTexture();\n      this.textCount = Object.keys(mapping).length;\n    }\n    this.preTextStyle = this.getTextStyle();\n    const commonOptions = {\n      u_stroke_color: rgb2arr(stroke),\n      u_sdf_map_size: [(canvas === null || canvas === void 0 ? void 0 : canvas.width) || 1, (canvas === null || canvas === void 0 ? void 0 : canvas.height) || 1],\n      u_raisingHeight: Number(raisingHeight),\n      u_stroke_width: strokeWidth,\n      u_gamma_scale: gamma,\n      u_halo_blur: halo\n    };\n    const commonBufferInfo = this.getUniformsBufferInfo(commonOptions);\n    return commonBufferInfo;\n  }\n  initModels() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      // 绑定事件\n      _this2.bindEvent();\n      _this2.extent = _this2.textExtent();\n      _this2.rawEncodeData = _this2.layer.getEncodedData();\n      _this2.preTextStyle = _this2.getTextStyle();\n      _this2.initUniformsBuffer();\n      return _this2.buildModels();\n    })();\n  }\n  buildModels() {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      const {\n        textAllowOverlap = false\n      } = _this3.layer.getLayerConfig();\n\n      //  this.mapping(); 重复调用\n      _this3.initGlyph(); //\n      _this3.updateTexture();\n      if (!textAllowOverlap) {\n        _this3.filterGlyphs();\n      }\n      const model = yield _this3.layer.buildLayerModel({\n        moduleName: 'pointText',\n        vertexShader: textVert,\n        fragmentShader: textFrag,\n        defines: _this3.getDefines(),\n        inject: _this3.getInject(),\n        triangulation: TextTrianglation.bind(_this3),\n        depth: {\n          enable: false\n        }\n      });\n      return [model];\n    })();\n  }\n  // 需要更新的场景\n  // 1. 文本偏移量发生改变\n  // 2. 文本锚点发生改变\n  // 3. 文本允许重叠发生改变\n  // 4. 文本字体发生改变\n  // 5. 文本字体粗细发生改变\n  needUpdate() {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      const {\n        textAllowOverlap = false,\n        textAnchor = 'center',\n        textOffset,\n        padding,\n        fontFamily,\n        fontWeight\n      } = _this4.getTextStyle();\n      if (!isEqual(padding, _this4.preTextStyle.padding) || !isEqual(textOffset, _this4.preTextStyle.textOffset) || !isEqual(textAnchor, _this4.preTextStyle.textAnchor) || !isEqual(fontFamily, _this4.preTextStyle.fontFamily) || !isEqual(fontWeight, _this4.preTextStyle.fontWeight)) {\n        yield _this4.mapping();\n        return true;\n      }\n      if (textAllowOverlap) {\n        // 小于不做避让\n        return false;\n      }\n\n      // textAllowOverlap 发生改变\n      const zoom = _this4.mapService.getZoom();\n      const extent = _this4.mapService.getBounds();\n      const flag = boundsContains(_this4.extent, extent);\n      // 文本不能压盖则进行过滤\n      if (Math.abs(_this4.currentZoom - zoom) > 0.5 || !flag || textAllowOverlap !== _this4.preTextStyle.textAllowOverlap) {\n        // TODO this.mapping 数据未变化，避让\n        yield _this4.reBuildModel();\n        return true;\n      }\n      return false;\n    })();\n  }\n  clearModels() {\n    var _this$texture;\n    (_this$texture = this.texture) === null || _this$texture === void 0 || _this$texture.destroy();\n    // TODO this.mapping\n    this.layer.off('remapping', this.mapping);\n  }\n  registerBuiltinAttributes() {\n    // 注册 Position 属性 64 位地位部分，经纬度数据开启双精度，避免大于 20层级以上出现数据偏移\n    this.registerPosition64LowAttribute();\n    this.styleAttributeService.registerStyleAttribute({\n      name: 'textOffsets',\n      type: AttributeType.Attribute,\n      descriptor: {\n        shaderLocation: this.attributeLocation.TEXT_OFFSETS,\n        name: 'a_textOffsets',\n        // 文字偏移量\n        buffer: {\n          // give the WebGL driver a hint that this buffer may change\n          usage: gl.STATIC_DRAW,\n          data: [],\n          type: gl.FLOAT\n        },\n        size: 2,\n        update: (feature, featureIdx, vertex) => {\n          return [vertex[5], vertex[6]];\n        }\n      }\n    });\n    this.styleAttributeService.registerStyleAttribute({\n      name: 'textUv',\n      type: AttributeType.Attribute,\n      descriptor: {\n        name: 'a_tex',\n        shaderLocation: this.attributeLocation.UV,\n        buffer: {\n          usage: gl.DYNAMIC_DRAW,\n          data: [],\n          type: gl.FLOAT\n        },\n        size: 2,\n        update: (feature, featureIdx, vertex) => {\n          return [vertex[3], vertex[4]];\n        }\n      }\n    });\n\n    // point layer size;\n    this.styleAttributeService.registerStyleAttribute({\n      name: 'size',\n      type: AttributeType.Attribute,\n      descriptor: {\n        name: 'a_Size',\n        shaderLocation: this.attributeLocation.SIZE,\n        buffer: {\n          // give the WebGL driver a hint that this buffer may change\n          usage: gl.DYNAMIC_DRAW,\n          data: [],\n          type: gl.FLOAT\n        },\n        size: 1,\n        update: feature => {\n          const {\n            size = 12\n          } = feature;\n          return Array.isArray(size) ? [size[0]] : [size];\n        }\n      }\n    });\n  }\n  bindEvent() {\n    if (!this.layer.isTileLayer) {\n      // 重新绑定\n      this.layer.on('remapping', this.mapping);\n    }\n  }\n  textExtent() {\n    const bounds = this.mapService.getBounds();\n    return padBounds(bounds, 0.5);\n  }\n  /**\n   * 生成文字纹理（生成文字纹理字典）\n   */\n  initTextFont() {\n    const {\n      fontWeight,\n      fontFamily\n    } = this.getTextStyle();\n    const data = this.rawEncodeData;\n    const characterSet = [];\n    data.forEach(item => {\n      let {\n        shape = ''\n      } = item;\n      shape = shape.toString();\n      for (const char of shape) {\n        // 去重\n        if (characterSet.indexOf(char) === -1) {\n          characterSet.push(char);\n        }\n      }\n    });\n    this.fontService.setFontOptions({\n      characterSet,\n      fontWeight,\n      fontFamily,\n      iconfont: false\n    });\n  }\n\n  /**\n   * 生成 iconfont 纹理字典\n   */\n  initIconFontTex() {\n    const {\n      fontWeight,\n      fontFamily\n    } = this.getTextStyle();\n    const data = this.rawEncodeData;\n    const characterSet = [];\n    data.forEach(item => {\n      let {\n        shape = ''\n      } = item;\n      shape = `${shape}`;\n      if (characterSet.indexOf(shape) === -1) {\n        characterSet.push(shape);\n      }\n    });\n    this.fontService.setFontOptions({\n      characterSet,\n      fontWeight,\n      fontFamily,\n      iconfont: true\n    });\n  }\n  getTextStyle() {\n    const {\n      fontWeight = '400',\n      fontFamily = 'sans-serif',\n      textAllowOverlap = false,\n      padding = [0, 0],\n      textAnchor = 'center',\n      textOffset = [0, 0],\n      opacity = 1,\n      strokeOpacity = 1,\n      strokeWidth = 0,\n      stroke = '#000'\n    } = this.layer.getLayerConfig();\n    return {\n      fontWeight,\n      fontFamily,\n      textAllowOverlap,\n      padding,\n      textAnchor,\n      textOffset,\n      opacity,\n      strokeOpacity,\n      strokeWidth,\n      stroke\n    };\n  }\n\n  /**\n   * 生成文字布局（对照文字纹理字典提取对应文字的位置很好信息）\n   */\n  generateGlyphLayout(iconfont) {\n    const mapping = this.getFontServiceMapping();\n    const {\n      spacing = 2,\n      textAnchor = 'center',\n      textOffset\n    } = this.layer.getLayerConfig();\n    const data = this.rawEncodeData;\n    this.glyphInfo = data.map(feature => {\n      const {\n        shape = '',\n        id,\n        size = 1\n      } = feature;\n      const offset = feature.textOffset ? feature.textOffset : textOffset || [0, 0];\n      const anchor = feature.textAnchor ? feature.textAnchor : textAnchor || 'center';\n      const shaping = shapeText(shape.toString(), mapping,\n      // @ts-ignore\n      size, anchor, 'left', spacing, offset,\n      //\n      iconfont);\n      const glyphQuads = getGlyphQuads(shaping, offset, false);\n      feature.shaping = shaping;\n      feature.glyphQuads = glyphQuads;\n      // feature.centroid = calculteCentroid(coordinates);\n\n      feature.centroid = calculateCentroid(feature.coordinates);\n      this.glyphInfoMap[id] = {\n        shaping,\n        glyphQuads,\n        centroid: calculateCentroid(feature.coordinates)\n      };\n      return feature;\n    });\n  }\n  getFontServiceMapping() {\n    const {\n      fontWeight = '400',\n      fontFamily = 'sans-serif'\n    } = this.layer.getLayerConfig();\n    return this.fontService.getMappingByKey(`${fontFamily}_${fontWeight}`);\n  }\n  getFontServiceCanvas() {\n    const {\n      fontWeight = '400',\n      fontFamily = 'sans-serif'\n    } = this.layer.getLayerConfig();\n    // 更新文字布局\n    return this.fontService.getCanvasByKey(`${fontFamily}_${fontWeight}`);\n  }\n\n  /**\n   * 文字避让 depend on originCentorid\n   */\n  filterGlyphs() {\n    const {\n      padding = [0, 0],\n      textAllowOverlap = false\n    } = this.layer.getLayerConfig();\n    if (textAllowOverlap) {\n      // 如果允许文本覆盖\n      return;\n    }\n    this.glyphInfoMap = {};\n    this.currentZoom = this.mapService.getZoom();\n    this.extent = this.textExtent();\n    const {\n      width,\n      height\n    } = this.rendererService.getViewportSize();\n    const collisionIndex = new CollisionIndex(width, height);\n    const filterData = this.glyphInfo.filter(feature => {\n      const {\n        shaping,\n        id = 0\n      } = feature;\n      const centroid = feature.centroid;\n      const size = feature.size;\n      const fontScale = size / 16;\n      const pixels = this.mapService.lngLatToContainer(centroid);\n      const {\n        box\n      } = collisionIndex.placeCollisionBox({\n        x1: shaping.left * fontScale - padding[0],\n        x2: shaping.right * fontScale + padding[0],\n        y1: shaping.top * fontScale - padding[1],\n        y2: shaping.bottom * fontScale + padding[1],\n        anchorPointX: pixels.x,\n        anchorPointY: pixels.y\n      });\n      if (box && box.length) {\n        collisionIndex.insertCollisionBox(box, id);\n        return true;\n      } else {\n        return false;\n      }\n    });\n    filterData.forEach(item => {\n      // @ts-ignore\n      this.glyphInfoMap[item.id] = item;\n    });\n    // this.layer.setEncodedData(filterData);\n  }\n  /**\n   * 初始化文字布局\n   */\n  initGlyph() {\n    const {\n      iconfont = false\n    } = this.layer.getLayerConfig();\n    // 1.生成文字纹理（或是生成 iconfont）\n    iconfont ? this.initIconFontTex() : this.initTextFont();\n    // 2.生成文字布局\n    this.generateGlyphLayout(iconfont);\n  }\n  /**\n   * 更新文字纹理\n   */\n  updateTexture() {\n    const {\n      createTexture2D\n    } = this.rendererService;\n    const canvas = this.getFontServiceCanvas();\n    this.textureHeight = canvas.height;\n    if (this.texture) {\n      this.texture.destroy();\n    }\n    this.texture = createTexture2D({\n      data: canvas,\n      mag: gl.LINEAR,\n      min: gl.LINEAR,\n      width: canvas.width,\n      height: canvas.height\n    });\n    this.textures = [this.texture];\n  }\n  reBuildModel() {\n    var _this5 = this;\n    return _asyncToGenerator(function* () {\n      _this5.filterGlyphs();\n      const model = yield _this5.layer.buildLayerModel({\n        moduleName: 'pointText',\n        vertexShader: textVert,\n        fragmentShader: textFrag,\n        triangulation: TextTrianglation.bind(_this5),\n        defines: _this5.getDefines(),\n        inject: _this5.getInject(),\n        depth: {\n          enable: false\n        }\n      });\n      // TODO 渲染流程待修改\n      _this5.layer.models = [model];\n    })();\n  }\n}","map":{"version":3,"names":["_objectSpread","_asyncToGenerator","_defineProperty","AttributeType","gl","boundsContains","calculateCentroid","lodashUtil","padBounds","rgb2arr","BaseModel","CollisionIndex","getGlyphQuads","shapeText","textFrag","textVert","isEqual","TextTrianglation","feature","that","id","vertices","indices","glyphInfoMap","size","centroid","coord","length","glyphQuads","forEach","quad","index","push","tex","x","y","height","tl","width","tr","br","bl","TextModel","constructor","args","_this","initGlyph","updateTexture","reBuildModel","attributeLocation","Object","assign","MAX","SIZE","TEXT_OFFSETS","UV","getUninforms","commoninfo","getCommonUniformsInfo","attributeInfo","getUniformsBufferInfo","getStyleAttribute","updateStyleUnifoms","uniformsOption","u_sdf_map","textures","stroke","strokeWidth","halo","gamma","raisingHeight","layer","getLayerConfig","mapping","getFontServiceMapping","canvas","getFontServiceCanvas","keys","textCount","preTextStyle","getTextStyle","commonOptions","u_stroke_color","u_sdf_map_size","u_raisingHeight","Number","u_stroke_width","u_gamma_scale","u_halo_blur","commonBufferInfo","initModels","_this2","bindEvent","extent","textExtent","rawEncodeData","getEncodedData","initUniformsBuffer","buildModels","_this3","textAllowOverlap","filterGlyphs","model","buildLayerModel","moduleName","vertexShader","fragmentShader","defines","getDefines","inject","getInject","triangulation","bind","depth","enable","needUpdate","_this4","textAnchor","textOffset","padding","fontFamily","fontWeight","zoom","mapService","getZoom","getBounds","flag","Math","abs","currentZoom","clearModels","_this$texture","texture","destroy","off","registerBuiltinAttributes","registerPosition64LowAttribute","styleAttributeService","registerStyleAttribute","name","type","Attribute","descriptor","shaderLocation","buffer","usage","STATIC_DRAW","data","FLOAT","update","featureIdx","vertex","DYNAMIC_DRAW","Array","isArray","isTileLayer","on","bounds","initTextFont","characterSet","item","shape","toString","char","indexOf","fontService","setFontOptions","iconfont","initIconFontTex","opacity","strokeOpacity","generateGlyphLayout","spacing","glyphInfo","map","offset","anchor","shaping","coordinates","getMappingByKey","getCanvasByKey","rendererService","getViewportSize","collisionIndex","filterData","filter","fontScale","pixels","lngLatToContainer","box","placeCollisionBox","x1","left","x2","right","y1","top","y2","bottom","anchorPointX","anchorPointY","insertCollisionBox","createTexture2D","textureHeight","mag","LINEAR","min","_this5","models"],"sources":["/Users/bhanudahiya/Desktop/ledger-IQ/node_modules/@antv/l7-layers/es/point/models/text.js"],"sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { AttributeType, gl } from '@antv/l7-core';\nimport { boundsContains, calculateCentroid, lodashUtil, padBounds, rgb2arr } from '@antv/l7-utils';\nimport BaseModel from \"../../core/BaseModel\";\nimport CollisionIndex from \"../../utils/collision-index\";\nimport { getGlyphQuads, shapeText } from \"../../utils/symbol-layout\";\n/* babel-plugin-inline-import '../shaders/text/text_frag.glsl' */\nconst textFrag = \"#define SDF_PX 8.0\\n#define EDGE_GAMMA 0.105\\n#define FONT_SIZE 48.0\\n\\nuniform sampler2D u_sdf_map;\\nlayout(std140) uniform commonUniforms {\\n  vec4 u_stroke_color : [0.0, 0.0, 0.0, 0.0];\\n  vec2 u_sdf_map_size;\\n  float u_raisingHeight: 0.0;\\n  float u_stroke_width : 2;\\n  float u_gamma_scale : 0.5;\\n  float u_halo_blur : 0.5;\\n};\\n\\nin vec2 v_uv;\\nin float v_gamma_scale;\\nin vec4 v_color;\\nin vec4 v_stroke_color;\\nin float v_fontScale;\\n\\nout vec4 outputColor;\\n\\n#pragma include \\\"picking\\\"\\nvoid main() {\\n  // get style data mapping\\n\\n  // get sdf from atlas\\n  float dist = texture(SAMPLER_2D(u_sdf_map), v_uv).a;\\n\\n  lowp float buff = (6.0 - u_stroke_width / v_fontScale) / SDF_PX;\\n  highp float gamma = (u_halo_blur * 1.19 / SDF_PX + EDGE_GAMMA) / (v_fontScale * u_gamma_scale) / 1.0;\\n\\n  highp float gamma_scaled = gamma * v_gamma_scale;\\n\\n  highp float alpha = smoothstep(buff - gamma_scaled, buff + gamma_scaled, dist);\\n\\n  outputColor = mix(v_color, v_stroke_color, smoothstep(0., 0.5, 1.- dist));\\n\\n  outputColor.a *= alpha;\\n   // \\u4F5C\\u4E3A mask \\u6A21\\u677F\\u65F6\\u9700\\u8981\\u4E22\\u5F03\\u900F\\u660E\\u7684\\u50CF\\u7D20\\n  if (outputColor.a < 0.01) {\\n    discard;\\n  }\\n  outputColor = filterColor(outputColor);\\n}\\n\";\n/* babel-plugin-inline-import '../shaders/text/text_vert.glsl' */\nconst textVert = \"#define SDF_PX 8.0\\n#define EDGE_GAMMA 0.105\\n#define FONT_SIZE 24.0\\n\\nlayout(location = ATTRIBUTE_LOCATION_POSITION) in vec3 a_Position;\\nlayout(location = ATTRIBUTE_LOCATION_POSITION_64LOW) in vec2 a_Position64Low;\\nlayout(location = ATTRIBUTE_LOCATION_COLOR) in vec4 a_Color;\\nlayout(location = ATTRIBUTE_LOCATION_SIZE) in float a_Size;\\nlayout(location = ATTRIBUTE_LOCATION_TEXT_OFFSETS) in vec2 a_textOffsets;\\nlayout(location = ATTRIBUTE_LOCATION_UV) in vec2 a_tex;\\n\\nlayout(std140) uniform commonUniforms {\\n  vec4 u_stroke_color : [0.0, 0.0, 0.0, 0.0];\\n  vec2 u_sdf_map_size;\\n  float u_raisingHeight: 0.0;\\n  float u_stroke_width : 2;\\n  float u_gamma_scale : 0.5;\\n  float u_halo_blur : 0.5;\\n};\\n\\nout vec2 v_uv;\\nout float v_gamma_scale;\\nout vec4 v_color;\\nout vec4 v_stroke_color;\\nout float v_fontScale;\\n\\n#pragma include \\\"projection\\\"\\n#pragma include \\\"picking\\\"\\n#pragma include \\\"rotation_2d\\\"\\n\\nvoid main() {\\n  // cal style mapping - \\u6570\\u636E\\u7EB9\\u7406\\u6620\\u5C04\\u90E8\\u5206\\u7684\\u8BA1\\u7B97\\n\\n  v_uv = a_tex / u_sdf_map_size;\\n\\n\\n\\n  v_color = vec4(a_Color.xyz, a_Color.w * opacity);\\n  v_stroke_color = vec4(u_stroke_color.xyz, u_stroke_color.w * opacity);\\n\\n  // \\u6587\\u672C\\u7F29\\u653E\\u6BD4\\u4F8B\\n  float fontScale = a_Size / FONT_SIZE;\\n  v_fontScale = fontScale;\\n\\n  vec4 project_pos = project_position(vec4(a_Position, 1.0), a_Position64Low);\\n  // vec4 projected_position  = project_common_position_to_clipspace(vec4(project_pos.xyz, 1.0));\\n\\n  vec2 offset = rotate_matrix(a_textOffsets,rotation);\\n\\n  // gl_Position = vec4(projected_position.xy / projected_position.w + rotation_matrix * a_textOffsets * fontScale / u_ViewportSize * 2.0 * u_DevicePixelRatio, 0.0, 1.0);\\n\\n  float raiseHeight = u_raisingHeight;\\n  if(u_CoordinateSystem == COORDINATE_SYSTEM_LNGLAT || u_CoordinateSystem == COORDINATE_SYSTEM_LNGLAT_OFFSET) {\\n    float mapboxZoomScale = 4.0/pow(2.0, 21.0 - u_Zoom);\\n    raiseHeight = u_raisingHeight * mapboxZoomScale;\\n  }\\n\\n  vec4 projected_position = project_common_position_to_clipspace(vec4(project_pos.xyz + vec3(0.0, 0.0, raiseHeight), 1.0));\\n\\n  gl_Position = vec4(\\n    projected_position.xy / projected_position.w + offset * fontScale / u_ViewportSize * 2.0 * u_DevicePixelRatio, 0.0, 1.0);\\n  v_gamma_scale = gl_Position.w;\\n  setPickingColor(a_PickingColor);\\n\\n}\\n\";\nconst {\n  isEqual\n} = lodashUtil;\nexport function TextTrianglation(feature) {\n  // @ts-ignore\n  const that = this;\n  const id = feature.id;\n  const vertices = [];\n  const indices = [];\n  if (!that.glyphInfoMap || !that.glyphInfoMap[id]) {\n    return {\n      vertices: [],\n      // [ x, y, z, tex.x,tex.y, offset.x. offset.y]\n      indices: [],\n      size: 7\n    };\n  }\n  const centroid = that.glyphInfoMap[id].centroid; // 计算中心点\n  const coord = centroid.length === 2 ? [centroid[0], centroid[1], 0] : centroid;\n  that.glyphInfoMap[id].glyphQuads.forEach((quad, index) => {\n    vertices.push(...coord, quad.tex.x, quad.tex.y + quad.tex.height, quad.tl.x, quad.tl.y, ...coord, quad.tex.x + quad.tex.width, quad.tex.y + quad.tex.height, quad.tr.x, quad.tr.y, ...coord, quad.tex.x + quad.tex.width, quad.tex.y, quad.br.x, quad.br.y, ...coord, quad.tex.x, quad.tex.y, quad.bl.x, quad.bl.y);\n    indices.push(0 + index * 4, 1 + index * 4, 2 + index * 4, 2 + index * 4, 3 + index * 4, 0 + index * 4);\n  });\n  return {\n    vertices,\n    // [ x, y, z, tex.x,tex.y, offset.x. offset.y]\n    indices,\n    size: 7\n  };\n}\nexport default class TextModel extends BaseModel {\n  constructor(...args) {\n    var _this;\n    super(...args);\n    _this = this;\n    _defineProperty(this, \"glyphInfo\", void 0);\n    _defineProperty(this, \"glyphInfoMap\", {});\n    _defineProperty(this, \"rawEncodeData\", void 0);\n    _defineProperty(this, \"texture\", void 0);\n    _defineProperty(this, \"currentZoom\", -1);\n    _defineProperty(this, \"extent\", void 0);\n    _defineProperty(this, \"textureHeight\", 0);\n    _defineProperty(this, \"textCount\", 0);\n    _defineProperty(this, \"preTextStyle\", {});\n    _defineProperty(this, \"mapping\", /*#__PURE__*/_asyncToGenerator(function* () {\n      _this.initGlyph(); //\n      _this.updateTexture();\n      yield _this.reBuildModel();\n    }));\n  }\n  get attributeLocation() {\n    return Object.assign(super.attributeLocation, {\n      MAX: super.attributeLocation.MAX,\n      SIZE: 9,\n      TEXT_OFFSETS: 10,\n      UV: 11\n    });\n  }\n  getUninforms() {\n    const commoninfo = this.getCommonUniformsInfo();\n    const attributeInfo = this.getUniformsBufferInfo(this.getStyleAttribute());\n    this.updateStyleUnifoms();\n    return _objectSpread(_objectSpread(_objectSpread({}, commoninfo.uniformsOption), attributeInfo.uniformsOption), {\n      u_sdf_map: this.textures[0]\n    });\n  }\n  getCommonUniformsInfo() {\n    const {\n      stroke = '#fff',\n      strokeWidth = 0,\n      halo = 0.5,\n      gamma = 2.0,\n      raisingHeight = 0\n    } = this.layer.getLayerConfig();\n    const mapping = this.getFontServiceMapping();\n    const canvas = this.getFontServiceCanvas();\n    if (mapping && Object.keys(mapping).length !== this.textCount && canvas) {\n      this.updateTexture();\n      this.textCount = Object.keys(mapping).length;\n    }\n    this.preTextStyle = this.getTextStyle();\n    const commonOptions = {\n      u_stroke_color: rgb2arr(stroke),\n      u_sdf_map_size: [(canvas === null || canvas === void 0 ? void 0 : canvas.width) || 1, (canvas === null || canvas === void 0 ? void 0 : canvas.height) || 1],\n      u_raisingHeight: Number(raisingHeight),\n      u_stroke_width: strokeWidth,\n      u_gamma_scale: gamma,\n      u_halo_blur: halo\n    };\n    const commonBufferInfo = this.getUniformsBufferInfo(commonOptions);\n    return commonBufferInfo;\n  }\n  initModels() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      // 绑定事件\n      _this2.bindEvent();\n      _this2.extent = _this2.textExtent();\n      _this2.rawEncodeData = _this2.layer.getEncodedData();\n      _this2.preTextStyle = _this2.getTextStyle();\n      _this2.initUniformsBuffer();\n      return _this2.buildModels();\n    })();\n  }\n  buildModels() {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      const {\n        textAllowOverlap = false\n      } = _this3.layer.getLayerConfig();\n\n      //  this.mapping(); 重复调用\n      _this3.initGlyph(); //\n      _this3.updateTexture();\n      if (!textAllowOverlap) {\n        _this3.filterGlyphs();\n      }\n      const model = yield _this3.layer.buildLayerModel({\n        moduleName: 'pointText',\n        vertexShader: textVert,\n        fragmentShader: textFrag,\n        defines: _this3.getDefines(),\n        inject: _this3.getInject(),\n        triangulation: TextTrianglation.bind(_this3),\n        depth: {\n          enable: false\n        }\n      });\n      return [model];\n    })();\n  }\n  // 需要更新的场景\n  // 1. 文本偏移量发生改变\n  // 2. 文本锚点发生改变\n  // 3. 文本允许重叠发生改变\n  // 4. 文本字体发生改变\n  // 5. 文本字体粗细发生改变\n  needUpdate() {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      const {\n        textAllowOverlap = false,\n        textAnchor = 'center',\n        textOffset,\n        padding,\n        fontFamily,\n        fontWeight\n      } = _this4.getTextStyle();\n      if (!isEqual(padding, _this4.preTextStyle.padding) || !isEqual(textOffset, _this4.preTextStyle.textOffset) || !isEqual(textAnchor, _this4.preTextStyle.textAnchor) || !isEqual(fontFamily, _this4.preTextStyle.fontFamily) || !isEqual(fontWeight, _this4.preTextStyle.fontWeight)) {\n        yield _this4.mapping();\n        return true;\n      }\n      if (textAllowOverlap) {\n        // 小于不做避让\n        return false;\n      }\n\n      // textAllowOverlap 发生改变\n      const zoom = _this4.mapService.getZoom();\n      const extent = _this4.mapService.getBounds();\n      const flag = boundsContains(_this4.extent, extent);\n      // 文本不能压盖则进行过滤\n      if (Math.abs(_this4.currentZoom - zoom) > 0.5 || !flag || textAllowOverlap !== _this4.preTextStyle.textAllowOverlap) {\n        // TODO this.mapping 数据未变化，避让\n        yield _this4.reBuildModel();\n        return true;\n      }\n      return false;\n    })();\n  }\n  clearModels() {\n    var _this$texture;\n    (_this$texture = this.texture) === null || _this$texture === void 0 || _this$texture.destroy();\n    // TODO this.mapping\n    this.layer.off('remapping', this.mapping);\n  }\n  registerBuiltinAttributes() {\n    // 注册 Position 属性 64 位地位部分，经纬度数据开启双精度，避免大于 20层级以上出现数据偏移\n    this.registerPosition64LowAttribute();\n    this.styleAttributeService.registerStyleAttribute({\n      name: 'textOffsets',\n      type: AttributeType.Attribute,\n      descriptor: {\n        shaderLocation: this.attributeLocation.TEXT_OFFSETS,\n        name: 'a_textOffsets',\n        // 文字偏移量\n        buffer: {\n          // give the WebGL driver a hint that this buffer may change\n          usage: gl.STATIC_DRAW,\n          data: [],\n          type: gl.FLOAT\n        },\n        size: 2,\n        update: (feature, featureIdx, vertex) => {\n          return [vertex[5], vertex[6]];\n        }\n      }\n    });\n    this.styleAttributeService.registerStyleAttribute({\n      name: 'textUv',\n      type: AttributeType.Attribute,\n      descriptor: {\n        name: 'a_tex',\n        shaderLocation: this.attributeLocation.UV,\n        buffer: {\n          usage: gl.DYNAMIC_DRAW,\n          data: [],\n          type: gl.FLOAT\n        },\n        size: 2,\n        update: (feature, featureIdx, vertex) => {\n          return [vertex[3], vertex[4]];\n        }\n      }\n    });\n\n    // point layer size;\n    this.styleAttributeService.registerStyleAttribute({\n      name: 'size',\n      type: AttributeType.Attribute,\n      descriptor: {\n        name: 'a_Size',\n        shaderLocation: this.attributeLocation.SIZE,\n        buffer: {\n          // give the WebGL driver a hint that this buffer may change\n          usage: gl.DYNAMIC_DRAW,\n          data: [],\n          type: gl.FLOAT\n        },\n        size: 1,\n        update: feature => {\n          const {\n            size = 12\n          } = feature;\n          return Array.isArray(size) ? [size[0]] : [size];\n        }\n      }\n    });\n  }\n  bindEvent() {\n    if (!this.layer.isTileLayer) {\n      // 重新绑定\n      this.layer.on('remapping', this.mapping);\n    }\n  }\n  textExtent() {\n    const bounds = this.mapService.getBounds();\n    return padBounds(bounds, 0.5);\n  }\n  /**\n   * 生成文字纹理（生成文字纹理字典）\n   */\n  initTextFont() {\n    const {\n      fontWeight,\n      fontFamily\n    } = this.getTextStyle();\n    const data = this.rawEncodeData;\n    const characterSet = [];\n    data.forEach(item => {\n      let {\n        shape = ''\n      } = item;\n      shape = shape.toString();\n      for (const char of shape) {\n        // 去重\n        if (characterSet.indexOf(char) === -1) {\n          characterSet.push(char);\n        }\n      }\n    });\n    this.fontService.setFontOptions({\n      characterSet,\n      fontWeight,\n      fontFamily,\n      iconfont: false\n    });\n  }\n\n  /**\n   * 生成 iconfont 纹理字典\n   */\n  initIconFontTex() {\n    const {\n      fontWeight,\n      fontFamily\n    } = this.getTextStyle();\n    const data = this.rawEncodeData;\n    const characterSet = [];\n    data.forEach(item => {\n      let {\n        shape = ''\n      } = item;\n      shape = `${shape}`;\n      if (characterSet.indexOf(shape) === -1) {\n        characterSet.push(shape);\n      }\n    });\n    this.fontService.setFontOptions({\n      characterSet,\n      fontWeight,\n      fontFamily,\n      iconfont: true\n    });\n  }\n  getTextStyle() {\n    const {\n      fontWeight = '400',\n      fontFamily = 'sans-serif',\n      textAllowOverlap = false,\n      padding = [0, 0],\n      textAnchor = 'center',\n      textOffset = [0, 0],\n      opacity = 1,\n      strokeOpacity = 1,\n      strokeWidth = 0,\n      stroke = '#000'\n    } = this.layer.getLayerConfig();\n    return {\n      fontWeight,\n      fontFamily,\n      textAllowOverlap,\n      padding,\n      textAnchor,\n      textOffset,\n      opacity,\n      strokeOpacity,\n      strokeWidth,\n      stroke\n    };\n  }\n\n  /**\n   * 生成文字布局（对照文字纹理字典提取对应文字的位置很好信息）\n   */\n  generateGlyphLayout(iconfont) {\n    const mapping = this.getFontServiceMapping();\n    const {\n      spacing = 2,\n      textAnchor = 'center',\n      textOffset\n    } = this.layer.getLayerConfig();\n    const data = this.rawEncodeData;\n    this.glyphInfo = data.map(feature => {\n      const {\n        shape = '',\n        id,\n        size = 1\n      } = feature;\n      const offset = feature.textOffset ? feature.textOffset : textOffset || [0, 0];\n      const anchor = feature.textAnchor ? feature.textAnchor : textAnchor || 'center';\n      const shaping = shapeText(shape.toString(), mapping,\n      // @ts-ignore\n      size, anchor, 'left', spacing, offset,\n      //\n      iconfont);\n      const glyphQuads = getGlyphQuads(shaping, offset, false);\n      feature.shaping = shaping;\n      feature.glyphQuads = glyphQuads;\n      // feature.centroid = calculteCentroid(coordinates);\n\n      feature.centroid = calculateCentroid(feature.coordinates);\n      this.glyphInfoMap[id] = {\n        shaping,\n        glyphQuads,\n        centroid: calculateCentroid(feature.coordinates)\n      };\n      return feature;\n    });\n  }\n  getFontServiceMapping() {\n    const {\n      fontWeight = '400',\n      fontFamily = 'sans-serif'\n    } = this.layer.getLayerConfig();\n    return this.fontService.getMappingByKey(`${fontFamily}_${fontWeight}`);\n  }\n  getFontServiceCanvas() {\n    const {\n      fontWeight = '400',\n      fontFamily = 'sans-serif'\n    } = this.layer.getLayerConfig();\n    // 更新文字布局\n    return this.fontService.getCanvasByKey(`${fontFamily}_${fontWeight}`);\n  }\n\n  /**\n   * 文字避让 depend on originCentorid\n   */\n  filterGlyphs() {\n    const {\n      padding = [0, 0],\n      textAllowOverlap = false\n    } = this.layer.getLayerConfig();\n    if (textAllowOverlap) {\n      // 如果允许文本覆盖\n      return;\n    }\n    this.glyphInfoMap = {};\n    this.currentZoom = this.mapService.getZoom();\n    this.extent = this.textExtent();\n    const {\n      width,\n      height\n    } = this.rendererService.getViewportSize();\n    const collisionIndex = new CollisionIndex(width, height);\n    const filterData = this.glyphInfo.filter(feature => {\n      const {\n        shaping,\n        id = 0\n      } = feature;\n      const centroid = feature.centroid;\n      const size = feature.size;\n      const fontScale = size / 16;\n      const pixels = this.mapService.lngLatToContainer(centroid);\n      const {\n        box\n      } = collisionIndex.placeCollisionBox({\n        x1: shaping.left * fontScale - padding[0],\n        x2: shaping.right * fontScale + padding[0],\n        y1: shaping.top * fontScale - padding[1],\n        y2: shaping.bottom * fontScale + padding[1],\n        anchorPointX: pixels.x,\n        anchorPointY: pixels.y\n      });\n      if (box && box.length) {\n        collisionIndex.insertCollisionBox(box, id);\n        return true;\n      } else {\n        return false;\n      }\n    });\n    filterData.forEach(item => {\n      // @ts-ignore\n      this.glyphInfoMap[item.id] = item;\n    });\n    // this.layer.setEncodedData(filterData);\n  }\n  /**\n   * 初始化文字布局\n   */\n  initGlyph() {\n    const {\n      iconfont = false\n    } = this.layer.getLayerConfig();\n    // 1.生成文字纹理（或是生成 iconfont）\n    iconfont ? this.initIconFontTex() : this.initTextFont();\n    // 2.生成文字布局\n    this.generateGlyphLayout(iconfont);\n  }\n  /**\n   * 更新文字纹理\n   */\n  updateTexture() {\n    const {\n      createTexture2D\n    } = this.rendererService;\n    const canvas = this.getFontServiceCanvas();\n    this.textureHeight = canvas.height;\n    if (this.texture) {\n      this.texture.destroy();\n    }\n    this.texture = createTexture2D({\n      data: canvas,\n      mag: gl.LINEAR,\n      min: gl.LINEAR,\n      width: canvas.width,\n      height: canvas.height\n    });\n    this.textures = [this.texture];\n  }\n  reBuildModel() {\n    var _this5 = this;\n    return _asyncToGenerator(function* () {\n      _this5.filterGlyphs();\n      const model = yield _this5.layer.buildLayerModel({\n        moduleName: 'pointText',\n        vertexShader: textVert,\n        fragmentShader: textFrag,\n        triangulation: TextTrianglation.bind(_this5),\n        defines: _this5.getDefines(),\n        inject: _this5.getInject(),\n        depth: {\n          enable: false\n        }\n      });\n      // TODO 渲染流程待修改\n      _this5.layer.models = [model];\n    })();\n  }\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}