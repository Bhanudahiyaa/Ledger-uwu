{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { createLayerContainer } from '@antv/l7-core';\nimport { PolygonLayer } from '@antv/l7-layers';\nimport { DOM } from '@antv/l7-utils';\nimport { Control } from \"./baseControl\";\nexport { Swipe };\nexport default class Swipe extends Control {\n  constructor(...args) {\n    super(...args);\n    /**\n     * 是否正在拖动卷帘\n     */\n    _defineProperty(this, \"isMoving\", false);\n    /**\n     * 掩模图层实例\n     */\n    _defineProperty(this, \"maskLayer\", void 0);\n    _defineProperty(this, \"move\", e => {\n      // 阻止事件冒泡到地图上\n      e.stopPropagation();\n      switch (e.type) {\n        case 'touchcancel':\n        case 'touchend':\n        case 'mouseup':\n          {\n            var _this$scene;\n            this.isMoving = false;\n            ['mouseup', 'mousemove', 'touchend', 'touchcancel', 'touchmove'].forEach(eventName => {\n              document.removeEventListener(eventName, this.move);\n            });\n            (_this$scene = this.scene) === null || _this$scene === void 0 || _this$scene.render();\n            break;\n          }\n        case 'mousedown':\n        case 'touchstart':\n          {\n            this.isMoving = true;\n            ['mouseup', 'mousemove', 'touchend', 'touchcancel', 'touchmove'].forEach(eventName => {\n              document.addEventListener(eventName, this.move);\n            });\n            // fallthrough\n          }\n        case 'mousemove':\n        case 'touchmove':\n          {\n            if (this.isMoving) {\n              if (this.controlOption.orientation === 'vertical') {\n                let pageX;\n                if ('pageX' in e) {\n                  pageX = e.pageX;\n                } else if (e.touches && e.touches.length && e.touches[0].pageX) {\n                  pageX = e.touches[0].pageX;\n                } else if (e.changedTouches && e.changedTouches.length) {\n                  pageX = e.changedTouches[0].pageX;\n                }\n                if (!pageX) {\n                  break;\n                }\n                const containerRect = this.getContainerDOMRect();\n                const containerSize = this.getContainerSize();\n                const containerWidth = containerSize[0];\n                const containerRectLeft = (containerRect === null || containerRect === void 0 ? void 0 : containerRect.left) || 0;\n                const offsetX = pageX - containerRectLeft + window.scrollX - document.documentElement.clientLeft;\n                const width = containerWidth - Math.min(Math.max(0, containerWidth - offsetX), containerWidth);\n                const ratio = width / containerWidth;\n                this.setOptions({\n                  ratio\n                });\n                this.emit('moving', {\n                  size: [width, containerSize[1]],\n                  ratio: [ratio, 0]\n                });\n              } else {\n                let pageY;\n                if ('pageY' in e) {\n                  pageY = e.pageY;\n                } else if (e.touches && e.touches.length && e.touches[0].pageY) {\n                  pageY = e.touches[0].pageY;\n                } else if (e.changedTouches && e.changedTouches.length) {\n                  pageY = e.changedTouches[0].pageY;\n                }\n                if (!pageY) {\n                  break;\n                }\n                const containerRect = this.getContainerDOMRect();\n                const containerSize = this.getContainerSize();\n                const containerHeight = containerSize[1];\n                const containerRectLeft = (containerRect === null || containerRect === void 0 ? void 0 : containerRect.top) || 0;\n                const offsetY = pageY - containerRectLeft + window.scrollY - document.documentElement.clientTop;\n                const height = containerHeight - Math.min(Math.max(0, containerHeight - offsetY), containerHeight);\n                const ratio = height / containerHeight;\n                this.setOptions({\n                  ratio\n                });\n                this.emit('moving', {\n                  size: [containerSize[0], height],\n                  ratio: [0, ratio]\n                });\n              }\n            }\n            break;\n          }\n        default:\n          break;\n      }\n    });\n    _defineProperty(this, \"getMaskLayer\", () => {\n      console.log(this.getMaskGeoData());\n      return new PolygonLayer({\n        visible: false\n      }).source(this.getMaskGeoData()).shape('fill').color('red').style({\n        opacity: 0.1\n      });\n    });\n    _defineProperty(this, \"updateMask\", () => {\n      var _this$maskLayer;\n      if (!this.mapsService) return;\n      const geoJSON = this.getMaskGeoData();\n      (_this$maskLayer = this.maskLayer) === null || _this$maskLayer === void 0 || _this$maskLayer.setData(geoJSON);\n    });\n  }\n  getDefault() {\n    return _objectSpread(_objectSpread({}, super.getDefault()), {}, {\n      layers: [],\n      rightLayers: [],\n      ratio: 0.5,\n      orientation: 'vertical'\n    });\n  }\n  onAdd() {\n    const container = DOM.create('div', 'l7-control-swipe');\n    DOM.create('button', 'l7-control-swipe__button', container);\n    const {\n      orientation = 'vertical',\n      ratio = 0.5\n    } = this.controlOption;\n    if (orientation === 'horizontal') {\n      container.style.top = ratio * 100 + '%';\n      container.style.left = '';\n    } else {\n      container.style.left = ratio * 100 + '%';\n      container.style.top = '';\n    }\n    container.classList.add(orientation);\n    return container;\n  }\n  addTo(sceneContainer) {\n    // 初始化各个 Service 实例\n    this.mapsService = sceneContainer.mapService;\n    this.renderService = sceneContainer.rendererService;\n    this.layerService = sceneContainer.layerService;\n    this.controlService = sceneContainer.controlService;\n    this.configService = sceneContainer.globalConfigService;\n    this.scene = sceneContainer.sceneService;\n    this.sceneContainer = sceneContainer;\n    this.isShow = true;\n\n    // 初始化 container\n    this.container = this.onAdd();\n    const {\n      className,\n      style,\n      layers,\n      rightLayers\n    } = this.controlOption;\n    if (className) {\n      this.setClassName(className);\n    }\n    if (style) {\n      this.setStyle(style);\n    }\n\n    // 将 container 插入容器中\n    // this.scene.getSceneContainer().appendChild(this.container);\n    this.mapsService.getMarkerContainer().appendChild(this.container);\n    this.maskLayer = this.getMaskLayer();\n    this.registerEvent();\n\n    // 添加掩模图层到 scene\n    const layerContainer = createLayerContainer(sceneContainer);\n    this.maskLayer.setContainer(layerContainer);\n    this.scene.addLayer(this.maskLayer);\n\n    // 给图层挂载掩模\n    this.addMaskToLayers(layers, false);\n    this.addMaskToLayers(rightLayers, true);\n    this.emit('add', this);\n    return this;\n  }\n  onRemove() {\n    if (this.maskLayer) {\n      var _this$layerService;\n      const {\n        layers,\n        rightLayers\n      } = this.controlOption;\n      this.removeMaskFromLayers(layers);\n      this.removeMaskFromLayers(rightLayers);\n      (_this$layerService = this.layerService) === null || _this$layerService === void 0 || _this$layerService.remove(this.maskLayer);\n    }\n    this.unRegisterEvent();\n    this.removeAllListeners();\n  }\n  show() {\n    var _this$scene2;\n    const container = this.container;\n    DOM.removeClass(container, 'l7-control-swipe_hide');\n    // 启用掩模\n    const {\n      layers,\n      rightLayers\n    } = this.controlOption;\n    layers.forEach(layer => layer.enableMask());\n    rightLayers.forEach(layer => layer.enableMask());\n    (_this$scene2 = this.scene) === null || _this$scene2 === void 0 || _this$scene2.render();\n    this.isShow = true;\n    this.emit('show', this);\n  }\n  hide() {\n    var _this$scene3;\n    const container = this.container;\n    DOM.addClass(container, 'l7-control-swipe_hide');\n    // 禁用掩模\n    const {\n      layers,\n      rightLayers\n    } = this.controlOption;\n    layers.forEach(layer => layer.disableMask());\n    rightLayers.forEach(layer => layer.disableMask());\n    (_this$scene3 = this.scene) === null || _this$scene3 === void 0 || _this$scene3.render();\n    this.isShow = false;\n    this.emit('hide', this);\n  }\n  setOptions(newOptions) {\n    const controlOption = _objectSpread(_objectSpread({}, this.controlOption), newOptions);\n    if (newOptions.className) {\n      this.setClassName(newOptions.className);\n    }\n    if (newOptions.style) {\n      this.setStyle(newOptions.style);\n    }\n    if (newOptions.orientation || newOptions.ratio !== undefined) {\n      this.setOrientationAndRatio(controlOption.orientation, controlOption.ratio);\n    }\n    if (newOptions.layers) {\n      const newLayers = newOptions.layers;\n      const oldLayers = this.controlOption.layers;\n      this.setLayers(newLayers, oldLayers, false);\n    }\n    if (newOptions.rightLayers) {\n      const newLayers = newOptions.rightLayers;\n      const oldLayers = this.controlOption.rightLayers;\n      this.setLayers(newLayers, oldLayers, true);\n    }\n    this.controlOption = controlOption;\n    this.updateMask();\n  }\n  registerEvent() {\n    this.container.addEventListener('mousedown', this.move);\n    this.container.addEventListener('touchstart', this.move);\n    this.mapsService.on('camerachange', this.updateMask);\n  }\n  unRegisterEvent() {\n    var _this$mapsService;\n    this.container.removeEventListener('mousedown', this.move);\n    this.container.removeEventListener('touchstart', this.move);\n    (_this$mapsService = this.mapsService) === null || _this$mapsService === void 0 || _this$mapsService.off('camerachange', this.updateMask);\n  }\n  setOrientationAndRatio(orientation = 'vertical', ratio = 0.5) {\n    this.container.classList.remove('horizontal', 'vertical');\n    this.container.classList.add(orientation);\n    if (orientation === 'horizontal') {\n      this.container.style.top = ratio * 100 + '%';\n      this.container.style.left = '';\n    } else {\n      this.container.style.left = ratio * 100 + '%';\n      this.container.style.top = '';\n    }\n  }\n  setLayers(newLayers, oldLayers, isRightLayer = false) {\n    const addLayers = newLayers.filter(layer => oldLayers.includes(layer) === false);\n    const removeLayers = oldLayers.filter(layer => newLayers.includes(layer) === false);\n    this.addMaskToLayers(addLayers, isRightLayer);\n    this.removeMaskFromLayers(removeLayers);\n  }\n  addMaskToLayers(layers, isRightLayer) {\n    layers.forEach(layer => {\n      layer.updateLayerConfig({\n        maskInside: isRightLayer ? false : true\n      });\n      layer.addMask(this.maskLayer);\n    });\n  }\n  removeMaskFromLayers(layers) {\n    layers.forEach(layer => {\n      // reset default is true\n      layer.updateLayerConfig({\n        maskInside: true\n      });\n      layer.removeMask(this.maskLayer);\n    });\n  }\n  getMaskGeoData() {\n    const {\n      ratio = 0.5,\n      orientation = 'vertical'\n    } = this.controlOption;\n    const isVertical = orientation === 'vertical';\n    const [sw, ne] = this.getBounds();\n    const [swLng, swLat] = sw;\n    const [neLng, neLat] = ne;\n    let coordinate;\n    if (isVertical) {\n      const centerLng = swLng + (neLng - swLng) * ratio;\n      coordinate = [[swLng, neLat], [centerLng, neLat], [centerLng, swLat], sw, [swLng, neLat]];\n    } else {\n      const size = this.getContainerSize();\n      const lngLat = this.mapsService.containerToLngLat([size[0], size[1] * ratio]);\n      const centerLat = lngLat.lat;\n      coordinate = [[swLng, neLat], ne, [neLng, centerLat], [swLng, centerLat], [swLng, neLat]];\n    }\n    const geoJSON = {\n      type: 'FeatureCollection',\n      features: [{\n        type: 'Feature',\n        properties: {},\n        geometry: {\n          type: 'Polygon',\n          coordinates: [coordinate]\n        }\n      }]\n    };\n    return geoJSON;\n  }\n  getContainerDOMRect() {\n    var _this$mapsService$get;\n    const rect = (_this$mapsService$get = this.mapsService.getContainer()) === null || _this$mapsService$get === void 0 ? void 0 : _this$mapsService$get.getBoundingClientRect();\n    return rect;\n  }\n  getContainerSize() {\n    const size = this.mapsService.getSize();\n    return size;\n  }\n  getBounds() {\n    const bounds = this.mapsService.getBounds();\n    return bounds;\n  }\n\n  /**\n   * 添加要剪裁的图层\n   * @param layer 剪裁的图层\n   * @param addRight 是否添加图层到右侧, 默认添加到左侧.\n   */\n  addLayer(layer, addRight = false) {\n    const layers = Array.isArray(layer) ? layer : [layer];\n    if (addRight) {\n      const rightLayers = this.controlOption.rightLayers.concat(...layers);\n      this.setOptions({\n        rightLayers\n      });\n    } else {\n      const leftLayers = this.controlOption.layers.concat(...layers);\n      this.setOptions({\n        layers: leftLayers\n      });\n    }\n  }\n\n  /**\n   * 移除剪裁的图层\n   */\n  removeLayer(layer) {\n    const layers = Array.isArray(layer) ? layer : [layer];\n    const leftLayers = this.controlOption.layers.filter(layer => layers.includes(layer));\n    const rightLayers = this.controlOption.rightLayers.filter(layer => layers.includes(layer));\n    this.setOptions({\n      layers: leftLayers,\n      rightLayers\n    });\n  }\n\n  /**\n   * 清除所有图层\n   */\n  removeLayers() {\n    this.setOptions({\n      layers: [],\n      rightLayers: []\n    });\n  }\n}","map":{"version":3,"names":["_objectSpread","_defineProperty","createLayerContainer","PolygonLayer","DOM","Control","Swipe","constructor","args","e","stopPropagation","type","_this$scene","isMoving","forEach","eventName","document","removeEventListener","move","scene","render","addEventListener","controlOption","orientation","pageX","touches","length","changedTouches","containerRect","getContainerDOMRect","containerSize","getContainerSize","containerWidth","containerRectLeft","left","offsetX","window","scrollX","documentElement","clientLeft","width","Math","min","max","ratio","setOptions","emit","size","pageY","containerHeight","top","offsetY","scrollY","clientTop","height","console","log","getMaskGeoData","visible","source","shape","color","style","opacity","_this$maskLayer","mapsService","geoJSON","maskLayer","setData","getDefault","layers","rightLayers","onAdd","container","create","classList","add","addTo","sceneContainer","mapService","renderService","rendererService","layerService","controlService","configService","globalConfigService","sceneService","isShow","className","setClassName","setStyle","getMarkerContainer","appendChild","getMaskLayer","registerEvent","layerContainer","setContainer","addLayer","addMaskToLayers","onRemove","_this$layerService","removeMaskFromLayers","remove","unRegisterEvent","removeAllListeners","show","_this$scene2","removeClass","layer","enableMask","hide","_this$scene3","addClass","disableMask","newOptions","undefined","setOrientationAndRatio","newLayers","oldLayers","setLayers","updateMask","on","_this$mapsService","off","isRightLayer","addLayers","filter","includes","removeLayers","updateLayerConfig","maskInside","addMask","removeMask","isVertical","sw","ne","getBounds","swLng","swLat","neLng","neLat","coordinate","centerLng","lngLat","containerToLngLat","centerLat","lat","features","properties","geometry","coordinates","_this$mapsService$get","rect","getContainer","getBoundingClientRect","getSize","bounds","addRight","Array","isArray","concat","leftLayers","removeLayer"],"sources":["/Users/bhanudahiya/Desktop/ledger-IQ/node_modules/@antv/l7-component/es/control/swipe.js"],"sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { createLayerContainer } from '@antv/l7-core';\nimport { PolygonLayer } from '@antv/l7-layers';\nimport { DOM } from '@antv/l7-utils';\nimport { Control } from \"./baseControl\";\nexport { Swipe };\nexport default class Swipe extends Control {\n  constructor(...args) {\n    super(...args);\n    /**\n     * 是否正在拖动卷帘\n     */\n    _defineProperty(this, \"isMoving\", false);\n    /**\n     * 掩模图层实例\n     */\n    _defineProperty(this, \"maskLayer\", void 0);\n    _defineProperty(this, \"move\", e => {\n      // 阻止事件冒泡到地图上\n      e.stopPropagation();\n      switch (e.type) {\n        case 'touchcancel':\n        case 'touchend':\n        case 'mouseup':\n          {\n            var _this$scene;\n            this.isMoving = false;\n            ['mouseup', 'mousemove', 'touchend', 'touchcancel', 'touchmove'].forEach(eventName => {\n              document.removeEventListener(eventName, this.move);\n            });\n            (_this$scene = this.scene) === null || _this$scene === void 0 || _this$scene.render();\n            break;\n          }\n        case 'mousedown':\n        case 'touchstart':\n          {\n            this.isMoving = true;\n            ['mouseup', 'mousemove', 'touchend', 'touchcancel', 'touchmove'].forEach(eventName => {\n              document.addEventListener(eventName, this.move);\n            });\n            // fallthrough\n          }\n        case 'mousemove':\n        case 'touchmove':\n          {\n            if (this.isMoving) {\n              if (this.controlOption.orientation === 'vertical') {\n                let pageX;\n                if ('pageX' in e) {\n                  pageX = e.pageX;\n                } else if (e.touches && e.touches.length && e.touches[0].pageX) {\n                  pageX = e.touches[0].pageX;\n                } else if (e.changedTouches && e.changedTouches.length) {\n                  pageX = e.changedTouches[0].pageX;\n                }\n                if (!pageX) {\n                  break;\n                }\n                const containerRect = this.getContainerDOMRect();\n                const containerSize = this.getContainerSize();\n                const containerWidth = containerSize[0];\n                const containerRectLeft = (containerRect === null || containerRect === void 0 ? void 0 : containerRect.left) || 0;\n                const offsetX = pageX - containerRectLeft + window.scrollX - document.documentElement.clientLeft;\n                const width = containerWidth - Math.min(Math.max(0, containerWidth - offsetX), containerWidth);\n                const ratio = width / containerWidth;\n                this.setOptions({\n                  ratio\n                });\n                this.emit('moving', {\n                  size: [width, containerSize[1]],\n                  ratio: [ratio, 0]\n                });\n              } else {\n                let pageY;\n                if ('pageY' in e) {\n                  pageY = e.pageY;\n                } else if (e.touches && e.touches.length && e.touches[0].pageY) {\n                  pageY = e.touches[0].pageY;\n                } else if (e.changedTouches && e.changedTouches.length) {\n                  pageY = e.changedTouches[0].pageY;\n                }\n                if (!pageY) {\n                  break;\n                }\n                const containerRect = this.getContainerDOMRect();\n                const containerSize = this.getContainerSize();\n                const containerHeight = containerSize[1];\n                const containerRectLeft = (containerRect === null || containerRect === void 0 ? void 0 : containerRect.top) || 0;\n                const offsetY = pageY - containerRectLeft + window.scrollY - document.documentElement.clientTop;\n                const height = containerHeight - Math.min(Math.max(0, containerHeight - offsetY), containerHeight);\n                const ratio = height / containerHeight;\n                this.setOptions({\n                  ratio\n                });\n                this.emit('moving', {\n                  size: [containerSize[0], height],\n                  ratio: [0, ratio]\n                });\n              }\n            }\n            break;\n          }\n        default:\n          break;\n      }\n    });\n    _defineProperty(this, \"getMaskLayer\", () => {\n      console.log(this.getMaskGeoData());\n      return new PolygonLayer({\n        visible: false\n      }).source(this.getMaskGeoData()).shape('fill').color('red').style({\n        opacity: 0.1\n      });\n    });\n    _defineProperty(this, \"updateMask\", () => {\n      var _this$maskLayer;\n      if (!this.mapsService) return;\n      const geoJSON = this.getMaskGeoData();\n      (_this$maskLayer = this.maskLayer) === null || _this$maskLayer === void 0 || _this$maskLayer.setData(geoJSON);\n    });\n  }\n  getDefault() {\n    return _objectSpread(_objectSpread({}, super.getDefault()), {}, {\n      layers: [],\n      rightLayers: [],\n      ratio: 0.5,\n      orientation: 'vertical'\n    });\n  }\n  onAdd() {\n    const container = DOM.create('div', 'l7-control-swipe');\n    DOM.create('button', 'l7-control-swipe__button', container);\n    const {\n      orientation = 'vertical',\n      ratio = 0.5\n    } = this.controlOption;\n    if (orientation === 'horizontal') {\n      container.style.top = ratio * 100 + '%';\n      container.style.left = '';\n    } else {\n      container.style.left = ratio * 100 + '%';\n      container.style.top = '';\n    }\n    container.classList.add(orientation);\n    return container;\n  }\n  addTo(sceneContainer) {\n    // 初始化各个 Service 实例\n    this.mapsService = sceneContainer.mapService;\n    this.renderService = sceneContainer.rendererService;\n    this.layerService = sceneContainer.layerService;\n    this.controlService = sceneContainer.controlService;\n    this.configService = sceneContainer.globalConfigService;\n    this.scene = sceneContainer.sceneService;\n    this.sceneContainer = sceneContainer;\n    this.isShow = true;\n\n    // 初始化 container\n    this.container = this.onAdd();\n    const {\n      className,\n      style,\n      layers,\n      rightLayers\n    } = this.controlOption;\n    if (className) {\n      this.setClassName(className);\n    }\n    if (style) {\n      this.setStyle(style);\n    }\n\n    // 将 container 插入容器中\n    // this.scene.getSceneContainer().appendChild(this.container);\n    this.mapsService.getMarkerContainer().appendChild(this.container);\n    this.maskLayer = this.getMaskLayer();\n    this.registerEvent();\n\n    // 添加掩模图层到 scene\n    const layerContainer = createLayerContainer(sceneContainer);\n    this.maskLayer.setContainer(layerContainer);\n    this.scene.addLayer(this.maskLayer);\n\n    // 给图层挂载掩模\n    this.addMaskToLayers(layers, false);\n    this.addMaskToLayers(rightLayers, true);\n    this.emit('add', this);\n    return this;\n  }\n  onRemove() {\n    if (this.maskLayer) {\n      var _this$layerService;\n      const {\n        layers,\n        rightLayers\n      } = this.controlOption;\n      this.removeMaskFromLayers(layers);\n      this.removeMaskFromLayers(rightLayers);\n      (_this$layerService = this.layerService) === null || _this$layerService === void 0 || _this$layerService.remove(this.maskLayer);\n    }\n    this.unRegisterEvent();\n    this.removeAllListeners();\n  }\n  show() {\n    var _this$scene2;\n    const container = this.container;\n    DOM.removeClass(container, 'l7-control-swipe_hide');\n    // 启用掩模\n    const {\n      layers,\n      rightLayers\n    } = this.controlOption;\n    layers.forEach(layer => layer.enableMask());\n    rightLayers.forEach(layer => layer.enableMask());\n    (_this$scene2 = this.scene) === null || _this$scene2 === void 0 || _this$scene2.render();\n    this.isShow = true;\n    this.emit('show', this);\n  }\n  hide() {\n    var _this$scene3;\n    const container = this.container;\n    DOM.addClass(container, 'l7-control-swipe_hide');\n    // 禁用掩模\n    const {\n      layers,\n      rightLayers\n    } = this.controlOption;\n    layers.forEach(layer => layer.disableMask());\n    rightLayers.forEach(layer => layer.disableMask());\n    (_this$scene3 = this.scene) === null || _this$scene3 === void 0 || _this$scene3.render();\n    this.isShow = false;\n    this.emit('hide', this);\n  }\n  setOptions(newOptions) {\n    const controlOption = _objectSpread(_objectSpread({}, this.controlOption), newOptions);\n    if (newOptions.className) {\n      this.setClassName(newOptions.className);\n    }\n    if (newOptions.style) {\n      this.setStyle(newOptions.style);\n    }\n    if (newOptions.orientation || newOptions.ratio !== undefined) {\n      this.setOrientationAndRatio(controlOption.orientation, controlOption.ratio);\n    }\n    if (newOptions.layers) {\n      const newLayers = newOptions.layers;\n      const oldLayers = this.controlOption.layers;\n      this.setLayers(newLayers, oldLayers, false);\n    }\n    if (newOptions.rightLayers) {\n      const newLayers = newOptions.rightLayers;\n      const oldLayers = this.controlOption.rightLayers;\n      this.setLayers(newLayers, oldLayers, true);\n    }\n    this.controlOption = controlOption;\n    this.updateMask();\n  }\n  registerEvent() {\n    this.container.addEventListener('mousedown', this.move);\n    this.container.addEventListener('touchstart', this.move);\n    this.mapsService.on('camerachange', this.updateMask);\n  }\n  unRegisterEvent() {\n    var _this$mapsService;\n    this.container.removeEventListener('mousedown', this.move);\n    this.container.removeEventListener('touchstart', this.move);\n    (_this$mapsService = this.mapsService) === null || _this$mapsService === void 0 || _this$mapsService.off('camerachange', this.updateMask);\n  }\n  setOrientationAndRatio(orientation = 'vertical', ratio = 0.5) {\n    this.container.classList.remove('horizontal', 'vertical');\n    this.container.classList.add(orientation);\n    if (orientation === 'horizontal') {\n      this.container.style.top = ratio * 100 + '%';\n      this.container.style.left = '';\n    } else {\n      this.container.style.left = ratio * 100 + '%';\n      this.container.style.top = '';\n    }\n  }\n  setLayers(newLayers, oldLayers, isRightLayer = false) {\n    const addLayers = newLayers.filter(layer => oldLayers.includes(layer) === false);\n    const removeLayers = oldLayers.filter(layer => newLayers.includes(layer) === false);\n    this.addMaskToLayers(addLayers, isRightLayer);\n    this.removeMaskFromLayers(removeLayers);\n  }\n  addMaskToLayers(layers, isRightLayer) {\n    layers.forEach(layer => {\n      layer.updateLayerConfig({\n        maskInside: isRightLayer ? false : true\n      });\n      layer.addMask(this.maskLayer);\n    });\n  }\n  removeMaskFromLayers(layers) {\n    layers.forEach(layer => {\n      // reset default is true\n      layer.updateLayerConfig({\n        maskInside: true\n      });\n      layer.removeMask(this.maskLayer);\n    });\n  }\n  getMaskGeoData() {\n    const {\n      ratio = 0.5,\n      orientation = 'vertical'\n    } = this.controlOption;\n    const isVertical = orientation === 'vertical';\n    const [sw, ne] = this.getBounds();\n    const [swLng, swLat] = sw;\n    const [neLng, neLat] = ne;\n    let coordinate;\n    if (isVertical) {\n      const centerLng = swLng + (neLng - swLng) * ratio;\n      coordinate = [[swLng, neLat], [centerLng, neLat], [centerLng, swLat], sw, [swLng, neLat]];\n    } else {\n      const size = this.getContainerSize();\n      const lngLat = this.mapsService.containerToLngLat([size[0], size[1] * ratio]);\n      const centerLat = lngLat.lat;\n      coordinate = [[swLng, neLat], ne, [neLng, centerLat], [swLng, centerLat], [swLng, neLat]];\n    }\n    const geoJSON = {\n      type: 'FeatureCollection',\n      features: [{\n        type: 'Feature',\n        properties: {},\n        geometry: {\n          type: 'Polygon',\n          coordinates: [coordinate]\n        }\n      }]\n    };\n    return geoJSON;\n  }\n  getContainerDOMRect() {\n    var _this$mapsService$get;\n    const rect = (_this$mapsService$get = this.mapsService.getContainer()) === null || _this$mapsService$get === void 0 ? void 0 : _this$mapsService$get.getBoundingClientRect();\n    return rect;\n  }\n  getContainerSize() {\n    const size = this.mapsService.getSize();\n    return size;\n  }\n  getBounds() {\n    const bounds = this.mapsService.getBounds();\n    return bounds;\n  }\n\n  /**\n   * 添加要剪裁的图层\n   * @param layer 剪裁的图层\n   * @param addRight 是否添加图层到右侧, 默认添加到左侧.\n   */\n  addLayer(layer, addRight = false) {\n    const layers = Array.isArray(layer) ? layer : [layer];\n    if (addRight) {\n      const rightLayers = this.controlOption.rightLayers.concat(...layers);\n      this.setOptions({\n        rightLayers\n      });\n    } else {\n      const leftLayers = this.controlOption.layers.concat(...layers);\n      this.setOptions({\n        layers: leftLayers\n      });\n    }\n  }\n\n  /**\n   * 移除剪裁的图层\n   */\n  removeLayer(layer) {\n    const layers = Array.isArray(layer) ? layer : [layer];\n    const leftLayers = this.controlOption.layers.filter(layer => layers.includes(layer));\n    const rightLayers = this.controlOption.rightLayers.filter(layer => layers.includes(layer));\n    this.setOptions({\n      layers: leftLayers,\n      rightLayers\n    });\n  }\n\n  /**\n   * 清除所有图层\n   */\n  removeLayers() {\n    this.setOptions({\n      layers: [],\n      rightLayers: []\n    });\n  }\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}