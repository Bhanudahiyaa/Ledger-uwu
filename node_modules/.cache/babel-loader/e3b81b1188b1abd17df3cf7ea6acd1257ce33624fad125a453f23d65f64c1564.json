{"ast":null,"code":"import { __awaiter, __decorate, __metadata } from \"tslib\";\nimport { inject, injectable, postConstruct } from 'mana-syringe';\nimport isBoolean from 'lodash/isBoolean';\nimport isObject from 'lodash/isObject';\nimport { ICommandHandler, ICommandContextProvider } from '../../command/interface';\nimport { XFlowEdgeCommands } from '../constant';\nexport var NsUpdateEdge;\n(function (NsUpdateEdge) {\n  NsUpdateEdge.command = XFlowEdgeCommands.UPDATE_EDGE;\n  NsUpdateEdge.hookKey = 'updateEdge';\n  NsUpdateEdge.XFlowEdgeSetOptions = {\n    overwrite: true\n  };\n  NsUpdateEdge.XFlowUpdateLabelService = (edge, edgeConfig, options = NsUpdateEdge.XFlowEdgeSetOptions) => __awaiter(this, void 0, void 0, function* () {\n    edge === null || edge === void 0 ? void 0 : edge.setLabelAt(0, (edgeConfig === null || edgeConfig === void 0 ? void 0 : edgeConfig.label) || edgeConfig, options);\n  });\n})(NsUpdateEdge || (NsUpdateEdge = {}));\nlet UpdateEdgeCommand = class UpdateEdgeCommand {\n  constructor() {\n    this.execute = () => __awaiter(this, void 0, void 0, function* () {\n      const {\n        args,\n        hooks: runtimeHook\n      } = this.ctx.getArgs();\n      const hooks = this.ctx.getHooks();\n      const result = yield hooks.updateEdge.call(args, handlerArgs => __awaiter(this, void 0, void 0, function* () {\n        const x6Graph = yield this.ctx.getX6Graph();\n        const {\n          updateEdgeService,\n          updateEdgeLabelService = NsUpdateEdge.XFlowUpdateLabelService,\n          options = NsUpdateEdge.XFlowEdgeSetOptions\n        } = handlerArgs;\n        const edgeConfig = updateEdgeService ? yield updateEdgeService(handlerArgs) : handlerArgs === null || handlerArgs === void 0 ? void 0 : handlerArgs.edgeConfig;\n        const x6Edge = x6Graph === null || x6Graph === void 0 ? void 0 : x6Graph.getCellById(edgeConfig === null || edgeConfig === void 0 ? void 0 : edgeConfig.id);\n        x6Edge === null || x6Edge === void 0 ? void 0 : x6Edge.setData(edgeConfig, options);\n        if (edgeConfig === null || edgeConfig === void 0 ? void 0 : edgeConfig.hasOwnProperty('label')) {\n          // 默认更新edge的第一个label\n          yield updateEdgeLabelService(x6Edge, edgeConfig, options);\n        }\n        if (isBoolean(edgeConfig === null || edgeConfig === void 0 ? void 0 : edgeConfig.visible)) {\n          x6Edge.setVisible(edgeConfig === null || edgeConfig === void 0 ? void 0 : edgeConfig.visible);\n        }\n        if (edgeConfig.attrs) {\n          x6Edge.setAttrs(edgeConfig.attrs);\n        }\n        if (edgeConfig.vertices) {\n          x6Edge.setVertices(edgeConfig.vertices);\n        }\n        if (edgeConfig.router) {\n          x6Edge.setRouter(edgeConfig.router);\n        }\n        if (edgeConfig.connector) {\n          x6Edge.setConnector(edgeConfig.connector);\n        }\n        if (isObject(edgeConfig.source)) {\n          //@ts-ignore\n          x6Edge.setSource(edgeConfig.source);\n        }\n        if (isObject(edgeConfig.target)) {\n          //@ts-ignore\n          x6Edge.setTarget(edgeConfig.target);\n        }\n        return {\n          edgeConfig,\n          edgeCell: x6Edge\n        };\n      }), runtimeHook);\n      this.ctx.setResult(result);\n      return this;\n    });\n    this.undo = () => __awaiter(this, void 0, void 0, function* () {\n      this.ctx.undo();\n      return this;\n    });\n    this.redo = () => __awaiter(this, void 0, void 0, function* () {\n      if (!this.ctx.isUndoable) {\n        yield this.execute();\n      }\n      return this;\n    });\n  }\n  init() {\n    this.ctx = this.contextProvider();\n  }\n  isUndoable() {\n    return this.ctx.isUndoable();\n  }\n};\n__decorate([inject(ICommandContextProvider), __metadata(\"design:type\", Object)], UpdateEdgeCommand.prototype, \"contextProvider\", void 0);\n__decorate([postConstruct(), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", []), __metadata(\"design:returntype\", void 0)], UpdateEdgeCommand.prototype, \"init\", null);\nUpdateEdgeCommand = __decorate([injectable({\n  token: {\n    token: ICommandHandler,\n    named: NsUpdateEdge.command.id\n  }\n})\n/** 连线更新命令 */], UpdateEdgeCommand);\nexport { UpdateEdgeCommand };","map":{"version":3,"names":["inject","injectable","postConstruct","isBoolean","isObject","ICommandHandler","ICommandContextProvider","XFlowEdgeCommands","NsUpdateEdge","command","UPDATE_EDGE","hookKey","XFlowEdgeSetOptions","overwrite","XFlowUpdateLabelService","edge","edgeConfig","options","__awaiter","setLabelAt","label","UpdateEdgeCommand","constructor","execute","args","hooks","runtimeHook","ctx","getArgs","getHooks","result","updateEdge","call","handlerArgs","x6Graph","getX6Graph","updateEdgeService","updateEdgeLabelService","x6Edge","getCellById","id","setData","hasOwnProperty","visible","setVisible","attrs","setAttrs","vertices","setVertices","router","setRouter","connector","setConnector","source","setSource","target","setTarget","edgeCell","setResult","undo","redo","isUndoable","init","contextProvider","__decorate","token","named"],"sources":["../../../src/command-contributions/edge/edge-update.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}