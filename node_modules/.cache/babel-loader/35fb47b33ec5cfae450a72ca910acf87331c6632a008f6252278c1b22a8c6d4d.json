{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { IDebugLog, ILayerStage } from '@antv/l7-core';\nimport { normalize, rgb2arr } from '@antv/l7-utils';\nexport default class DataMappingPlugin {\n  constructor() {\n    _defineProperty(this, \"mapService\", void 0);\n    _defineProperty(this, \"fontService\", void 0);\n  }\n  apply(layer, {\n    styleAttributeService,\n    mapService,\n    fontService\n  }) {\n    var _this = this;\n    this.mapService = mapService;\n    this.fontService = fontService;\n    layer.hooks.init.tapPromise('DataMappingPlugin', /*#__PURE__*/_asyncToGenerator(function* () {\n      layer.log(IDebugLog.MappingStart, ILayerStage.INIT);\n      // 初始化重新生成 map\n      _this.generateMaping(layer, {\n        styleAttributeService\n      });\n      layer.log(IDebugLog.MappingEnd, ILayerStage.INIT);\n    }));\n    layer.hooks.beforeRenderData.tapPromise('DataMappingPlugin', /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator(function* (flag) {\n        if (!flag) {\n          return flag;\n        }\n        layer.dataState.dataMappingNeedUpdate = false;\n        layer.log(IDebugLog.MappingStart, ILayerStage.UPDATE);\n        const mappingResult = _this.generateMaping(layer, {\n          styleAttributeService\n        });\n        layer.log(IDebugLog.MappingEnd, ILayerStage.UPDATE);\n        return mappingResult;\n      });\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n\n    // remapping before render\n    layer.hooks.beforeRender.tap('DataMappingPlugin', () => {\n      const source = layer.getSource();\n      if (layer.layerModelNeedUpdate || !source || !source.inited) {\n        return;\n      }\n      const attributes = styleAttributeService.getLayerStyleAttributes() || [];\n      const filter = styleAttributeService.getLayerStyleAttribute('filter');\n      const {\n        dataArray\n      } = source.data;\n      // TODO 数据为空的情况\n      if (Array.isArray(dataArray) && dataArray.length === 0) {\n        return;\n      }\n      const attributesToRemapping = attributes.filter(attribute => attribute.needRemapping // 如果filter变化\n      );\n      let filterData = dataArray;\n      // 数据过滤完 再执行数据映射\n      if (filter !== null && filter !== void 0 && filter.needRemapping && filter !== null && filter !== void 0 && filter.scale) {\n        filterData = dataArray.filter(record => {\n          return this.applyAttributeMapping(filter, record)[0];\n        });\n      }\n      if (attributesToRemapping.length) {\n        // 过滤数据\n        const encodeData = this.mapping(layer, attributesToRemapping, filterData, layer.getEncodedData() // TODO 优化\n        );\n        layer.setEncodedData(encodeData);\n      }\n\n      // 处理文本更新，更新文字形状\n      // layer.emit('remapping', null);\n    });\n  }\n  generateMaping(layer, {\n    styleAttributeService\n  }) {\n    const attributes = styleAttributeService.getLayerStyleAttributes() || [];\n    const filter = styleAttributeService.getLayerStyleAttribute('filter');\n    const {\n      dataArray\n    } = layer.getSource().data;\n    let filterData = dataArray;\n    // 数据过滤完 再执行数据映射\n    if (filter !== null && filter !== void 0 && filter.scale) {\n      filterData = dataArray.filter(record => {\n        return this.applyAttributeMapping(filter, record)[0];\n      });\n    }\n    // Tip: layer 对数据做处理\n    // 数据处理 在数据进行 mapping 生成 encodeData 之前对数据进行处理\n    // 在各个 layer 中继承\n\n    filterData = layer.processData(filterData); // 目前只有简单线需要处理\n    const encodeData = this.mapping(layer, attributes, filterData, undefined);\n    layer.setEncodedData(encodeData);\n\n    // 对外暴露事件\n    layer.emit('dataUpdate', null);\n    return true;\n  }\n  mapping(layer, attributes, data, predata) {\n    const usedAttributes = attributes.filter(attribute => attribute.scale !== undefined).filter(attribute => attribute.name !== 'filter');\n    const mappedData = data.map((record, i) => {\n      const preRecord = predata ? predata[i] : {};\n      const encodeRecord = _objectSpread({\n        id: record._id,\n        coordinates: record.coordinates\n      }, preRecord);\n      usedAttributes.forEach(attribute => {\n        let values = this.applyAttributeMapping(attribute, record);\n        // TODO: 支持每个属性配置 postprocess}\n        if (attribute.name === 'color' || attribute.name === 'stroke') {\n          values = values.map(c => {\n            return rgb2arr(c);\n          });\n        }\n        // @ts-ignore\n        encodeRecord[attribute.name] = Array.isArray(values) && values.length === 1 ? values[0] : values;\n\n        // 增加对 layer/text/iconfont unicode 映射的解析\n        if (attribute.name === 'shape') {\n          encodeRecord.shape = this.fontService.getIconFontKey(encodeRecord[attribute.name]);\n        }\n      });\n      return encodeRecord;\n    });\n    attributes.forEach(attribute => {\n      attribute.needRemapping = false;\n    });\n\n    // 调整数据兼容 SimpleCoordinates\n    this.adjustData2SimpleCoordinates(mappedData);\n    return mappedData;\n  }\n  adjustData2SimpleCoordinates(mappedData) {\n    if (mappedData.length > 0 && this.mapService.version === 'SIMPLE') {\n      mappedData.map(d => {\n        if (!d.simpleCoordinate) {\n          d.coordinates = this.unProjectCoordinates(d.coordinates);\n          d.simpleCoordinate = true;\n        }\n      });\n    }\n  }\n  unProjectCoordinates(coordinates) {\n    if (typeof coordinates[0] === 'number') {\n      return this.mapService.simpleMapCoord.unproject(coordinates);\n    }\n    if (coordinates[0] && coordinates[0][0] instanceof Array) {\n      // @ts-ignore\n      const coords = [];\n      coordinates.map(coord => {\n        // @ts-ignore\n        const c1 = [];\n        coord.map(co => {\n          c1.push(this.mapService.simpleMapCoord.unproject(co));\n        });\n        // @ts-ignore\n        coords.push(c1);\n      });\n      // @ts-ignore\n      return coords;\n    } else {\n      // @ts-ignore\n      const coords = [];\n      // @ts-ignore\n      coordinates.map(coord => {\n        coords.push(this.mapService.simpleMapCoord.unproject(coord));\n      });\n      // @ts-ignore\n      return coords;\n    }\n  }\n  applyAttributeMapping(attribute, record) {\n    var _attribute$scale;\n    if (!attribute.scale) {\n      return [];\n    }\n    const scalers = (attribute === null || attribute === void 0 || (_attribute$scale = attribute.scale) === null || _attribute$scale === void 0 ? void 0 : _attribute$scale.scalers) || [];\n    const params = [];\n    scalers.forEach(({\n      field\n    }) => {\n      var _attribute$scale2;\n      if (record.hasOwnProperty(field) || ((_attribute$scale2 = attribute.scale) === null || _attribute$scale2 === void 0 ? void 0 : _attribute$scale2.type) === 'variable') {\n        // TODO:多字段，常量\n        params.push(record[field]);\n      }\n    });\n    const mappingResult = attribute.mapping ? attribute.mapping(params) : [];\n    return mappingResult;\n    // return attribute.mapping ? attribute.mapping(params) : [];\n  }\n  getArrowPoints(p1, p2) {\n    const dir = [p2[0] - p1[0], p2[1] - p1[1]];\n    const normalizeDir = normalize(dir);\n    const arrowPoint = [p1[0] + normalizeDir[0] * 0.0001, p1[1] + normalizeDir[1] * 0.0001];\n    return arrowPoint;\n  }\n}","map":{"version":3,"names":["_objectSpread","_asyncToGenerator","_defineProperty","IDebugLog","ILayerStage","normalize","rgb2arr","DataMappingPlugin","constructor","apply","layer","styleAttributeService","mapService","fontService","_this","hooks","init","tapPromise","log","MappingStart","INIT","generateMaping","MappingEnd","beforeRenderData","_ref2","flag","dataState","dataMappingNeedUpdate","UPDATE","mappingResult","_x","arguments","beforeRender","tap","source","getSource","layerModelNeedUpdate","inited","attributes","getLayerStyleAttributes","filter","getLayerStyleAttribute","dataArray","data","Array","isArray","length","attributesToRemapping","attribute","needRemapping","filterData","scale","record","applyAttributeMapping","encodeData","mapping","getEncodedData","setEncodedData","processData","undefined","emit","predata","usedAttributes","name","mappedData","map","i","preRecord","encodeRecord","id","_id","coordinates","forEach","values","c","shape","getIconFontKey","adjustData2SimpleCoordinates","version","d","simpleCoordinate","unProjectCoordinates","simpleMapCoord","unproject","coords","coord","c1","co","push","_attribute$scale","scalers","params","field","_attribute$scale2","hasOwnProperty","type","getArrowPoints","p1","p2","dir","normalizeDir","arrowPoint"],"sources":["/Users/bhanudahiya/Desktop/ledger-IQ/node_modules/@antv/l7-layers/es/plugins/DataMappingPlugin.js"],"sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { IDebugLog, ILayerStage } from '@antv/l7-core';\nimport { normalize, rgb2arr } from '@antv/l7-utils';\nexport default class DataMappingPlugin {\n  constructor() {\n    _defineProperty(this, \"mapService\", void 0);\n    _defineProperty(this, \"fontService\", void 0);\n  }\n  apply(layer, {\n    styleAttributeService,\n    mapService,\n    fontService\n  }) {\n    var _this = this;\n    this.mapService = mapService;\n    this.fontService = fontService;\n    layer.hooks.init.tapPromise('DataMappingPlugin', /*#__PURE__*/_asyncToGenerator(function* () {\n      layer.log(IDebugLog.MappingStart, ILayerStage.INIT);\n      // 初始化重新生成 map\n      _this.generateMaping(layer, {\n        styleAttributeService\n      });\n      layer.log(IDebugLog.MappingEnd, ILayerStage.INIT);\n    }));\n    layer.hooks.beforeRenderData.tapPromise('DataMappingPlugin', /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator(function* (flag) {\n        if (!flag) {\n          return flag;\n        }\n        layer.dataState.dataMappingNeedUpdate = false;\n        layer.log(IDebugLog.MappingStart, ILayerStage.UPDATE);\n        const mappingResult = _this.generateMaping(layer, {\n          styleAttributeService\n        });\n        layer.log(IDebugLog.MappingEnd, ILayerStage.UPDATE);\n        return mappingResult;\n      });\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n\n    // remapping before render\n    layer.hooks.beforeRender.tap('DataMappingPlugin', () => {\n      const source = layer.getSource();\n      if (layer.layerModelNeedUpdate || !source || !source.inited) {\n        return;\n      }\n      const attributes = styleAttributeService.getLayerStyleAttributes() || [];\n      const filter = styleAttributeService.getLayerStyleAttribute('filter');\n      const {\n        dataArray\n      } = source.data;\n      // TODO 数据为空的情况\n      if (Array.isArray(dataArray) && dataArray.length === 0) {\n        return;\n      }\n      const attributesToRemapping = attributes.filter(attribute => attribute.needRemapping // 如果filter变化\n      );\n      let filterData = dataArray;\n      // 数据过滤完 再执行数据映射\n      if (filter !== null && filter !== void 0 && filter.needRemapping && filter !== null && filter !== void 0 && filter.scale) {\n        filterData = dataArray.filter(record => {\n          return this.applyAttributeMapping(filter, record)[0];\n        });\n      }\n      if (attributesToRemapping.length) {\n        // 过滤数据\n        const encodeData = this.mapping(layer, attributesToRemapping, filterData, layer.getEncodedData() // TODO 优化\n        );\n        layer.setEncodedData(encodeData);\n      }\n\n      // 处理文本更新，更新文字形状\n      // layer.emit('remapping', null);\n    });\n  }\n  generateMaping(layer, {\n    styleAttributeService\n  }) {\n    const attributes = styleAttributeService.getLayerStyleAttributes() || [];\n    const filter = styleAttributeService.getLayerStyleAttribute('filter');\n    const {\n      dataArray\n    } = layer.getSource().data;\n    let filterData = dataArray;\n    // 数据过滤完 再执行数据映射\n    if (filter !== null && filter !== void 0 && filter.scale) {\n      filterData = dataArray.filter(record => {\n        return this.applyAttributeMapping(filter, record)[0];\n      });\n    }\n    // Tip: layer 对数据做处理\n    // 数据处理 在数据进行 mapping 生成 encodeData 之前对数据进行处理\n    // 在各个 layer 中继承\n\n    filterData = layer.processData(filterData); // 目前只有简单线需要处理\n    const encodeData = this.mapping(layer, attributes, filterData, undefined);\n    layer.setEncodedData(encodeData);\n\n    // 对外暴露事件\n    layer.emit('dataUpdate', null);\n    return true;\n  }\n  mapping(layer, attributes, data, predata) {\n    const usedAttributes = attributes.filter(attribute => attribute.scale !== undefined).filter(attribute => attribute.name !== 'filter');\n    const mappedData = data.map((record, i) => {\n      const preRecord = predata ? predata[i] : {};\n      const encodeRecord = _objectSpread({\n        id: record._id,\n        coordinates: record.coordinates\n      }, preRecord);\n      usedAttributes.forEach(attribute => {\n        let values = this.applyAttributeMapping(attribute, record);\n        // TODO: 支持每个属性配置 postprocess}\n        if (attribute.name === 'color' || attribute.name === 'stroke') {\n          values = values.map(c => {\n            return rgb2arr(c);\n          });\n        }\n        // @ts-ignore\n        encodeRecord[attribute.name] = Array.isArray(values) && values.length === 1 ? values[0] : values;\n\n        // 增加对 layer/text/iconfont unicode 映射的解析\n        if (attribute.name === 'shape') {\n          encodeRecord.shape = this.fontService.getIconFontKey(encodeRecord[attribute.name]);\n        }\n      });\n      return encodeRecord;\n    });\n    attributes.forEach(attribute => {\n      attribute.needRemapping = false;\n    });\n\n    // 调整数据兼容 SimpleCoordinates\n    this.adjustData2SimpleCoordinates(mappedData);\n    return mappedData;\n  }\n  adjustData2SimpleCoordinates(mappedData) {\n    if (mappedData.length > 0 && this.mapService.version === 'SIMPLE') {\n      mappedData.map(d => {\n        if (!d.simpleCoordinate) {\n          d.coordinates = this.unProjectCoordinates(d.coordinates);\n          d.simpleCoordinate = true;\n        }\n      });\n    }\n  }\n  unProjectCoordinates(coordinates) {\n    if (typeof coordinates[0] === 'number') {\n      return this.mapService.simpleMapCoord.unproject(coordinates);\n    }\n    if (coordinates[0] && coordinates[0][0] instanceof Array) {\n      // @ts-ignore\n      const coords = [];\n      coordinates.map(coord => {\n        // @ts-ignore\n        const c1 = [];\n        coord.map(co => {\n          c1.push(this.mapService.simpleMapCoord.unproject(co));\n        });\n        // @ts-ignore\n        coords.push(c1);\n      });\n      // @ts-ignore\n      return coords;\n    } else {\n      // @ts-ignore\n      const coords = [];\n      // @ts-ignore\n      coordinates.map(coord => {\n        coords.push(this.mapService.simpleMapCoord.unproject(coord));\n      });\n      // @ts-ignore\n      return coords;\n    }\n  }\n  applyAttributeMapping(attribute, record) {\n    var _attribute$scale;\n    if (!attribute.scale) {\n      return [];\n    }\n    const scalers = (attribute === null || attribute === void 0 || (_attribute$scale = attribute.scale) === null || _attribute$scale === void 0 ? void 0 : _attribute$scale.scalers) || [];\n    const params = [];\n    scalers.forEach(({\n      field\n    }) => {\n      var _attribute$scale2;\n      if (record.hasOwnProperty(field) || ((_attribute$scale2 = attribute.scale) === null || _attribute$scale2 === void 0 ? void 0 : _attribute$scale2.type) === 'variable') {\n        // TODO:多字段，常量\n        params.push(record[field]);\n      }\n    });\n    const mappingResult = attribute.mapping ? attribute.mapping(params) : [];\n    return mappingResult;\n    // return attribute.mapping ? attribute.mapping(params) : [];\n  }\n  getArrowPoints(p1, p2) {\n    const dir = [p2[0] - p1[0], p2[1] - p1[1]];\n    const normalizeDir = normalize(dir);\n    const arrowPoint = [p1[0] + normalizeDir[0] * 0.0001, p1[1] + normalizeDir[1] * 0.0001];\n    return arrowPoint;\n  }\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}