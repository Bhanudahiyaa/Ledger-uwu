{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _primitiveMap, _depthFuncMap, _blendEquationMap, _blendFuncMap, _formatMap, _filterMap, _wrapModeMap;\nimport { gl } from '@antv/g-webgpu-core';\nimport * as WebGPUConstants from '@webgpu/types/dist/constants'; // WebGPU 不支持 LINE_LOOP & TRIANGLE_FAN\n\nexport var primitiveMap = (_primitiveMap = {}, _defineProperty(_primitiveMap, gl.POINTS, WebGPUConstants.PrimitiveTopology.PointList), _defineProperty(_primitiveMap, gl.LINES, WebGPUConstants.PrimitiveTopology.LineList), _defineProperty(_primitiveMap, gl.LINE_LOOP, WebGPUConstants.PrimitiveTopology.LineList), _defineProperty(_primitiveMap, gl.LINE_STRIP, WebGPUConstants.PrimitiveTopology.LineStrip), _defineProperty(_primitiveMap, gl.TRIANGLES, WebGPUConstants.PrimitiveTopology.TriangleList), _defineProperty(_primitiveMap, gl.TRIANGLE_FAN, WebGPUConstants.PrimitiveTopology.TriangleList), _defineProperty(_primitiveMap, gl.TRIANGLE_STRIP, WebGPUConstants.PrimitiveTopology.TriangleStrip), _primitiveMap);\nexport var depthFuncMap = (_depthFuncMap = {}, _defineProperty(_depthFuncMap, gl.NEVER, WebGPUConstants.CompareFunction.Never), _defineProperty(_depthFuncMap, gl.ALWAYS, WebGPUConstants.CompareFunction.Always), _defineProperty(_depthFuncMap, gl.LESS, WebGPUConstants.CompareFunction.Less), _defineProperty(_depthFuncMap, gl.LEQUAL, WebGPUConstants.CompareFunction.LessEqual), _defineProperty(_depthFuncMap, gl.GREATER, WebGPUConstants.CompareFunction.Greater), _defineProperty(_depthFuncMap, gl.GEQUAL, WebGPUConstants.CompareFunction.GreaterEqual), _defineProperty(_depthFuncMap, gl.EQUAL, WebGPUConstants.CompareFunction.Equal), _defineProperty(_depthFuncMap, gl.NOTEQUAL, WebGPUConstants.CompareFunction.NotEqual), _depthFuncMap);\nexport var blendEquationMap = (_blendEquationMap = {}, _defineProperty(_blendEquationMap, gl.FUNC_ADD, WebGPUConstants.BlendOperation.Add), _defineProperty(_blendEquationMap, gl.MIN_EXT, WebGPUConstants.BlendOperation.Min), _defineProperty(_blendEquationMap, gl.MAX_EXT, WebGPUConstants.BlendOperation.Max), _defineProperty(_blendEquationMap, gl.FUNC_SUBTRACT, WebGPUConstants.BlendOperation.Subtract), _defineProperty(_blendEquationMap, gl.FUNC_REVERSE_SUBTRACT, WebGPUConstants.BlendOperation.ReverseSubtract), _blendEquationMap); // @see https://gpuweb.github.io/gpuweb/#blend-state\n// 不支持 'constant alpha' 和 'one minus constant alpha'\n\nexport var blendFuncMap = (_blendFuncMap = {}, _defineProperty(_blendFuncMap, gl.ZERO, WebGPUConstants.BlendFactor.Zero), _defineProperty(_blendFuncMap, gl.ONE, WebGPUConstants.BlendFactor.One), _defineProperty(_blendFuncMap, gl.SRC_COLOR, WebGPUConstants.BlendFactor.SrcColor), _defineProperty(_blendFuncMap, gl.ONE_MINUS_SRC_COLOR, WebGPUConstants.BlendFactor.OneMinusSrcColor), _defineProperty(_blendFuncMap, gl.SRC_ALPHA, WebGPUConstants.BlendFactor.SrcAlpha), _defineProperty(_blendFuncMap, gl.ONE_MINUS_SRC_ALPHA, WebGPUConstants.BlendFactor.OneMinusSrcAlpha), _defineProperty(_blendFuncMap, gl.DST_COLOR, WebGPUConstants.BlendFactor.DstColor), _defineProperty(_blendFuncMap, gl.ONE_MINUS_DST_COLOR, WebGPUConstants.BlendFactor.OneMinusDstColor), _defineProperty(_blendFuncMap, gl.DST_ALPHA, WebGPUConstants.BlendFactor.DstAlpha), _defineProperty(_blendFuncMap, gl.ONE_MINUS_DST_ALPHA, WebGPUConstants.BlendFactor.OneMinusDstAlpha), _defineProperty(_blendFuncMap, gl.CONSTANT_COLOR, WebGPUConstants.BlendFactor.BlendColor), _defineProperty(_blendFuncMap, gl.ONE_MINUS_CONSTANT_COLOR, WebGPUConstants.BlendFactor.OneMinusBlendColor), _defineProperty(_blendFuncMap, gl.SRC_ALPHA_SATURATE, WebGPUConstants.BlendFactor.SrcAlphaSaturated), _blendFuncMap); // @see https://gpuweb.github.io/gpuweb/#texture-formats\n\nexport var formatMap = (_formatMap = {}, _defineProperty(_formatMap, gl.ALPHA, 'r8unorm'), _defineProperty(_formatMap, gl.RGBA, 'rgba8unorm'), _defineProperty(_formatMap, gl.DEPTH_COMPONENT, 'depth32float'), _defineProperty(_formatMap, gl.DEPTH_STENCIL, 'depth24plus-stencil8'), _formatMap); // @see https://gpuweb.github.io/gpuweb/#enumdef-gpufiltermode\n\nexport var filterMap = (_filterMap = {}, _defineProperty(_filterMap, gl.NEAREST, 'nearest'), _defineProperty(_filterMap, gl.LINEAR, 'linear'), _filterMap); // @see https://gpuweb.github.io/gpuweb/#enumdef-gpuaddressmode\n\nexport var wrapModeMap = (_wrapModeMap = {}, _defineProperty(_wrapModeMap, gl.REPEAT, 'repeat'), _defineProperty(_wrapModeMap, gl.CLAMP_TO_EDGE, 'clamp-to-edge'), _defineProperty(_wrapModeMap, gl.MIRRORED_REPEAT, 'mirror-repeat'), _wrapModeMap);\nexport function getCullMode(_ref) {\n  var cull = _ref.cull;\n  if (!cull || !cull.enable) {\n    return WebGPUConstants.CullMode.None;\n  }\n  if (cull.face) {\n    return cull.face === gl.FRONT ? WebGPUConstants.CullMode.Front : WebGPUConstants.CullMode.Back;\n  }\n}\nexport function getDepthStencilStateDescriptor(_ref2) {\n  var depth = _ref2.depth,\n    stencil = _ref2.stencil;\n  // TODO: stencil\n  var stencilFrontBack = {\n    compare: WebGPUConstants.CompareFunction.Always,\n    depthFailOp: WebGPUConstants.StencilOperation.Keep,\n    failOp: WebGPUConstants.StencilOperation.Keep,\n    passOp: WebGPUConstants.StencilOperation.Keep\n  };\n  return {\n    depthWriteEnabled: depth && depth.enable,\n    depthCompare: depthFuncMap[(depth === null || depth === void 0 ? void 0 : depth.func) || gl.ALWAYS],\n    format: WebGPUConstants.TextureFormat.Depth24PlusStencil8,\n    stencilFront: stencilFrontBack,\n    stencilBack: stencilFrontBack,\n    stencilReadMask: 0xffffffff,\n    stencilWriteMask: 0xffffffff\n  };\n}\n/**\n * @see https://gpuweb.github.io/gpuweb/#color-state\n */\n\nexport function getColorStateDescriptors(_ref3, swapChainFormat) {\n  var blend = _ref3.blend;\n  return [{\n    format: swapChainFormat,\n    // https://gpuweb.github.io/gpuweb/#blend-state\n    alphaBlend: {\n      srcFactor: blendFuncMap[blend && blend.func && blend.func.srcAlpha || gl.ONE],\n      dstFactor: blendFuncMap[blend && blend.func && blend.func.dstAlpha || gl.ZERO],\n      operation: blendEquationMap[blend && blend.equation && blend.equation.alpha || gl.FUNC_ADD]\n    },\n    colorBlend: {\n      srcFactor: blendFuncMap[blend && blend.func && blend.func.srcRGB || gl.ONE],\n      dstFactor: blendFuncMap[blend && blend.func && blend.func.dstRGB || gl.ZERO],\n      operation: blendEquationMap[blend && blend.equation && blend.equation.rgb || gl.FUNC_ADD]\n    },\n    writeMask: WebGPUConstants.ColorWrite.All\n  }];\n}","map":{"version":3,"names":["gl","WebGPUConstants","primitiveMap","_primitiveMap","_defineProperty","POINTS","PrimitiveTopology","PointList","LINES","LineList","LINE_LOOP","LINE_STRIP","LineStrip","TRIANGLES","TriangleList","TRIANGLE_FAN","TRIANGLE_STRIP","TriangleStrip","depthFuncMap","_depthFuncMap","NEVER","CompareFunction","Never","ALWAYS","Always","LESS","Less","LEQUAL","LessEqual","GREATER","Greater","GEQUAL","GreaterEqual","EQUAL","Equal","NOTEQUAL","NotEqual","blendEquationMap","_blendEquationMap","FUNC_ADD","BlendOperation","Add","MIN_EXT","Min","MAX_EXT","Max","FUNC_SUBTRACT","Subtract","FUNC_REVERSE_SUBTRACT","ReverseSubtract","blendFuncMap","_blendFuncMap","ZERO","BlendFactor","Zero","ONE","One","SRC_COLOR","SrcColor","ONE_MINUS_SRC_COLOR","OneMinusSrcColor","SRC_ALPHA","SrcAlpha","ONE_MINUS_SRC_ALPHA","OneMinusSrcAlpha","DST_COLOR","DstColor","ONE_MINUS_DST_COLOR","OneMinusDstColor","DST_ALPHA","DstAlpha","ONE_MINUS_DST_ALPHA","OneMinusDstAlpha","CONSTANT_COLOR","BlendColor","ONE_MINUS_CONSTANT_COLOR","OneMinusBlendColor","SRC_ALPHA_SATURATE","SrcAlphaSaturated","formatMap","_formatMap","ALPHA","RGBA","DEPTH_COMPONENT","DEPTH_STENCIL","filterMap","_filterMap","NEAREST","LINEAR","wrapModeMap","_wrapModeMap","REPEAT","CLAMP_TO_EDGE","MIRRORED_REPEAT","getCullMode","_ref","cull","enable","CullMode","None","face","FRONT","Front","Back","getDepthStencilStateDescriptor","_ref2","depth","stencil","stencilFrontBack","compare","depthFailOp","StencilOperation","Keep","failOp","passOp","depthWriteEnabled","depthCompare","func","format","TextureFormat","Depth24PlusStencil8","stencilFront","stencilBack","stencilReadMask","stencilWriteMask","getColorStateDescriptors","_ref3","swapChainFormat","blend","alphaBlend","srcFactor","srcAlpha","dstFactor","dstAlpha","operation","equation","alpha","colorBlend","srcRGB","dstRGB","rgb","writeMask","ColorWrite","All"],"sources":["/Users/bhanudahiya/Desktop/ledger-IQ/node_modules/@antv/g-webgpu-engine/src/webgpu/constants.ts"],"sourcesContent":["import { gl, IModelInitializationOptions } from '@antv/g-webgpu-core';\nimport * as WebGPUConstants from '@webgpu/types/dist/constants';\n\n// WebGPU 不支持 LINE_LOOP & TRIANGLE_FAN\nexport const primitiveMap: {\n  [key: string]:\n    | WebGPUConstants.PrimitiveTopology.PointList\n    | WebGPUConstants.PrimitiveTopology.LineList\n    | WebGPUConstants.PrimitiveTopology.LineStrip\n    | WebGPUConstants.PrimitiveTopology.TriangleList\n    | WebGPUConstants.PrimitiveTopology.TriangleStrip;\n} = {\n  [gl.POINTS]: WebGPUConstants.PrimitiveTopology.PointList,\n  [gl.LINES]: WebGPUConstants.PrimitiveTopology.LineList,\n  [gl.LINE_LOOP]: WebGPUConstants.PrimitiveTopology.LineList,\n  [gl.LINE_STRIP]: WebGPUConstants.PrimitiveTopology.LineStrip,\n  [gl.TRIANGLES]: WebGPUConstants.PrimitiveTopology.TriangleList,\n  [gl.TRIANGLE_FAN]: WebGPUConstants.PrimitiveTopology.TriangleList,\n  [gl.TRIANGLE_STRIP]: WebGPUConstants.PrimitiveTopology.TriangleStrip,\n};\n\nexport const depthFuncMap: {\n  [key: string]:\n    | WebGPUConstants.CompareFunction.Never\n    | WebGPUConstants.CompareFunction.Always\n    | WebGPUConstants.CompareFunction.Less\n    | WebGPUConstants.CompareFunction.LessEqual\n    | WebGPUConstants.CompareFunction.Greater\n    | WebGPUConstants.CompareFunction.GreaterEqual\n    | WebGPUConstants.CompareFunction.Equal\n    | WebGPUConstants.CompareFunction.NotEqual;\n} = {\n  [gl.NEVER]: WebGPUConstants.CompareFunction.Never,\n  [gl.ALWAYS]: WebGPUConstants.CompareFunction.Always,\n  [gl.LESS]: WebGPUConstants.CompareFunction.Less,\n  [gl.LEQUAL]: WebGPUConstants.CompareFunction.LessEqual,\n  [gl.GREATER]: WebGPUConstants.CompareFunction.Greater,\n  [gl.GEQUAL]: WebGPUConstants.CompareFunction.GreaterEqual,\n  [gl.EQUAL]: WebGPUConstants.CompareFunction.Equal,\n  [gl.NOTEQUAL]: WebGPUConstants.CompareFunction.NotEqual,\n};\n\nexport const blendEquationMap: {\n  [key: string]:\n    | WebGPUConstants.BlendOperation.Add\n    | WebGPUConstants.BlendOperation.Min\n    | WebGPUConstants.BlendOperation.Max\n    | WebGPUConstants.BlendOperation.Subtract\n    | WebGPUConstants.BlendOperation.ReverseSubtract;\n} = {\n  [gl.FUNC_ADD]: WebGPUConstants.BlendOperation.Add,\n  [gl.MIN_EXT]: WebGPUConstants.BlendOperation.Min,\n  [gl.MAX_EXT]: WebGPUConstants.BlendOperation.Max,\n  [gl.FUNC_SUBTRACT]: WebGPUConstants.BlendOperation.Subtract,\n  [gl.FUNC_REVERSE_SUBTRACT]: WebGPUConstants.BlendOperation.ReverseSubtract,\n};\n\n// @see https://gpuweb.github.io/gpuweb/#blend-state\n// 不支持 'constant alpha' 和 'one minus constant alpha'\nexport const blendFuncMap: {\n  [key: string]:\n    | WebGPUConstants.BlendFactor.Zero\n    | WebGPUConstants.BlendFactor.One\n    | WebGPUConstants.BlendFactor.SrcColor\n    | WebGPUConstants.BlendFactor.OneMinusSrcColor\n    | WebGPUConstants.BlendFactor.SrcAlpha\n    | WebGPUConstants.BlendFactor.OneMinusSrcAlpha\n    | WebGPUConstants.BlendFactor.DstColor\n    | WebGPUConstants.BlendFactor.OneMinusDstColor\n    | WebGPUConstants.BlendFactor.DstAlpha\n    | WebGPUConstants.BlendFactor.OneMinusDstAlpha\n    | WebGPUConstants.BlendFactor.BlendColor\n    | WebGPUConstants.BlendFactor.OneMinusBlendColor\n    | WebGPUConstants.BlendFactor.SrcAlphaSaturated;\n} = {\n  [gl.ZERO]: WebGPUConstants.BlendFactor.Zero,\n  [gl.ONE]: WebGPUConstants.BlendFactor.One,\n  [gl.SRC_COLOR]: WebGPUConstants.BlendFactor.SrcColor,\n  [gl.ONE_MINUS_SRC_COLOR]: WebGPUConstants.BlendFactor.OneMinusSrcColor,\n  [gl.SRC_ALPHA]: WebGPUConstants.BlendFactor.SrcAlpha,\n  [gl.ONE_MINUS_SRC_ALPHA]: WebGPUConstants.BlendFactor.OneMinusSrcAlpha,\n  [gl.DST_COLOR]: WebGPUConstants.BlendFactor.DstColor,\n  [gl.ONE_MINUS_DST_COLOR]: WebGPUConstants.BlendFactor.OneMinusDstColor,\n  [gl.DST_ALPHA]: WebGPUConstants.BlendFactor.DstAlpha,\n  [gl.ONE_MINUS_DST_ALPHA]: WebGPUConstants.BlendFactor.OneMinusDstAlpha,\n  [gl.CONSTANT_COLOR]: WebGPUConstants.BlendFactor.BlendColor,\n  [gl.ONE_MINUS_CONSTANT_COLOR]: WebGPUConstants.BlendFactor.OneMinusBlendColor,\n  // [gl.CONSTANT_ALPHA]: WebGPUConstants.BlendFactor.'constant alpha',\n  // [gl.ONE_MINUS_CONSTANT_ALPHA]: WebGPUConstants.BlendFactor.'one minus constant alpha',\n  [gl.SRC_ALPHA_SATURATE]: WebGPUConstants.BlendFactor.SrcAlphaSaturated,\n};\n\n// @see https://gpuweb.github.io/gpuweb/#texture-formats\nexport const formatMap: {\n  [key: string]:\n    | 'r8unorm'\n    | 'rgba8unorm'\n    | 'depth32float'\n    | 'depth24plus-stencil8';\n} = {\n  [gl.ALPHA]: 'r8unorm',\n  [gl.RGBA]: 'rgba8unorm',\n  [gl.DEPTH_COMPONENT]: 'depth32float',\n  [gl.DEPTH_STENCIL]: 'depth24plus-stencil8',\n};\n\n// @see https://gpuweb.github.io/gpuweb/#enumdef-gpufiltermode\nexport const filterMap: {\n  [key: string]: 'nearest' | 'linear';\n} = {\n  [gl.NEAREST]: 'nearest',\n  [gl.LINEAR]: 'linear',\n};\n\n// @see https://gpuweb.github.io/gpuweb/#enumdef-gpuaddressmode\nexport const wrapModeMap: {\n  [key: string]: 'repeat' | 'clamp-to-edge' | 'mirror-repeat';\n} = {\n  [gl.REPEAT]: 'repeat',\n  [gl.CLAMP_TO_EDGE]: 'clamp-to-edge',\n  [gl.MIRRORED_REPEAT]: 'mirror-repeat',\n};\n\nexport function getCullMode({\n  cull,\n}: Pick<IModelInitializationOptions, 'cull'>):\n  | 'none'\n  | 'front'\n  | 'back'\n  | undefined {\n  if (!cull || !cull.enable) {\n    return WebGPUConstants.CullMode.None;\n  }\n\n  if (cull.face) {\n    return cull.face === gl.FRONT\n      ? WebGPUConstants.CullMode.Front\n      : WebGPUConstants.CullMode.Back;\n  }\n}\n\nexport function getDepthStencilStateDescriptor({\n  depth,\n  stencil,\n}: Pick<IModelInitializationOptions, 'depth' | 'stencil'>):\n  | GPUDepthStencilStateDescriptor\n  | undefined {\n  // TODO: stencil\n\n  const stencilFrontBack: GPUStencilStateFaceDescriptor = {\n    compare: WebGPUConstants.CompareFunction.Always,\n    depthFailOp: WebGPUConstants.StencilOperation.Keep,\n    failOp: WebGPUConstants.StencilOperation.Keep,\n    passOp: WebGPUConstants.StencilOperation.Keep,\n  };\n\n  return {\n    depthWriteEnabled: depth && depth.enable,\n    depthCompare: depthFuncMap[depth?.func || gl.ALWAYS],\n    format: WebGPUConstants.TextureFormat.Depth24PlusStencil8,\n    stencilFront: stencilFrontBack,\n    stencilBack: stencilFrontBack,\n    stencilReadMask: 0xffffffff,\n    stencilWriteMask: 0xffffffff,\n  };\n}\n\n/**\n * @see https://gpuweb.github.io/gpuweb/#color-state\n */\nexport function getColorStateDescriptors(\n  { blend }: Pick<IModelInitializationOptions, 'blend'>,\n  swapChainFormat: GPUTextureFormat,\n): GPUColorStateDescriptor[] {\n  return [\n    {\n      format: swapChainFormat,\n      // https://gpuweb.github.io/gpuweb/#blend-state\n      alphaBlend: {\n        srcFactor:\n          blendFuncMap[(blend && blend.func && blend.func.srcAlpha) || gl.ONE],\n        dstFactor:\n          blendFuncMap[(blend && blend.func && blend.func.dstAlpha) || gl.ZERO],\n        operation:\n          blendEquationMap[\n            (blend && blend.equation && blend.equation.alpha) || gl.FUNC_ADD\n          ],\n      },\n      colorBlend: {\n        srcFactor:\n          blendFuncMap[(blend && blend.func && blend.func.srcRGB) || gl.ONE],\n        dstFactor:\n          blendFuncMap[(blend && blend.func && blend.func.dstRGB) || gl.ZERO],\n        operation:\n          blendEquationMap[\n            (blend && blend.equation && blend.equation.rgb) || gl.FUNC_ADD\n          ],\n      },\n      writeMask: WebGPUConstants.ColorWrite.All,\n    },\n  ];\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}