{"ast":null,"code":"import { __awaiter, __decorate, __metadata } from \"tslib\";\nimport { inject, injectable } from 'mana-syringe';\nimport { ICommandHandler, ICommandContextProvider } from '../../command/interface';\nimport { XFlowGroupCommands } from '../constant';\nimport { Disposable } from '../../common/disposable';\nimport { XFlowNodeCommands } from '../constant';\nexport var NsDelGroup;\n(function (NsDelGroup) {\n  /** Command: 用于注册named factory */\n  NsDelGroup.command = XFlowGroupCommands.DEL_GROUP;\n  /** hookName */\n  NsDelGroup.hookKey = 'delGroup';\n})(NsDelGroup || (NsDelGroup = {}));\nlet DelGroupCommand = class DelGroupCommand {\n  constructor() {\n    /** 执行Cmd */\n    this.execute = () => __awaiter(this, void 0, void 0, function* () {\n      const ctx = this.contextProvider();\n      const {\n        args,\n        hooks: runtimeHook\n      } = ctx.getArgs();\n      const hooks = ctx.getHooks();\n      const result = yield hooks.delGroup.call(args, handlerArgs => __awaiter(this, void 0, void 0, function* () {\n        const graph = yield ctx.getX6Graph();\n        const {\n          nodeConfig,\n          commandService,\n          deleteService: deleteGroupService\n        } = handlerArgs;\n        const {\n          id\n        } = nodeConfig;\n        const node = graph.getCellById(id);\n        if (deleteGroupService) {\n          const canDel = yield deleteGroupService(handlerArgs);\n          if (!canDel) return {\n            err: 'service rejected'\n          };\n        }\n        if (!node) {\n          return {\n            err: 'target node is not exist'\n          };\n        }\n        // 不是Group的节点不能解散\n        if (node.getProp('isGroup') !== true) {\n          return {\n            err: 'target node is not group'\n          };\n        }\n        const {\n          isCollapsed\n        } = node.getData();\n        if (isCollapsed) {\n          yield commandService.executeCommand(XFlowGroupCommands.COLLAPSE_GROUP.id, {\n            nodeId: node.id,\n            isCollapsed: false,\n            collapsedSize: {\n              width: 0,\n              height: 0\n            }\n          });\n        }\n        const childrens = node.getChildren();\n        if (childrens) {\n          childrens.forEach(child => {\n            node.unembed(child);\n            child.prop('group', '');\n            child.setData(Object.assign(Object.assign({}, child.getData()), {\n              group: ''\n            }));\n          });\n        }\n        yield commandService.executeCommand(XFlowNodeCommands.DEL_NODE.id, {\n          nodeConfig\n        });\n        /** add undo: delete node */\n        ctx.addUndo(Disposable.create(() => __awaiter(this, void 0, void 0, function* () {\n          commandService.executeCommand(XFlowGroupCommands.ADD_GROUP.id, {\n            nodeConfig\n          });\n        })));\n        return {\n          err: null\n        };\n      }), runtimeHook);\n      ctx.setResult(result);\n      return this;\n    });\n    /** undo cmd */\n    this.undo = () => __awaiter(this, void 0, void 0, function* () {\n      const ctx = this.contextProvider();\n      if (this.isUndoable()) {\n        ctx.undo();\n      }\n      return this;\n    });\n    /** redo cmd */\n    this.redo = () => __awaiter(this, void 0, void 0, function* () {\n      if (!this.isUndoable()) {\n        yield this.execute();\n      }\n      return this;\n    });\n  }\n  isUndoable() {\n    const ctx = this.contextProvider();\n    return ctx.isUndoable();\n  }\n};\n__decorate([inject(ICommandContextProvider), __metadata(\"design:type\", Object)], DelGroupCommand.prototype, \"contextProvider\", void 0);\nDelGroupCommand = __decorate([injectable({\n  token: {\n    token: ICommandHandler,\n    named: NsDelGroup.command.id\n  }\n})\n/** 创建节点命令 */], DelGroupCommand);\nexport { DelGroupCommand };","map":{"version":3,"names":["inject","injectable","ICommandHandler","ICommandContextProvider","XFlowGroupCommands","Disposable","XFlowNodeCommands","NsDelGroup","command","DEL_GROUP","hookKey","DelGroupCommand","constructor","execute","__awaiter","ctx","contextProvider","args","hooks","runtimeHook","getArgs","getHooks","result","delGroup","call","handlerArgs","graph","getX6Graph","nodeConfig","commandService","deleteService","deleteGroupService","id","node","getCellById","canDel","err","getProp","isCollapsed","getData","executeCommand","COLLAPSE_GROUP","nodeId","collapsedSize","width","height","childrens","getChildren","forEach","child","unembed","prop","setData","Object","assign","group","DEL_NODE","addUndo","create","ADD_GROUP","setResult","undo","isUndoable","redo","__decorate","token","named"],"sources":["../../../src/command-contributions/group/group-del.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}