{"ast":null,"code":"// src/tileset-manager/utils/strategies.ts\nvar TILE_STATE_DEFAULT = 0;\nvar TILE_STATE_VISITED = 1;\nvar TILE_STATE_VISIBLE = 2;\nfunction updateTileStateRealtime(tiles) {\n  tiles.forEach(tile => {\n    if (tile.isCurrent) {\n      tile.isVisible = tile.isLoaded;\n    }\n  });\n}\nfunction updateTileStateOverlap(tiles) {\n  tiles.forEach(tile => {\n    tile.properties.state = TILE_STATE_DEFAULT;\n  });\n  tiles.forEach(tile => {\n    if (tile.isCurrent && !getPlaceholderInAncestors(tile)) {\n      getPlaceholderInChildren(tile);\n    }\n  });\n  tiles.forEach(tile => {\n    tile.isVisible = Boolean(tile.properties.state & TILE_STATE_VISIBLE);\n  });\n}\nfunction updateTileStateReplace(tiles) {\n  tiles.forEach(tile => {\n    tile.properties.state = TILE_STATE_DEFAULT;\n  });\n  tiles.forEach(tile => {\n    if (tile.isCurrent) {\n      getPlaceholderInAncestors(tile);\n    }\n  });\n  const sortedTiles = tiles.slice().sort((t1, t2) => t1.z - t2.z);\n  sortedTiles.forEach(tile => {\n    tile.isVisible = Boolean(tile.properties.state & TILE_STATE_VISIBLE);\n    if (tile.children.length && (tile.isVisible || tile.properties.state & TILE_STATE_VISITED)) {\n      tile.children.forEach(child => {\n        child.properties.state = TILE_STATE_VISITED;\n      });\n    } else if (tile.isCurrent) {\n      getPlaceholderInChildren(tile);\n    }\n  });\n}\nfunction getPlaceholderInAncestors(tile) {\n  while (tile) {\n    if (tile.isLoaded) {\n      tile.properties.state |= TILE_STATE_VISIBLE;\n      return true;\n    }\n    tile = tile.parent;\n  }\n  return false;\n}\nfunction getPlaceholderInChildren(tile) {\n  tile.children.forEach(child => {\n    if (child.isLoaded) {\n      child.properties.state |= TILE_STATE_VISIBLE;\n    } else {\n      getPlaceholderInChildren(child);\n    }\n  });\n}\nexport { updateTileStateOverlap, updateTileStateRealtime, updateTileStateReplace };","map":{"version":3,"names":["TILE_STATE_DEFAULT","TILE_STATE_VISITED","TILE_STATE_VISIBLE","updateTileStateRealtime","tiles","forEach","tile","isCurrent","isVisible","isLoaded","updateTileStateOverlap","properties","state","getPlaceholderInAncestors","getPlaceholderInChildren","Boolean","updateTileStateReplace","sortedTiles","slice","sort","t1","t2","z","children","length","child","parent"],"sources":["/Users/bhanudahiya/Desktop/ledger-IQ/node_modules/@antv/l7-utils/es/tileset-manager/utils/strategies.js"],"sourcesContent":["// src/tileset-manager/utils/strategies.ts\nvar TILE_STATE_DEFAULT = 0;\nvar TILE_STATE_VISITED = 1;\nvar TILE_STATE_VISIBLE = 2;\nfunction updateTileStateRealtime(tiles) {\n  tiles.forEach((tile) => {\n    if (tile.isCurrent) {\n      tile.isVisible = tile.isLoaded;\n    }\n  });\n}\nfunction updateTileStateOverlap(tiles) {\n  tiles.forEach((tile) => {\n    tile.properties.state = TILE_STATE_DEFAULT;\n  });\n  tiles.forEach((tile) => {\n    if (tile.isCurrent && !getPlaceholderInAncestors(tile)) {\n      getPlaceholderInChildren(tile);\n    }\n  });\n  tiles.forEach((tile) => {\n    tile.isVisible = Boolean(tile.properties.state & TILE_STATE_VISIBLE);\n  });\n}\nfunction updateTileStateReplace(tiles) {\n  tiles.forEach((tile) => {\n    tile.properties.state = TILE_STATE_DEFAULT;\n  });\n  tiles.forEach((tile) => {\n    if (tile.isCurrent) {\n      getPlaceholderInAncestors(tile);\n    }\n  });\n  const sortedTiles = tiles.slice().sort((t1, t2) => t1.z - t2.z);\n  sortedTiles.forEach((tile) => {\n    tile.isVisible = Boolean(tile.properties.state & TILE_STATE_VISIBLE);\n    if (tile.children.length && (tile.isVisible || tile.properties.state & TILE_STATE_VISITED)) {\n      tile.children.forEach((child) => {\n        child.properties.state = TILE_STATE_VISITED;\n      });\n    } else if (tile.isCurrent) {\n      getPlaceholderInChildren(tile);\n    }\n  });\n}\nfunction getPlaceholderInAncestors(tile) {\n  while (tile) {\n    if (tile.isLoaded) {\n      tile.properties.state |= TILE_STATE_VISIBLE;\n      return true;\n    }\n    tile = tile.parent;\n  }\n  return false;\n}\nfunction getPlaceholderInChildren(tile) {\n  tile.children.forEach((child) => {\n    if (child.isLoaded) {\n      child.properties.state |= TILE_STATE_VISIBLE;\n    } else {\n      getPlaceholderInChildren(child);\n    }\n  });\n}\nexport {\n  updateTileStateOverlap,\n  updateTileStateRealtime,\n  updateTileStateReplace\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}