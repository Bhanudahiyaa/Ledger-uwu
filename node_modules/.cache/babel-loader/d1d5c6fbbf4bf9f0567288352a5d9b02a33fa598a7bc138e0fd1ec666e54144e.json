{"ast":null,"code":"import { __awaiter, __decorate, __metadata } from \"tslib\";\nimport { inject, injectable } from 'mana-syringe';\nimport { ICommandHandler, ICommandContextProvider } from '../../command/interface';\nimport { HookHub } from '@antv/xflow-hook';\nimport { XFlowNodeCommands } from '../constant';\nimport { Disposable } from '../../common/disposable';\nexport var NsMoveNode;\n(function (NsMoveNode) {\n  /** Command: 用于注册named factory */\n  NsMoveNode.command = XFlowNodeCommands.MOVE_NODE;\n  /** hookName */\n  NsMoveNode.hookKey = 'moveNode';\n  /** 创建 hook */\n  NsMoveNode.createHook = () => {\n    return new HookHub();\n  };\n})(NsMoveNode || (NsMoveNode = {}));\nlet MoveNodeCommand = class MoveNodeCommand {\n  constructor() {\n    /** 执行Cmd */\n    this.execute = () => __awaiter(this, void 0, void 0, function* () {\n      const ctx = this.contextProvider();\n      const {\n        args,\n        hooks: runtimeHook\n      } = ctx.getArgs();\n      const hooks = ctx.getHooks();\n      const result = yield hooks.moveNode.call(args, handlerArgs => __awaiter(this, void 0, void 0, function* () {\n        const {\n          nodePositionService\n        } = handlerArgs;\n        /** nodePositionService 返回false时不更新position */\n        if (nodePositionService) {\n          const canMove = yield nodePositionService(handlerArgs);\n          if (!canMove) return {\n            err: 'service rejected'\n          };\n        }\n        const {\n          dx = 0,\n          dy = 0,\n          x,\n          y,\n          duration = 150\n        } = handlerArgs.position;\n        const x6Graph = yield ctx.getX6Graph();\n        const node = x6Graph.getCellById(handlerArgs.id);\n        if (node) {\n          let nextX = x;\n          let nextY = y;\n          const {\n            x: preX,\n            y: preY\n          } = node.position();\n          let undo = () => {\n            node.position(preX, preY, {\n              silent: false\n            });\n          };\n          if (dx || dy) {\n            nextX = dx + preX;\n            nextY = dy + preY;\n            node.translate(dx, dy, {\n              transition: {\n                duration\n              }\n            });\n            undo = () => node.translate(-dx, -dy, {\n              transition: {\n                duration\n              }\n            });\n          } else {\n            node.position(nextX, nextY, {\n              silent: false\n            });\n          }\n          /** add undo  */\n          ctx.addUndo(Disposable.create(() => {\n            undo();\n          }));\n          return {\n            err: null,\n            nextX,\n            nextY\n          };\n        }\n      }), runtimeHook);\n      ctx.setResult(result);\n      return this;\n    });\n    /** undo cmd */\n    this.undo = () => __awaiter(this, void 0, void 0, function* () {\n      const ctx = this.contextProvider();\n      if (this.isUndoable()) {\n        ctx.undo();\n      }\n      return this;\n    });\n    /** redo cmd */\n    this.redo = () => __awaiter(this, void 0, void 0, function* () {\n      if (!this.isUndoable()) {\n        yield this.execute();\n      }\n      return this;\n    });\n  }\n  isUndoable() {\n    const ctx = this.contextProvider();\n    return ctx.isUndoable();\n  }\n};\n__decorate([inject(ICommandContextProvider), __metadata(\"design:type\", Object)], MoveNodeCommand.prototype, \"contextProvider\", void 0);\nMoveNodeCommand = __decorate([injectable({\n  token: {\n    token: ICommandHandler,\n    named: NsMoveNode.command.id\n  }\n})\n/** 创建节点命令 */], MoveNodeCommand);\nexport { MoveNodeCommand };","map":{"version":3,"names":["inject","injectable","ICommandHandler","ICommandContextProvider","HookHub","XFlowNodeCommands","Disposable","NsMoveNode","command","MOVE_NODE","hookKey","createHook","MoveNodeCommand","constructor","execute","__awaiter","ctx","contextProvider","args","hooks","runtimeHook","getArgs","getHooks","result","moveNode","call","handlerArgs","nodePositionService","canMove","err","dx","dy","x","y","duration","position","x6Graph","getX6Graph","node","getCellById","id","nextX","nextY","preX","preY","undo","silent","translate","transition","addUndo","create","setResult","isUndoable","redo","__decorate","token","named"],"sources":["../../../src/command-contributions/node/node-move.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}