{"ast":null,"code":"import { pick } from '@antv/util';\nimport { Plot } from '../../core/plot';\nimport { DEFAULT_OPTIONS } from './constants';\nimport { HeatmapLayer } from '../../layers/heatmap-layer';\nimport { LayerGroup } from '../../core/layer/layer-group';\nexport class Heatmap extends Plot {\n  constructor() {\n    super(...arguments);\n    /**\n     * 地图类型\n     */\n    this.type = Plot.PlotType.Heatmap;\n  }\n  /**\n   * 获取默认配置\n   */\n  getDefaultOptions() {\n    return Heatmap.DefaultOptions;\n  }\n  /**\n   * 创建图层\n   */\n  createLayers(source) {\n    this.heatmapLayer = new HeatmapLayer(Object.assign({\n      source\n    }, pick(this.options, HeatmapLayer.LayerOptionsKeys)));\n    const layerGroup = new LayerGroup([this.heatmapLayer]);\n    if (this.options.label) {\n      this.labelLayer = this.createLabelLayer(this.source, this.options.label, this.options);\n      layerGroup.addLayer(this.labelLayer);\n    }\n    return layerGroup;\n  }\n  /**\n   * 更新图层\n   */\n  updateLayers(options) {\n    const heatMapLayerConfig = pick(options, HeatmapLayer.LayerOptionsKeys);\n    this.heatmapLayer.update(heatMapLayerConfig);\n    this.updateLabelLayer(this.source, options.label, this.options, this.labelLayer);\n  }\n  /**\n   * 实现 legend 配置项\n   */\n  getLegendOptions() {\n    var _a;\n    const sizeLegendItems = this.heatmapLayer.layer.getLegendItems('size');\n    if (Array.isArray(sizeLegendItems) && sizeLegendItems.length !== 0) {\n      const min = sizeLegendItems[0].value;\n      const max = sizeLegendItems[sizeLegendItems.length - 1].value;\n      const colors = (_a = this.heatmapLayer.options.style) === null || _a === void 0 ? void 0 : _a.colorsRamp.map(({\n        color\n      }) => color);\n      return {\n        type: 'continue',\n        min,\n        max,\n        colors\n      };\n    }\n    return {};\n  }\n}\n/**\n * 默认配置项\n */\nHeatmap.DefaultOptions = DEFAULT_OPTIONS;","map":{"version":3,"names":["pick","Plot","DEFAULT_OPTIONS","HeatmapLayer","LayerGroup","Heatmap","constructor","type","PlotType","getDefaultOptions","DefaultOptions","createLayers","source","heatmapLayer","Object","assign","options","LayerOptionsKeys","layerGroup","label","labelLayer","createLabelLayer","addLayer","updateLayers","heatMapLayerConfig","update","updateLabelLayer","getLegendOptions","sizeLegendItems","layer","getLegendItems","Array","isArray","length","min","value","max","colors","_a","style","colorsRamp","map","color"],"sources":["../../../../src/plots/heatmap/index.ts"],"sourcesContent":[null],"mappings":"AAAA,SAASA,IAAI,QAAQ,YAAY;AACjC,SAASC,IAAI,QAAQ,iBAAiB;AAEtC,SAASC,eAAe,QAAQ,aAAa;AAG7C,SAASC,YAAY,QAAQ,4BAA4B;AACzD,SAASC,UAAU,QAAQ,8BAA8B;AAIzD,OAAM,MAAOC,OAAQ,SAAQJ,IAAoB;EAAjDK,YAAA;;IAME;;;IAGO,KAAAC,IAAI,GAAGN,IAAI,CAACO,QAAQ,CAACH,OAAO;EA8DrC;EAlDE;;;EAGUI,iBAAiBA,CAAA;IACzB,OAAOJ,OAAO,CAACK,cAAc;EAC/B;EAEA;;;EAGUC,YAAYA,CAACC,MAAc;IACnC,IAAI,CAACC,YAAY,GAAG,IAAIV,YAAY,CAAAW,MAAA,CAAAC,MAAA;MAClCH;IAAM,GACHZ,IAAI,CAAM,IAAI,CAACgB,OAAO,EAAEb,YAAY,CAACc,gBAAgB,CAAC,EACzD;IACF,MAAMC,UAAU,GAAG,IAAId,UAAU,CAAC,CAAC,IAAI,CAACS,YAAY,CAAC,CAAC;IAEtD,IAAI,IAAI,CAACG,OAAO,CAACG,KAAK,EAAE;MACtB,IAAI,CAACC,UAAU,GAAG,IAAI,CAACC,gBAAgB,CAAC,IAAI,CAACT,MAAM,EAAE,IAAI,CAACI,OAAO,CAACG,KAAK,EAAE,IAAI,CAACH,OAAO,CAAC;MACtFE,UAAU,CAACI,QAAQ,CAAC,IAAI,CAACF,UAAU,CAAC;IACtC;IAEA,OAAOF,UAAU;EACnB;EAEA;;;EAGUK,YAAYA,CAACP,OAAuB;IAC5C,MAAMQ,kBAAkB,GAAGxB,IAAI,CAAMgB,OAAO,EAAEb,YAAY,CAACc,gBAAgB,CAAC;IAC5E,IAAI,CAACJ,YAAY,CAACY,MAAM,CAACD,kBAAkB,CAAC;IAE5C,IAAI,CAACE,gBAAgB,CAAC,IAAI,CAACd,MAAM,EAAEI,OAAO,CAACG,KAAK,EAAE,IAAI,CAACH,OAAO,EAAE,IAAI,CAACI,UAAU,CAAC;EAClF;EAEA;;;EAGOO,gBAAgBA,CAAA;;IACrB,MAAMC,eAAe,GAAG,IAAI,CAACf,YAAY,CAACgB,KAAK,CAACC,cAAc,CAAC,MAAM,CAAC;IACtE,IAAIC,KAAK,CAACC,OAAO,CAACJ,eAAe,CAAC,IAAIA,eAAe,CAACK,MAAM,KAAK,CAAC,EAAE;MAClE,MAAMC,GAAG,GAAGN,eAAe,CAAC,CAAC,CAAC,CAACO,KAAe;MAC9C,MAAMC,GAAG,GAAGR,eAAe,CAACA,eAAe,CAACK,MAAM,GAAG,CAAC,CAAC,CAACE,KAAe;MACvE,MAAME,MAAM,GAAG,CAAAC,EAAA,OAAI,CAACzB,YAAY,CAACG,OAAO,CAACuB,KAAK,cAAAD,EAAA,uBAAAA,EAAA,CAAEE,UAAU,CAACC,GAAG,CAAC,CAAC;QAAEC;MAAK,CAAE,KAAKA,KAAK,CAAC;MAEpF,OAAO;QAAEnC,IAAI,EAAE,UAAU;QAAE2B,GAAG;QAAEE,GAAG;QAAEC;MAAM,CAAE;IAC/C;IAEA,OAAO,EAAE;EACX;;AArEA;;;AAGOhC,OAAA,CAAAK,cAAc,GAAGR,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}