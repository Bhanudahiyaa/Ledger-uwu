{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport React from 'react';\nimport { RxModel, NsModel } from './rx-model';\n/** 判断model是否Mount */\nconst isRefMounted = ref => {\n  return ref && ref.current;\n};\n/** 用于判断model是否Mount */\nexport const useIsMountedRef = () => {\n  /** 记录当前组件的加载状态 */\n  const ref = React.useRef(true);\n  React.useEffect(() => {\n    return () => {\n      ref.current = false;\n    };\n  }, []);\n  return ref;\n};\n/** 判断model是否Mount */\nexport const useModel = model => {\n  /** 记录当前组件的加载状态 */\n  const ref = useIsMountedRef();\n  const [state, setState] = React.useState(model.getValue());\n  React.useEffect(() => {\n    const disposeable = model.watch(val => {\n      if (isRefMounted(ref)) {\n        setState(val);\n      }\n    });\n    return () => {\n      disposeable.dispose();\n    };\n    /* eslint-disable-next-line  */\n  }, [setState]);\n  const value = state;\n  const canRender = NsModel.isValidValue(value);\n  const setValue = React.useCallback(val => model.setValue(val), [model]);\n  return [value, setValue, canRender];\n};\n/** 在组件内部新建一个model */\nexport const createComponentModel = initialState => {\n  /* eslint-disable-next-line  */\n  const model = React.useMemo(() => new RxModel(initialState), []);\n  /** model 和 state 绑定触发view刷新 */\n  /* eslint-disable-next-line  */\n  const [modelValue, setModelValue, canRender] = useModel(model);\n  /** unMount时dispose */\n  /* eslint-disable-next-line  */\n  React.useEffect(() => {\n    return () => {\n      model.dispose();\n    };\n  }, [model]);\n  return [modelValue, setModelValue, model, canRender];\n};\n/**\n * useModelAsync：\n * watch model的值，\n * 把model的值通过useState和组件状态关联起来\n */\nexport const useModelAsync = args => {\n  const {\n    getModel,\n    initialState\n  } = args;\n  /** 记录当前组件的加载状态 */\n  const isMountedRef = useIsMountedRef();\n  const modelRef = React.useRef();\n  /** 订阅 model */\n  const [state, setState] = React.useState(initialState);\n  React.useEffect(() => {\n    let d;\n    getModel().then(model => __awaiter(void 0, void 0, void 0, function* () {\n      modelRef.current = model;\n      const newState = yield model.getValidValue();\n      if (!isMountedRef.current) {\n        return;\n      }\n      setState(newState);\n      d = model.watch(val => {\n        if (isMountedRef.current) {\n          setState(val);\n        }\n      });\n    }));\n    return () => {\n      if (d && d.dispose) {\n        d.dispose();\n      }\n    };\n    /* eslint-disable-next-line  */\n  }, []);\n  return [state, setState, modelRef.current];\n};","map":{"version":3,"names":["React","RxModel","NsModel","isRefMounted","ref","current","useIsMountedRef","useRef","useEffect","useModel","model","state","setState","useState","getValue","disposeable","watch","val","dispose","value","canRender","isValidValue","setValue","useCallback","createComponentModel","initialState","useMemo","modelValue","setModelValue","useModelAsync","args","getModel","isMountedRef","modelRef","d","then","__awaiter","newState","getValidValue"],"sources":["../../src/common/rx-model-hook.tsx"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}