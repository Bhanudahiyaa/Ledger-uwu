{"ast":null,"code":"// src/tileset-manager/utils/tile-url.ts\nimport { getProtocolAction } from \"../../ajax\";\nimport { tileToBounds } from \"./lonlat-tile\";\nfunction isURLTemplate(s) {\n  return /(?=.*{box})(?=.*{z})(?=.*{x})(?=.*({y}|{-y}))/.test(s);\n}\nfunction expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\nfunction getURLFromTemplate(template, properties) {\n  if (!template || !template.length) {\n    throw new Error(\"url is not allowed to be empty\");\n  }\n  const {\n    x,\n    y,\n    z\n  } = properties;\n  const urls = expandUrl(template);\n  const index = Math.abs(x + y) % urls.length;\n  const url = getProtocolAction(urls[index]) ? `${urls[index]}/{z}/{x}/{y}` : urls[index];\n  return url.replace(/\\{x\\}/g, x.toString()).replace(/\\{y\\}/g, y.toString()).replace(/\\{z\\}/g, z.toString()).replace(/\\{bbox\\}/g, tileToBounds(x, y, z).join(\",\")).replace(/\\{-y\\}/g, (Math.pow(2, z) - y - 1).toString());\n}\nfunction getWMTSURLFromTemplate(template, properties) {\n  const {\n    x,\n    y,\n    z,\n    layer,\n    version = \"1.0.0\",\n    style = \"default\",\n    format,\n    service = \"WMTS\",\n    tileMatrixset\n  } = properties;\n  const urls = expandUrl(template);\n  const index = Math.abs(x + y) % urls.length;\n  const url = `${urls[index]}&SERVICE=${service}&REQUEST=GetTile&VERSION=${version}&LAYER=${layer}&STYLE=${style}&TILEMATRIXSET=${tileMatrixset}&FORMAT=${format}&TILECOL=${x}&TILEROW=${y}&TILEMATRIX=${z}`;\n  return url;\n}\nexport { expandUrl, getURLFromTemplate, getWMTSURLFromTemplate, isURLTemplate };","map":{"version":3,"names":["getProtocolAction","tileToBounds","isURLTemplate","s","test","expandUrl","url","urls","match","exec","startCharCode","charCodeAt","stopCharCode","charCode","push","replace","String","fromCharCode","stop","parseInt","i","toString","getURLFromTemplate","template","properties","length","Error","x","y","z","index","Math","abs","join","pow","getWMTSURLFromTemplate","layer","version","style","format","service","tileMatrixset"],"sources":["/Users/bhanudahiya/Desktop/ledger-IQ/node_modules/@antv/l7-utils/es/tileset-manager/utils/tile-url.js"],"sourcesContent":["// src/tileset-manager/utils/tile-url.ts\nimport { getProtocolAction } from \"../../ajax\";\nimport { tileToBounds } from \"./lonlat-tile\";\nfunction isURLTemplate(s) {\n  return /(?=.*{box})(?=.*{z})(?=.*{x})(?=.*({y}|{-y}))/.test(s);\n}\nfunction expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\nfunction getURLFromTemplate(template, properties) {\n  if (!template || !template.length) {\n    throw new Error(\"url is not allowed to be empty\");\n  }\n  const { x, y, z } = properties;\n  const urls = expandUrl(template);\n  const index = Math.abs(x + y) % urls.length;\n  const url = getProtocolAction(urls[index]) ? `${urls[index]}/{z}/{x}/{y}` : urls[index];\n  return url.replace(/\\{x\\}/g, x.toString()).replace(/\\{y\\}/g, y.toString()).replace(/\\{z\\}/g, z.toString()).replace(/\\{bbox\\}/g, tileToBounds(x, y, z).join(\",\")).replace(/\\{-y\\}/g, (Math.pow(2, z) - y - 1).toString());\n}\nfunction getWMTSURLFromTemplate(template, properties) {\n  const {\n    x,\n    y,\n    z,\n    layer,\n    version = \"1.0.0\",\n    style = \"default\",\n    format,\n    service = \"WMTS\",\n    tileMatrixset\n  } = properties;\n  const urls = expandUrl(template);\n  const index = Math.abs(x + y) % urls.length;\n  const url = `${urls[index]}&SERVICE=${service}&REQUEST=GetTile&VERSION=${version}&LAYER=${layer}&STYLE=${style}&TILEMATRIXSET=${tileMatrixset}&FORMAT=${format}&TILECOL=${x}&TILEROW=${y}&TILEMATRIX=${z}`;\n  return url;\n}\nexport {\n  expandUrl,\n  getURLFromTemplate,\n  getWMTSURLFromTemplate,\n  isURLTemplate\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}