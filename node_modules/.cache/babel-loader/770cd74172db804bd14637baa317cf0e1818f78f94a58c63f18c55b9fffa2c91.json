{"ast":null,"code":"import { __awaiter, __decorate, __metadata } from \"tslib\";\nimport { ManaSyringe, DisposableCollection, MenuItemType, IModelContribution, IModelService, RxModel, Disposable } from '@antv/xflow-core';\nimport { MODELS } from '@antv/xflow-core';\nimport { CONTEXT_MENU_MODEL } from '../interface';\nimport { ContextMenuConfig } from '../config';\nconst {\n  inject,\n  singleton\n} = ManaSyringe;\n/**\n * IModelContribution\n */\nlet CanvasContextMenuContribution = class CanvasContextMenuContribution {\n  constructor() {\n    /** 注册 model */\n    this.toDispose = new DisposableCollection();\n    /** 获取 MenuModel */\n    this.getMenuModelValue = contextMenuInfo => __awaiter(this, void 0, void 0, function* () {\n      const config = yield this.menuConfig.getConfig();\n      /** 获取坐标 */\n      const {\n        anchor,\n        type,\n        cell\n      } = contextMenuInfo;\n      /** 获取Menu */\n      const toDispose = new DisposableCollection();\n      this.toDispose.push(toDispose);\n      const data = cell ? cell.getData() : null;\n      const menuModel = new RxModel({\n        id: 'menuroot',\n        type: MenuItemType.Root,\n        submenu: []\n      });\n      toDispose.push(Disposable.create(() => {\n        menuModel.dispose();\n      }));\n      const renderProps = {\n        toDispose,\n        anchor: anchor,\n        target: {\n          data,\n          type\n        },\n        customRender: null,\n        menuModel: menuModel\n      };\n      if (config.menuCustomRender) {\n        renderProps.customRender = yield config.menuCustomRender(contextMenuInfo, this.modelService);\n      }\n      if (config.menuModelService) {\n        yield config.menuModelService(contextMenuInfo, renderProps.menuModel, this.modelService, toDispose);\n      }\n      return renderProps;\n    });\n  }\n  /** 注册 MenuModel */\n  registerModel(registry) {\n    const toDispose = [registry.registerModel({\n      id: CONTEXT_MENU_MODEL.id,\n      getInitialValue: () => null,\n      watchChange: (self, modelService) => __awaiter(this, void 0, void 0, function* () {\n        const contextMenuModel = yield MODELS.CONTEXTMENU_TARGET.getModel(modelService);\n        return contextMenuModel.watch(contextMenuInfo => __awaiter(this, void 0, void 0, function* () {\n          const contextMenuValue = yield this.getMenuModelValue(contextMenuInfo);\n          self.setValue(contextMenuValue);\n        }));\n      })\n    })];\n    this.toDispose.pushAll(toDispose);\n  }\n};\n__decorate([inject(ContextMenuConfig), __metadata(\"design:type\", ContextMenuConfig)], CanvasContextMenuContribution.prototype, \"menuConfig\", void 0);\n__decorate([inject(IModelService), __metadata(\"design:type\", Object)], CanvasContextMenuContribution.prototype, \"modelService\", void 0);\nCanvasContextMenuContribution = __decorate([singleton({\n  contrib: [IModelContribution]\n})], CanvasContextMenuContribution);\nexport { CanvasContextMenuContribution };","map":{"version":3,"names":["ManaSyringe","DisposableCollection","MenuItemType","IModelContribution","IModelService","RxModel","Disposable","MODELS","CONTEXT_MENU_MODEL","ContextMenuConfig","inject","singleton","CanvasContextMenuContribution","constructor","toDispose","getMenuModelValue","contextMenuInfo","__awaiter","config","menuConfig","getConfig","anchor","type","cell","push","data","getData","menuModel","id","Root","submenu","create","dispose","renderProps","target","customRender","menuCustomRender","modelService","menuModelService","registerModel","registry","getInitialValue","watchChange","self","contextMenuModel","CONTEXTMENU_TARGET","getModel","watch","contextMenuValue","setValue","pushAll","__decorate","contrib"],"sources":["../../../src/canvas-context-menu/contributions/model.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}