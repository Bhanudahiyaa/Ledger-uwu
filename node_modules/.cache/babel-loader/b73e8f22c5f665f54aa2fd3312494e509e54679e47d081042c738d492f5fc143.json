{"ast":null,"code":"// 类型检测\nexport var isType = function (value, type) {\n  var toString = {}.toString;\n  return toString.call(value) === \"[object \".concat(type, \"]\");\n};\nexport var getType = function (n) {\n  return Object.prototype.toString.call(n).slice(8, -1);\n};\n/**\n * 深克隆\n * @param source 要深克隆的目标对象\n */\nexport var deepClone = function (source) {\n  if (!source || typeof source !== 'object') {\n    return source;\n  }\n  var target;\n  if (Array.isArray(source)) {\n    target = source.map(function (item) {\n      return deepClone(item);\n    });\n  } else {\n    target = {};\n    Object.keys(source).forEach(function (key) {\n      return target[key] = deepClone(source[key]);\n    });\n  }\n  return target;\n};\nexport var clone = function (source) {\n  if (!source) {\n    return source;\n  }\n  var target = {};\n  // eslint-disable-next-line guard-for-in\n  for (var k in source) {\n    target[k] = source[k];\n  }\n  return target;\n};","map":{"version":3,"names":["isType","value","type","toString","call","concat","getType","n","Object","prototype","slice","deepClone","source","target","Array","isArray","map","item","keys","forEach","key","clone","k"],"sources":["/Users/bhanudahiya/Desktop/ledger-IQ/node_modules/@ant-design/maps/es/util/utils.js"],"sourcesContent":["// 类型检测\nexport var isType = function (value, type) {\n    var toString = {}.toString;\n    return toString.call(value) === \"[object \".concat(type, \"]\");\n};\nexport var getType = function (n) {\n    return Object.prototype.toString.call(n).slice(8, -1);\n};\n/**\n * 深克隆\n * @param source 要深克隆的目标对象\n */\nexport var deepClone = function (source) {\n    if (!source || typeof source !== 'object') {\n        return source;\n    }\n    var target;\n    if (Array.isArray(source)) {\n        target = source.map(function (item) { return deepClone(item); });\n    }\n    else {\n        target = {};\n        Object.keys(source).forEach(function (key) {\n            return (target[key] = deepClone(source[key]));\n        });\n    }\n    return target;\n};\nexport var clone = function (source) {\n    if (!source) {\n        return source;\n    }\n    var target = {};\n    // eslint-disable-next-line guard-for-in\n    for (var k in source) {\n        target[k] = source[k];\n    }\n    return target;\n};\n"],"mappings":"AAAA;AACA,OAAO,IAAIA,MAAM,GAAG,SAAAA,CAAUC,KAAK,EAAEC,IAAI,EAAE;EACvC,IAAIC,QAAQ,GAAG,CAAC,CAAC,CAACA,QAAQ;EAC1B,OAAOA,QAAQ,CAACC,IAAI,CAACH,KAAK,CAAC,KAAK,UAAU,CAACI,MAAM,CAACH,IAAI,EAAE,GAAG,CAAC;AAChE,CAAC;AACD,OAAO,IAAII,OAAO,GAAG,SAAAA,CAAUC,CAAC,EAAE;EAC9B,OAAOC,MAAM,CAACC,SAAS,CAACN,QAAQ,CAACC,IAAI,CAACG,CAAC,CAAC,CAACG,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACzD,CAAC;AACD;AACA;AACA;AACA;AACA,OAAO,IAAIC,SAAS,GAAG,SAAAA,CAAUC,MAAM,EAAE;EACrC,IAAI,CAACA,MAAM,IAAI,OAAOA,MAAM,KAAK,QAAQ,EAAE;IACvC,OAAOA,MAAM;EACjB;EACA,IAAIC,MAAM;EACV,IAAIC,KAAK,CAACC,OAAO,CAACH,MAAM,CAAC,EAAE;IACvBC,MAAM,GAAGD,MAAM,CAACI,GAAG,CAAC,UAAUC,IAAI,EAAE;MAAE,OAAON,SAAS,CAACM,IAAI,CAAC;IAAE,CAAC,CAAC;EACpE,CAAC,MACI;IACDJ,MAAM,GAAG,CAAC,CAAC;IACXL,MAAM,CAACU,IAAI,CAACN,MAAM,CAAC,CAACO,OAAO,CAAC,UAAUC,GAAG,EAAE;MACvC,OAAQP,MAAM,CAACO,GAAG,CAAC,GAAGT,SAAS,CAACC,MAAM,CAACQ,GAAG,CAAC,CAAC;IAChD,CAAC,CAAC;EACN;EACA,OAAOP,MAAM;AACjB,CAAC;AACD,OAAO,IAAIQ,KAAK,GAAG,SAAAA,CAAUT,MAAM,EAAE;EACjC,IAAI,CAACA,MAAM,EAAE;IACT,OAAOA,MAAM;EACjB;EACA,IAAIC,MAAM,GAAG,CAAC,CAAC;EACf;EACA,KAAK,IAAIS,CAAC,IAAIV,MAAM,EAAE;IAClBC,MAAM,CAACS,CAAC,CAAC,GAAGV,MAAM,CAACU,CAAC,CAAC;EACzB;EACA,OAAOT,MAAM;AACjB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}