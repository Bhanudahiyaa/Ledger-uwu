{"ast":null,"code":"import { NodeView } from '../../view';\nimport { getName, createShape } from './util';\nconst viewName = getName('text');\nexport class Text extends createShape('text', {\n  view: viewName,\n  attrs: {\n    text: {\n      fontSize: 18,\n      fill: '#000000',\n      stroke: null,\n      refX: 0.5,\n      refY: 0.5\n    }\n  }\n}, {\n  noText: true\n}) {}\n(function (Text) {\n  class View extends NodeView {\n    confirmUpdate(flag, options = {}) {\n      let ret = super.confirmUpdate(flag, options);\n      if (this.hasAction(ret, 'scale')) {\n        this.resize();\n        ret = this.removeAction(ret, 'scale');\n      }\n      return ret;\n    }\n  }\n  Text.View = View;\n  View.config({\n    actions: {\n      attrs: ['scale']\n    }\n  });\n  NodeView.registry.register(viewName, View);\n})(Text || (Text = {}));","map":{"version":3,"names":["NodeView","getName","createShape","viewName","Text","view","attrs","text","fontSize","fill","stroke","refX","refY","noText","View","confirmUpdate","flag","options","ret","hasAction","resize","removeAction","config","actions","registry","register"],"sources":["/Users/bhanudahiya/Desktop/ledger-IQ/node_modules/@antv/x6/src/shape/basic/text.ts"],"sourcesContent":["import { NodeView } from '../../view'\nimport { getName, createShape } from './util'\n\nconst viewName = getName('text')\n\nexport class Text extends createShape(\n  'text',\n  {\n    view: viewName,\n    attrs: {\n      text: {\n        fontSize: 18,\n        fill: '#000000',\n        stroke: null,\n        refX: 0.5,\n        refY: 0.5,\n      },\n    },\n  },\n  { noText: true },\n) {}\n\nexport namespace Text {\n  export class View extends NodeView {\n    confirmUpdate(flag: number, options: any = {}) {\n      let ret = super.confirmUpdate(flag, options)\n      if (this.hasAction(ret, 'scale')) {\n        this.resize()\n        ret = this.removeAction(ret, 'scale')\n      }\n      return ret\n    }\n  }\n\n  View.config({\n    actions: {\n      attrs: ['scale'],\n    },\n  })\n\n  NodeView.registry.register(viewName, View)\n}\n"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,YAAY;AACrC,SAASC,OAAO,EAAEC,WAAW,QAAQ,QAAQ;AAE7C,MAAMC,QAAQ,GAAGF,OAAO,CAAC,MAAM,CAAC;AAEhC,OAAM,MAAOG,IAAK,SAAQF,WAAW,CACnC,MAAM,EACN;EACEG,IAAI,EAAEF,QAAQ;EACdG,KAAK,EAAE;IACLC,IAAI,EAAE;MACJC,QAAQ,EAAE,EAAE;MACZC,IAAI,EAAE,SAAS;MACfC,MAAM,EAAE,IAAI;MACZC,IAAI,EAAE,GAAG;MACTC,IAAI,EAAE;;;CAGX,EACD;EAAEC,MAAM,EAAE;AAAI,CAAE,CACjB;AAED,WAAiBT,IAAI;EACnB,MAAaU,IAAK,SAAQd,QAAQ;IAChCe,aAAaA,CAACC,IAAY,EAAEC,OAAA,GAAe,EAAE;MAC3C,IAAIC,GAAG,GAAG,KAAK,CAACH,aAAa,CAACC,IAAI,EAAEC,OAAO,CAAC;MAC5C,IAAI,IAAI,CAACE,SAAS,CAACD,GAAG,EAAE,OAAO,CAAC,EAAE;QAChC,IAAI,CAACE,MAAM,EAAE;QACbF,GAAG,GAAG,IAAI,CAACG,YAAY,CAACH,GAAG,EAAE,OAAO,CAAC;;MAEvC,OAAOA,GAAG;IACZ;;EARWd,IAAA,CAAAU,IAAI,GAAAA,IAShB;EAEDA,IAAI,CAACQ,MAAM,CAAC;IACVC,OAAO,EAAE;MACPjB,KAAK,EAAE,CAAC,OAAO;;GAElB,CAAC;EAEFN,QAAQ,CAACwB,QAAQ,CAACC,QAAQ,CAACtB,QAAQ,EAAEW,IAAI,CAAC;AAC5C,CAAC,EAnBgBV,IAAI,KAAJA,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}