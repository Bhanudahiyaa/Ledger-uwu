{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { DOM } from \"../util/dom\";\nconst LEFT_BUTTON = 0;\nconst RIGHT_BUTTON = 2;\n\n// the values for each button in MouseEvent.buttons\nconst BUTTONS_FLAGS = {\n  [LEFT_BUTTON]: 1,\n  [RIGHT_BUTTON]: 2\n};\nfunction buttonNoLongerPressed(e, button) {\n  const flag = BUTTONS_FLAGS[button];\n  return e.buttons === undefined || (e.buttons & flag) !== flag;\n}\n\n/*\n * Drag events are initiated by specific interaction which needs to be tracked until it ends.\n * This requires some state management:\n * 1. registering the initiating event,\n * 2. tracking that it was not canceled / not confusing it with another event firing.\n * 3. recognizing the ending event and cleaning up any internal state\n *\n * Concretely, we implement two state managers:\n * 1. MouseMoveStateManager\n *      Receives a functions that is used to recognize mouse events that should be registered as the\n *      relevant drag interactions - i.e. dragging with the right mouse button, or while CTRL is pressed.\n * 2. OneFingerTouchMoveStateManager\n *      Checks if a drag event is using one finger, and continuously tracking that this is the same event\n *      (i.e. to make sure not additional finger has started interacting with the screen before raising\n *      the first finger).\n */\n\nexport class MouseMoveStateManager {\n  constructor(options) {\n    _defineProperty(this, \"_eventButton\", void 0);\n    _defineProperty(this, \"_correctEvent\", void 0);\n    this._correctEvent = options.checkCorrectEvent;\n  }\n  startMove(e) {\n    const eventButton = DOM.mouseButton(e);\n    this._eventButton = eventButton;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  endMove(_e) {\n    delete this._eventButton;\n  }\n  isValidStartEvent(e) {\n    return this._correctEvent(e);\n  }\n  isValidMoveEvent(e) {\n    // Some browsers don't fire a `mouseup` when the mouseup occurs outside\n    // the window or iframe:\n    // https://github.com/mapbox/mapbox-gl-js/issues/4622\n    //\n    // If the button is no longer pressed during this `mousemove` it may have\n    // been released outside of the window or iframe.\n    return !buttonNoLongerPressed(e, this._eventButton);\n  }\n  isValidEndEvent(e) {\n    const eventButton = DOM.mouseButton(e);\n    return eventButton === this._eventButton;\n  }\n}\nexport class OneFingerTouchMoveStateManager {\n  constructor() {\n    _defineProperty(this, \"_firstTouch\", void 0);\n    this._firstTouch = undefined;\n  }\n  _isOneFingerTouch(e) {\n    return e.targetTouches.length === 1;\n  }\n  _isSameTouchEvent(e) {\n    return e.targetTouches[0].identifier === this._firstTouch;\n  }\n  startMove(e) {\n    const firstTouch = e.targetTouches[0].identifier;\n    this._firstTouch = firstTouch;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  endMove(_e) {\n    delete this._firstTouch;\n  }\n  isValidStartEvent(e) {\n    return this._isOneFingerTouch(e);\n  }\n  isValidMoveEvent(e) {\n    return this._isOneFingerTouch(e) && this._isSameTouchEvent(e);\n  }\n  isValidEndEvent(e) {\n    return this._isOneFingerTouch(e) && this._isSameTouchEvent(e);\n  }\n}","map":{"version":3,"names":["_defineProperty","DOM","LEFT_BUTTON","RIGHT_BUTTON","BUTTONS_FLAGS","buttonNoLongerPressed","e","button","flag","buttons","undefined","MouseMoveStateManager","constructor","options","_correctEvent","checkCorrectEvent","startMove","eventButton","mouseButton","_eventButton","endMove","_e","isValidStartEvent","isValidMoveEvent","isValidEndEvent","OneFingerTouchMoveStateManager","_firstTouch","_isOneFingerTouch","targetTouches","length","_isSameTouchEvent","identifier","firstTouch"],"sources":["/Users/bhanudahiya/Desktop/ledger-IQ/node_modules/@antv/l7-map/es/map/handler/drag_move_state_manager.js"],"sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { DOM } from \"../util/dom\";\nconst LEFT_BUTTON = 0;\nconst RIGHT_BUTTON = 2;\n\n// the values for each button in MouseEvent.buttons\nconst BUTTONS_FLAGS = {\n  [LEFT_BUTTON]: 1,\n  [RIGHT_BUTTON]: 2\n};\nfunction buttonNoLongerPressed(e, button) {\n  const flag = BUTTONS_FLAGS[button];\n  return e.buttons === undefined || (e.buttons & flag) !== flag;\n}\n\n/*\n * Drag events are initiated by specific interaction which needs to be tracked until it ends.\n * This requires some state management:\n * 1. registering the initiating event,\n * 2. tracking that it was not canceled / not confusing it with another event firing.\n * 3. recognizing the ending event and cleaning up any internal state\n *\n * Concretely, we implement two state managers:\n * 1. MouseMoveStateManager\n *      Receives a functions that is used to recognize mouse events that should be registered as the\n *      relevant drag interactions - i.e. dragging with the right mouse button, or while CTRL is pressed.\n * 2. OneFingerTouchMoveStateManager\n *      Checks if a drag event is using one finger, and continuously tracking that this is the same event\n *      (i.e. to make sure not additional finger has started interacting with the screen before raising\n *      the first finger).\n */\n\nexport class MouseMoveStateManager {\n  constructor(options) {\n    _defineProperty(this, \"_eventButton\", void 0);\n    _defineProperty(this, \"_correctEvent\", void 0);\n    this._correctEvent = options.checkCorrectEvent;\n  }\n  startMove(e) {\n    const eventButton = DOM.mouseButton(e);\n    this._eventButton = eventButton;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  endMove(_e) {\n    delete this._eventButton;\n  }\n  isValidStartEvent(e) {\n    return this._correctEvent(e);\n  }\n  isValidMoveEvent(e) {\n    // Some browsers don't fire a `mouseup` when the mouseup occurs outside\n    // the window or iframe:\n    // https://github.com/mapbox/mapbox-gl-js/issues/4622\n    //\n    // If the button is no longer pressed during this `mousemove` it may have\n    // been released outside of the window or iframe.\n    return !buttonNoLongerPressed(e, this._eventButton);\n  }\n  isValidEndEvent(e) {\n    const eventButton = DOM.mouseButton(e);\n    return eventButton === this._eventButton;\n  }\n}\nexport class OneFingerTouchMoveStateManager {\n  constructor() {\n    _defineProperty(this, \"_firstTouch\", void 0);\n    this._firstTouch = undefined;\n  }\n  _isOneFingerTouch(e) {\n    return e.targetTouches.length === 1;\n  }\n  _isSameTouchEvent(e) {\n    return e.targetTouches[0].identifier === this._firstTouch;\n  }\n  startMove(e) {\n    const firstTouch = e.targetTouches[0].identifier;\n    this._firstTouch = firstTouch;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  endMove(_e) {\n    delete this._firstTouch;\n  }\n  isValidStartEvent(e) {\n    return this._isOneFingerTouch(e);\n  }\n  isValidMoveEvent(e) {\n    return this._isOneFingerTouch(e) && this._isSameTouchEvent(e);\n  }\n  isValidEndEvent(e) {\n    return this._isOneFingerTouch(e) && this._isSameTouchEvent(e);\n  }\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}