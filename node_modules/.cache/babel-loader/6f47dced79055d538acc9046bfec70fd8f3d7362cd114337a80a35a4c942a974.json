{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { mat4, vec3 } from 'gl-matrix';\nexport default class Viewport {\n  constructor() {\n    // 初始化相机的姿态 看向地球\n    _defineProperty(this, \"xzReg\", -Math.PI * 0.6);\n    _defineProperty(this, \"yReg\", Math.PI * 0.2);\n    // 默认的地球相机半径、地球相机缩放层级\n    _defineProperty(this, \"earthCameraRadius\", 200);\n    _defineProperty(this, \"earthCameraZoom\", 1);\n    _defineProperty(this, \"cameraPosition\", vec3.create());\n    _defineProperty(this, \"viewport\", void 0);\n    _defineProperty(this, \"projectionMatrix\", mat4.create());\n    _defineProperty(this, \"modelMatrix\", mat4.create());\n    _defineProperty(this, \"viewMatrix\", mat4.create());\n    _defineProperty(this, \"viewProjectionMatrix\", mat4.create());\n    _defineProperty(this, \"ViewProjectionMatrixUncentered\", mat4.create());\n    _defineProperty(this, \"viewUncenteredMatrix\", mat4.create());\n  }\n  syncWithMapCamera(mapCamera) {\n    const {\n      viewportHeight = 1,\n      viewportWidth = 1\n    } = mapCamera;\n    const aspect = viewportWidth / viewportHeight;\n    const near = 0.1;\n    const far = 10000;\n    const fov = 20;\n\n    // 计算透视投影矩阵 projectionMatrix\n    mat4.perspective(this.projectionMatrix, fov, aspect, near, far);\n    // 计算相机矩阵 viewMatrix\n    const x = this.earthCameraRadius * Math.cos(this.xzReg);\n    const z = this.earthCameraRadius * Math.sin(this.xzReg);\n    const y = this.earthCameraRadius * Math.sin(this.yReg);\n    this.cameraPosition = vec3.fromValues(x, y, z);\n    vec3.normalize(this.cameraPosition, this.cameraPosition);\n    vec3.multiply(this.cameraPosition, this.cameraPosition, vec3.fromValues(this.earthCameraRadius, this.earthCameraRadius, this.earthCameraRadius));\n    vec3.scale(this.cameraPosition, this.cameraPosition, this.earthCameraZoom);\n    const crossY = vec3.create();\n    vec3.cross(crossY, this.cameraPosition, vec3.fromValues(0, 1, 0));\n    const up = vec3.fromValues(0, 1, 0);\n    vec3.cross(up, crossY, this.cameraPosition);\n    const target = vec3.fromValues(0, 0, 0);\n    mat4.lookAt(this.viewMatrix, this.cameraPosition, target, up);\n    this.viewUncenteredMatrix = mat4.clone(this.viewMatrix);\n    mat4.multiply(this.viewProjectionMatrix, this.projectionMatrix, this.viewMatrix);\n    mat4.multiply(this.ViewProjectionMatrixUncentered, this.projectionMatrix, this.viewMatrix);\n  }\n\n  /**\n   * 旋转方法 Y 轴\n   * @param r\n   */\n  rotateY(r) {\n    this.xzReg += r * Math.min(this.earthCameraZoom * this.earthCameraZoom, 1);\n  }\n\n  /**\n   * 旋转方法 X 轴\n   * @param r\n   */\n  rotateX(r) {\n    this.yReg += r * Math.min(this.earthCameraZoom * this.earthCameraZoom, 1);\n  }\n\n  /**\n   * 缩放方法\n   * @param z\n   */\n  scaleZoom(z) {\n    this.earthCameraZoom += z;\n    this.earthCameraZoom = Math.max(this.earthCameraZoom, 0.6);\n  }\n  getZoom() {\n    return 4;\n  }\n  getZoomScale() {\n    return Math.pow(2, this.getZoom());\n  }\n  getCenter() {\n    return [0, 0];\n  }\n  getProjectionMatrix() {\n    return this.projectionMatrix;\n  }\n  getModelMatrix() {\n    return this.modelMatrix;\n  }\n  getViewMatrix() {\n    return this.viewMatrix;\n  }\n  getViewMatrixUncentered() {\n    return this.viewMatrix;\n  }\n  getViewProjectionMatrix() {\n    return this.viewProjectionMatrix;\n  }\n  getViewProjectionMatrixUncentered() {\n    return this.viewProjectionMatrix;\n  }\n  getFocalDistance() {\n    return 1;\n  }\n  projectFlat(lngLat, scale) {\n    return this.viewport.projectFlat(lngLat, scale);\n  }\n}","map":{"version":3,"names":["_defineProperty","mat4","vec3","Viewport","constructor","Math","PI","create","syncWithMapCamera","mapCamera","viewportHeight","viewportWidth","aspect","near","far","fov","perspective","projectionMatrix","x","earthCameraRadius","cos","xzReg","z","sin","y","yReg","cameraPosition","fromValues","normalize","multiply","scale","earthCameraZoom","crossY","cross","up","target","lookAt","viewMatrix","viewUncenteredMatrix","clone","viewProjectionMatrix","ViewProjectionMatrixUncentered","rotateY","r","min","rotateX","scaleZoom","max","getZoom","getZoomScale","pow","getCenter","getProjectionMatrix","getModelMatrix","modelMatrix","getViewMatrix","getViewMatrixUncentered","getViewProjectionMatrix","getViewProjectionMatrixUncentered","getFocalDistance","projectFlat","lngLat","viewport"],"sources":["/Users/bhanudahiya/Desktop/ledger-IQ/node_modules/@antv/l7-maps/es/earth/Viewport.js"],"sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { mat4, vec3 } from 'gl-matrix';\nexport default class Viewport {\n  constructor() {\n    // 初始化相机的姿态 看向地球\n    _defineProperty(this, \"xzReg\", -Math.PI * 0.6);\n    _defineProperty(this, \"yReg\", Math.PI * 0.2);\n    // 默认的地球相机半径、地球相机缩放层级\n    _defineProperty(this, \"earthCameraRadius\", 200);\n    _defineProperty(this, \"earthCameraZoom\", 1);\n    _defineProperty(this, \"cameraPosition\", vec3.create());\n    _defineProperty(this, \"viewport\", void 0);\n    _defineProperty(this, \"projectionMatrix\", mat4.create());\n    _defineProperty(this, \"modelMatrix\", mat4.create());\n    _defineProperty(this, \"viewMatrix\", mat4.create());\n    _defineProperty(this, \"viewProjectionMatrix\", mat4.create());\n    _defineProperty(this, \"ViewProjectionMatrixUncentered\", mat4.create());\n    _defineProperty(this, \"viewUncenteredMatrix\", mat4.create());\n  }\n  syncWithMapCamera(mapCamera) {\n    const {\n      viewportHeight = 1,\n      viewportWidth = 1\n    } = mapCamera;\n    const aspect = viewportWidth / viewportHeight;\n    const near = 0.1;\n    const far = 10000;\n    const fov = 20;\n\n    // 计算透视投影矩阵 projectionMatrix\n    mat4.perspective(this.projectionMatrix, fov, aspect, near, far);\n    // 计算相机矩阵 viewMatrix\n    const x = this.earthCameraRadius * Math.cos(this.xzReg);\n    const z = this.earthCameraRadius * Math.sin(this.xzReg);\n    const y = this.earthCameraRadius * Math.sin(this.yReg);\n    this.cameraPosition = vec3.fromValues(x, y, z);\n    vec3.normalize(this.cameraPosition, this.cameraPosition);\n    vec3.multiply(this.cameraPosition, this.cameraPosition, vec3.fromValues(this.earthCameraRadius, this.earthCameraRadius, this.earthCameraRadius));\n    vec3.scale(this.cameraPosition, this.cameraPosition, this.earthCameraZoom);\n    const crossY = vec3.create();\n    vec3.cross(crossY, this.cameraPosition, vec3.fromValues(0, 1, 0));\n    const up = vec3.fromValues(0, 1, 0);\n    vec3.cross(up, crossY, this.cameraPosition);\n    const target = vec3.fromValues(0, 0, 0);\n    mat4.lookAt(this.viewMatrix, this.cameraPosition, target, up);\n    this.viewUncenteredMatrix = mat4.clone(this.viewMatrix);\n    mat4.multiply(this.viewProjectionMatrix, this.projectionMatrix, this.viewMatrix);\n    mat4.multiply(this.ViewProjectionMatrixUncentered, this.projectionMatrix, this.viewMatrix);\n  }\n\n  /**\n   * 旋转方法 Y 轴\n   * @param r\n   */\n  rotateY(r) {\n    this.xzReg += r * Math.min(this.earthCameraZoom * this.earthCameraZoom, 1);\n  }\n\n  /**\n   * 旋转方法 X 轴\n   * @param r\n   */\n  rotateX(r) {\n    this.yReg += r * Math.min(this.earthCameraZoom * this.earthCameraZoom, 1);\n  }\n\n  /**\n   * 缩放方法\n   * @param z\n   */\n  scaleZoom(z) {\n    this.earthCameraZoom += z;\n    this.earthCameraZoom = Math.max(this.earthCameraZoom, 0.6);\n  }\n  getZoom() {\n    return 4;\n  }\n  getZoomScale() {\n    return Math.pow(2, this.getZoom());\n  }\n  getCenter() {\n    return [0, 0];\n  }\n  getProjectionMatrix() {\n    return this.projectionMatrix;\n  }\n  getModelMatrix() {\n    return this.modelMatrix;\n  }\n  getViewMatrix() {\n    return this.viewMatrix;\n  }\n  getViewMatrixUncentered() {\n    return this.viewMatrix;\n  }\n  getViewProjectionMatrix() {\n    return this.viewProjectionMatrix;\n  }\n  getViewProjectionMatrixUncentered() {\n    return this.viewProjectionMatrix;\n  }\n  getFocalDistance() {\n    return 1;\n  }\n  projectFlat(lngLat, scale) {\n    return this.viewport.projectFlat(lngLat, scale);\n  }\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}