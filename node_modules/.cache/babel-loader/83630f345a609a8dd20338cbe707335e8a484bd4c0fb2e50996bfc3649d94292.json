{"ast":null,"code":"import { PathLayer } from '../../layers/path-layer';\nimport { deepAssign } from '../../utils';\nimport { CHINA_BOUNDARY_STYLE } from './constants';\n/**\n * 创建中国国界线图层\n */\nexport const createCountryBoundaryLayer = (data, plotConfig) => {\n  const {\n    visible,\n    minZoom,\n    maxZoom,\n    zIndex = 0,\n    chinaBorder\n  } = plotConfig || {};\n  const borderStyle = typeof chinaBorder === 'object' ? deepAssign({}, CHINA_BOUNDARY_STYLE, chinaBorder) : CHINA_BOUNDARY_STYLE;\n  const chinaBoundaryFeatures = data.features.filter(({\n    properties\n  }) => ['coast', 'national'].includes(properties === null || properties === void 0 ? void 0 : properties['type']));\n  const disputeBoundaryFeatures = data.features.filter(({\n    properties\n  }) => (properties === null || properties === void 0 ? void 0 : properties['type']) === 'dispute');\n  const hkmBoundaryFeatures = data.features.filter(({\n    properties\n  }) => (properties === null || properties === void 0 ? void 0 : properties['type']) === 'hkm');\n  const chinaBoundaryLayer = new PathLayer({\n    name: 'chinaBoundaryLayer',\n    visible,\n    minZoom,\n    maxZoom,\n    zIndex: zIndex + 0.1,\n    source: {\n      data: {\n        type: 'FeatureCollection',\n        features: chinaBoundaryFeatures\n      },\n      parser: {\n        type: 'geojson'\n      }\n    },\n    color: {\n      field: 'type',\n      value: ({\n        type\n      }) => {\n        return borderStyle[type].color;\n      }\n    },\n    size: {\n      field: 'type',\n      value: ({\n        type\n      }) => {\n        return borderStyle[type].width;\n      }\n    },\n    style: {\n      // opacity: ['type', (type) => borderStyle[type].opacity],\n      // 下线 L7 暂时不支持根据字段映射样式\n      opacity: borderStyle.national.opacity\n    }\n  });\n  const chinaHkmBoundaryLayer = new PathLayer({\n    name: 'chinaHkmBoundaryLayer',\n    visible,\n    minZoom,\n    maxZoom,\n    zIndex: zIndex + 0.1,\n    source: {\n      data: {\n        type: 'FeatureCollection',\n        features: hkmBoundaryFeatures\n      },\n      parser: {\n        type: 'geojson'\n      }\n    },\n    color: borderStyle.hkm.color,\n    size: borderStyle.hkm.width,\n    style: {\n      opacity: borderStyle.hkm.opacity,\n      lineType: 'dash',\n      dashArray: borderStyle.hkm.dashArray\n    }\n  });\n  const chinaDisputeBoundaryLayer = new PathLayer({\n    name: 'chinaDisputeBoundaryLayer',\n    visible,\n    minZoom,\n    maxZoom,\n    zIndex: zIndex + 0.1,\n    source: {\n      data: {\n        type: 'FeatureCollection',\n        features: disputeBoundaryFeatures\n      },\n      parser: {\n        type: 'geojson'\n      }\n    },\n    color: borderStyle.dispute.color,\n    size: borderStyle.dispute.width,\n    style: {\n      opacity: borderStyle.dispute.opacity,\n      lineType: 'dash',\n      dashArray: borderStyle.dispute.dashArray\n    }\n  });\n  return {\n    chinaBoundaryLayer,\n    chinaHkmBoundaryLayer,\n    chinaDisputeBoundaryLayer\n  };\n};","map":{"version":3,"names":["PathLayer","deepAssign","CHINA_BOUNDARY_STYLE","createCountryBoundaryLayer","data","plotConfig","visible","minZoom","maxZoom","zIndex","chinaBorder","borderStyle","chinaBoundaryFeatures","features","filter","properties","includes","disputeBoundaryFeatures","hkmBoundaryFeatures","chinaBoundaryLayer","name","source","type","parser","color","field","value","size","width","style","opacity","national","chinaHkmBoundaryLayer","hkm","lineType","dashArray","chinaDisputeBoundaryLayer","dispute"],"sources":["../../../../src/plots/choropleth/layer.ts"],"sourcesContent":[null],"mappings":"AAAA,SAASA,SAAS,QAAQ,yBAAyB;AACnD,SAASC,UAAU,QAAQ,aAAa;AACxC,SAASC,oBAAoB,QAAQ,aAAa;AAGlD;;;AAGA,OAAO,MAAMC,0BAA0B,GAAGA,CAACC,IAAuB,EAAEC,UAA8B,KAAI;EACpG,MAAM;IAAEC,OAAO;IAAEC,OAAO;IAAEC,OAAO;IAAEC,MAAM,GAAG,CAAC;IAAEC;EAAW,CAAE,GAAGL,UAAU,IAAI,EAAE;EAC/E,MAAMM,WAAW,GACf,OAAOD,WAAW,KAAK,QAAQ,GAAGT,UAAU,CAAC,EAAE,EAAEC,oBAAoB,EAAEQ,WAAW,CAAC,GAAGR,oBAAoB;EAC5G,MAAMU,qBAAqB,GAAGR,IAAI,CAACS,QAAQ,CAACC,MAAM,CAAC,CAAC;IAAEC;EAAU,CAAE,KAChE,CAAC,OAAO,EAAE,UAAU,CAAC,CAACC,QAAQ,CAACD,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAG,MAAM,CAAC,CAAC,CACrD;EACD,MAAME,uBAAuB,GAAGb,IAAI,CAACS,QAAQ,CAACC,MAAM,CAAC,CAAC;IAAEC;EAAU,CAAE,KAAK,CAAAA,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAG,MAAM,CAAC,MAAK,SAAS,CAAC;EAC5G,MAAMG,mBAAmB,GAAGd,IAAI,CAACS,QAAQ,CAACC,MAAM,CAAC,CAAC;IAAEC;EAAU,CAAE,KAAK,CAAAA,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAG,MAAM,CAAC,MAAK,KAAK,CAAC;EAEpG,MAAMI,kBAAkB,GAAG,IAAInB,SAAS,CAAC;IACvCoB,IAAI,EAAE,oBAAoB;IAC1Bd,OAAO;IACPC,OAAO;IACPC,OAAO;IACPC,MAAM,EAAEA,MAAM,GAAG,GAAG;IACpBY,MAAM,EAAE;MACNjB,IAAI,EAAE;QAAEkB,IAAI,EAAE,mBAAmB;QAAET,QAAQ,EAAED;MAAqB,CAAE;MACpEW,MAAM,EAAE;QAAED,IAAI,EAAE;MAAS;KAC1B;IACDE,KAAK,EAAE;MACLC,KAAK,EAAE,MAAM;MACbC,KAAK,EAAEA,CAAC;QAAEJ;MAAI,CAAE,KAAI;QAClB,OAAOX,WAAW,CAACW,IAAI,CAAC,CAACE,KAAK;MAChC;KACD;IACDG,IAAI,EAAE;MACJF,KAAK,EAAE,MAAM;MACbC,KAAK,EAAEA,CAAC;QAAEJ;MAAI,CAAE,KAAI;QAClB,OAAOX,WAAW,CAACW,IAAI,CAAC,CAACM,KAAK;MAChC;KACD;IACDC,KAAK,EAAE;MACL;MACA;MACAC,OAAO,EAAEnB,WAAW,CAACoB,QAAQ,CAACD;;GAEjC,CAAC;EACF,MAAME,qBAAqB,GAAG,IAAIhC,SAAS,CAAC;IAC1CoB,IAAI,EAAE,uBAAuB;IAC7Bd,OAAO;IACPC,OAAO;IACPC,OAAO;IACPC,MAAM,EAAEA,MAAM,GAAG,GAAG;IACpBY,MAAM,EAAE;MACNjB,IAAI,EAAE;QAAEkB,IAAI,EAAE,mBAAmB;QAAET,QAAQ,EAAEK;MAAmB,CAAE;MAClEK,MAAM,EAAE;QAAED,IAAI,EAAE;MAAS;KAC1B;IACDE,KAAK,EAAEb,WAAW,CAACsB,GAAG,CAACT,KAAK;IAC5BG,IAAI,EAAEhB,WAAW,CAACsB,GAAG,CAACL,KAAK;IAC3BC,KAAK,EAAE;MACLC,OAAO,EAAEnB,WAAW,CAACsB,GAAG,CAACH,OAAO;MAChCI,QAAQ,EAAE,MAAM;MAChBC,SAAS,EAAExB,WAAW,CAACsB,GAAG,CAACE;;GAE9B,CAAC;EACF,MAAMC,yBAAyB,GAAG,IAAIpC,SAAS,CAAC;IAC9CoB,IAAI,EAAE,2BAA2B;IACjCd,OAAO;IACPC,OAAO;IACPC,OAAO;IACPC,MAAM,EAAEA,MAAM,GAAG,GAAG;IACpBY,MAAM,EAAE;MACNjB,IAAI,EAAE;QAAEkB,IAAI,EAAE,mBAAmB;QAAET,QAAQ,EAAEI;MAAuB,CAAE;MACtEM,MAAM,EAAE;QAAED,IAAI,EAAE;MAAS;KAC1B;IACDE,KAAK,EAAEb,WAAW,CAAC0B,OAAO,CAACb,KAAK;IAChCG,IAAI,EAAEhB,WAAW,CAAC0B,OAAO,CAACT,KAAK;IAC/BC,KAAK,EAAE;MACLC,OAAO,EAAEnB,WAAW,CAAC0B,OAAO,CAACP,OAAO;MACpCI,QAAQ,EAAE,MAAM;MAChBC,SAAS,EAAExB,WAAW,CAAC0B,OAAO,CAACF;;GAElC,CAAC;EAEF,OAAO;IAAEhB,kBAAkB;IAAEa,qBAAqB;IAAEI;EAAyB,CAAE;AACjF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}