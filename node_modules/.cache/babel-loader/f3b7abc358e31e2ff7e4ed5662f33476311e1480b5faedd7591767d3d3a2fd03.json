{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { CameraUniform, CoordinateUniform } from '@antv/l7-core';\n\n/**\n * 在渲染之前需要获取当前 Shader 所需 Uniform，例如：\n * 1. 从相机服务中获取 View & ProjectionMatrix，当前缩放等级等等\n * 2. 从坐标系服务中获取当前坐标系，例如是否是偏移坐标系\n *    @see https://yuque.antfin-inc.com/yuqi.pyq/fgetpa/doml91\n * 3. 当前 Layer 本身的样式属性\n */\nexport default class ShaderUniformPlugin {\n  constructor() {\n    _defineProperty(this, \"cameraService\", void 0);\n    _defineProperty(this, \"coordinateSystemService\", void 0);\n    _defineProperty(this, \"rendererService\", void 0);\n    _defineProperty(this, \"mapService\", void 0);\n    _defineProperty(this, \"layerService\", void 0);\n  }\n  apply(layer, {\n    rendererService,\n    mapService,\n    layerService,\n    coordinateSystemService,\n    cameraService\n  }) {\n    this.rendererService = rendererService;\n    this.mapService = mapService;\n    this.layerService = layerService;\n    this.coordinateSystemService = coordinateSystemService;\n    this.cameraService = cameraService;\n    let uniformBuffer;\n    if (!this.rendererService.uniformBuffers[0]) {\n      // Create a Uniform Buffer Object(UBO).\n      uniformBuffer = this.rendererService.createBuffer({\n        data: new Float32Array(16 * 4 + 4 * 7),\n        isUBO: true,\n        label: 'renderUniformBuffer'\n      });\n      this.rendererService.uniformBuffers[0] = uniformBuffer;\n    }\n    layer.hooks.beforeRender.tap('ShaderUniformPlugin', () => {\n      // @ts-ignore\n      const offset = layer.getLayerConfig().tileOrigin;\n      // 重新计算坐标系参数\n      this.coordinateSystemService.refresh(offset);\n      const {\n        width,\n        height\n      } = this.rendererService.getViewportSize();\n      const {\n        data,\n        uniforms\n      } = this.generateUBO(width, height);\n      if (this.layerService.alreadyInRendering && this.rendererService.uniformBuffers[0]) {\n        const renderUniformBuffer = this.rendererService.uniformBuffers[0];\n        // Update only once since all models can share one UBO.\n        renderUniformBuffer.subData({\n          offset: 0,\n          data\n        });\n      }\n\n      // For WebGL1. regl\n      const platformString = this.rendererService.queryVerdorInfo();\n      if (platformString === 'WebGL1') {\n        layer.models.forEach(model => {\n          model.addUniforms(_objectSpread(_objectSpread({}, uniforms), {}, {\n            // TODO: move these 2 uniforms to PixelPickingPlugin\n            u_PickingBuffer: layer.getLayerConfig().pickingBuffer || 0,\n            // Tip: 当前地图是否在拖动\n            u_shaderPick: Number(layer.getShaderPickStat())\n          }));\n        });\n      }\n    });\n  }\n  generateUBO(width, height) {\n    const u_ProjectionMatrix = this.cameraService.getProjectionMatrix();\n    const u_ViewMatrix = this.cameraService.getViewMatrix();\n    const u_ViewProjectionMatrix = this.cameraService.getViewProjectionMatrix();\n    const u_ModelMatrix = this.cameraService.getModelMatrix();\n    const u_ViewportCenterProjection = this.coordinateSystemService.getViewportCenterProjection();\n    const u_PixelsPerDegree = this.coordinateSystemService.getPixelsPerDegree();\n    const u_Zoom = this.cameraService.getZoom();\n    const u_PixelsPerDegree2 = this.coordinateSystemService.getPixelsPerDegree2();\n    const u_ZoomScale = this.cameraService.getZoomScale();\n    const u_PixelsPerMeter = this.coordinateSystemService.getPixelsPerMeter();\n    const u_CoordinateSystem = this.coordinateSystemService.getCoordinateSystem();\n    const u_CameraPosition = this.cameraService.getCameraPosition();\n    const u_DevicePixelRatio = window.devicePixelRatio;\n    const u_ViewportCenter = this.coordinateSystemService.getViewportCenter();\n    const u_ViewportSize = [width, height];\n    const u_FocalDistance = this.cameraService.getFocalDistance();\n    const data = [...u_ViewMatrix,\n    // 16\n    ...u_ProjectionMatrix,\n    // 16\n    ...u_ViewProjectionMatrix,\n    // 16\n    ...u_ModelMatrix,\n    // 16\n    ...u_ViewportCenterProjection,\n    // 4\n    ...u_PixelsPerDegree,\n    // 4\n    u_Zoom, ...u_PixelsPerDegree2,\n    // 4\n    u_ZoomScale, ...u_PixelsPerMeter,\n    // 4\n    u_CoordinateSystem, ...u_CameraPosition,\n    // 4\n    u_DevicePixelRatio,\n    // 4\n    ...u_ViewportCenter, ...u_ViewportSize,\n    // 4\n    u_FocalDistance,\n    // 1\n    0, 0, 0];\n    return {\n      data,\n      uniforms: {\n        // 相机参数，包含 VP 矩阵、缩放等级\n        [CameraUniform.ProjectionMatrix]: u_ProjectionMatrix,\n        [CameraUniform.ViewMatrix]: u_ViewMatrix,\n        [CameraUniform.ViewProjectionMatrix]: u_ViewProjectionMatrix,\n        [CameraUniform.Zoom]: u_Zoom,\n        [CameraUniform.ZoomScale]: u_ZoomScale,\n        [CameraUniform.FocalDistance]: u_FocalDistance,\n        [CameraUniform.CameraPosition]: u_CameraPosition,\n        // 坐标系参数\n        [CoordinateUniform.CoordinateSystem]: u_CoordinateSystem,\n        [CoordinateUniform.ViewportCenter]: u_ViewportCenter,\n        [CoordinateUniform.ViewportCenterProjection]: u_ViewportCenterProjection,\n        [CoordinateUniform.PixelsPerDegree]: u_PixelsPerDegree,\n        [CoordinateUniform.PixelsPerDegree2]: u_PixelsPerDegree2,\n        [CoordinateUniform.PixelsPerMeter]: u_PixelsPerMeter,\n        // 其他参数，例如视口大小、DPR 等\n        u_ViewportSize: u_ViewportSize,\n        u_ModelMatrix,\n        u_DevicePixelRatio: u_DevicePixelRatio\n      }\n    };\n  }\n}","map":{"version":3,"names":["_objectSpread","_defineProperty","CameraUniform","CoordinateUniform","ShaderUniformPlugin","constructor","apply","layer","rendererService","mapService","layerService","coordinateSystemService","cameraService","uniformBuffer","uniformBuffers","createBuffer","data","Float32Array","isUBO","label","hooks","beforeRender","tap","offset","getLayerConfig","tileOrigin","refresh","width","height","getViewportSize","uniforms","generateUBO","alreadyInRendering","renderUniformBuffer","subData","platformString","queryVerdorInfo","models","forEach","model","addUniforms","u_PickingBuffer","pickingBuffer","u_shaderPick","Number","getShaderPickStat","u_ProjectionMatrix","getProjectionMatrix","u_ViewMatrix","getViewMatrix","u_ViewProjectionMatrix","getViewProjectionMatrix","u_ModelMatrix","getModelMatrix","u_ViewportCenterProjection","getViewportCenterProjection","u_PixelsPerDegree","getPixelsPerDegree","u_Zoom","getZoom","u_PixelsPerDegree2","getPixelsPerDegree2","u_ZoomScale","getZoomScale","u_PixelsPerMeter","getPixelsPerMeter","u_CoordinateSystem","getCoordinateSystem","u_CameraPosition","getCameraPosition","u_DevicePixelRatio","window","devicePixelRatio","u_ViewportCenter","getViewportCenter","u_ViewportSize","u_FocalDistance","getFocalDistance","ProjectionMatrix","ViewMatrix","ViewProjectionMatrix","Zoom","ZoomScale","FocalDistance","CameraPosition","CoordinateSystem","ViewportCenter","ViewportCenterProjection","PixelsPerDegree","PixelsPerDegree2","PixelsPerMeter"],"sources":["/Users/bhanudahiya/Desktop/ledger-IQ/node_modules/@antv/l7-layers/es/plugins/ShaderUniformPlugin.js"],"sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { CameraUniform, CoordinateUniform } from '@antv/l7-core';\n\n/**\n * 在渲染之前需要获取当前 Shader 所需 Uniform，例如：\n * 1. 从相机服务中获取 View & ProjectionMatrix，当前缩放等级等等\n * 2. 从坐标系服务中获取当前坐标系，例如是否是偏移坐标系\n *    @see https://yuque.antfin-inc.com/yuqi.pyq/fgetpa/doml91\n * 3. 当前 Layer 本身的样式属性\n */\nexport default class ShaderUniformPlugin {\n  constructor() {\n    _defineProperty(this, \"cameraService\", void 0);\n    _defineProperty(this, \"coordinateSystemService\", void 0);\n    _defineProperty(this, \"rendererService\", void 0);\n    _defineProperty(this, \"mapService\", void 0);\n    _defineProperty(this, \"layerService\", void 0);\n  }\n  apply(layer, {\n    rendererService,\n    mapService,\n    layerService,\n    coordinateSystemService,\n    cameraService\n  }) {\n    this.rendererService = rendererService;\n    this.mapService = mapService;\n    this.layerService = layerService;\n    this.coordinateSystemService = coordinateSystemService;\n    this.cameraService = cameraService;\n    let uniformBuffer;\n    if (!this.rendererService.uniformBuffers[0]) {\n      // Create a Uniform Buffer Object(UBO).\n      uniformBuffer = this.rendererService.createBuffer({\n        data: new Float32Array(16 * 4 + 4 * 7),\n        isUBO: true,\n        label: 'renderUniformBuffer'\n      });\n      this.rendererService.uniformBuffers[0] = uniformBuffer;\n    }\n    layer.hooks.beforeRender.tap('ShaderUniformPlugin', () => {\n      // @ts-ignore\n      const offset = layer.getLayerConfig().tileOrigin;\n      // 重新计算坐标系参数\n      this.coordinateSystemService.refresh(offset);\n      const {\n        width,\n        height\n      } = this.rendererService.getViewportSize();\n      const {\n        data,\n        uniforms\n      } = this.generateUBO(width, height);\n      if (this.layerService.alreadyInRendering && this.rendererService.uniformBuffers[0]) {\n        const renderUniformBuffer = this.rendererService.uniformBuffers[0];\n        // Update only once since all models can share one UBO.\n        renderUniformBuffer.subData({\n          offset: 0,\n          data\n        });\n      }\n\n      // For WebGL1. regl\n      const platformString = this.rendererService.queryVerdorInfo();\n      if (platformString === 'WebGL1') {\n        layer.models.forEach(model => {\n          model.addUniforms(_objectSpread(_objectSpread({}, uniforms), {}, {\n            // TODO: move these 2 uniforms to PixelPickingPlugin\n            u_PickingBuffer: layer.getLayerConfig().pickingBuffer || 0,\n            // Tip: 当前地图是否在拖动\n            u_shaderPick: Number(layer.getShaderPickStat())\n          }));\n        });\n      }\n    });\n  }\n  generateUBO(width, height) {\n    const u_ProjectionMatrix = this.cameraService.getProjectionMatrix();\n    const u_ViewMatrix = this.cameraService.getViewMatrix();\n    const u_ViewProjectionMatrix = this.cameraService.getViewProjectionMatrix();\n    const u_ModelMatrix = this.cameraService.getModelMatrix();\n    const u_ViewportCenterProjection = this.coordinateSystemService.getViewportCenterProjection();\n    const u_PixelsPerDegree = this.coordinateSystemService.getPixelsPerDegree();\n    const u_Zoom = this.cameraService.getZoom();\n    const u_PixelsPerDegree2 = this.coordinateSystemService.getPixelsPerDegree2();\n    const u_ZoomScale = this.cameraService.getZoomScale();\n    const u_PixelsPerMeter = this.coordinateSystemService.getPixelsPerMeter();\n    const u_CoordinateSystem = this.coordinateSystemService.getCoordinateSystem();\n    const u_CameraPosition = this.cameraService.getCameraPosition();\n    const u_DevicePixelRatio = window.devicePixelRatio;\n    const u_ViewportCenter = this.coordinateSystemService.getViewportCenter();\n    const u_ViewportSize = [width, height];\n    const u_FocalDistance = this.cameraService.getFocalDistance();\n    const data = [...u_ViewMatrix,\n    // 16\n    ...u_ProjectionMatrix,\n    // 16\n    ...u_ViewProjectionMatrix,\n    // 16\n    ...u_ModelMatrix,\n    // 16\n    ...u_ViewportCenterProjection,\n    // 4\n    ...u_PixelsPerDegree,\n    // 4\n    u_Zoom, ...u_PixelsPerDegree2,\n    // 4\n    u_ZoomScale, ...u_PixelsPerMeter,\n    // 4\n    u_CoordinateSystem, ...u_CameraPosition,\n    // 4\n    u_DevicePixelRatio,\n    // 4\n    ...u_ViewportCenter, ...u_ViewportSize,\n    // 4\n    u_FocalDistance,\n    // 1\n    0, 0, 0];\n    return {\n      data,\n      uniforms: {\n        // 相机参数，包含 VP 矩阵、缩放等级\n        [CameraUniform.ProjectionMatrix]: u_ProjectionMatrix,\n        [CameraUniform.ViewMatrix]: u_ViewMatrix,\n        [CameraUniform.ViewProjectionMatrix]: u_ViewProjectionMatrix,\n        [CameraUniform.Zoom]: u_Zoom,\n        [CameraUniform.ZoomScale]: u_ZoomScale,\n        [CameraUniform.FocalDistance]: u_FocalDistance,\n        [CameraUniform.CameraPosition]: u_CameraPosition,\n        // 坐标系参数\n        [CoordinateUniform.CoordinateSystem]: u_CoordinateSystem,\n        [CoordinateUniform.ViewportCenter]: u_ViewportCenter,\n        [CoordinateUniform.ViewportCenterProjection]: u_ViewportCenterProjection,\n        [CoordinateUniform.PixelsPerDegree]: u_PixelsPerDegree,\n        [CoordinateUniform.PixelsPerDegree2]: u_PixelsPerDegree2,\n        [CoordinateUniform.PixelsPerMeter]: u_PixelsPerMeter,\n        // 其他参数，例如视口大小、DPR 等\n        u_ViewportSize: u_ViewportSize,\n        u_ModelMatrix,\n        u_DevicePixelRatio: u_DevicePixelRatio\n      }\n    };\n  }\n}"],"mappings":"AAAA,OAAOA,aAAa,MAAM,0CAA0C;AACpE,OAAOC,eAAe,MAAM,2CAA2C;AACvE,SAASC,aAAa,EAAEC,iBAAiB,QAAQ,eAAe;;AAEhE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAMC,mBAAmB,CAAC;EACvCC,WAAWA,CAAA,EAAG;IACZJ,eAAe,CAAC,IAAI,EAAE,eAAe,EAAE,KAAK,CAAC,CAAC;IAC9CA,eAAe,CAAC,IAAI,EAAE,yBAAyB,EAAE,KAAK,CAAC,CAAC;IACxDA,eAAe,CAAC,IAAI,EAAE,iBAAiB,EAAE,KAAK,CAAC,CAAC;IAChDA,eAAe,CAAC,IAAI,EAAE,YAAY,EAAE,KAAK,CAAC,CAAC;IAC3CA,eAAe,CAAC,IAAI,EAAE,cAAc,EAAE,KAAK,CAAC,CAAC;EAC/C;EACAK,KAAKA,CAACC,KAAK,EAAE;IACXC,eAAe;IACfC,UAAU;IACVC,YAAY;IACZC,uBAAuB;IACvBC;EACF,CAAC,EAAE;IACD,IAAI,CAACJ,eAAe,GAAGA,eAAe;IACtC,IAAI,CAACC,UAAU,GAAGA,UAAU;IAC5B,IAAI,CAACC,YAAY,GAAGA,YAAY;IAChC,IAAI,CAACC,uBAAuB,GAAGA,uBAAuB;IACtD,IAAI,CAACC,aAAa,GAAGA,aAAa;IAClC,IAAIC,aAAa;IACjB,IAAI,CAAC,IAAI,CAACL,eAAe,CAACM,cAAc,CAAC,CAAC,CAAC,EAAE;MAC3C;MACAD,aAAa,GAAG,IAAI,CAACL,eAAe,CAACO,YAAY,CAAC;QAChDC,IAAI,EAAE,IAAIC,YAAY,CAAC,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACtCC,KAAK,EAAE,IAAI;QACXC,KAAK,EAAE;MACT,CAAC,CAAC;MACF,IAAI,CAACX,eAAe,CAACM,cAAc,CAAC,CAAC,CAAC,GAAGD,aAAa;IACxD;IACAN,KAAK,CAACa,KAAK,CAACC,YAAY,CAACC,GAAG,CAAC,qBAAqB,EAAE,MAAM;MACxD;MACA,MAAMC,MAAM,GAAGhB,KAAK,CAACiB,cAAc,CAAC,CAAC,CAACC,UAAU;MAChD;MACA,IAAI,CAACd,uBAAuB,CAACe,OAAO,CAACH,MAAM,CAAC;MAC5C,MAAM;QACJI,KAAK;QACLC;MACF,CAAC,GAAG,IAAI,CAACpB,eAAe,CAACqB,eAAe,CAAC,CAAC;MAC1C,MAAM;QACJb,IAAI;QACJc;MACF,CAAC,GAAG,IAAI,CAACC,WAAW,CAACJ,KAAK,EAAEC,MAAM,CAAC;MACnC,IAAI,IAAI,CAAClB,YAAY,CAACsB,kBAAkB,IAAI,IAAI,CAACxB,eAAe,CAACM,cAAc,CAAC,CAAC,CAAC,EAAE;QAClF,MAAMmB,mBAAmB,GAAG,IAAI,CAACzB,eAAe,CAACM,cAAc,CAAC,CAAC,CAAC;QAClE;QACAmB,mBAAmB,CAACC,OAAO,CAAC;UAC1BX,MAAM,EAAE,CAAC;UACTP;QACF,CAAC,CAAC;MACJ;;MAEA;MACA,MAAMmB,cAAc,GAAG,IAAI,CAAC3B,eAAe,CAAC4B,eAAe,CAAC,CAAC;MAC7D,IAAID,cAAc,KAAK,QAAQ,EAAE;QAC/B5B,KAAK,CAAC8B,MAAM,CAACC,OAAO,CAACC,KAAK,IAAI;UAC5BA,KAAK,CAACC,WAAW,CAACxC,aAAa,CAACA,aAAa,CAAC,CAAC,CAAC,EAAE8B,QAAQ,CAAC,EAAE,CAAC,CAAC,EAAE;YAC/D;YACAW,eAAe,EAAElC,KAAK,CAACiB,cAAc,CAAC,CAAC,CAACkB,aAAa,IAAI,CAAC;YAC1D;YACAC,YAAY,EAAEC,MAAM,CAACrC,KAAK,CAACsC,iBAAiB,CAAC,CAAC;UAChD,CAAC,CAAC,CAAC;QACL,CAAC,CAAC;MACJ;IACF,CAAC,CAAC;EACJ;EACAd,WAAWA,CAACJ,KAAK,EAAEC,MAAM,EAAE;IACzB,MAAMkB,kBAAkB,GAAG,IAAI,CAAClC,aAAa,CAACmC,mBAAmB,CAAC,CAAC;IACnE,MAAMC,YAAY,GAAG,IAAI,CAACpC,aAAa,CAACqC,aAAa,CAAC,CAAC;IACvD,MAAMC,sBAAsB,GAAG,IAAI,CAACtC,aAAa,CAACuC,uBAAuB,CAAC,CAAC;IAC3E,MAAMC,aAAa,GAAG,IAAI,CAACxC,aAAa,CAACyC,cAAc,CAAC,CAAC;IACzD,MAAMC,0BAA0B,GAAG,IAAI,CAAC3C,uBAAuB,CAAC4C,2BAA2B,CAAC,CAAC;IAC7F,MAAMC,iBAAiB,GAAG,IAAI,CAAC7C,uBAAuB,CAAC8C,kBAAkB,CAAC,CAAC;IAC3E,MAAMC,MAAM,GAAG,IAAI,CAAC9C,aAAa,CAAC+C,OAAO,CAAC,CAAC;IAC3C,MAAMC,kBAAkB,GAAG,IAAI,CAACjD,uBAAuB,CAACkD,mBAAmB,CAAC,CAAC;IAC7E,MAAMC,WAAW,GAAG,IAAI,CAAClD,aAAa,CAACmD,YAAY,CAAC,CAAC;IACrD,MAAMC,gBAAgB,GAAG,IAAI,CAACrD,uBAAuB,CAACsD,iBAAiB,CAAC,CAAC;IACzE,MAAMC,kBAAkB,GAAG,IAAI,CAACvD,uBAAuB,CAACwD,mBAAmB,CAAC,CAAC;IAC7E,MAAMC,gBAAgB,GAAG,IAAI,CAACxD,aAAa,CAACyD,iBAAiB,CAAC,CAAC;IAC/D,MAAMC,kBAAkB,GAAGC,MAAM,CAACC,gBAAgB;IAClD,MAAMC,gBAAgB,GAAG,IAAI,CAAC9D,uBAAuB,CAAC+D,iBAAiB,CAAC,CAAC;IACzE,MAAMC,cAAc,GAAG,CAAChD,KAAK,EAAEC,MAAM,CAAC;IACtC,MAAMgD,eAAe,GAAG,IAAI,CAAChE,aAAa,CAACiE,gBAAgB,CAAC,CAAC;IAC7D,MAAM7D,IAAI,GAAG,CAAC,GAAGgC,YAAY;IAC7B;IACA,GAAGF,kBAAkB;IACrB;IACA,GAAGI,sBAAsB;IACzB;IACA,GAAGE,aAAa;IAChB;IACA,GAAGE,0BAA0B;IAC7B;IACA,GAAGE,iBAAiB;IACpB;IACAE,MAAM,EAAE,GAAGE,kBAAkB;IAC7B;IACAE,WAAW,EAAE,GAAGE,gBAAgB;IAChC;IACAE,kBAAkB,EAAE,GAAGE,gBAAgB;IACvC;IACAE,kBAAkB;IAClB;IACA,GAAGG,gBAAgB,EAAE,GAAGE,cAAc;IACtC;IACAC,eAAe;IACf;IACA,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACR,OAAO;MACL5D,IAAI;MACJc,QAAQ,EAAE;QACR;QACA,CAAC5B,aAAa,CAAC4E,gBAAgB,GAAGhC,kBAAkB;QACpD,CAAC5C,aAAa,CAAC6E,UAAU,GAAG/B,YAAY;QACxC,CAAC9C,aAAa,CAAC8E,oBAAoB,GAAG9B,sBAAsB;QAC5D,CAAChD,aAAa,CAAC+E,IAAI,GAAGvB,MAAM;QAC5B,CAACxD,aAAa,CAACgF,SAAS,GAAGpB,WAAW;QACtC,CAAC5D,aAAa,CAACiF,aAAa,GAAGP,eAAe;QAC9C,CAAC1E,aAAa,CAACkF,cAAc,GAAGhB,gBAAgB;QAChD;QACA,CAACjE,iBAAiB,CAACkF,gBAAgB,GAAGnB,kBAAkB;QACxD,CAAC/D,iBAAiB,CAACmF,cAAc,GAAGb,gBAAgB;QACpD,CAACtE,iBAAiB,CAACoF,wBAAwB,GAAGjC,0BAA0B;QACxE,CAACnD,iBAAiB,CAACqF,eAAe,GAAGhC,iBAAiB;QACtD,CAACrD,iBAAiB,CAACsF,gBAAgB,GAAG7B,kBAAkB;QACxD,CAACzD,iBAAiB,CAACuF,cAAc,GAAG1B,gBAAgB;QACpD;QACAW,cAAc,EAAEA,cAAc;QAC9BvB,aAAa;QACbkB,kBAAkB,EAAEA;MACtB;IACF,CAAC;EACH;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}