{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport MaskLayer from \"../../mask\";\nimport Tile from \"./Tile\";\nexport default class MaskTile extends Tile {\n  initTileLayer() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const attributes = _this.parent.getLayerAttributeConfig();\n      const layerOptions = _this.getLayerOptions();\n      const sourceOptions = _this.getSourceOption();\n      const layer = new MaskLayer(_objectSpread({}, layerOptions)).source(sourceOptions.data, sourceOptions.options);\n\n      // 初始化数据映射\n      // tslint:disable-next-line: no-unused-expression\n      attributes && Object.keys(attributes).forEach(type => {\n        var _attributes$attr, _attributes$attr2;\n        const attr = type;\n        // @ts-ignore\n        layer[attr]((_attributes$attr = attributes[attr]) === null || _attributes$attr === void 0 ? void 0 : _attributes$attr.field, (_attributes$attr2 = attributes[attr]) === null || _attributes$attr2 === void 0 ? void 0 : _attributes$attr2.values);\n      });\n      yield _this.addLayer(layer);\n      _this.isLoaded = true;\n    })();\n  }\n  getFeatures(sourceLayer) {\n    if (!sourceLayer) {\n      return [];\n    }\n    const source = this.sourceTile.data;\n    return source.getTileData(sourceLayer);\n  }\n  getSourceOption() {\n    const rawSource = this.parent.getSource();\n    const {\n      sourceLayer,\n      featureId\n    } = this.parent.getLayerConfig();\n    const features = this.getFeatures(sourceLayer);\n    return {\n      data: {\n        type: 'FeatureCollection',\n        features\n      },\n      options: {\n        parser: {\n          type: 'geojson',\n          featureId\n        },\n        transforms: rawSource.transforms\n      }\n    };\n  }\n}","map":{"version":3,"names":["_objectSpread","_asyncToGenerator","MaskLayer","Tile","MaskTile","initTileLayer","_this","attributes","parent","getLayerAttributeConfig","layerOptions","getLayerOptions","sourceOptions","getSourceOption","layer","source","data","options","Object","keys","forEach","type","_attributes$attr","_attributes$attr2","attr","field","values","addLayer","isLoaded","getFeatures","sourceLayer","sourceTile","getTileData","rawSource","getSource","featureId","getLayerConfig","features","parser","transforms"],"sources":["/Users/bhanudahiya/Desktop/ledger-IQ/node_modules/@antv/l7-layers/es/tile/tile/MaskTile.js"],"sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport MaskLayer from \"../../mask\";\nimport Tile from \"./Tile\";\nexport default class MaskTile extends Tile {\n  initTileLayer() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const attributes = _this.parent.getLayerAttributeConfig();\n      const layerOptions = _this.getLayerOptions();\n      const sourceOptions = _this.getSourceOption();\n      const layer = new MaskLayer(_objectSpread({}, layerOptions)).source(sourceOptions.data, sourceOptions.options);\n\n      // 初始化数据映射\n      // tslint:disable-next-line: no-unused-expression\n      attributes && Object.keys(attributes).forEach(type => {\n        var _attributes$attr, _attributes$attr2;\n        const attr = type;\n        // @ts-ignore\n        layer[attr]((_attributes$attr = attributes[attr]) === null || _attributes$attr === void 0 ? void 0 : _attributes$attr.field, (_attributes$attr2 = attributes[attr]) === null || _attributes$attr2 === void 0 ? void 0 : _attributes$attr2.values);\n      });\n      yield _this.addLayer(layer);\n      _this.isLoaded = true;\n    })();\n  }\n  getFeatures(sourceLayer) {\n    if (!sourceLayer) {\n      return [];\n    }\n    const source = this.sourceTile.data;\n    return source.getTileData(sourceLayer);\n  }\n  getSourceOption() {\n    const rawSource = this.parent.getSource();\n    const {\n      sourceLayer,\n      featureId\n    } = this.parent.getLayerConfig();\n    const features = this.getFeatures(sourceLayer);\n    return {\n      data: {\n        type: 'FeatureCollection',\n        features\n      },\n      options: {\n        parser: {\n          type: 'geojson',\n          featureId\n        },\n        transforms: rawSource.transforms\n      }\n    };\n  }\n}"],"mappings":"AAAA,OAAOA,aAAa,MAAM,0CAA0C;AACpE,OAAOC,iBAAiB,MAAM,6CAA6C;AAC3E,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,IAAI,MAAM,QAAQ;AACzB,eAAe,MAAMC,QAAQ,SAASD,IAAI,CAAC;EACzCE,aAAaA,CAAA,EAAG;IACd,IAAIC,KAAK,GAAG,IAAI;IAChB,OAAOL,iBAAiB,CAAC,aAAa;MACpC,MAAMM,UAAU,GAAGD,KAAK,CAACE,MAAM,CAACC,uBAAuB,CAAC,CAAC;MACzD,MAAMC,YAAY,GAAGJ,KAAK,CAACK,eAAe,CAAC,CAAC;MAC5C,MAAMC,aAAa,GAAGN,KAAK,CAACO,eAAe,CAAC,CAAC;MAC7C,MAAMC,KAAK,GAAG,IAAIZ,SAAS,CAACF,aAAa,CAAC,CAAC,CAAC,EAAEU,YAAY,CAAC,CAAC,CAACK,MAAM,CAACH,aAAa,CAACI,IAAI,EAAEJ,aAAa,CAACK,OAAO,CAAC;;MAE9G;MACA;MACAV,UAAU,IAAIW,MAAM,CAACC,IAAI,CAACZ,UAAU,CAAC,CAACa,OAAO,CAACC,IAAI,IAAI;QACpD,IAAIC,gBAAgB,EAAEC,iBAAiB;QACvC,MAAMC,IAAI,GAAGH,IAAI;QACjB;QACAP,KAAK,CAACU,IAAI,CAAC,CAAC,CAACF,gBAAgB,GAAGf,UAAU,CAACiB,IAAI,CAAC,MAAM,IAAI,IAAIF,gBAAgB,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,gBAAgB,CAACG,KAAK,EAAE,CAACF,iBAAiB,GAAGhB,UAAU,CAACiB,IAAI,CAAC,MAAM,IAAI,IAAID,iBAAiB,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,iBAAiB,CAACG,MAAM,CAAC;MACnP,CAAC,CAAC;MACF,MAAMpB,KAAK,CAACqB,QAAQ,CAACb,KAAK,CAAC;MAC3BR,KAAK,CAACsB,QAAQ,GAAG,IAAI;IACvB,CAAC,CAAC,CAAC,CAAC;EACN;EACAC,WAAWA,CAACC,WAAW,EAAE;IACvB,IAAI,CAACA,WAAW,EAAE;MAChB,OAAO,EAAE;IACX;IACA,MAAMf,MAAM,GAAG,IAAI,CAACgB,UAAU,CAACf,IAAI;IACnC,OAAOD,MAAM,CAACiB,WAAW,CAACF,WAAW,CAAC;EACxC;EACAjB,eAAeA,CAAA,EAAG;IAChB,MAAMoB,SAAS,GAAG,IAAI,CAACzB,MAAM,CAAC0B,SAAS,CAAC,CAAC;IACzC,MAAM;MACJJ,WAAW;MACXK;IACF,CAAC,GAAG,IAAI,CAAC3B,MAAM,CAAC4B,cAAc,CAAC,CAAC;IAChC,MAAMC,QAAQ,GAAG,IAAI,CAACR,WAAW,CAACC,WAAW,CAAC;IAC9C,OAAO;MACLd,IAAI,EAAE;QACJK,IAAI,EAAE,mBAAmB;QACzBgB;MACF,CAAC;MACDpB,OAAO,EAAE;QACPqB,MAAM,EAAE;UACNjB,IAAI,EAAE,SAAS;UACfc;QACF,CAAC;QACDI,UAAU,EAAEN,SAAS,CAACM;MACxB;IACF,CAAC;EACH;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}