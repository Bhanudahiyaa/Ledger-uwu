{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _initializerDefineProperty from \"@babel/runtime/helpers/initializerDefineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _applyDecoratedDescriptor from \"@babel/runtime/helpers/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"@babel/runtime/helpers/initializerWarningHelper\";\nvar _dec, _dec2, _dec3, _dec4, _class, _class2, _descriptor, _descriptor2, _descriptor3, _temp;\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it.return != null) it.return();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n  return arr2;\n}\nimport { IDENTIFIER } from '@antv/g-webgpu-core'; // tslint:disable-next-line:no-submodule-imports\n\nimport * as WebGPUConstants from '@webgpu/types/dist/constants';\nimport { inject, injectable } from 'inversify';\n\n/* babel-plugin-inline-import './material/shaders/map.frag.declaration.glsl' */\nvar mapFragDeclaration = \"#ifdef USE_MAP\\n  uniform sampler2D map;\\n#endif\";\n\n/* babel-plugin-inline-import './material/shaders/map.frag.main.glsl' */\nvar mapFragMain = \"#ifdef USE_MAP\\n  vec4 texelColor = texture2D(map, vUv);\\n  // texelColor = mapTexelToLinear(texelColor);\\n  diffuseColor *= texelColor;\\n#endif\";\n\n/* babel-plugin-inline-import './material/shaders/uv.frag.declaration.glsl' */\nvar uvFragDeclaration = \"#if (defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ))\\n  varying vec2 vUv;\\n#endif\";\n\n/* babel-plugin-inline-import './material/shaders/uv.vert.declaration.glsl' */\nvar uvVertDeclaration = \"#ifdef USE_UV\\n  attribute vec2 uv;\\n\\t#ifdef UVS_VERTEX_ONLY\\n    vec2 vUv;\\n\\t#else\\n\\t\\tvarying vec2 vUv;\\n\\t#endif\\n\\tuniform mat3 uvTransform;\\n#endif\";\n\n/* babel-plugin-inline-import './material/shaders/uv.vert.main.glsl' */\nvar uvVertMain = \"#ifdef USE_UV\\n  vUv = (uvTransform * vec3(uv, 1)).xy;\\n#endif\";\nexport var Renderer = (_dec = injectable(), _dec2 = inject(IDENTIFIER.RenderEngine), _dec3 = inject(IDENTIFIER.ShaderModuleService), _dec4 = inject(IDENTIFIER.ConfigService), _dec(_class = (_class2 = (_temp = /*#__PURE__*/function () {\n  function Renderer() {\n    _classCallCheck(this, Renderer);\n    this.container = void 0;\n    _initializerDefineProperty(this, \"engine\", _descriptor, this);\n    _initializerDefineProperty(this, \"shaderModule\", _descriptor2, this);\n    _initializerDefineProperty(this, \"configService\", _descriptor3, this);\n    this.inited = false;\n    this.rendering = false;\n    this.pendings = [];\n    this.views = [];\n    this.size = void 0;\n  }\n  _createClass(Renderer, [{\n    key: \"init\",\n    value: function () {\n      var _init = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var systems, config, _iterator, _step, system;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                // 模块化处理\n                this.shaderModule.registerBuiltinModules();\n                this.shaderModule.registerModule('uv.vert.declaration', {\n                  vs: uvVertDeclaration\n                });\n                this.shaderModule.registerModule('uv.vert.main', {\n                  vs: uvVertMain\n                });\n                this.shaderModule.registerModule('uv.frag.declaration', {\n                  fs: uvFragDeclaration\n                });\n                this.shaderModule.registerModule('map.frag.declaration', {\n                  fs: mapFragDeclaration\n                });\n                this.shaderModule.registerModule('map.frag.main', {\n                  fs: mapFragMain\n                });\n                systems = this.container.getAll(IDENTIFIER.Systems);\n                config = this.configService.get();\n                if (!config.canvas) {\n                  _context.next = 30;\n                  break;\n                }\n                _context.next = 11;\n                return this.engine.init({\n                  canvas: config.canvas,\n                  swapChainFormat: WebGPUConstants.TextureFormat.BGRA8Unorm,\n                  antialiasing: false\n                });\n              case 11:\n                _iterator = _createForOfIteratorHelper(systems);\n                _context.prev = 12;\n                _iterator.s();\n              case 14:\n                if ((_step = _iterator.n()).done) {\n                  _context.next = 21;\n                  break;\n                }\n                system = _step.value;\n                if (!system.initialize) {\n                  _context.next = 19;\n                  break;\n                }\n                _context.next = 19;\n                return system.initialize();\n              case 19:\n                _context.next = 14;\n                break;\n              case 21:\n                _context.next = 26;\n                break;\n              case 23:\n                _context.prev = 23;\n                _context.t0 = _context[\"catch\"](12);\n                _iterator.e(_context.t0);\n              case 26:\n                _context.prev = 26;\n                _iterator.f();\n                return _context.finish(26);\n              case 29:\n                this.inited = true;\n              case 30:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[12, 23, 26, 29]]);\n      }));\n      function init() {\n        return _init.apply(this, arguments);\n      }\n      return init;\n    }()\n  }, {\n    key: \"render\",\n    value: function () {\n      var _render = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var systems,\n          _len,\n          views,\n          _key,\n          _iterator2,\n          _step2,\n          system,\n          _args2 = arguments;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!(!this.inited || this.rendering)) {\n                  _context2.next = 2;\n                  break;\n                }\n                return _context2.abrupt(\"return\");\n              case 2:\n                if (this.pendings.length) {\n                  this.pendings.forEach(function (pending) {\n                    pending();\n                  });\n                }\n                this.rendering = true;\n                this.engine.beginFrame();\n                systems = this.container.getAll(IDENTIFIER.Systems);\n                for (_len = _args2.length, views = new Array(_len), _key = 0; _key < _len; _key++) {\n                  views[_key] = _args2[_key];\n                }\n                _iterator2 = _createForOfIteratorHelper(systems);\n                _context2.prev = 8;\n                _iterator2.s();\n              case 10:\n                if ((_step2 = _iterator2.n()).done) {\n                  _context2.next = 17;\n                  break;\n                }\n                system = _step2.value;\n                if (!system.execute) {\n                  _context2.next = 15;\n                  break;\n                }\n                _context2.next = 15;\n                return system.execute(views);\n              case 15:\n                _context2.next = 10;\n                break;\n              case 17:\n                _context2.next = 22;\n                break;\n              case 19:\n                _context2.prev = 19;\n                _context2.t0 = _context2[\"catch\"](8);\n                _iterator2.e(_context2.t0);\n              case 22:\n                _context2.prev = 22;\n                _iterator2.f();\n                return _context2.finish(22);\n              case 25:\n                // 录制一遍绘制命令，后续直接播放\n                // if (this.useRenderBundle) {\n                //   if (!this.renderBundleRecorded) {\n                //     this.engine.startRecordBundle();\n                //     if (this.onUpdate) {\n                //       await this.onUpdate(this.engine);\n                //     }\n                //     this.renderBundle = this.engine.stopRecordBundle();\n                //     this.renderBundleRecorded = true;\n                //   }\n                //   this.engine.executeBundles([this.renderBundle]);\n                // } else {\n                //   if (this.onUpdate) {\n                //     await this.onUpdate(this.engine);\n                //   }\n                // }\n                this.engine.endFrame();\n                this.rendering = false;\n              case 27:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[8, 19, 22, 25]]);\n      }));\n      function render() {\n        return _render.apply(this, arguments);\n      }\n      return render;\n    }()\n  }, {\n    key: \"clear\",\n    value: function clear(options) {\n      var _this = this;\n      if (this.inited) {\n        this.engine.clear(options);\n      } else {\n        this.pendings.unshift(function () {\n          _this.engine.clear(options);\n          _this.pendings.shift();\n        });\n      }\n      return this;\n    } // public setScissor(\n    //   scissor: Partial<{\n    //     enable: boolean;\n    //     box: {\n    //       x: number;\n    //       y: number;\n    //       width: number;\n    //       height: number;\n    //     };\n    //   }>,\n    // ) {\n    //   this.engine.setScissor(scissor);\n    //   return this;\n    // }\n  }, {\n    key: \"setSize\",\n    value: function setSize(_ref) {\n      var width = _ref.width,\n        height = _ref.height;\n      var canvas = this.engine.getCanvas();\n      this.size = {\n        width: width,\n        height: height\n      };\n      canvas.width = width;\n      canvas.height = height;\n      return this;\n    }\n  }, {\n    key: \"getSize\",\n    value: function getSize() {\n      return this.size;\n    }\n  }]);\n  return Renderer;\n}(), _temp), _descriptor = _applyDecoratedDescriptor(_class2.prototype, \"engine\", [_dec2], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, \"shaderModule\", [_dec3], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, \"configService\", [_dec4], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _class2)) || _class);","map":{"version":3,"names":["IDENTIFIER","WebGPUConstants","inject","injectable","Renderer","_dec","_dec2","RenderEngine","_dec3","ShaderModuleService","_dec4","ConfigService","_class","_class2","_temp","_classCallCheck","container","_initializerDefineProperty","_descriptor","_descriptor2","_descriptor3","inited","rendering","pendings","views","size","_createClass","key","value","_init","_asyncToGenerator","_regeneratorRuntime","mark","_callee","systems","config","_iterator","_step","system","wrap","_callee$","_context","prev","next","shaderModule","registerBuiltinModules","registerModule","vs","uvVertDeclaration","uvVertMain","fs","uvFragDeclaration","mapFragDeclaration","mapFragMain","getAll","Systems","configService","get","canvas","engine","init","swapChainFormat","TextureFormat","BGRA8Unorm","antialiasing","_createForOfIteratorHelper","s","n","done","initialize","t0","e","f","finish","stop","apply","arguments","_render","_callee2","_len","_key","_iterator2","_step2","_args2","_callee2$","_context2","abrupt","length","forEach","pending","beginFrame","Array","execute","endFrame","render","clear","options","_this","unshift","shift","setSize","_ref","width","height","getCanvas","getSize","_applyDecoratedDescriptor","prototype","configurable","enumerable","writable","initializer"],"sources":["/Users/bhanudahiya/Desktop/ledger-IQ/node_modules/@antv/g-webgpu/src/Renderer.ts"],"sourcesContent":["import {\n  IClearOptions,\n  IConfigService,\n  IDENTIFIER,\n  IRendererService,\n  IShaderModuleService,\n  ISystem,\n  IView,\n} from '@antv/g-webgpu-core';\n// tslint:disable-next-line:no-submodule-imports\nimport * as WebGPUConstants from '@webgpu/types/dist/constants';\nimport { Container, inject, injectable, multiInject } from 'inversify';\nimport mapFragDeclaration from './material/shaders/map.frag.declaration.glsl';\nimport mapFragMain from './material/shaders/map.frag.main.glsl';\nimport uvFragDeclaration from './material/shaders/uv.frag.declaration.glsl';\nimport uvVertDeclaration from './material/shaders/uv.vert.declaration.glsl';\nimport uvVertMain from './material/shaders/uv.vert.main.glsl';\n\n@injectable()\nexport class Renderer {\n  public container: Container;\n  @inject(IDENTIFIER.RenderEngine)\n  private readonly engine: IRendererService;\n\n  @inject(IDENTIFIER.ShaderModuleService)\n  private readonly shaderModule: IShaderModuleService;\n\n  @inject(IDENTIFIER.ConfigService)\n  private readonly configService: IConfigService;\n\n  // @multiInject(IDENTIFIER.Systems)\n  // private readonly systems: ISystem[];\n\n  private inited: boolean = false;\n\n  private rendering: boolean = false;\n\n  private pendings: Array<() => void> = [];\n\n  private views: IView[] = [];\n  private size: { width: number; height: number };\n\n  public async init() {\n    // 模块化处理\n    this.shaderModule.registerBuiltinModules();\n    this.shaderModule.registerModule('uv.vert.declaration', {\n      vs: uvVertDeclaration,\n    });\n    this.shaderModule.registerModule('uv.vert.main', {\n      vs: uvVertMain,\n    });\n    this.shaderModule.registerModule('uv.frag.declaration', {\n      fs: uvFragDeclaration,\n    });\n    this.shaderModule.registerModule('map.frag.declaration', {\n      fs: mapFragDeclaration,\n    });\n    this.shaderModule.registerModule('map.frag.main', {\n      fs: mapFragMain,\n    });\n\n    const systems = this.container.getAll<ISystem>(IDENTIFIER.Systems);\n\n    const config = this.configService.get();\n\n    if (config.canvas) {\n      await this.engine.init({\n        canvas: config.canvas,\n        swapChainFormat: WebGPUConstants.TextureFormat.BGRA8Unorm,\n        antialiasing: false,\n      });\n\n      for (const system of systems) {\n        if (system.initialize) {\n          await system.initialize();\n        }\n      }\n\n      this.inited = true;\n    }\n  }\n\n  public async render(...views: IView[]) {\n    if (!this.inited || this.rendering) {\n      return;\n    }\n\n    if (this.pendings.length) {\n      this.pendings.forEach((pending) => {\n        pending();\n      });\n    }\n\n    this.rendering = true;\n    this.engine.beginFrame();\n\n    const systems = this.container.getAll<ISystem>(IDENTIFIER.Systems);\n    for (const system of systems) {\n      if (system.execute) {\n        await system.execute(views);\n      }\n    }\n\n    // 录制一遍绘制命令，后续直接播放\n    // if (this.useRenderBundle) {\n    //   if (!this.renderBundleRecorded) {\n    //     this.engine.startRecordBundle();\n    //     if (this.onUpdate) {\n    //       await this.onUpdate(this.engine);\n    //     }\n    //     this.renderBundle = this.engine.stopRecordBundle();\n    //     this.renderBundleRecorded = true;\n    //   }\n    //   this.engine.executeBundles([this.renderBundle]);\n    // } else {\n    //   if (this.onUpdate) {\n    //     await this.onUpdate(this.engine);\n    //   }\n    // }\n\n    this.engine.endFrame();\n    this.rendering = false;\n  }\n\n  public clear(options: IClearOptions) {\n    if (this.inited) {\n      this.engine.clear(options);\n    } else {\n      this.pendings.unshift(() => {\n        this.engine.clear(options);\n        this.pendings.shift();\n      });\n    }\n    return this;\n  }\n\n  // public setScissor(\n  //   scissor: Partial<{\n  //     enable: boolean;\n  //     box: {\n  //       x: number;\n  //       y: number;\n  //       width: number;\n  //       height: number;\n  //     };\n  //   }>,\n  // ) {\n  //   this.engine.setScissor(scissor);\n  //   return this;\n  // }\n\n  public setSize({ width, height }: { width: number; height: number }) {\n    const canvas = this.engine.getCanvas();\n    this.size = { width, height };\n    canvas.width = width;\n    canvas.height = height;\n    return this;\n  }\n\n  public getSize() {\n    return this.size;\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}