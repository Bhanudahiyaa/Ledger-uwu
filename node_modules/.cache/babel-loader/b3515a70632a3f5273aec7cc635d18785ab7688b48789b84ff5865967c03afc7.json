{"ast":null,"code":"export function heatMap3DTriangulation(width, height) {\n  const indices = [];\n  const vertices = [];\n  const uvs = [];\n  const gridX1 = width + 1;\n  const gridY1 = height + 1;\n  const widthHalf = width / 2;\n  const heightHalf = height / 2;\n  for (let iy = 0; iy < gridY1; iy++) {\n    const y = iy - heightHalf;\n    for (let ix = 0; ix < gridX1; ix++) {\n      const x = ix - widthHalf;\n      vertices.push(x / widthHalf, -y / heightHalf, 0);\n      uvs.push(ix / width);\n      uvs.push(1 - iy / height);\n    }\n  }\n  for (let iy = 0; iy < height; iy++) {\n    for (let ix = 0; ix < width; ix++) {\n      const a = ix + gridX1 * iy;\n      const b = ix + gridX1 * (iy + 1);\n      const c = ix + 1 + gridX1 * (iy + 1);\n      const d = ix + 1 + gridX1 * iy;\n      indices.push(a, b, d);\n      indices.push(b, c, d);\n    }\n  }\n  return {\n    vertices,\n    indices,\n    uvs\n  };\n}","map":{"version":3,"names":["heatMap3DTriangulation","width","height","indices","vertices","uvs","gridX1","gridY1","widthHalf","heightHalf","iy","y","ix","x","push","a","b","c","d"],"sources":["/Users/bhanudahiya/Desktop/ledger-IQ/node_modules/@antv/l7-layers/es/heatmap/triangulation.js"],"sourcesContent":["export function heatMap3DTriangulation(width, height) {\n  const indices = [];\n  const vertices = [];\n  const uvs = [];\n  const gridX1 = width + 1;\n  const gridY1 = height + 1;\n  const widthHalf = width / 2;\n  const heightHalf = height / 2;\n  for (let iy = 0; iy < gridY1; iy++) {\n    const y = iy - heightHalf;\n    for (let ix = 0; ix < gridX1; ix++) {\n      const x = ix - widthHalf;\n      vertices.push(x / widthHalf, -y / heightHalf, 0);\n      uvs.push(ix / width);\n      uvs.push(1 - iy / height);\n    }\n  }\n  for (let iy = 0; iy < height; iy++) {\n    for (let ix = 0; ix < width; ix++) {\n      const a = ix + gridX1 * iy;\n      const b = ix + gridX1 * (iy + 1);\n      const c = ix + 1 + gridX1 * (iy + 1);\n      const d = ix + 1 + gridX1 * iy;\n      indices.push(a, b, d);\n      indices.push(b, c, d);\n    }\n  }\n  return {\n    vertices,\n    indices,\n    uvs\n  };\n}"],"mappings":"AAAA,OAAO,SAASA,sBAAsBA,CAACC,KAAK,EAAEC,MAAM,EAAE;EACpD,MAAMC,OAAO,GAAG,EAAE;EAClB,MAAMC,QAAQ,GAAG,EAAE;EACnB,MAAMC,GAAG,GAAG,EAAE;EACd,MAAMC,MAAM,GAAGL,KAAK,GAAG,CAAC;EACxB,MAAMM,MAAM,GAAGL,MAAM,GAAG,CAAC;EACzB,MAAMM,SAAS,GAAGP,KAAK,GAAG,CAAC;EAC3B,MAAMQ,UAAU,GAAGP,MAAM,GAAG,CAAC;EAC7B,KAAK,IAAIQ,EAAE,GAAG,CAAC,EAAEA,EAAE,GAAGH,MAAM,EAAEG,EAAE,EAAE,EAAE;IAClC,MAAMC,CAAC,GAAGD,EAAE,GAAGD,UAAU;IACzB,KAAK,IAAIG,EAAE,GAAG,CAAC,EAAEA,EAAE,GAAGN,MAAM,EAAEM,EAAE,EAAE,EAAE;MAClC,MAAMC,CAAC,GAAGD,EAAE,GAAGJ,SAAS;MACxBJ,QAAQ,CAACU,IAAI,CAACD,CAAC,GAAGL,SAAS,EAAE,CAACG,CAAC,GAAGF,UAAU,EAAE,CAAC,CAAC;MAChDJ,GAAG,CAACS,IAAI,CAACF,EAAE,GAAGX,KAAK,CAAC;MACpBI,GAAG,CAACS,IAAI,CAAC,CAAC,GAAGJ,EAAE,GAAGR,MAAM,CAAC;IAC3B;EACF;EACA,KAAK,IAAIQ,EAAE,GAAG,CAAC,EAAEA,EAAE,GAAGR,MAAM,EAAEQ,EAAE,EAAE,EAAE;IAClC,KAAK,IAAIE,EAAE,GAAG,CAAC,EAAEA,EAAE,GAAGX,KAAK,EAAEW,EAAE,EAAE,EAAE;MACjC,MAAMG,CAAC,GAAGH,EAAE,GAAGN,MAAM,GAAGI,EAAE;MAC1B,MAAMM,CAAC,GAAGJ,EAAE,GAAGN,MAAM,IAAII,EAAE,GAAG,CAAC,CAAC;MAChC,MAAMO,CAAC,GAAGL,EAAE,GAAG,CAAC,GAAGN,MAAM,IAAII,EAAE,GAAG,CAAC,CAAC;MACpC,MAAMQ,CAAC,GAAGN,EAAE,GAAG,CAAC,GAAGN,MAAM,GAAGI,EAAE;MAC9BP,OAAO,CAACW,IAAI,CAACC,CAAC,EAAEC,CAAC,EAAEE,CAAC,CAAC;MACrBf,OAAO,CAACW,IAAI,CAACE,CAAC,EAAEC,CAAC,EAAEC,CAAC,CAAC;IACvB;EACF;EACA,OAAO;IACLd,QAAQ;IACRD,OAAO;IACPE;EACF,CAAC;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}