{"ast":null,"code":"import { DOM } from \"../util/dom\";\nimport { DragHandler } from \"./drag_handler\";\nimport { MouseMoveStateManager } from \"./drag_move_state_manager\";\n\n/**\n * `MousePanHandler` allows the user to pan the map by clicking and dragging\n */\n\n/**\n * `MouseRotateHandler` allows the user to rotate the map by clicking and dragging\n */\n\n/**\n * `MousePitchHandler` allows the user to zoom the map by pitching\n */\n\nconst LEFT_BUTTON = 0;\nconst RIGHT_BUTTON = 2;\nconst assignEvents = handler => {\n  handler.mousedown = handler.dragStart;\n  handler.mousemoveWindow = handler.dragMove;\n  handler.mouseup = handler.dragEnd;\n  handler.contextmenu = e => {\n    e.preventDefault();\n  };\n};\nexport const generateMousePanHandler = ({\n  enable,\n  clickTolerance\n}) => {\n  const mouseMoveStateManager = new MouseMoveStateManager({\n    checkCorrectEvent: e => DOM.mouseButton(e) === LEFT_BUTTON && !e.ctrlKey\n  });\n  return new DragHandler({\n    clickTolerance,\n    move: (lastPoint, point) => ({\n      around: point,\n      panDelta: point.sub(lastPoint)\n    }),\n    activateOnStart: true,\n    moveStateManager: mouseMoveStateManager,\n    enable,\n    assignEvents\n  });\n};\nexport const generateMouseRotationHandler = ({\n  enable,\n  clickTolerance,\n  bearingDegreesPerPixelMoved = 0.8\n}) => {\n  const mouseMoveStateManager = new MouseMoveStateManager({\n    checkCorrectEvent: e => DOM.mouseButton(e) === LEFT_BUTTON && e.ctrlKey || DOM.mouseButton(e) === RIGHT_BUTTON\n  });\n  return new DragHandler({\n    clickTolerance,\n    move: (lastPoint, point) => ({\n      bearingDelta: (point.x - lastPoint.x) * bearingDegreesPerPixelMoved\n    }),\n    // prevent browser context menu when necessary; we don't allow it with rotation\n    // because we can't discern rotation gesture start from contextmenu on Mac\n    moveStateManager: mouseMoveStateManager,\n    enable,\n    assignEvents\n  });\n};\nexport const generateMousePitchHandler = ({\n  enable,\n  clickTolerance,\n  pitchDegreesPerPixelMoved = -0.5\n}) => {\n  const mouseMoveStateManager = new MouseMoveStateManager({\n    checkCorrectEvent: e => DOM.mouseButton(e) === LEFT_BUTTON && e.ctrlKey || DOM.mouseButton(e) === RIGHT_BUTTON\n  });\n  return new DragHandler({\n    clickTolerance,\n    move: (lastPoint, point) => ({\n      pitchDelta: (point.y - lastPoint.y) * pitchDegreesPerPixelMoved\n    }),\n    // prevent browser context menu when necessary; we don't allow it with rotation\n    // because we can't discern rotation gesture start from contextmenu on Mac\n    moveStateManager: mouseMoveStateManager,\n    enable,\n    assignEvents\n  });\n};","map":{"version":3,"names":["DOM","DragHandler","MouseMoveStateManager","LEFT_BUTTON","RIGHT_BUTTON","assignEvents","handler","mousedown","dragStart","mousemoveWindow","dragMove","mouseup","dragEnd","contextmenu","e","preventDefault","generateMousePanHandler","enable","clickTolerance","mouseMoveStateManager","checkCorrectEvent","mouseButton","ctrlKey","move","lastPoint","point","around","panDelta","sub","activateOnStart","moveStateManager","generateMouseRotationHandler","bearingDegreesPerPixelMoved","bearingDelta","x","generateMousePitchHandler","pitchDegreesPerPixelMoved","pitchDelta","y"],"sources":["/Users/bhanudahiya/Desktop/ledger-IQ/node_modules/@antv/l7-map/es/map/handler/mouse.js"],"sourcesContent":["import { DOM } from \"../util/dom\";\nimport { DragHandler } from \"./drag_handler\";\nimport { MouseMoveStateManager } from \"./drag_move_state_manager\";\n\n/**\n * `MousePanHandler` allows the user to pan the map by clicking and dragging\n */\n\n/**\n * `MouseRotateHandler` allows the user to rotate the map by clicking and dragging\n */\n\n/**\n * `MousePitchHandler` allows the user to zoom the map by pitching\n */\n\nconst LEFT_BUTTON = 0;\nconst RIGHT_BUTTON = 2;\nconst assignEvents = handler => {\n  handler.mousedown = handler.dragStart;\n  handler.mousemoveWindow = handler.dragMove;\n  handler.mouseup = handler.dragEnd;\n  handler.contextmenu = e => {\n    e.preventDefault();\n  };\n};\nexport const generateMousePanHandler = ({\n  enable,\n  clickTolerance\n}) => {\n  const mouseMoveStateManager = new MouseMoveStateManager({\n    checkCorrectEvent: e => DOM.mouseButton(e) === LEFT_BUTTON && !e.ctrlKey\n  });\n  return new DragHandler({\n    clickTolerance,\n    move: (lastPoint, point) => ({\n      around: point,\n      panDelta: point.sub(lastPoint)\n    }),\n    activateOnStart: true,\n    moveStateManager: mouseMoveStateManager,\n    enable,\n    assignEvents\n  });\n};\nexport const generateMouseRotationHandler = ({\n  enable,\n  clickTolerance,\n  bearingDegreesPerPixelMoved = 0.8\n}) => {\n  const mouseMoveStateManager = new MouseMoveStateManager({\n    checkCorrectEvent: e => DOM.mouseButton(e) === LEFT_BUTTON && e.ctrlKey || DOM.mouseButton(e) === RIGHT_BUTTON\n  });\n  return new DragHandler({\n    clickTolerance,\n    move: (lastPoint, point) => ({\n      bearingDelta: (point.x - lastPoint.x) * bearingDegreesPerPixelMoved\n    }),\n    // prevent browser context menu when necessary; we don't allow it with rotation\n    // because we can't discern rotation gesture start from contextmenu on Mac\n    moveStateManager: mouseMoveStateManager,\n    enable,\n    assignEvents\n  });\n};\nexport const generateMousePitchHandler = ({\n  enable,\n  clickTolerance,\n  pitchDegreesPerPixelMoved = -0.5\n}) => {\n  const mouseMoveStateManager = new MouseMoveStateManager({\n    checkCorrectEvent: e => DOM.mouseButton(e) === LEFT_BUTTON && e.ctrlKey || DOM.mouseButton(e) === RIGHT_BUTTON\n  });\n  return new DragHandler({\n    clickTolerance,\n    move: (lastPoint, point) => ({\n      pitchDelta: (point.y - lastPoint.y) * pitchDegreesPerPixelMoved\n    }),\n    // prevent browser context menu when necessary; we don't allow it with rotation\n    // because we can't discern rotation gesture start from contextmenu on Mac\n    moveStateManager: mouseMoveStateManager,\n    enable,\n    assignEvents\n  });\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}