{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { EventEmitter } from 'eventemitter3';\nimport { buildIconMaping } from \"../../utils/font_util\";\nconst BUFFER = 3;\nconst MAX_CANVAS_WIDTH = 1024;\nconst imageSize = 64;\nexport default class IconService extends EventEmitter {\n  constructor(...args) {\n    super(...args);\n    _defineProperty(this, \"canvasHeight\", 128);\n    _defineProperty(this, \"texture\", void 0);\n    _defineProperty(this, \"canvas\", void 0);\n    _defineProperty(this, \"iconData\", void 0);\n    _defineProperty(this, \"iconMap\", void 0);\n    _defineProperty(this, \"ctx\", void 0);\n    _defineProperty(this, \"loadingImageCount\", 0);\n  }\n  isLoading() {\n    return this.loadingImageCount === 0;\n  }\n  init() {\n    this.iconData = [];\n    this.iconMap = {};\n    this.canvas = window.document.createElement('canvas');\n    this.canvas.width = 128;\n    this.canvas.height = 128;\n    this.ctx = this.canvas.getContext('2d');\n  }\n  addImage(id, image) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      let imagedata = new Image();\n      _this.loadingImageCount++;\n      if (_this.hasImage(id)) {\n        console.warn('Image Id already exists');\n      } else {\n        _this.iconData.push({\n          id,\n          size: imageSize\n        });\n      }\n      _this.updateIconMap(); // 先存储 ID，\n      imagedata = yield _this.loadImage(image);\n      const iconImage = _this.iconData.find(icon => {\n        return icon.id === id;\n      });\n      if (iconImage) {\n        iconImage.image = imagedata;\n        iconImage.width = imagedata.width;\n        iconImage.height = imagedata.height;\n      }\n      _this.update();\n    })();\n  }\n\n  /**\n   * 适配小程序\n   * @param id\n   * @param image\n   * @param sceneService\n   */\n  addImageMini(id, image, sceneService) {\n    const canvas = sceneService.getSceneConfig().canvas;\n    // @ts-ignore\n    let imagedata = canvas.createImage();\n    this.loadingImageCount++;\n    if (this.hasImage(id)) {\n      throw new Error('Image Id already exists');\n    }\n    this.iconData.push({\n      id,\n      size: imageSize\n    });\n    this.updateIconMap();\n    this.loadImageMini(image, canvas).then(img => {\n      imagedata = img;\n      const iconImage = this.iconData.find(icon => {\n        return icon.id === id;\n      });\n      if (iconImage) {\n        iconImage.image = imagedata;\n        iconImage.width = imagedata.width;\n        iconImage.height = imagedata.height;\n      }\n      this.update();\n    });\n  }\n  getTexture() {\n    return this.texture;\n  }\n  getIconMap() {\n    return this.iconMap;\n  }\n  getCanvas() {\n    return this.canvas;\n  }\n  hasImage(id) {\n    return this.iconMap.hasOwnProperty(id);\n  }\n  removeImage(id) {\n    if (this.hasImage(id)) {\n      this.iconData = this.iconData.filter(icon => {\n        return icon.id !== id;\n      });\n      delete this.iconMap[id];\n      this.update();\n    }\n  }\n  destroy() {\n    // 在销毁的时候清除所有注册的监听\n    this.removeAllListeners('imageUpdate');\n    this.iconData = [];\n    this.iconMap = {};\n  }\n  loadImage(url) {\n    return new Promise((resolve, reject) => {\n      if (url instanceof HTMLImageElement) {\n        resolve(url);\n        return;\n      }\n      const image = new Image();\n      image.crossOrigin = 'anonymous';\n      image.onload = () => {\n        resolve(image);\n      };\n      image.onerror = () => {\n        reject(new Error('Could not load image at ' + url));\n      };\n      image.src = url instanceof File ? URL.createObjectURL(url) : url;\n    });\n  }\n  update() {\n    this.updateIconMap();\n    this.updateIconAtlas();\n    this.loadingImageCount--;\n    if (this.loadingImageCount === 0) {\n      this.emit('imageUpdate');\n    }\n  }\n\n  /**\n   * 将新增的 icon 图像存储到画布上（正方形）\n   */\n  updateIconAtlas() {\n    this.canvas.width = MAX_CANVAS_WIDTH;\n    this.canvas.height = this.canvasHeight;\n    Object.keys(this.iconMap).forEach(item => {\n      const {\n        x,\n        y,\n        image,\n        width = 64,\n        height = 64\n      } = this.iconMap[item];\n      const max = Math.max(width, height);\n      const ratio = max / imageSize;\n      const drawHeight = height / ratio;\n      const drawWidth = width / ratio;\n      if (image) {\n        this.ctx.drawImage(image, x + (imageSize - drawWidth) / 2, y + (imageSize - drawHeight) / 2, drawWidth, drawHeight);\n      }\n    });\n  }\n\n  /**\n   * 计算 icon 在画布上的排布（是否需要换行）\n   */\n  updateIconMap() {\n    const {\n      mapping,\n      canvasHeight\n    } = buildIconMaping(this.iconData, BUFFER, MAX_CANVAS_WIDTH);\n    this.iconMap = mapping;\n    this.canvasHeight = canvasHeight;\n  }\n\n  /**\n   * 适配小程序\n   * @param url\n   * @returns\n   */\n  loadImageMini(url, canvas) {\n    return new Promise((resolve, reject) => {\n      // @ts-ignore\n      const image = canvas.createImage();\n      image.crossOrigin = 'anonymous';\n      image.onload = () => {\n        resolve(image);\n      };\n      image.onerror = () => {\n        reject(new Error('Could not load image at ' + url));\n      };\n      image.src = url;\n    });\n  }\n}","map":{"version":3,"names":["_asyncToGenerator","_defineProperty","EventEmitter","buildIconMaping","BUFFER","MAX_CANVAS_WIDTH","imageSize","IconService","constructor","args","isLoading","loadingImageCount","init","iconData","iconMap","canvas","window","document","createElement","width","height","ctx","getContext","addImage","id","image","_this","imagedata","Image","hasImage","console","warn","push","size","updateIconMap","loadImage","iconImage","find","icon","update","addImageMini","sceneService","getSceneConfig","createImage","Error","loadImageMini","then","img","getTexture","texture","getIconMap","getCanvas","hasOwnProperty","removeImage","filter","destroy","removeAllListeners","url","Promise","resolve","reject","HTMLImageElement","crossOrigin","onload","onerror","src","File","URL","createObjectURL","updateIconAtlas","emit","canvasHeight","Object","keys","forEach","item","x","y","max","Math","ratio","drawHeight","drawWidth","drawImage","mapping"],"sources":["/Users/bhanudahiya/Desktop/ledger-IQ/node_modules/@antv/l7-core/es/services/asset/IconService.js"],"sourcesContent":["import _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { EventEmitter } from 'eventemitter3';\nimport { buildIconMaping } from \"../../utils/font_util\";\nconst BUFFER = 3;\nconst MAX_CANVAS_WIDTH = 1024;\nconst imageSize = 64;\nexport default class IconService extends EventEmitter {\n  constructor(...args) {\n    super(...args);\n    _defineProperty(this, \"canvasHeight\", 128);\n    _defineProperty(this, \"texture\", void 0);\n    _defineProperty(this, \"canvas\", void 0);\n    _defineProperty(this, \"iconData\", void 0);\n    _defineProperty(this, \"iconMap\", void 0);\n    _defineProperty(this, \"ctx\", void 0);\n    _defineProperty(this, \"loadingImageCount\", 0);\n  }\n  isLoading() {\n    return this.loadingImageCount === 0;\n  }\n  init() {\n    this.iconData = [];\n    this.iconMap = {};\n    this.canvas = window.document.createElement('canvas');\n    this.canvas.width = 128;\n    this.canvas.height = 128;\n    this.ctx = this.canvas.getContext('2d');\n  }\n  addImage(id, image) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      let imagedata = new Image();\n      _this.loadingImageCount++;\n      if (_this.hasImage(id)) {\n        console.warn('Image Id already exists');\n      } else {\n        _this.iconData.push({\n          id,\n          size: imageSize\n        });\n      }\n      _this.updateIconMap(); // 先存储 ID，\n      imagedata = yield _this.loadImage(image);\n      const iconImage = _this.iconData.find(icon => {\n        return icon.id === id;\n      });\n      if (iconImage) {\n        iconImage.image = imagedata;\n        iconImage.width = imagedata.width;\n        iconImage.height = imagedata.height;\n      }\n      _this.update();\n    })();\n  }\n\n  /**\n   * 适配小程序\n   * @param id\n   * @param image\n   * @param sceneService\n   */\n  addImageMini(id, image, sceneService) {\n    const canvas = sceneService.getSceneConfig().canvas;\n    // @ts-ignore\n    let imagedata = canvas.createImage();\n    this.loadingImageCount++;\n    if (this.hasImage(id)) {\n      throw new Error('Image Id already exists');\n    }\n    this.iconData.push({\n      id,\n      size: imageSize\n    });\n    this.updateIconMap();\n    this.loadImageMini(image, canvas).then(img => {\n      imagedata = img;\n      const iconImage = this.iconData.find(icon => {\n        return icon.id === id;\n      });\n      if (iconImage) {\n        iconImage.image = imagedata;\n        iconImage.width = imagedata.width;\n        iconImage.height = imagedata.height;\n      }\n      this.update();\n    });\n  }\n  getTexture() {\n    return this.texture;\n  }\n  getIconMap() {\n    return this.iconMap;\n  }\n  getCanvas() {\n    return this.canvas;\n  }\n  hasImage(id) {\n    return this.iconMap.hasOwnProperty(id);\n  }\n  removeImage(id) {\n    if (this.hasImage(id)) {\n      this.iconData = this.iconData.filter(icon => {\n        return icon.id !== id;\n      });\n      delete this.iconMap[id];\n      this.update();\n    }\n  }\n  destroy() {\n    // 在销毁的时候清除所有注册的监听\n    this.removeAllListeners('imageUpdate');\n    this.iconData = [];\n    this.iconMap = {};\n  }\n  loadImage(url) {\n    return new Promise((resolve, reject) => {\n      if (url instanceof HTMLImageElement) {\n        resolve(url);\n        return;\n      }\n      const image = new Image();\n      image.crossOrigin = 'anonymous';\n      image.onload = () => {\n        resolve(image);\n      };\n      image.onerror = () => {\n        reject(new Error('Could not load image at ' + url));\n      };\n      image.src = url instanceof File ? URL.createObjectURL(url) : url;\n    });\n  }\n  update() {\n    this.updateIconMap();\n    this.updateIconAtlas();\n    this.loadingImageCount--;\n    if (this.loadingImageCount === 0) {\n      this.emit('imageUpdate');\n    }\n  }\n\n  /**\n   * 将新增的 icon 图像存储到画布上（正方形）\n   */\n  updateIconAtlas() {\n    this.canvas.width = MAX_CANVAS_WIDTH;\n    this.canvas.height = this.canvasHeight;\n    Object.keys(this.iconMap).forEach(item => {\n      const {\n        x,\n        y,\n        image,\n        width = 64,\n        height = 64\n      } = this.iconMap[item];\n      const max = Math.max(width, height);\n      const ratio = max / imageSize;\n      const drawHeight = height / ratio;\n      const drawWidth = width / ratio;\n      if (image) {\n        this.ctx.drawImage(image, x + (imageSize - drawWidth) / 2, y + (imageSize - drawHeight) / 2, drawWidth, drawHeight);\n      }\n    });\n  }\n\n  /**\n   * 计算 icon 在画布上的排布（是否需要换行）\n   */\n  updateIconMap() {\n    const {\n      mapping,\n      canvasHeight\n    } = buildIconMaping(this.iconData, BUFFER, MAX_CANVAS_WIDTH);\n    this.iconMap = mapping;\n    this.canvasHeight = canvasHeight;\n  }\n\n  /**\n   * 适配小程序\n   * @param url\n   * @returns\n   */\n  loadImageMini(url, canvas) {\n    return new Promise((resolve, reject) => {\n      // @ts-ignore\n      const image = canvas.createImage();\n      image.crossOrigin = 'anonymous';\n      image.onload = () => {\n        resolve(image);\n      };\n      image.onerror = () => {\n        reject(new Error('Could not load image at ' + url));\n      };\n      image.src = url;\n    });\n  }\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}