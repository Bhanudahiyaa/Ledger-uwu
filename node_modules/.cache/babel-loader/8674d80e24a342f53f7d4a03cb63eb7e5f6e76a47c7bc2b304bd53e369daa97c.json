{"ast":null,"code":"var __async = (__this, __arguments, generator) => {\n  return new Promise((resolve, reject) => {\n    var fulfilled = value => {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var rejected = value => {\n      try {\n        step(generator.throw(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var step = x => x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);\n    step((generator = generator.apply(__this, __arguments)).next());\n  });\n};\n\n// src/utils/tile/getCustomData.ts\nimport { formatImage } from \"@antv/l7-utils\";\nimport { processRasterData } from \"../bandOperation/bands\";\nvar getCustomData = (tile, getCustomDataFunc, rasterFormat, operation) => __async(void 0, null, function* () {\n  return new Promise((resolve, reject) => {\n    getCustomDataFunc({\n      x: tile.x,\n      y: tile.y,\n      z: tile.z\n    }, (err, data) => {\n      if (err || data.length === 0) {\n        reject(err);\n        return;\n      }\n      if (data) {\n        processRasterData([{\n          data,\n          bands: [0]\n        }], rasterFormat, operation, (error, img) => {\n          if (error) {\n            reject(error);\n          } else if (img) {\n            resolve(img);\n          }\n        });\n      }\n    });\n  });\n});\nvar getCustomImageData = (tile, getCustomDataFunc) => __async(void 0, null, function* () {\n  return new Promise((resolve, reject) => {\n    getCustomDataFunc({\n      x: tile.x,\n      y: tile.y,\n      z: tile.z\n    }, (err, data) => {\n      if (err || !data) {\n        reject(err);\n        return;\n      }\n      if (data instanceof ArrayBuffer) {\n        formatImage(data, (error, image) => {\n          if (error) {\n            reject(error);\n          }\n          resolve(image);\n        });\n      } else if (data instanceof HTMLImageElement) {\n        resolve(data);\n      } else {\n        reject(err);\n      }\n    });\n  });\n});\nexport { getCustomData, getCustomImageData };","map":{"version":3,"names":["__async","__this","__arguments","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","throw","x","done","then","apply","formatImage","processRasterData","getCustomData","tile","getCustomDataFunc","rasterFormat","operation","y","z","err","data","length","bands","error","img","getCustomImageData","ArrayBuffer","image","HTMLImageElement"],"sources":["/Users/bhanudahiya/Desktop/ledger-IQ/node_modules/@antv/l7-source/es/utils/tile/getCustomData.js"],"sourcesContent":["var __async = (__this, __arguments, generator) => {\n  return new Promise((resolve, reject) => {\n    var fulfilled = (value) => {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var rejected = (value) => {\n      try {\n        step(generator.throw(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var step = (x) => x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);\n    step((generator = generator.apply(__this, __arguments)).next());\n  });\n};\n\n// src/utils/tile/getCustomData.ts\nimport { formatImage } from \"@antv/l7-utils\";\nimport { processRasterData } from \"../bandOperation/bands\";\nvar getCustomData = (tile, getCustomDataFunc, rasterFormat, operation) => __async(void 0, null, function* () {\n  return new Promise((resolve, reject) => {\n    getCustomDataFunc(\n      {\n        x: tile.x,\n        y: tile.y,\n        z: tile.z\n      },\n      (err, data) => {\n        if (err || data.length === 0) {\n          reject(err);\n          return;\n        }\n        if (data) {\n          processRasterData(\n            [{ data, bands: [0] }],\n            rasterFormat,\n            operation,\n            (error, img) => {\n              if (error) {\n                reject(error);\n              } else if (img) {\n                resolve(img);\n              }\n            }\n          );\n        }\n      }\n    );\n  });\n});\nvar getCustomImageData = (tile, getCustomDataFunc) => __async(void 0, null, function* () {\n  return new Promise((resolve, reject) => {\n    getCustomDataFunc(\n      {\n        x: tile.x,\n        y: tile.y,\n        z: tile.z\n      },\n      (err, data) => {\n        if (err || !data) {\n          reject(err);\n          return;\n        }\n        if (data instanceof ArrayBuffer) {\n          formatImage(data, (error, image) => {\n            if (error) {\n              reject(error);\n            }\n            resolve(image);\n          });\n        } else if (data instanceof HTMLImageElement) {\n          resolve(data);\n        } else {\n          reject(err);\n        }\n      }\n    );\n  });\n});\nexport {\n  getCustomData,\n  getCustomImageData\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}