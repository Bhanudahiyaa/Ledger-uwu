{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { FunctionExt } from '../../util';\nimport { View } from '../../view/view';\nimport { Graph } from '../../graph/graph';\nvar ClassName;\n(function (ClassName) {\n  ClassName.root = 'widget-minimap';\n  ClassName.viewport = `${ClassName.root}-viewport`;\n  ClassName.zoom = `${ClassName.viewport}-zoom`;\n})(ClassName || (ClassName = {}));\nexport class MiniMap extends View {\n  constructor(options) {\n    super();\n    this.options = Object.assign(Object.assign({}, Util.defaultOptions), options);\n    this.updateViewport = FunctionExt.debounce(this.updateViewport.bind(this), 0);\n    this.container = document.createElement('div');\n    this.$container = this.$(this.container).addClass(this.prefixClassName(ClassName.root));\n    const graphContainer = document.createElement('div');\n    this.container.appendChild(graphContainer);\n    this.$viewport = this.$('<div>').addClass(this.prefixClassName(ClassName.viewport));\n    if (this.options.scalable) {\n      this.zoomHandle = this.$('<div>').addClass(this.prefixClassName(ClassName.zoom)).appendTo(this.$viewport).get(0);\n    }\n    this.$container.append(this.$viewport).css({\n      width: this.options.width,\n      height: this.options.height,\n      padding: this.options.padding\n    });\n    if (this.options.container) {\n      this.options.container.appendChild(this.container);\n    }\n    this.sourceGraph = this.graph;\n    const targetGraphOptions = Object.assign(Object.assign({}, this.options.graphOptions), {\n      container: graphContainer,\n      model: this.sourceGraph.model,\n      frozen: true,\n      async: this.sourceGraph.isAsync(),\n      interacting: false,\n      grid: false,\n      background: false,\n      rotating: false,\n      resizing: false,\n      embedding: false,\n      selecting: false,\n      snapline: false,\n      clipboard: false,\n      history: false,\n      scroller: false\n    });\n    this.targetGraph = this.options.createGraph ? this.options.createGraph(targetGraphOptions) : new Graph(targetGraphOptions);\n    this.targetGraph.renderer.unfreeze();\n    this.updatePaper(this.sourceGraph.options.width, this.sourceGraph.options.height);\n    this.startListening();\n  }\n  get graph() {\n    return this.options.graph;\n  }\n  get scroller() {\n    return this.graph.scroller.widget;\n  }\n  get graphContainer() {\n    if (this.scroller) {\n      return this.scroller.container;\n    }\n    return this.graph.container;\n  }\n  get $graphContainer() {\n    if (this.scroller) {\n      return this.scroller.$container;\n    }\n    return this.$(this.graph.container);\n  }\n  startListening() {\n    if (this.scroller) {\n      this.$graphContainer.on(`scroll${this.getEventNamespace()}`, this.updateViewport);\n    } else {\n      this.sourceGraph.on('translate', this.onTransform, this);\n      this.sourceGraph.on('scale', this.onTransform, this);\n      this.sourceGraph.on('model:updated', this.onModelUpdated, this);\n    }\n    this.sourceGraph.on('resize', this.updatePaper, this);\n    this.delegateEvents({\n      mousedown: 'startAction',\n      touchstart: 'startAction',\n      [`mousedown .${this.prefixClassName('graph')}`]: 'scrollTo',\n      [`touchstart .${this.prefixClassName('graph')}`]: 'scrollTo'\n    });\n  }\n  stopListening() {\n    if (this.scroller) {\n      this.$graphContainer.off(this.getEventNamespace());\n    } else {\n      this.sourceGraph.off('translate', this.onTransform, this);\n      this.sourceGraph.off('scale', this.onTransform, this);\n      this.sourceGraph.off('model:updated', this.onModelUpdated, this);\n    }\n    this.sourceGraph.off('resize', this.updatePaper, this);\n    this.undelegateEvents();\n  }\n  onRemove() {\n    this.targetGraph.view.remove();\n    this.stopListening();\n    this.targetGraph.dispose();\n  }\n  onTransform(options) {\n    if (options.ui || this.targetGraphTransforming) {\n      this.updateViewport();\n    }\n  }\n  onModelUpdated() {\n    this.targetGraph.zoomToFit();\n  }\n  updatePaper(w, h) {\n    let width;\n    let height;\n    if (typeof w === 'object') {\n      width = w.width;\n      height = w.height;\n    } else {\n      width = w;\n      height = h;\n    }\n    const origin = this.sourceGraph.options;\n    const scale = this.sourceGraph.transform.getScale();\n    const maxWidth = this.options.width - 2 * this.options.padding;\n    const maxHeight = this.options.height - 2 * this.options.padding;\n    width /= scale.sx; // eslint-disable-line\n    height /= scale.sy; // eslint-disable-line\n    this.ratio = Math.min(maxWidth / width, maxHeight / height);\n    const ratio = this.ratio;\n    const x = origin.x * ratio / scale.sx;\n    const y = origin.y * ratio / scale.sy;\n    width *= ratio; // eslint-disable-line\n    height *= ratio; // eslint-disable-line\n    this.targetGraph.resizeGraph(width, height);\n    this.targetGraph.translate(x, y);\n    if (this.scroller) {\n      this.targetGraph.scale(ratio, ratio);\n    } else {\n      this.targetGraph.zoomToFit();\n    }\n    this.updateViewport();\n    return this;\n  }\n  updateViewport() {\n    const sourceGraphScale = this.sourceGraph.transform.getScale();\n    const targetGraphScale = this.targetGraph.transform.getScale();\n    let origin = null;\n    if (this.scroller) {\n      origin = this.scroller.clientToLocalPoint(0, 0);\n    } else {\n      origin = this.graph.graphToLocal(0, 0);\n    }\n    const position = this.$(this.targetGraph.container).position();\n    const translation = this.targetGraph.translate();\n    translation.ty = translation.ty || 0;\n    this.geometry = {\n      top: position.top + origin.y * targetGraphScale.sy + translation.ty,\n      left: position.left + origin.x * targetGraphScale.sx + translation.tx,\n      width: this.$graphContainer.innerWidth() * targetGraphScale.sx / sourceGraphScale.sx,\n      height: this.$graphContainer.innerHeight() * targetGraphScale.sy / sourceGraphScale.sy\n    };\n    this.$viewport.css(this.geometry);\n  }\n  startAction(evt) {\n    const e = this.normalizeEvent(evt);\n    const action = e.target === this.zoomHandle ? 'zooming' : 'panning';\n    const {\n      tx,\n      ty\n    } = this.sourceGraph.translate();\n    const eventData = {\n      action,\n      clientX: e.clientX,\n      clientY: e.clientY,\n      scrollLeft: this.graphContainer.scrollLeft,\n      scrollTop: this.graphContainer.scrollTop,\n      zoom: this.sourceGraph.zoom(),\n      scale: this.sourceGraph.transform.getScale(),\n      geometry: this.geometry,\n      translateX: tx,\n      translateY: ty\n    };\n    this.targetGraphTransforming = true;\n    this.delegateDocumentEvents(Util.documentEvents, eventData);\n  }\n  doAction(evt) {\n    const e = this.normalizeEvent(evt);\n    const clientX = e.clientX;\n    const clientY = e.clientY;\n    const data = e.data;\n    switch (data.action) {\n      case 'panning':\n        {\n          const scale = this.sourceGraph.transform.getScale();\n          const rx = (clientX - data.clientX) * scale.sx;\n          const ry = (clientY - data.clientY) * scale.sy;\n          if (this.scroller) {\n            this.graphContainer.scrollLeft = data.scrollLeft + rx / this.ratio;\n            this.graphContainer.scrollTop = data.scrollTop + ry / this.ratio;\n          } else {\n            this.sourceGraph.translate(data.translateX - rx / this.ratio, data.translateY - ry / this.ratio);\n          }\n          break;\n        }\n      case 'zooming':\n        {\n          const startScale = data.scale;\n          const startGeometry = data.geometry;\n          const delta = 1 + (data.clientX - clientX) / startGeometry.width / startScale.sx;\n          if (data.frameId) {\n            cancelAnimationFrame(data.frameId);\n          }\n          data.frameId = requestAnimationFrame(() => {\n            this.sourceGraph.zoom(delta * data.zoom, {\n              absolute: true,\n              minScale: this.options.minScale,\n              maxScale: this.options.maxScale\n            });\n          });\n          break;\n        }\n      default:\n        break;\n    }\n  }\n  stopAction() {\n    this.undelegateDocumentEvents();\n    this.targetGraphTransforming = false;\n  }\n  scrollTo(evt) {\n    const e = this.normalizeEvent(evt);\n    let x;\n    let y;\n    const ts = this.targetGraph.translate();\n    ts.ty = ts.ty || 0;\n    if (e.offsetX == null) {\n      const offset = this.$(this.targetGraph.container).offset();\n      x = e.pageX - offset.left;\n      y = e.pageY - offset.top;\n    } else {\n      x = e.offsetX;\n      y = e.offsetY;\n    }\n    const cx = (x - ts.tx) / this.ratio;\n    const cy = (y - ts.ty) / this.ratio;\n    this.sourceGraph.centerPoint(cx, cy);\n  }\n  dispose() {\n    this.remove();\n  }\n}\n__decorate([View.dispose()], MiniMap.prototype, \"dispose\", null);\nvar Util;\n(function (Util) {\n  Util.defaultOptions = {\n    width: 300,\n    height: 200,\n    padding: 10,\n    scalable: true,\n    minScale: 0.01,\n    maxScale: 16,\n    graphOptions: {},\n    createGraph: options => new Graph(options)\n  };\n  Util.documentEvents = {\n    mousemove: 'doAction',\n    touchmove: 'doAction',\n    mouseup: 'stopAction',\n    touchend: 'stopAction'\n  };\n})(Util || (Util = {}));","map":{"version":3,"names":["FunctionExt","View","Graph","ClassName","root","viewport","zoom","MiniMap","constructor","options","Object","assign","Util","defaultOptions","updateViewport","debounce","bind","container","document","createElement","$container","$","addClass","prefixClassName","graphContainer","appendChild","$viewport","scalable","zoomHandle","appendTo","get","append","css","width","height","padding","sourceGraph","graph","targetGraphOptions","graphOptions","model","frozen","async","isAsync","interacting","grid","background","rotating","resizing","embedding","selecting","snapline","clipboard","history","scroller","targetGraph","createGraph","renderer","unfreeze","updatePaper","startListening","widget","$graphContainer","on","getEventNamespace","onTransform","onModelUpdated","delegateEvents","mousedown","touchstart","stopListening","off","undelegateEvents","onRemove","view","remove","dispose","ui","targetGraphTransforming","zoomToFit","w","h","origin","scale","transform","getScale","maxWidth","maxHeight","sx","sy","ratio","Math","min","x","y","resizeGraph","translate","sourceGraphScale","targetGraphScale","clientToLocalPoint","graphToLocal","position","translation","ty","geometry","top","left","tx","innerWidth","innerHeight","startAction","evt","e","normalizeEvent","action","target","eventData","clientX","clientY","scrollLeft","scrollTop","translateX","translateY","delegateDocumentEvents","documentEvents","doAction","data","rx","ry","startScale","startGeometry","delta","frameId","cancelAnimationFrame","requestAnimationFrame","absolute","minScale","maxScale","stopAction","undelegateDocumentEvents","scrollTo","ts","offsetX","offset","pageX","pageY","offsetY","cx","cy","centerPoint","__decorate","mousemove","touchmove","mouseup","touchend"],"sources":["/Users/bhanudahiya/Desktop/ledger-IQ/node_modules/@antv/x6/src/addon/minimap/index.ts"],"sourcesContent":["import { FunctionExt } from '../../util'\nimport { View } from '../../view/view'\nimport { Graph } from '../../graph/graph'\nimport { EventArgs } from '../../graph/events'\n\nnamespace ClassName {\n  export const root = 'widget-minimap'\n  export const viewport = `${root}-viewport`\n  export const zoom = `${viewport}-zoom`\n}\n\nexport class MiniMap extends View {\n  public readonly options: MiniMap.Options\n  public readonly container: HTMLDivElement\n  public readonly $container: JQuery<HTMLElement>\n  protected readonly zoomHandle: HTMLDivElement\n  protected readonly $viewport: JQuery<HTMLElement>\n  protected readonly sourceGraph: Graph\n  protected readonly targetGraph: Graph\n  protected geometry: Util.ViewGeometry\n  protected ratio: number\n  // Marks whether targetGraph is being transformed or scaled\n  // If yes we update updateViewport only\n  private targetGraphTransforming: boolean\n\n  protected get graph() {\n    return this.options.graph\n  }\n\n  protected get scroller() {\n    return this.graph.scroller.widget\n  }\n\n  protected get graphContainer() {\n    if (this.scroller) {\n      return this.scroller.container\n    }\n    return this.graph.container\n  }\n\n  protected get $graphContainer() {\n    if (this.scroller) {\n      return this.scroller.$container\n    }\n    return this.$(this.graph.container)\n  }\n\n  constructor(options: Partial<MiniMap.Options> & { graph: Graph }) {\n    super()\n\n    this.options = {\n      ...Util.defaultOptions,\n      ...options,\n    } as MiniMap.Options\n\n    this.updateViewport = FunctionExt.debounce(\n      this.updateViewport.bind(this),\n      0,\n    )\n\n    this.container = document.createElement('div')\n    this.$container = this.$(this.container).addClass(\n      this.prefixClassName(ClassName.root),\n    )\n\n    const graphContainer = document.createElement('div')\n    this.container.appendChild(graphContainer)\n\n    this.$viewport = this.$('<div>').addClass(\n      this.prefixClassName(ClassName.viewport),\n    )\n\n    if (this.options.scalable) {\n      this.zoomHandle = this.$('<div>')\n        .addClass(this.prefixClassName(ClassName.zoom))\n        .appendTo(this.$viewport)\n        .get(0)\n    }\n\n    this.$container.append(this.$viewport).css({\n      width: this.options.width,\n      height: this.options.height,\n      padding: this.options.padding,\n    })\n\n    if (this.options.container) {\n      this.options.container.appendChild(this.container)\n    }\n\n    this.sourceGraph = this.graph\n    const targetGraphOptions: Graph.Options = {\n      ...this.options.graphOptions,\n      container: graphContainer,\n      model: this.sourceGraph.model,\n      frozen: true,\n      async: this.sourceGraph.isAsync(),\n      interacting: false,\n      grid: false,\n      background: false,\n      rotating: false,\n      resizing: false,\n      embedding: false,\n      selecting: false,\n      snapline: false,\n      clipboard: false,\n      history: false,\n      scroller: false,\n    }\n\n    this.targetGraph = this.options.createGraph\n      ? this.options.createGraph(targetGraphOptions)\n      : new Graph(targetGraphOptions)\n\n    this.targetGraph.renderer.unfreeze()\n\n    this.updatePaper(\n      this.sourceGraph.options.width,\n      this.sourceGraph.options.height,\n    )\n\n    this.startListening()\n  }\n\n  protected startListening() {\n    if (this.scroller) {\n      this.$graphContainer.on(\n        `scroll${this.getEventNamespace()}`,\n        this.updateViewport,\n      )\n    } else {\n      this.sourceGraph.on('translate', this.onTransform, this)\n      this.sourceGraph.on('scale', this.onTransform, this)\n      this.sourceGraph.on('model:updated', this.onModelUpdated, this)\n    }\n    this.sourceGraph.on('resize', this.updatePaper, this)\n    this.delegateEvents({\n      mousedown: 'startAction',\n      touchstart: 'startAction',\n      [`mousedown .${this.prefixClassName('graph')}`]: 'scrollTo',\n      [`touchstart .${this.prefixClassName('graph')}`]: 'scrollTo',\n    })\n  }\n\n  protected stopListening() {\n    if (this.scroller) {\n      this.$graphContainer.off(this.getEventNamespace())\n    } else {\n      this.sourceGraph.off('translate', this.onTransform, this)\n      this.sourceGraph.off('scale', this.onTransform, this)\n      this.sourceGraph.off('model:updated', this.onModelUpdated, this)\n    }\n    this.sourceGraph.off('resize', this.updatePaper, this)\n    this.undelegateEvents()\n  }\n\n  protected onRemove() {\n    this.targetGraph.view.remove()\n    this.stopListening()\n    this.targetGraph.dispose()\n  }\n\n  protected onTransform(options: { ui: boolean }) {\n    if (options.ui || this.targetGraphTransforming) {\n      this.updateViewport()\n    }\n  }\n\n  protected onModelUpdated() {\n    this.targetGraph.zoomToFit()\n  }\n\n  protected updatePaper(width: number, height: number): this\n  protected updatePaper({ width, height }: EventArgs['resize']): this\n  protected updatePaper(w: number | EventArgs['resize'], h?: number) {\n    let width: number\n    let height: number\n    if (typeof w === 'object') {\n      width = w.width\n      height = w.height\n    } else {\n      width = w\n      height = h as number\n    }\n\n    const origin = this.sourceGraph.options\n    const scale = this.sourceGraph.transform.getScale()\n    const maxWidth = this.options.width - 2 * this.options.padding\n    const maxHeight = this.options.height - 2 * this.options.padding\n\n    width /= scale.sx // eslint-disable-line\n    height /= scale.sy // eslint-disable-line\n\n    this.ratio = Math.min(maxWidth / width, maxHeight / height)\n\n    const ratio = this.ratio\n    const x = (origin.x * ratio) / scale.sx\n    const y = (origin.y * ratio) / scale.sy\n\n    width *= ratio // eslint-disable-line\n    height *= ratio // eslint-disable-line\n    this.targetGraph.resizeGraph(width, height)\n    this.targetGraph.translate(x, y)\n\n    if (this.scroller) {\n      this.targetGraph.scale(ratio, ratio)\n    } else {\n      this.targetGraph.zoomToFit()\n    }\n\n    this.updateViewport()\n    return this\n  }\n\n  protected updateViewport() {\n    const sourceGraphScale = this.sourceGraph.transform.getScale()\n    const targetGraphScale = this.targetGraph.transform.getScale()\n\n    let origin = null\n    if (this.scroller) {\n      origin = this.scroller.clientToLocalPoint(0, 0)\n    } else {\n      origin = this.graph.graphToLocal(0, 0)\n    }\n\n    const position = this.$(this.targetGraph.container).position()\n    const translation = this.targetGraph.translate()\n    translation.ty = translation.ty || 0\n\n    this.geometry = {\n      top: position.top + origin.y * targetGraphScale.sy + translation.ty,\n      left: position.left + origin.x * targetGraphScale.sx + translation.tx,\n      width:\n        (this.$graphContainer.innerWidth()! * targetGraphScale.sx) /\n        sourceGraphScale.sx,\n      height:\n        (this.$graphContainer.innerHeight()! * targetGraphScale.sy) /\n        sourceGraphScale.sy,\n    }\n    this.$viewport.css(this.geometry)\n  }\n\n  protected startAction(evt: JQuery.MouseDownEvent) {\n    const e = this.normalizeEvent(evt)\n    const action = e.target === this.zoomHandle ? 'zooming' : 'panning'\n    const { tx, ty } = this.sourceGraph.translate()\n    const eventData: Util.EventData = {\n      action,\n      clientX: e.clientX,\n      clientY: e.clientY,\n      scrollLeft: this.graphContainer.scrollLeft,\n      scrollTop: this.graphContainer.scrollTop,\n      zoom: this.sourceGraph.zoom(),\n      scale: this.sourceGraph.transform.getScale(),\n      geometry: this.geometry,\n      translateX: tx,\n      translateY: ty,\n    }\n    this.targetGraphTransforming = true\n    this.delegateDocumentEvents(Util.documentEvents, eventData)\n  }\n\n  protected doAction(evt: JQuery.MouseMoveEvent) {\n    const e = this.normalizeEvent(evt)\n    const clientX = e.clientX\n    const clientY = e.clientY\n    const data = e.data as Util.EventData\n    switch (data.action) {\n      case 'panning': {\n        const scale = this.sourceGraph.transform.getScale()\n        const rx = (clientX - data.clientX) * scale.sx\n        const ry = (clientY - data.clientY) * scale.sy\n        if (this.scroller) {\n          this.graphContainer.scrollLeft = data.scrollLeft + rx / this.ratio\n          this.graphContainer.scrollTop = data.scrollTop + ry / this.ratio\n        } else {\n          this.sourceGraph.translate(\n            data.translateX - rx / this.ratio,\n            data.translateY - ry / this.ratio,\n          )\n        }\n        break\n      }\n\n      case 'zooming': {\n        const startScale = data.scale\n        const startGeometry = data.geometry\n        const delta =\n          1 + (data.clientX - clientX) / startGeometry.width / startScale.sx\n\n        if (data.frameId) {\n          cancelAnimationFrame(data.frameId)\n        }\n\n        data.frameId = requestAnimationFrame(() => {\n          this.sourceGraph.zoom(delta * data.zoom, {\n            absolute: true,\n            minScale: this.options.minScale,\n            maxScale: this.options.maxScale,\n          })\n        })\n        break\n      }\n\n      default:\n        break\n    }\n  }\n\n  protected stopAction() {\n    this.undelegateDocumentEvents()\n    this.targetGraphTransforming = false\n  }\n\n  protected scrollTo(evt: JQuery.MouseDownEvent) {\n    const e = this.normalizeEvent(evt)\n\n    let x\n    let y\n\n    const ts = this.targetGraph.translate()\n    ts.ty = ts.ty || 0\n\n    if (e.offsetX == null) {\n      const offset = this.$(this.targetGraph.container).offset()!\n      x = e.pageX - offset.left\n      y = e.pageY - offset.top\n    } else {\n      x = e.offsetX\n      y = e.offsetY\n    }\n\n    const cx = (x - ts.tx) / this.ratio\n    const cy = (y - ts.ty) / this.ratio\n    this.sourceGraph.centerPoint(cx, cy)\n  }\n\n  @View.dispose()\n  dispose() {\n    this.remove()\n  }\n}\n\nexport namespace MiniMap {\n  export interface Options {\n    graph: Graph\n    container?: HTMLElement\n    width: number\n    height: number\n    padding: number\n    scalable?: boolean\n    minScale?: number\n    maxScale?: number\n    createGraph?: (options: Graph.Options) => Graph\n    graphOptions?: Graph.Options\n  }\n}\n\nnamespace Util {\n  export const defaultOptions: Partial<MiniMap.Options> = {\n    width: 300,\n    height: 200,\n    padding: 10,\n    scalable: true,\n    minScale: 0.01,\n    maxScale: 16,\n    graphOptions: {},\n    createGraph: (options) => new Graph(options),\n  }\n\n  export const documentEvents = {\n    mousemove: 'doAction',\n    touchmove: 'doAction',\n    mouseup: 'stopAction',\n    touchend: 'stopAction',\n  }\n\n  export interface ViewGeometry extends JQuery.PlainObject<number> {\n    top: number\n    left: number\n    width: number\n    height: number\n  }\n\n  export interface EventData {\n    frameId?: number\n    action: 'zooming' | 'panning'\n    clientX: number\n    clientY: number\n    scrollLeft: number\n    scrollTop: number\n    zoom: number\n    scale: { sx: number; sy: number }\n    geometry: ViewGeometry\n    translateX: number\n    translateY: number\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}