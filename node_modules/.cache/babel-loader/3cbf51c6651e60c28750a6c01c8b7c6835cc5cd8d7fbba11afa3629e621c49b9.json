{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport React, { useState, useCallback, useLayoutEffect, useRef } from 'react';\nimport ReactDOM from 'react-dom';\nimport { NodeView } from '@antv/x6';\nimport { Wrap } from '../wrap';\nconst action = 'react';\nexport function createPortal(uniqViewId) {\n  const setGraphRef = {\n    current: () => {}\n  };\n  const setGraph = graph => {\n    setGraphRef.current(graph);\n  };\n  let add;\n  let remove;\n  function connect(id, portal) {\n    add({\n      id,\n      portal\n    });\n  }\n  function disconnect(id) {\n    remove(id);\n  }\n  const Portal = () => {\n    const [items, setItems] = useState([]);\n    const [graph, setGraphInstance] = useState();\n    const pendingAddIdsRef = useRef([]);\n    const pendingAddItemsRef = useRef([]);\n    setGraphRef.current = setGraphInstance;\n    const addItem = useCallback(payload => {\n      const {\n        id\n      } = payload;\n      if (pendingAddIdsRef.current.includes(id)) {\n        // if in pendingAddIds queue\n        const itms = pendingAddItemsRef.current;\n        const matchIndex = itms.findIndex(item => item.id === id);\n        if (matchIndex > -1) {\n          itms[matchIndex] = payload;\n        } else {\n          itms.push(payload);\n        }\n        pendingAddItemsRef.current = itms;\n      } else {\n        // if not in pendingAddIds queue\n        setItems(prevItems => {\n          const nextItems = [...prevItems];\n          const matchIndex = nextItems.findIndex(item => item.id === id);\n          if (matchIndex > -1) {\n            nextItems[matchIndex] = payload;\n          } else {\n            nextItems.push(payload);\n          }\n          return nextItems;\n        });\n      }\n    }, []);\n    add = addItem;\n    const removeItem = useCallback(id => {\n      if (pendingAddIdsRef.current.includes(id)) {\n        pendingAddIdsRef.current = pendingAddIdsRef.current.filter(cId => cId !== id);\n      }\n      if (pendingAddItemsRef.current.map(c => c.id).includes(id)) {\n        pendingAddItemsRef.current = pendingAddItemsRef.current.filter(c => c.id !== id);\n      }\n      setItems(itms => itms.filter(item => item.id !== id));\n    }, []);\n    remove = removeItem;\n    const startBatch = useCallback(args => {\n      const {\n        name,\n        data\n      } = args;\n      const {\n        cells = []\n      } = data || {};\n      if (name === 'add') {\n        const cellIds = cells.filter(cell => cell.isNode()).map(cell => cell.id);\n        pendingAddIdsRef.current = Array.from(new Set([...pendingAddIdsRef.current, ...cellIds]));\n      }\n    }, []);\n    const stopBatch = useCallback(({\n      name\n    }) => {\n      if (name === 'add') {\n        const pendingAdds = pendingAddItemsRef.current;\n        if (pendingAdds.length) {\n          const currentPendingAddIds = pendingAdds.map(pendingAddItem => pendingAddItem.id);\n          pendingAddIdsRef.current = pendingAddIdsRef.current.filter(id => !currentPendingAddIds.includes(id));\n          pendingAddItemsRef.current = [];\n          setItems(prevItems => {\n            const nextItems = [...prevItems];\n            pendingAdds.forEach(pendingAddItem => {\n              const matchIndex = nextItems.findIndex(item => item.id === pendingAddItem.id);\n              if (matchIndex > -1) {\n                nextItems[matchIndex] = pendingAddItem;\n              } else {\n                nextItems.push(pendingAddItem);\n              }\n            });\n            return nextItems;\n          });\n        }\n      }\n    }, []);\n    useLayoutEffect(() => {\n      if (graph) {\n        graph.on('batch:start', startBatch);\n        graph.on('batch:stop', stopBatch);\n      }\n      return () => {\n        if (graph) {\n          graph.off('batch:start', startBatch);\n          graph.off('batch:stop', stopBatch);\n          setItems([]);\n          pendingAddIdsRef.current = [];\n          pendingAddItemsRef.current = [];\n        }\n      };\n    }, [graph, startBatch, stopBatch]);\n    return React.createElement(React.Fragment, null, ...items.map(item => item.portal));\n  };\n  class ReactShapeView extends NodeView {\n    init() {\n      super.init();\n      this.cell.on('removed', () => {\n        disconnect(this.cell.id);\n      });\n    }\n    getComponentContainer() {\n      return this.cell.prop('useForeignObject') === false ? this.selectors.content : this.selectors.foContent;\n    }\n    confirmUpdate(flag) {\n      const ret = super.confirmUpdate(flag);\n      return this.handleAction(ret, action, () => this.renderReactComponent());\n    }\n    renderReactComponent() {\n      this.unmountReactComponent();\n      const root = this.getComponentContainer();\n      const node = this.cell;\n      const graph = this.graph;\n      if (root) {\n        const component = this.graph.hook.getReactComponent(node);\n        const elem = React.createElement(Wrap, {\n          graph,\n          node,\n          component\n        });\n        connect(this.cell.id, ReactDOM.createPortal(elem, root));\n      }\n    }\n    unmountReactComponent() {\n      const root = this.getComponentContainer();\n      if (root) {\n        ReactDOM.unmountComponentAtNode(root);\n      }\n      return root;\n    }\n    onMouseDown(e, x, y) {\n      const target = e.target;\n      const tagName = target.tagName.toLowerCase();\n      if (tagName === 'input') {\n        const type = target.getAttribute('type');\n        if (type == null || ['text', 'password', 'number', 'email', 'search', 'tel', 'url'].includes(type)) {\n          return;\n        }\n      }\n      super.onMouseDown(e, x, y);\n    }\n    dispose() {\n      disconnect(this.cell.id);\n      this.unmountReactComponent();\n    }\n  }\n  __decorate([NodeView.dispose()], ReactShapeView.prototype, \"dispose\", null);\n  ReactShapeView.config({\n    bootstrap: [action],\n    actions: {\n      component: action\n    }\n  });\n  NodeView.registry.register(uniqViewId, ReactShapeView, true);\n  return {\n    Portal,\n    setGraph\n  };\n}\nexport function usePortal(uniqViewId) {\n  const initializedRef = useRef(false);\n  const [PortalContainer] = useState(() => {\n    if (!initializedRef.current) {\n      initializedRef.current = true;\n      return createPortal(uniqViewId);\n    }\n    return {}; // won't be used\n  });\n  return [PortalContainer.Portal, PortalContainer.setGraph];\n}","map":{"version":3,"names":["React","useState","useCallback","useLayoutEffect","useRef","ReactDOM","NodeView","Wrap","action","createPortal","uniqViewId","setGraphRef","current","setGraph","graph","add","remove","connect","id","portal","disconnect","Portal","items","setItems","setGraphInstance","pendingAddIdsRef","pendingAddItemsRef","addItem","payload","includes","itms","matchIndex","findIndex","item","push","prevItems","nextItems","removeItem","filter","cId","map","c","startBatch","args","name","data","cells","cellIds","cell","isNode","Array","from","Set","stopBatch","pendingAdds","length","currentPendingAddIds","pendingAddItem","forEach","on","off","createElement","Fragment","ReactShapeView","init","getComponentContainer","prop","selectors","content","foContent","confirmUpdate","flag","ret","handleAction","renderReactComponent","unmountReactComponent","root","node","component","hook","getReactComponent","elem","unmountComponentAtNode","onMouseDown","e","x","y","target","tagName","toLowerCase","type","getAttribute","dispose","__decorate","config","bootstrap","actions","registry","register","usePortal","initializedRef","PortalContainer"],"sources":["/Users/bhanudahiya/Desktop/ledger-IQ/node_modules/@antv/x6-react-shape/src/usePortal/index.ts"],"sourcesContent":["import React, { useState, useCallback, useLayoutEffect, useRef } from 'react'\nimport ReactDOM from 'react-dom'\nimport type { Graph, Cell } from '@antv/x6'\nimport { NodeView } from '@antv/x6'\nimport type { ReactShape } from '../node'\nimport { Wrap } from '../wrap'\n\ninterface Payload {\n  id: string\n  portal: React.ReactPortal\n}\n\nconst action: any = 'react'\n\nexport function createPortal(uniqViewId: string): {\n  Portal: React.FC<Record<string, any>>\n  setGraph: (graph: Graph) => void\n} {\n  const setGraphRef: { current: (graph: Graph) => void } = { current: () => {} }\n  const setGraph = (graph: Graph) => {\n    setGraphRef.current(graph)\n  }\n\n  let add: (payload: Payload) => void\n  let remove: (id: string) => void\n\n  function connect(id: string, portal: React.ReactPortal) {\n    add({ id, portal })\n  }\n\n  function disconnect(id: string) {\n    remove(id)\n  }\n\n  const Portal: React.FC<Record<string, any>> = () => {\n    const [items, setItems] = useState<Payload[]>([])\n    const [graph, setGraphInstance] = useState<Graph | undefined>()\n    const pendingAddIdsRef = useRef<string[]>([])\n    const pendingAddItemsRef = useRef<Payload[]>([])\n    setGraphRef.current = setGraphInstance\n\n    const addItem = useCallback((payload: Payload) => {\n      const { id } = payload\n      if (pendingAddIdsRef.current.includes(id)) {\n        // if in pendingAddIds queue\n        const itms = pendingAddItemsRef.current\n        const matchIndex = itms.findIndex((item) => item.id === id)\n        if (matchIndex > -1) {\n          itms[matchIndex] = payload\n        } else {\n          itms.push(payload)\n        }\n        pendingAddItemsRef.current = itms\n      } else {\n        // if not in pendingAddIds queue\n        setItems((prevItems) => {\n          const nextItems = [...prevItems]\n          const matchIndex = nextItems.findIndex((item) => item.id === id)\n          if (matchIndex > -1) {\n            nextItems[matchIndex] = payload\n          } else {\n            nextItems.push(payload)\n          }\n          return nextItems\n        })\n      }\n    }, [])\n    add = addItem\n\n    const removeItem = useCallback((id: string) => {\n      if (pendingAddIdsRef.current.includes(id)) {\n        pendingAddIdsRef.current = pendingAddIdsRef.current.filter(\n          (cId) => cId !== id,\n        )\n      }\n      if (pendingAddItemsRef.current.map((c) => c.id).includes(id)) {\n        pendingAddItemsRef.current = pendingAddItemsRef.current.filter(\n          (c) => c.id !== id,\n        )\n      }\n      setItems((itms) => itms.filter((item) => item.id !== id))\n    }, [])\n    remove = removeItem\n\n    const startBatch = useCallback(\n      (args: { name: string; data: { cells: Cell[] } }) => {\n        const { name, data } = args\n        const { cells = [] } = data || {}\n        if (name === 'add') {\n          const cellIds = cells\n            .filter((cell) => cell.isNode())\n            .map((cell) => cell.id)\n          pendingAddIdsRef.current = Array.from(\n            new Set([...pendingAddIdsRef.current, ...cellIds]),\n          )\n        }\n      },\n      [],\n    )\n\n    const stopBatch = useCallback(({ name }: { name: string }) => {\n      if (name === 'add') {\n        const pendingAdds: Payload[] = pendingAddItemsRef.current\n        if (pendingAdds.length) {\n          const currentPendingAddIds = pendingAdds.map(\n            (pendingAddItem) => pendingAddItem.id,\n          )\n          pendingAddIdsRef.current = pendingAddIdsRef.current.filter(\n            (id) => !currentPendingAddIds.includes(id),\n          )\n          pendingAddItemsRef.current = []\n          setItems((prevItems) => {\n            const nextItems = [...prevItems]\n            pendingAdds.forEach((pendingAddItem) => {\n              const matchIndex = nextItems.findIndex(\n                (item) => item.id === pendingAddItem.id,\n              )\n              if (matchIndex > -1) {\n                nextItems[matchIndex] = pendingAddItem\n              } else {\n                nextItems.push(pendingAddItem)\n              }\n            })\n            return nextItems\n          })\n        }\n      }\n    }, [])\n\n    useLayoutEffect(() => {\n      if (graph) {\n        graph.on('batch:start', startBatch)\n        graph.on('batch:stop', stopBatch)\n      }\n      return () => {\n        if (graph) {\n          graph.off('batch:start', startBatch)\n          graph.off('batch:stop', stopBatch)\n          setItems([])\n          pendingAddIdsRef.current = []\n          pendingAddItemsRef.current = []\n        }\n      }\n    }, [graph, startBatch, stopBatch])\n\n    return React.createElement(\n      React.Fragment,\n      null,\n      ...items.map((item) => item.portal),\n    )\n  }\n\n  class ReactShapeView extends NodeView<ReactShape> {\n    protected init() {\n      super.init()\n      this.cell.on('removed', () => {\n        disconnect(this.cell.id)\n      })\n    }\n\n    getComponentContainer() {\n      return this.cell.prop('useForeignObject') === false\n        ? (this.selectors.content as SVGElement)\n        : (this.selectors.foContent as HTMLDivElement)\n    }\n\n    confirmUpdate(flag: number) {\n      const ret = super.confirmUpdate(flag)\n      return this.handleAction(ret, action, () => this.renderReactComponent())\n    }\n\n    protected renderReactComponent() {\n      this.unmountReactComponent()\n      const root = this.getComponentContainer()\n      const node = this.cell\n      const graph = this.graph\n\n      if (root) {\n        const component = this.graph.hook.getReactComponent(node)\n        const elem = React.createElement(Wrap, { graph, node, component })\n        connect(this.cell.id, ReactDOM.createPortal(elem, root))\n      }\n    }\n\n    protected unmountReactComponent() {\n      const root = this.getComponentContainer()\n      if (root) {\n        ReactDOM.unmountComponentAtNode(root)\n      }\n      return root\n    }\n\n    onMouseDown(e: any, x: number, y: number) {\n      const target = e.target as Element\n      const tagName = target.tagName.toLowerCase()\n      if (tagName === 'input') {\n        const type = target.getAttribute('type')\n        if (\n          type == null ||\n          [\n            'text',\n            'password',\n            'number',\n            'email',\n            'search',\n            'tel',\n            'url',\n          ].includes(type)\n        ) {\n          return\n        }\n      }\n\n      super.onMouseDown(e, x, y)\n    }\n\n    @NodeView.dispose()\n    dispose() {\n      disconnect(this.cell.id)\n      this.unmountReactComponent()\n    }\n  }\n\n  ReactShapeView.config({\n    bootstrap: [action],\n    actions: {\n      component: action,\n    },\n  })\n\n  NodeView.registry.register(uniqViewId, ReactShapeView, true)\n\n  return { Portal, setGraph }\n}\n\nexport function usePortal(\n  uniqViewId: string,\n): [React.FC<Record<string, any>>, (graph: Graph) => void] {\n  const initializedRef = useRef<boolean>(false)\n  const [PortalContainer] = useState<ReturnType<typeof createPortal>>(() => {\n    if (!initializedRef.current) {\n      initializedRef.current = true\n      return createPortal(uniqViewId)\n    }\n    return {} as any // won't be used\n  })\n  return [PortalContainer.Portal, PortalContainer.setGraph]\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}