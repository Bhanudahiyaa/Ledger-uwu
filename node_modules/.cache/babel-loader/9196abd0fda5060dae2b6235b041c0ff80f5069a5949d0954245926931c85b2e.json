{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Base } from './base';\nexport class SnaplineManager extends Base {\n  constructor() {\n    super(...arguments);\n    this.widget = this.graph.hook.createSnapline();\n  }\n  dispose() {\n    this.widget.dispose();\n  }\n}\n__decorate([Base.dispose()], SnaplineManager.prototype, \"dispose\", null);","map":{"version":3,"names":["Base","SnaplineManager","constructor","widget","graph","hook","createSnapline","dispose","__decorate"],"sources":["/Users/bhanudahiya/Desktop/ledger-IQ/node_modules/@antv/x6/src/graph/snapline.ts"],"sourcesContent":["import { Snapline } from '../addon/snapline'\nimport { Base } from './base'\n\nexport class SnaplineManager extends Base {\n  public readonly widget: Snapline = this.graph.hook.createSnapline()\n\n  @Base.dispose()\n  dispose() {\n    this.widget.dispose()\n  }\n}\n\nexport namespace SnaplineManager {\n  export type Filter = Snapline.Filter\n\n  export interface Options extends Snapline.Options {}\n}\n"],"mappings":";;;;;;;AACA,SAASA,IAAI,QAAQ,QAAQ;AAE7B,OAAM,MAAOC,eAAgB,SAAQD,IAAI;EAAzCE,YAAA;;IACkB,KAAAC,MAAM,GAAa,IAAI,CAACC,KAAK,CAACC,IAAI,CAACC,cAAc,EAAE;EAMrE;EAHEC,OAAOA,CAAA;IACL,IAAI,CAACJ,MAAM,CAACI,OAAO,EAAE;EACvB;;AAFAC,UAAA,EADCR,IAAI,CAACO,OAAO,EAAE,C,6CAGd","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}