{"ast":null,"code":"import _initializerDefineProperty from \"@babel/runtime/helpers/initializerDefineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _applyDecoratedDescriptor from \"@babel/runtime/helpers/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"@babel/runtime/helpers/initializerWarningHelper\";\nvar _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _class, _class2, _descriptor, _descriptor2, _descriptor3, _temp;\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return _possibleConstructorReturn(this, result);\n  };\n}\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nimport { gl, IDENTIFIER } from '@antv/g-webgpu-core';\nimport { inject, injectable, named } from 'inversify';\nimport { Renderable } from '../Renderable';\n\n/* babel-plugin-inline-import './shaders/webgl.grid.frag.glsl' */\nvar gridFrag = \"// generate grid, borrow from clay.gl viewer\\n// @see https://github.com/pissang/clay-viewer/blob/master/src/graphic/ground.glsl\\n#extension GL_OES_standard_derivatives : enable\\n\\nvarying vec3 v_Position;\\n// varying vec3 v_Normal;\\n\\nuniform float u_GridSize : 5;\\nuniform float u_GridSize2 : .5;\\nuniform vec4 u_GridColor : [0, 0, 0, 1];\\nuniform vec4 u_GridColor2 : [0.3, 0.3, 0.3, 1];\\nuniform bool u_GridEnabled : true;\\n\\n// uniform vec3 u_LightDirection;\\n// uniform vec3 u_LightColor;\\n// uniform vec3 u_Camera;\\n\\nvoid main() {\\n  // vec3 n = v_Normal;\\n  // vec3 l = normalize(u_LightDirection);\\n  // float NdotL = clamp(dot(n, l), 0.001, 1.0);\\n\\n  gl_FragColor = vec4(1.);\\n\\n  if (u_GridEnabled) {\\n    float wx = v_Position.x;\\n    float wz = v_Position.z;\\n    // float x0 = abs(fract(wx / u_GridSize - 0.5) - 0.5) / fwidth(wx) * u_GridSize / 2.0;\\n    // float z0 = abs(fract(wz / u_GridSize - 0.5) - 0.5) / fwidth(wz) * u_GridSize / 2.0;\\n\\n    float x1 = abs(fract(wx / u_GridSize2 - 0.5) - 0.5) / fwidth(wx) * u_GridSize2;\\n    float z1 = abs(fract(wz / u_GridSize2 - 0.5) - 0.5) / fwidth(wz) * u_GridSize2;\\n\\n    // float v0 = 1.0 - clamp(min(x0, z0), 0.0, 1.0);\\n    float v1 = 1.0 - clamp(min(x1, z1), 0.0, 1.0);\\n    // if (v0 > 0.1) {\\n        // gl_FragColor = mix(gl_FragColor, u_GridColor, v0);\\n    // }\\n    // else {\\n        gl_FragColor = mix(gl_FragColor, u_GridColor2, v1);\\n    // }\\n  }\\n\\n  // float shadowFactor = calcShadow(u_ShadowMap, v_PositionFromLight, l, n);\\n  // vec3 diffuseColor = u_LightColor * NdotL * shadowFactor;\\n\\n  // gl_FragColor.rgb *= diffuseColor;\\n}\";\n\n/* babel-plugin-inline-import './shaders/webgl.grid.vert.glsl' */\nvar gridVert = \"attribute vec3 a_Position;\\n\\nvarying vec3 v_Position;\\n\\nuniform mat4 projectionMatrix;\\nuniform mat4 modelViewMatrix;\\n\\nvoid main() {\\n  v_Position = a_Position;\\n  gl_Position = projectionMatrix * modelViewMatrix * vec4(a_Position, 1.);\\n}\";\nexport var Grid = (_dec = injectable(), _dec2 = inject(IDENTIFIER.Systems), _dec3 = named(IDENTIFIER.MaterialSystem), _dec4 = inject(IDENTIFIER.Systems), _dec5 = named(IDENTIFIER.GeometrySystem), _dec6 = inject(IDENTIFIER.ShaderModuleService), _dec(_class = (_class2 = (_temp = /*#__PURE__*/function (_Renderable) {\n  _inherits(Grid, _Renderable);\n  var _super = _createSuper(Grid);\n  function Grid() {\n    var _this;\n    _classCallCheck(this, Grid);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _initializerDefineProperty(_this, \"materialSystem\", _descriptor, _assertThisInitialized(_this));\n    _initializerDefineProperty(_this, \"geometrySystem\", _descriptor2, _assertThisInitialized(_this));\n    _initializerDefineProperty(_this, \"shaderModuleService\", _descriptor3, _assertThisInitialized(_this));\n    return _this;\n  }\n  _createClass(Grid, [{\n    key: \"onAttributeChanged\",\n    value: function onAttributeChanged(_ref) {\n      var name = _ref.name,\n        data = _ref.data;\n      var mesh = this.getMeshComponent();\n      if (mesh && mesh.material) {\n        if (name === 'gridColor') {\n          mesh.material.setUniform('u_GridColor', data);\n          mesh.material.setUniform('u_GridColor2', data);\n        } else if (name === 'gridSize') {\n          mesh.material.setUniform('u_GridSize', data);\n          mesh.material.setUniform('u_GridSize2', data);\n        }\n      }\n    }\n  }, {\n    key: \"onEntityCreated\",\n    value: function onEntityCreated() {\n      this.shaderModuleService.registerModule('grid', {\n        vs: gridVert,\n        fs: gridFrag\n      });\n      var _this$shaderModuleSer = this.shaderModuleService.getModule('grid'),\n        vs = _this$shaderModuleSer.vs,\n        fs = _this$shaderModuleSer.fs,\n        extractedUniforms = _this$shaderModuleSer.uniforms;\n      var material = this.materialSystem.createShaderMaterial({\n        vertexShader: vs,\n        fragmentShader: fs\n      });\n      this.setMaterial(material);\n      var geometry = this.geometrySystem.createBufferGeometry({\n        vertexCount: 4\n      });\n      this.setGeometry(geometry);\n      material.setCull({\n        enable: false,\n        face: gl.BACK\n      }).setDepth({\n        enable: true,\n        func: gl.LESS\n      }); // @ts-ignore\n\n      material.setUniform(extractedUniforms);\n      this.setAttributes({\n        gridColor: this.config.gridColor,\n        gridSize: this.config.gridSize\n      });\n      geometry.setIndex([0, 3, 2, 2, 1, 0]);\n      geometry.setAttribute('a_Position', Float32Array.from([-4, -1, -4, 4, -1, -4, 4, -1, 4, -4, -1, 4]), {\n        arrayStride: 4 * 2,\n        stepMode: 'vertex',\n        attributes: [{\n          shaderLocation: 0,\n          offset: 0,\n          format: 'float2'\n        }]\n      });\n    }\n  }]);\n  return Grid;\n}(Renderable), _temp), _descriptor = _applyDecoratedDescriptor(_class2.prototype, \"materialSystem\", [_dec2, _dec3], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, \"geometrySystem\", [_dec4, _dec5], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, \"shaderModuleService\", [_dec6], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _class2)) || _class);","map":{"version":3,"names":["gl","IDENTIFIER","inject","injectable","named","Renderable","Grid","_dec","_dec2","Systems","_dec3","MaterialSystem","_dec4","_dec5","GeometrySystem","_dec6","ShaderModuleService","_class","_class2","_temp","_Renderable","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","_initializerDefineProperty","_descriptor","_assertThisInitialized","_descriptor2","_descriptor3","_createClass","key","value","onAttributeChanged","_ref","name","data","mesh","getMeshComponent","material","setUniform","onEntityCreated","shaderModuleService","registerModule","vs","gridVert","fs","gridFrag","_this$shaderModuleSer","getModule","extractedUniforms","uniforms","materialSystem","createShaderMaterial","vertexShader","fragmentShader","setMaterial","geometry","geometrySystem","createBufferGeometry","vertexCount","setGeometry","setCull","enable","face","BACK","setDepth","func","LESS","setAttributes","gridColor","config","gridSize","setIndex","setAttribute","Float32Array","from","arrayStride","stepMode","attributes","shaderLocation","offset","format","_applyDecoratedDescriptor","prototype","configurable","enumerable","writable","initializer"],"sources":["/Users/bhanudahiya/Desktop/ledger-IQ/node_modules/@antv/g-webgpu/src/renderable/grid/index.ts"],"sourcesContent":["import {\n  BufferData,\n  GeometrySystem,\n  gl,\n  IDENTIFIER,\n  IShaderModuleService,\n  MaterialSystem,\n} from '@antv/g-webgpu-core';\nimport { inject, injectable, named } from 'inversify';\nimport { Renderable } from '../Renderable';\nimport gridFrag from './shaders/webgl.grid.frag.glsl';\nimport gridVert from './shaders/webgl.grid.vert.glsl';\n\ninterface IGridConfig {\n  gridColor: number[];\n  gridSize: number;\n}\n\n@injectable()\nexport class Grid extends Renderable<Partial<IGridConfig>> {\n  @inject(IDENTIFIER.Systems)\n  @named(IDENTIFIER.MaterialSystem)\n  private readonly materialSystem: MaterialSystem;\n\n  @inject(IDENTIFIER.Systems)\n  @named(IDENTIFIER.GeometrySystem)\n  private readonly geometrySystem: GeometrySystem;\n\n  @inject(IDENTIFIER.ShaderModuleService)\n  private readonly shaderModuleService: IShaderModuleService;\n\n  protected onAttributeChanged({\n    name,\n    data,\n  }: {\n    name: string;\n    data: BufferData;\n  }) {\n    const mesh = this.getMeshComponent();\n    if (mesh && mesh.material) {\n      if (name === 'gridColor') {\n        mesh.material.setUniform('u_GridColor', data);\n        mesh.material.setUniform('u_GridColor2', data);\n      } else if (name === 'gridSize') {\n        mesh.material.setUniform('u_GridSize', data);\n        mesh.material.setUniform('u_GridSize2', data);\n      }\n    }\n  }\n\n  protected onEntityCreated() {\n    this.shaderModuleService.registerModule('grid', {\n      vs: gridVert,\n      fs: gridFrag,\n    });\n    const {\n      vs,\n      fs,\n      uniforms: extractedUniforms,\n    } = this.shaderModuleService.getModule('grid');\n\n    const material = this.materialSystem.createShaderMaterial({\n      vertexShader: vs!,\n      fragmentShader: fs!,\n    });\n    this.setMaterial(material);\n\n    const geometry = this.geometrySystem.createBufferGeometry({\n      vertexCount: 4,\n    });\n    this.setGeometry(geometry);\n\n    material\n      .setCull({\n        enable: false,\n        face: gl.BACK,\n      })\n      .setDepth({\n        enable: true,\n        func: gl.LESS,\n      });\n\n    // @ts-ignore\n    material.setUniform(extractedUniforms);\n\n    this.setAttributes({\n      gridColor: this.config.gridColor,\n      gridSize: this.config.gridSize,\n    });\n\n    geometry.setIndex([0, 3, 2, 2, 1, 0]);\n\n    geometry.setAttribute(\n      'a_Position',\n      Float32Array.from([-4, -1, -4, 4, -1, -4, 4, -1, 4, -4, -1, 4]),\n      {\n        arrayStride: 4 * 2,\n        stepMode: 'vertex',\n        attributes: [\n          {\n            shaderLocation: 0,\n            offset: 0,\n            format: 'float2',\n          },\n        ],\n      },\n    );\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAGEA,EAHF,EAIEC,UAJF,QAOO,qBAPP;AAQA,SAASC,MAAT,EAAiBC,UAAjB,EAA6BC,KAA7B,QAA0C,WAA1C;AACA,SAASC,UAAT,QAA2B,eAA3B;;;;;;;AAUA,WAAaC,IAAb,IAAAC,IAAA,GADCJ,UAAU,EACX,EAAAK,KAAA,GACGN,MAAM,CAACD,UAAU,CAACQ,OAAZ,CADT,EAAAC,KAAA,GAEGN,KAAK,CAACH,UAAU,CAACU,cAAZ,CAFR,EAAAC,KAAA,GAKGV,MAAM,CAACD,UAAU,CAACQ,OAAZ,CALT,EAAAI,KAAA,GAMGT,KAAK,CAACH,UAAU,CAACa,cAAZ,CANR,EAAAC,KAAA,GASGb,MAAM,CAACD,UAAU,CAACe,mBAAZ,CATT,EAAAT,IAAA,CAAAU,MAAA,IAAAC,OAAA,IAAAC,KAAA,0BAAAC,WAAA;EAAAC,SAAA,CAAAf,IAAA,EAAAc,WAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAjB,IAAA;EAAA,SAAAA,KAAA;IAAA,IAAAkB,KAAA;IAAAC,eAAA,OAAAnB,IAAA;IAAA,SAAAoB,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAAAC,IAAA,OAAAC,KAAA,CAAAJ,IAAA,GAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;MAAAF,IAAA,CAAAE,IAAA,IAAAJ,SAAA,CAAAI,IAAA;IAAA;IAAAP,KAAA,GAAAF,MAAA,CAAAU,IAAA,CAAAC,KAAA,CAAAX,MAAA,SAAAY,MAAA,CAAAL,IAAA;IAAAM,0BAAA,CAAAX,KAAA,oBAAAY,WAAA,EAAAC,sBAAA,CAAAb,KAAA;IAAAW,0BAAA,CAAAX,KAAA,oBAAAc,YAAA,EAAAD,sBAAA,CAAAb,KAAA;IAAAW,0BAAA,CAAAX,KAAA,yBAAAe,YAAA,EAAAF,sBAAA,CAAAb,KAAA;IAAA,OAAAA,KAAA;EAAA;EAAAgB,YAAA,CAAAlC,IAAA;IAAAmC,GAAA;IAAAC,KAAA,WAAAC,mBAAAC,IAAA,EAkBK;MAAA,IALDC,IAKC,GAAAD,IAAA,CALDC,IAKC;QAJDC,IAIC,GAAAF,IAAA,CAJDE,IAIC;MACD,IAAMC,IAAI,GAAG,KAAKC,gBAAL,EAAb;MACA,IAAID,IAAI,IAAIA,IAAI,CAACE,QAAjB,EAA2B;QACzB,IAAIJ,IAAI,KAAK,WAAb,EAA0B;UACxBE,IAAI,CAACE,QAAL,CAAcC,UAAd,CAAyB,aAAzB,EAAwCJ,IAAxC;UACAC,IAAI,CAACE,QAAL,CAAcC,UAAd,CAAyB,cAAzB,EAAyCJ,IAAzC;QACD,CAHD,MAGO,IAAID,IAAI,KAAK,UAAb,EAAyB;UAC9BE,IAAI,CAACE,QAAL,CAAcC,UAAd,CAAyB,YAAzB,EAAuCJ,IAAvC;UACAC,IAAI,CAACE,QAAL,CAAcC,UAAd,CAAyB,aAAzB,EAAwCJ,IAAxC;QACD;MACF;IACF;EA7BH;IAAAL,GAAA;IAAAC,KAAA,WAAAS,gBAAA,EA+B8B;MAC1B,KAAKC,mBAAL,CAAyBC,cAAzB,CAAwC,MAAxC,EAAgD;QAC9CC,EAAE,EAAEC,QAD0C;QAE9CC,EAAE,EAAEC;MAF0C,CAAhD;MAD0B,IAAAC,qBAAA,GAStB,KAAKN,mBAAL,CAAyBO,SAAzB,CAAmC,MAAnC,CATsB;QAMxBL,EANwB,GAAAI,qBAAA,CAMxBJ,EANwB;QAOxBE,EAPwB,GAAAE,qBAAA,CAOxBF,EAPwB;QAQdI,iBARc,GAAAF,qBAAA,CAQxBG,QARwB;MAW1B,IAAMZ,QAAQ,GAAG,KAAKa,cAAL,CAAoBC,oBAApB,CAAyC;QACxDC,YAAY,EAAEV,EAD0C;QAExDW,cAAc,EAAET;MAFwC,CAAzC,CAAjB;MAIA,KAAKU,WAAL,CAAiBjB,QAAjB;MAEA,IAAMkB,QAAQ,GAAG,KAAKC,cAAL,CAAoBC,oBAApB,CAAyC;QACxDC,WAAW,EAAE;MAD2C,CAAzC,CAAjB;MAGA,KAAKC,WAAL,CAAiBJ,QAAjB;MAEAlB,QAAQ,CACLuB,OADH,CACW;QACPC,MAAM,EAAE,KADD;QAEPC,IAAI,EAAE1E,EAAE,CAAC2E;MAFF,CADX,EAKGC,QALH,CAKY;QACRH,MAAM,EAAE,IADA;QAERI,IAAI,EAAE7E,EAAE,CAAC8E;MAFD,CALZ,EAtB0B,CAgC1B;;MACA7B,QAAQ,CAACC,UAAT,CAAoBU,iBAApB;MAEA,KAAKmB,aAAL,CAAmB;QACjBC,SAAS,EAAE,KAAKC,MAAL,CAAYD,SADN;QAEjBE,QAAQ,EAAE,KAAKD,MAAL,CAAYC;MAFL,CAAnB;MAKAf,QAAQ,CAACgB,QAAT,CAAkB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,CAAlB;MAEAhB,QAAQ,CAACiB,YAAT,CACE,YADF,EAEEC,YAAY,CAACC,IAAb,CAAkB,CAAC,CAAC,CAAF,EAAK,CAAC,CAAN,EAAS,CAAC,CAAV,EAAa,CAAb,EAAgB,CAAC,CAAjB,EAAoB,CAAC,CAArB,EAAwB,CAAxB,EAA2B,CAAC,CAA5B,EAA+B,CAA/B,EAAkC,CAAC,CAAnC,EAAsC,CAAC,CAAvC,EAA0C,CAA1C,CAAlB,CAFF,EAGE;QACEC,WAAW,EAAE,IAAI,CADnB;QAEEC,QAAQ,EAAE,QAFZ;QAGEC,UAAU,EAAE,CACV;UACEC,cAAc,EAAE,CADlB;UAEEC,MAAM,EAAE,CAFV;UAGEC,MAAM,EAAE;QAHV,CADU;MAHd,CAHF;IAeD;EAxFH;EAAA,OAAAtF,IAAA;AAAA,EAA0BD,UAA1B,GAAAc,KAAA,GAAAiB,WAAA,GAAAyD,yBAAA,CAAA3E,OAAA,CAAA4E,SAAA,qBAAAtF,KAAA,EAAAE,KAAA;EAAAqF,YAAA;EAAAC,UAAA;EAAAC,QAAA;EAAAC,WAAA;AAAA,IAAA5D,YAAA,GAAAuD,yBAAA,CAAA3E,OAAA,CAAA4E,SAAA,qBAAAlF,KAAA,EAAAC,KAAA;EAAAkF,YAAA;EAAAC,UAAA;EAAAC,QAAA;EAAAC,WAAA;AAAA,IAAA3D,YAAA,GAAAsD,yBAAA,CAAA3E,OAAA,CAAA4E,SAAA,0BAAA/E,KAAA;EAAAgF,YAAA;EAAAC,UAAA;EAAAC,QAAA;EAAAC,WAAA;AAAA,IAAAhF,OAAA,MAAAD,MAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}