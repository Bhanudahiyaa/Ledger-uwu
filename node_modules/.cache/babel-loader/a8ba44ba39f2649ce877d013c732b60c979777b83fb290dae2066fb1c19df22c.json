{"ast":null,"code":"import barycenter from './barycenter';\nimport resolveConflicts from './resolve-conflicts';\nimport sort from './sort';\nconst sortSubgraph = (g, v, cg, biasRight, usePrev) => {\n  var _a, _b, _c, _d;\n  let movable = g.children(v);\n  // fixorder的点不参与排序（这个方案不合适，只排了新增节点，和原来的分离）\n  const node = g.node(v);\n  const bl = node ? node.borderLeft : undefined;\n  const br = node ? node.borderRight : undefined;\n  const subgraphs = {};\n  if (bl) {\n    movable = movable === null || movable === void 0 ? void 0 : movable.filter(w => {\n      return w !== bl && w !== br;\n    });\n  }\n  const barycenters = barycenter(g, movable || []);\n  barycenters === null || barycenters === void 0 ? void 0 : barycenters.forEach(entry => {\n    var _a;\n    if ((_a = g.children(entry.v)) === null || _a === void 0 ? void 0 : _a.length) {\n      const subgraphResult = sortSubgraph(g, entry.v, cg, biasRight);\n      subgraphs[entry.v] = subgraphResult;\n      if (subgraphResult.hasOwnProperty(\"barycenter\")) {\n        mergeBarycenters(entry, subgraphResult);\n      }\n    }\n  });\n  const entries = resolveConflicts(barycenters, cg);\n  expandSubgraphs(entries, subgraphs);\n  // 添加fixorder信息到entries里边\n  // TODO: 不考虑复合情况，只用第一个点的fixorder信息，后续考虑更完备的实现\n  (_a = entries.filter(e => {\n    var _a;\n    return !!e.vs || ((_a = e.vs) === null || _a === void 0 ? void 0 : _a.length) > 0;\n  })) === null || _a === void 0 ? void 0 : _a.forEach(e => {\n    const node = g.node(e.vs[0]);\n    e.fixorder = node.fixorder;\n    e.order = node.order;\n  });\n  const result = sort(entries, biasRight, usePrev);\n  if (bl) {\n    // @ts-ignore\n    result.vs = [bl, result.vs, br].flat();\n    if ((_b = g.predecessors(bl)) === null || _b === void 0 ? void 0 : _b.length) {\n      const blPred = g.node(((_c = g.predecessors(bl)) === null || _c === void 0 ? void 0 : _c[0]) || {});\n      const brPred = g.node(((_d = g.predecessors(br)) === null || _d === void 0 ? void 0 : _d[0]) || {});\n      if (!result.hasOwnProperty(\"barycenter\")) {\n        result.barycenter = 0;\n        result.weight = 0;\n      }\n      result.barycenter = (result.barycenter * result.weight + blPred.order + brPred.order) / (result.weight + 2);\n      result.weight += 2;\n    }\n  }\n  return result;\n};\nconst expandSubgraphs = (entries, subgraphs) => {\n  entries === null || entries === void 0 ? void 0 : entries.forEach(entry => {\n    var _a;\n    const vss = (_a = entry.vs) === null || _a === void 0 ? void 0 : _a.map(v => {\n      if (subgraphs[v]) {\n        return subgraphs[v].vs;\n      }\n      return v;\n    });\n    entry.vs = vss.flat();\n  });\n};\nconst mergeBarycenters = (target, other) => {\n  if (target.barycenter !== undefined) {\n    target.barycenter = (target.barycenter * target.weight + other.barycenter * other.weight) / (target.weight + other.weight);\n    target.weight += other.weight;\n  } else {\n    target.barycenter = other.barycenter;\n    target.weight = other.weight;\n  }\n};\nexport default sortSubgraph;","map":{"version":3,"names":["barycenter","resolveConflicts","sort","sortSubgraph","g","v","cg","biasRight","usePrev","movable","children","node","bl","borderLeft","undefined","br","borderRight","subgraphs","filter","w","barycenters","forEach","entry","_a","length","subgraphResult","hasOwnProperty","mergeBarycenters","entries","expandSubgraphs","e","vs","fixorder","order","result","flat","_b","predecessors","blPred","_c","brPred","_d","weight","vss","map","target","other"],"sources":["../../../../../src/layout/dagre/src/order/sort-subgraph.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}