{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { AttributeType, gl } from '@antv/l7-core';\nimport BaseModel from \"../../core/BaseModel\";\nimport { rgb2arr } from '@antv/l7-utils';\n/* babel-plugin-inline-import '../shaders/billboard/billboard_point_frag.glsl' */\nconst simplePointFrag = \"\\nlayout(std140) uniform commonUniorm {\\n  vec4 u_stroke_color;\\n  float u_additive;\\n  float u_stroke_opacity;\\n  float u_stroke_width;\\n};\\n\\nin vec4 v_color;\\nin float v_blur;\\nin float v_innerRadius;\\n\\nout vec4 outputColor;\\n\\n#pragma include \\\"picking\\\"\\nvoid main() {\\n  vec2 center = vec2(0.5);\\n\\n  // Tip: \\u7247\\u5143\\u5230\\u4E2D\\u5FC3\\u70B9\\u7684\\u8DDD\\u79BB 0 - 1\\n  float fragmengTocenter = distance(center, gl_PointCoord) * 2.0;\\n  // Tip: \\u7247\\u5143\\u7684\\u526A\\u5207\\u6210\\u5706\\u5F62\\n  float circleClipOpacity = 1.0 - smoothstep(v_blur, 1.0, fragmengTocenter);\\n\\n\\n  if(v_innerRadius < 0.99) {\\n    // \\u5F53\\u5B58\\u5728 stroke \\u4E14 stroke > 0.01\\n    float blurWidth = (1.0 - v_blur)/2.0;\\n    vec4 stroke = vec4(u_stroke_color.rgb, u_stroke_opacity);\\n    if(fragmengTocenter > v_innerRadius + blurWidth) {\\n      outputColor = stroke;\\n    } else if(fragmengTocenter > v_innerRadius - blurWidth){\\n      float mixR = (fragmengTocenter - (v_innerRadius - blurWidth)) / (blurWidth * 2.0);\\n      outputColor = mix(v_color, stroke, mixR);\\n    } else {\\n      outputColor = v_color;\\n    }\\n  } else {\\n    // \\u5F53\\u4E0D\\u5B58\\u5728 stroke \\u6216 stroke <= 0.01\\n    outputColor = v_color;\\n  }\\n\\n  outputColor = filterColor(outputColor);\\n  \\n  if(u_additive > 0.0) {\\n    outputColor *= circleClipOpacity;\\n  } else {\\n    outputColor.a *= circleClipOpacity;\\n  }\\n\\n}\\n\";\n/* babel-plugin-inline-import '../shaders/billboard/billboard_point_vert.glsl' */\nconst simplePointVert = \"\\nlayout(location = ATTRIBUTE_LOCATION_POSITION) in vec3 a_Position;\\nlayout(location = ATTRIBUTE_LOCATION_POSITION_64LOW) in vec2 a_Position64Low;\\nlayout(location = ATTRIBUTE_LOCATION_COLOR) in vec4 a_Color;\\nlayout(location = ATTRIBUTE_LOCATION_SIZE) in float a_Size;\\n\\nlayout(std140) uniform commonUniorm {\\n  vec4 u_stroke_color;\\n  float u_additive;\\n  float u_stroke_opacity;\\n  float u_stroke_width;\\n};\\n\\nout vec4 v_color;\\nout float v_blur;\\nout float v_innerRadius;\\n\\n#pragma include \\\"projection\\\"\\n#pragma include \\\"picking\\\"\\n#pragma include \\\"project\\\"\\nvoid main() {\\n  v_color = vec4(a_Color.xyz, a_Color.w * opacity);\\n  v_blur = 1.0 - max(2.0 / a_Size, 0.05);\\n  v_innerRadius = max((a_Size - u_stroke_width) / a_Size, 0.0);\\n\\n  vec2 offset = project_pixel(u_offsets);\\n\\n  vec4 project_pos = project_position(vec4(a_Position, 1.0), a_Position64Low);\\n  gl_Position = project_common_position_to_clipspace(vec4(vec2(project_pos.xy+offset),project_pos.z,project_pos.w));\\n\\n  gl_PointSize = a_Size * 2.0 * u_DevicePixelRatio;\\n  setPickingColor(a_PickingColor);\\n}\\n\";\nexport function PointTriangulation(feature) {\n  const coordinates = feature.coordinates;\n  return {\n    vertices: [...coordinates],\n    indices: [0],\n    size: coordinates.length\n  };\n}\nexport default class SimplePointModel extends BaseModel {\n  get attributeLocation() {\n    return Object.assign(super.attributeLocation, {\n      MAX: super.attributeLocation.MAX,\n      SIZE: 9\n    });\n  }\n  getDefaultStyle() {\n    return {\n      blend: 'additive'\n    };\n  }\n  getCommonUniformsInfo() {\n    const {\n      blend,\n      strokeOpacity = 1,\n      strokeWidth = 0,\n      stroke = '#fff'\n    } = this.layer.getLayerConfig();\n    const commonOptions = {\n      u_stroke_color: rgb2arr(stroke),\n      u_additive: blend === 'additive' ? 1.0 : 0.0,\n      u_stroke_opacity: strokeOpacity,\n      u_stroke_width: strokeWidth\n    };\n    const commonBufferInfo = this.getUniformsBufferInfo(commonOptions);\n    return commonBufferInfo;\n  }\n  initModels() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      return _this.buildModels();\n    })();\n  }\n  buildModels() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      _this2.layer.triangulation = PointTriangulation;\n      _this2.initUniformsBuffer();\n      const model = yield _this2.layer.buildLayerModel({\n        moduleName: 'pointSimple',\n        vertexShader: simplePointVert,\n        fragmentShader: simplePointFrag,\n        defines: _this2.getDefines(),\n        inject: _this2.getInject(),\n        triangulation: PointTriangulation,\n        depth: {\n          enable: false\n        },\n        primitive: gl.POINTS\n      });\n      return [model];\n    })();\n  }\n  registerBuiltinAttributes() {\n    // 注册 Position 属性 64 位地位部分，经纬度数据开启双精度，避免大于 22 层级以上出现数据偏移\n    this.registerPosition64LowAttribute();\n    this.styleAttributeService.registerStyleAttribute({\n      name: 'size',\n      type: AttributeType.Attribute,\n      descriptor: {\n        name: 'a_Size',\n        shaderLocation: this.attributeLocation.SIZE,\n        buffer: {\n          usage: gl.DYNAMIC_DRAW,\n          data: [],\n          type: gl.FLOAT\n        },\n        size: 1,\n        update: feature => {\n          const {\n            size = 1\n          } = feature;\n          return Array.isArray(size) ? [size[0]] : [size];\n        }\n      }\n    });\n  }\n}","map":{"version":3,"names":["_asyncToGenerator","AttributeType","gl","BaseModel","rgb2arr","simplePointFrag","simplePointVert","PointTriangulation","feature","coordinates","vertices","indices","size","length","SimplePointModel","attributeLocation","Object","assign","MAX","SIZE","getDefaultStyle","blend","getCommonUniformsInfo","strokeOpacity","strokeWidth","stroke","layer","getLayerConfig","commonOptions","u_stroke_color","u_additive","u_stroke_opacity","u_stroke_width","commonBufferInfo","getUniformsBufferInfo","initModels","_this","buildModels","_this2","triangulation","initUniformsBuffer","model","buildLayerModel","moduleName","vertexShader","fragmentShader","defines","getDefines","inject","getInject","depth","enable","primitive","POINTS","registerBuiltinAttributes","registerPosition64LowAttribute","styleAttributeService","registerStyleAttribute","name","type","Attribute","descriptor","shaderLocation","buffer","usage","DYNAMIC_DRAW","data","FLOAT","update","Array","isArray"],"sources":["/Users/bhanudahiya/Desktop/ledger-IQ/node_modules/@antv/l7-layers/es/point/models/billboard_point.js"],"sourcesContent":["import _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { AttributeType, gl } from '@antv/l7-core';\nimport BaseModel from \"../../core/BaseModel\";\nimport { rgb2arr } from '@antv/l7-utils';\n/* babel-plugin-inline-import '../shaders/billboard/billboard_point_frag.glsl' */\nconst simplePointFrag = \"\\nlayout(std140) uniform commonUniorm {\\n  vec4 u_stroke_color;\\n  float u_additive;\\n  float u_stroke_opacity;\\n  float u_stroke_width;\\n};\\n\\nin vec4 v_color;\\nin float v_blur;\\nin float v_innerRadius;\\n\\nout vec4 outputColor;\\n\\n#pragma include \\\"picking\\\"\\nvoid main() {\\n  vec2 center = vec2(0.5);\\n\\n  // Tip: \\u7247\\u5143\\u5230\\u4E2D\\u5FC3\\u70B9\\u7684\\u8DDD\\u79BB 0 - 1\\n  float fragmengTocenter = distance(center, gl_PointCoord) * 2.0;\\n  // Tip: \\u7247\\u5143\\u7684\\u526A\\u5207\\u6210\\u5706\\u5F62\\n  float circleClipOpacity = 1.0 - smoothstep(v_blur, 1.0, fragmengTocenter);\\n\\n\\n  if(v_innerRadius < 0.99) {\\n    // \\u5F53\\u5B58\\u5728 stroke \\u4E14 stroke > 0.01\\n    float blurWidth = (1.0 - v_blur)/2.0;\\n    vec4 stroke = vec4(u_stroke_color.rgb, u_stroke_opacity);\\n    if(fragmengTocenter > v_innerRadius + blurWidth) {\\n      outputColor = stroke;\\n    } else if(fragmengTocenter > v_innerRadius - blurWidth){\\n      float mixR = (fragmengTocenter - (v_innerRadius - blurWidth)) / (blurWidth * 2.0);\\n      outputColor = mix(v_color, stroke, mixR);\\n    } else {\\n      outputColor = v_color;\\n    }\\n  } else {\\n    // \\u5F53\\u4E0D\\u5B58\\u5728 stroke \\u6216 stroke <= 0.01\\n    outputColor = v_color;\\n  }\\n\\n  outputColor = filterColor(outputColor);\\n  \\n  if(u_additive > 0.0) {\\n    outputColor *= circleClipOpacity;\\n  } else {\\n    outputColor.a *= circleClipOpacity;\\n  }\\n\\n}\\n\";\n/* babel-plugin-inline-import '../shaders/billboard/billboard_point_vert.glsl' */\nconst simplePointVert = \"\\nlayout(location = ATTRIBUTE_LOCATION_POSITION) in vec3 a_Position;\\nlayout(location = ATTRIBUTE_LOCATION_POSITION_64LOW) in vec2 a_Position64Low;\\nlayout(location = ATTRIBUTE_LOCATION_COLOR) in vec4 a_Color;\\nlayout(location = ATTRIBUTE_LOCATION_SIZE) in float a_Size;\\n\\nlayout(std140) uniform commonUniorm {\\n  vec4 u_stroke_color;\\n  float u_additive;\\n  float u_stroke_opacity;\\n  float u_stroke_width;\\n};\\n\\nout vec4 v_color;\\nout float v_blur;\\nout float v_innerRadius;\\n\\n#pragma include \\\"projection\\\"\\n#pragma include \\\"picking\\\"\\n#pragma include \\\"project\\\"\\nvoid main() {\\n  v_color = vec4(a_Color.xyz, a_Color.w * opacity);\\n  v_blur = 1.0 - max(2.0 / a_Size, 0.05);\\n  v_innerRadius = max((a_Size - u_stroke_width) / a_Size, 0.0);\\n\\n  vec2 offset = project_pixel(u_offsets);\\n\\n  vec4 project_pos = project_position(vec4(a_Position, 1.0), a_Position64Low);\\n  gl_Position = project_common_position_to_clipspace(vec4(vec2(project_pos.xy+offset),project_pos.z,project_pos.w));\\n\\n  gl_PointSize = a_Size * 2.0 * u_DevicePixelRatio;\\n  setPickingColor(a_PickingColor);\\n}\\n\";\nexport function PointTriangulation(feature) {\n  const coordinates = feature.coordinates;\n  return {\n    vertices: [...coordinates],\n    indices: [0],\n    size: coordinates.length\n  };\n}\nexport default class SimplePointModel extends BaseModel {\n  get attributeLocation() {\n    return Object.assign(super.attributeLocation, {\n      MAX: super.attributeLocation.MAX,\n      SIZE: 9\n    });\n  }\n  getDefaultStyle() {\n    return {\n      blend: 'additive'\n    };\n  }\n  getCommonUniformsInfo() {\n    const {\n      blend,\n      strokeOpacity = 1,\n      strokeWidth = 0,\n      stroke = '#fff'\n    } = this.layer.getLayerConfig();\n    const commonOptions = {\n      u_stroke_color: rgb2arr(stroke),\n      u_additive: blend === 'additive' ? 1.0 : 0.0,\n      u_stroke_opacity: strokeOpacity,\n      u_stroke_width: strokeWidth\n    };\n    const commonBufferInfo = this.getUniformsBufferInfo(commonOptions);\n    return commonBufferInfo;\n  }\n  initModels() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      return _this.buildModels();\n    })();\n  }\n  buildModels() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      _this2.layer.triangulation = PointTriangulation;\n      _this2.initUniformsBuffer();\n      const model = yield _this2.layer.buildLayerModel({\n        moduleName: 'pointSimple',\n        vertexShader: simplePointVert,\n        fragmentShader: simplePointFrag,\n        defines: _this2.getDefines(),\n        inject: _this2.getInject(),\n        triangulation: PointTriangulation,\n        depth: {\n          enable: false\n        },\n        primitive: gl.POINTS\n      });\n      return [model];\n    })();\n  }\n  registerBuiltinAttributes() {\n    // 注册 Position 属性 64 位地位部分，经纬度数据开启双精度，避免大于 22 层级以上出现数据偏移\n    this.registerPosition64LowAttribute();\n    this.styleAttributeService.registerStyleAttribute({\n      name: 'size',\n      type: AttributeType.Attribute,\n      descriptor: {\n        name: 'a_Size',\n        shaderLocation: this.attributeLocation.SIZE,\n        buffer: {\n          usage: gl.DYNAMIC_DRAW,\n          data: [],\n          type: gl.FLOAT\n        },\n        size: 1,\n        update: feature => {\n          const {\n            size = 1\n          } = feature;\n          return Array.isArray(size) ? [size[0]] : [size];\n        }\n      }\n    });\n  }\n}"],"mappings":"AAAA,OAAOA,iBAAiB,MAAM,6CAA6C;AAC3E,SAASC,aAAa,EAAEC,EAAE,QAAQ,eAAe;AACjD,OAAOC,SAAS,MAAM,sBAAsB;AAC5C,SAASC,OAAO,QAAQ,gBAAgB;AACxC;AACA,MAAMC,eAAe,GAAG,y3CAAy3C;AACj5C;AACA,MAAMC,eAAe,GAAG,ikCAAikC;AACzlC,OAAO,SAASC,kBAAkBA,CAACC,OAAO,EAAE;EAC1C,MAAMC,WAAW,GAAGD,OAAO,CAACC,WAAW;EACvC,OAAO;IACLC,QAAQ,EAAE,CAAC,GAAGD,WAAW,CAAC;IAC1BE,OAAO,EAAE,CAAC,CAAC,CAAC;IACZC,IAAI,EAAEH,WAAW,CAACI;EACpB,CAAC;AACH;AACA,eAAe,MAAMC,gBAAgB,SAASX,SAAS,CAAC;EACtD,IAAIY,iBAAiBA,CAAA,EAAG;IACtB,OAAOC,MAAM,CAACC,MAAM,CAAC,KAAK,CAACF,iBAAiB,EAAE;MAC5CG,GAAG,EAAE,KAAK,CAACH,iBAAiB,CAACG,GAAG;MAChCC,IAAI,EAAE;IACR,CAAC,CAAC;EACJ;EACAC,eAAeA,CAAA,EAAG;IAChB,OAAO;MACLC,KAAK,EAAE;IACT,CAAC;EACH;EACAC,qBAAqBA,CAAA,EAAG;IACtB,MAAM;MACJD,KAAK;MACLE,aAAa,GAAG,CAAC;MACjBC,WAAW,GAAG,CAAC;MACfC,MAAM,GAAG;IACX,CAAC,GAAG,IAAI,CAACC,KAAK,CAACC,cAAc,CAAC,CAAC;IAC/B,MAAMC,aAAa,GAAG;MACpBC,cAAc,EAAEzB,OAAO,CAACqB,MAAM,CAAC;MAC/BK,UAAU,EAAET,KAAK,KAAK,UAAU,GAAG,GAAG,GAAG,GAAG;MAC5CU,gBAAgB,EAAER,aAAa;MAC/BS,cAAc,EAAER;IAClB,CAAC;IACD,MAAMS,gBAAgB,GAAG,IAAI,CAACC,qBAAqB,CAACN,aAAa,CAAC;IAClE,OAAOK,gBAAgB;EACzB;EACAE,UAAUA,CAAA,EAAG;IACX,IAAIC,KAAK,GAAG,IAAI;IAChB,OAAOpC,iBAAiB,CAAC,aAAa;MACpC,OAAOoC,KAAK,CAACC,WAAW,CAAC,CAAC;IAC5B,CAAC,CAAC,CAAC,CAAC;EACN;EACAA,WAAWA,CAAA,EAAG;IACZ,IAAIC,MAAM,GAAG,IAAI;IACjB,OAAOtC,iBAAiB,CAAC,aAAa;MACpCsC,MAAM,CAACZ,KAAK,CAACa,aAAa,GAAGhC,kBAAkB;MAC/C+B,MAAM,CAACE,kBAAkB,CAAC,CAAC;MAC3B,MAAMC,KAAK,GAAG,MAAMH,MAAM,CAACZ,KAAK,CAACgB,eAAe,CAAC;QAC/CC,UAAU,EAAE,aAAa;QACzBC,YAAY,EAAEtC,eAAe;QAC7BuC,cAAc,EAAExC,eAAe;QAC/ByC,OAAO,EAAER,MAAM,CAACS,UAAU,CAAC,CAAC;QAC5BC,MAAM,EAAEV,MAAM,CAACW,SAAS,CAAC,CAAC;QAC1BV,aAAa,EAAEhC,kBAAkB;QACjC2C,KAAK,EAAE;UACLC,MAAM,EAAE;QACV,CAAC;QACDC,SAAS,EAAElD,EAAE,CAACmD;MAChB,CAAC,CAAC;MACF,OAAO,CAACZ,KAAK,CAAC;IAChB,CAAC,CAAC,CAAC,CAAC;EACN;EACAa,yBAAyBA,CAAA,EAAG;IAC1B;IACA,IAAI,CAACC,8BAA8B,CAAC,CAAC;IACrC,IAAI,CAACC,qBAAqB,CAACC,sBAAsB,CAAC;MAChDC,IAAI,EAAE,MAAM;MACZC,IAAI,EAAE1D,aAAa,CAAC2D,SAAS;MAC7BC,UAAU,EAAE;QACVH,IAAI,EAAE,QAAQ;QACdI,cAAc,EAAE,IAAI,CAAC/C,iBAAiB,CAACI,IAAI;QAC3C4C,MAAM,EAAE;UACNC,KAAK,EAAE9D,EAAE,CAAC+D,YAAY;UACtBC,IAAI,EAAE,EAAE;UACRP,IAAI,EAAEzD,EAAE,CAACiE;QACX,CAAC;QACDvD,IAAI,EAAE,CAAC;QACPwD,MAAM,EAAE5D,OAAO,IAAI;UACjB,MAAM;YACJI,IAAI,GAAG;UACT,CAAC,GAAGJ,OAAO;UACX,OAAO6D,KAAK,CAACC,OAAO,CAAC1D,IAAI,CAAC,GAAG,CAACA,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAACA,IAAI,CAAC;QACjD;MACF;IACF,CAAC,CAAC;EACJ;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}