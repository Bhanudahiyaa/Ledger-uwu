{"ast":null,"code":"import { __awaiter, __rest } from \"tslib\";\nimport { Source } from '@antv/l7';\nimport { isEqual, pick } from '@antv/util';\nimport { LayerGroup } from '../../core/layer/layer-group';\nimport { Plot } from '../../core/plot';\nimport { AreaLayer } from '../../layers/area-layer';\nimport { TextLayer } from '../../layers/text-layer';\nimport { deepAssign } from '../../utils';\nimport { getCacheArea, registerCacheArea } from './cache';\nimport { DEFAULT_AREA_GRANULARITY, DEFAULT_OPTIONS, GEO_AREA_URL, GEO_DATA_URL } from './constants';\nimport { getDrillStepDefaultConfig, getGeoAreaConfig, isEqualDrillSteps, topojson2geojson } from './helper';\nimport { createCountryBoundaryLayer } from './layer';\nexport class Choropleth extends Plot {\n  constructor() {\n    super(...arguments);\n    /**\n     * 图表类型\n     */\n    this.type = Plot.PlotType.Choropleth;\n    /**\n     * 国界数据\n     */\n    this.chinaBoundaryData = {\n      type: 'FeatureCollection',\n      features: []\n    };\n    /**\n     * 当前行政数据数据\n     */\n    this.currentDistrictData = {\n      type: 'FeatureCollection',\n      features: []\n    };\n    /**\n     * 数据钻取路径\n     */\n    this.drillSteps = [];\n    /**\n     * 钻取栈数据\n     */\n    this.drillStacks = [];\n    /**\n     * 向下钻取事件回调\n     */\n    this.onDrillDownHander = event => {\n      var _a;\n      const {\n        steps,\n        onDown\n      } = this.options.drill;\n      const properties = (_a = event.feature) === null || _a === void 0 ? void 0 : _a.properties;\n      const {\n        adcode\n      } = properties;\n      // 已经下钻到最后\n      if (this.drillStacks.length === steps.length + 1) {\n        return;\n      }\n      // 已开始下钻\n      const from = this.drillStacks.slice(-1)[0];\n      const depth = this.drillStacks.length - 1;\n      const _b = this.drillSteps[depth],\n        {\n          level,\n          granularity = DEFAULT_AREA_GRANULARITY[level]\n        } = _b,\n        drillConfig = __rest(_b, [\"level\", \"granularity\"]);\n      const downParams = {\n        nativeEvent: true,\n        from: {\n          level: from.level,\n          adcode: from.adcode,\n          granularity: from.granularity\n        },\n        to: {\n          level,\n          adcode,\n          granularity,\n          properties\n        }\n      };\n      const callback = (config = {}) => {\n        const view = {\n          level,\n          adcode,\n          granularity\n        };\n        const mergeConfig = deepAssign({}, drillConfig, config);\n        this.changeView(view, mergeConfig).then(drillData => {\n          if (drillData) {\n            this.drillStacks.push(drillData);\n            this.emit('drilldown', downParams);\n          }\n        });\n      };\n      if (onDown) {\n        onDown(downParams.from, downParams.to, callback);\n      } else {\n        callback();\n      }\n    };\n    /**\n     * 向上钻取事件回调\n     */\n    this.onDrillUpHander = () => {\n      const {\n        onUp\n      } = this.options.drill;\n      // 已经上卷到最高层级\n      const isTopDrillStack = this.drillStacks.length === 0 || this.drillStacks.length === 1;\n      if (isTopDrillStack) {\n        return;\n      }\n      const lastIndex = this.drillStacks.length - 1;\n      const from = this.drillStacks[lastIndex];\n      const to = this.drillStacks[lastIndex - 1];\n      const upParams = {\n        nativeEvent: true,\n        from: {\n          level: from.level,\n          adcode: from.adcode,\n          granularity: from.granularity\n        },\n        to: {\n          level: to.level,\n          adcode: to.adcode,\n          granularity: to.granularity\n        }\n      };\n      const callback = (config = {}) => {\n        const view = upParams.to;\n        const mergeConfig = deepAssign({}, to.config, config);\n        this.changeView(view, mergeConfig).then(drillData => {\n          if (drillData) {\n            this.drillStacks.pop();\n            this.emit('drillup', upParams);\n          }\n        });\n      };\n      if (onUp) {\n        onUp(upParams.from, upParams.to, callback);\n      } else {\n        callback();\n      }\n    };\n  }\n  /**\n   * 初始化数据\n   */\n  initSource() {\n    this.getInitDistrictData().then(() => {\n      this.source = this.createSource();\n      this.render();\n      this.inited = true;\n    });\n  }\n  /**\n   * 渲染\n   */\n  render() {\n    if (this.inited) {\n      this.scene.setEnableRender(true);\n      this.scene.render();\n    } else {\n      const layerGroup = this.createLayers(this.source);\n      this.layerGroup = layerGroup;\n      if (this.scene['sceneService'].loaded) {\n        this.onSceneLoaded();\n      } else {\n        this.scene.once('loaded', () => {\n          this.onSceneLoaded();\n        });\n      }\n      this.initLayersEvent();\n    }\n  }\n  /**\n   * 更新: 更新配置且重新渲染\n   */\n  update(options) {\n    var _a, _b, _c;\n    this.updateOption(options);\n    if (options.map && !isEqual(this.lastOptions.map, this.options.map)) {\n      this.updateMap(options.map);\n    }\n    // 下钻路径发生更新\n    if (options.drill && options.drill.enabled !== false && !isEqual((_a = this.lastOptions.drill) === null || _a === void 0 ? void 0 : _a.steps, (_b = this.options.drill) === null || _b === void 0 ? void 0 : _b.steps)) {\n      this.drillReset();\n      this.initDrillEvent();\n    }\n    this.scene.setEnableRender(false);\n    // 行政级别及范围发生更新\n    if (options.viewLevel && !isEqual(this.lastOptions.viewLevel, this.options.viewLevel)) {\n      const geoData = (_c = options.source) === null || _c === void 0 ? void 0 : _c.joinBy.geoData;\n      this.getDistrictData(geoData).then(() => {\n        const _a = this.options.source,\n          {\n            data\n          } = _a,\n          sourceConfig = __rest(_a, [\"data\"]);\n        this.changeData(data, sourceConfig);\n        this.updateLayers(options);\n        this.render();\n        this.updateComponents();\n        this.emit('update');\n      });\n    } else {\n      if (options.source && !isEqual(this.lastOptions.source, this.options.source)) {\n        const _d = this.options.source,\n          {\n            data\n          } = _d,\n          sourceConfig = __rest(_d, [\"data\"]);\n        this.changeData(data, sourceConfig);\n      }\n      this.updateLayers(options);\n      this.render();\n      this.updateComponents();\n      this.emit('update');\n    }\n  }\n  /**\n   * 获取默认配置\n   */\n  getDefaultOptions() {\n    return Choropleth.DefaultOptions;\n  }\n  /**\n   * 解析 source 配置\n   */\n  parserSourceConfig(source) {\n    const {\n        data: joinData,\n        joinBy\n      } = source,\n      sourceCFG = __rest(source, [\"data\", \"joinBy\"]);\n    const {\n      sourceField,\n      geoField: targetField,\n      geoData\n    } = joinBy;\n    const data = geoData;\n    const config = {\n      type: 'join',\n      sourceField,\n      targetField,\n      data: joinData\n    };\n    if (sourceCFG.transforms) {\n      sourceCFG.transforms.push(config);\n    } else {\n      sourceCFG.transforms = [config];\n    }\n    if (sourceCFG['parser']) {\n      delete sourceCFG['parser'];\n    }\n    return {\n      data,\n      sourceCFG\n    };\n  }\n  /**\n   * 创建 source 实例\n   */\n  createSource() {\n    const {\n      data,\n      sourceCFG\n    } = this.parserSourceConfig(this.options.source);\n    const source = new Source(data, sourceCFG);\n    return source;\n  }\n  /**\n   * 更新: 更新数据\n   */\n  changeData(data, cfg) {\n    this.options.source = deepAssign({}, this.options.source, Object.assign({\n      data\n    }, cfg));\n    const {\n      data: geoData,\n      sourceCFG\n    } = this.parserSourceConfig(this.options.source);\n    this.source.setData(geoData, sourceCFG);\n    this.emit('change-data');\n  }\n  /**\n   * 创建图层\n   */\n  createLayers(source) {\n    this.fillAreaLayer = new AreaLayer(Object.assign({\n      name: 'fillAreaLayer',\n      source\n    }, pick(this.options, AreaLayer.LayerOptionsKeys)));\n    const layerGroup = new LayerGroup([this.fillAreaLayer]);\n    if (this.options.chinaBorder) {\n      const layers = this.createCountryBoundaryLayer(this.chinaBoundaryData, this.options);\n      layers.forEach(layer => layerGroup.addLayer(layer));\n    }\n    if (this.options.label) {\n      this.labelLayer = this.createLabelLayer(source, this.options.label);\n      layerGroup.addLayer(this.labelLayer);\n    }\n    return layerGroup;\n  }\n  /**\n   * 创建中国国界线图层\n   */\n  createCountryBoundaryLayer(data, plotConfig) {\n    const {\n      chinaBoundaryLayer,\n      chinaHkmBoundaryLayer,\n      chinaDisputeBoundaryLayer\n    } = createCountryBoundaryLayer(data, plotConfig);\n    this.chinaBoundaryLayer = chinaBoundaryLayer;\n    this.chinaHkmBoundaryLayer = chinaHkmBoundaryLayer;\n    this.chinaDisputeBoundaryLayer = chinaDisputeBoundaryLayer;\n    return [chinaBoundaryLayer, chinaHkmBoundaryLayer, chinaDisputeBoundaryLayer];\n  }\n  /**\n   * 创建数据标签图层\n   */\n  createLabelLayer(source, label) {\n    const data = source['originData'].features.map(({\n      properties\n    }) => Object.assign({}, properties, {\n      centroid: properties['centroid'] || properties['center']\n    })).filter(({\n      centroid\n    }) => centroid);\n    const {\n      visible,\n      minZoom,\n      maxZoom,\n      zIndex = 0\n    } = this.options;\n    const textLayer = new TextLayer(Object.assign({\n      name: 'labelLayer',\n      source: {\n        data,\n        parser: {\n          type: 'json',\n          coordinates: 'centroid'\n        },\n        transforms: source.transforms\n      },\n      visible,\n      minZoom,\n      maxZoom,\n      zIndex: zIndex + 0.1\n    }, label));\n    const updateCallback = () => {\n      const data = this.source['originData'].features.map(({\n        properties\n      }) => properties).filter(({\n        centroid\n      }) => centroid);\n      textLayer.layer.setData(data, {\n        transforms: source.transforms\n      });\n    };\n    source.on('update', updateCallback);\n    textLayer.on('remove', () => {\n      source.off('update', updateCallback);\n    });\n    return textLayer;\n  }\n  /**\n   * 更新图层\n   */\n  updateLayers(options) {\n    const fillAreaLayerConfig = pick(options, AreaLayer.LayerOptionsKeys);\n    this.fillAreaLayer.update(fillAreaLayerConfig);\n    const createCountryBoundaryLayer = () => {\n      const layers = this.createCountryBoundaryLayer(this.chinaBoundaryData, this.options);\n      layers.forEach(layer => this.layerGroup.addLayer(layer));\n    };\n    const removeCountryBoundaryLayer = () => {\n      this.chinaBoundaryLayer && this.layerGroup.removeLayer(this.chinaBoundaryLayer);\n      this.chinaHkmBoundaryLayer && this.layerGroup.removeLayer(this.chinaHkmBoundaryLayer);\n      this.chinaDisputeBoundaryLayer && this.layerGroup.removeLayer(this.chinaDisputeBoundaryLayer);\n    };\n    if (options.chinaBorder) {\n      if (!this.chinaBoundaryLayer) {\n        createCountryBoundaryLayer();\n      } else {\n        removeCountryBoundaryLayer();\n        createCountryBoundaryLayer();\n      }\n    } else if (options.chinaBorder === false) {\n      removeCountryBoundaryLayer();\n    }\n    this.updateLabelLayer(this.source, options.label, this.options, this.labelLayer);\n  }\n  /**\n   * 初始化图层事件\n   */\n  initLayersEvent() {\n    this.initDrillEvent();\n    this.initLegendEvent();\n  }\n  /**\n   * 初始化钻取事件\n   */\n  initDrillEvent() {\n    // 更新：取消上次绑定事件\n    if (this.lastOptions.drill) {\n      const {\n        triggerUp = 'unclick',\n        triggerDown = 'click'\n      } = this.lastOptions.drill;\n      this.fillAreaLayer.off(triggerUp, this.onDrillUpHander);\n      this.fillAreaLayer.off(triggerDown, this.onDrillDownHander);\n    }\n    // 没有下钻\n    if (!this.options.drill || this.options.drill.enabled === false) {\n      return;\n    }\n    const {\n      steps,\n      triggerUp = 'unclick',\n      triggerDown = 'click'\n    } = this.options.drill;\n    const dillSteps = steps.map(step => {\n      if (typeof step === 'string') {\n        return {\n          level: step,\n          granularity: DEFAULT_AREA_GRANULARITY[step]\n        };\n      }\n      if (!step.granularity) {\n        step.granularity = DEFAULT_AREA_GRANULARITY[step.level];\n      }\n      return step;\n    });\n    // 初始化或钻取路径更新时\n    if (!isEqualDrillSteps(dillSteps, this.drillSteps)) {\n      this.drillSteps = dillSteps;\n      this.drillStacks = [];\n    }\n    // 初始化钻取栈第一钻数据\n    if (!this.drillStacks.length) {\n      const {\n        level,\n        adcode,\n        granularity = DEFAULT_AREA_GRANULARITY[level]\n      } = this.options.viewLevel;\n      const config = getDrillStepDefaultConfig(this.options);\n      this.drillStacks = [{\n        level,\n        adcode,\n        granularity,\n        config\n      }];\n    }\n    // 上卷事件\n    this.fillAreaLayer.on(triggerUp, this.onDrillUpHander);\n    // 下钻事件\n    this.fillAreaLayer.on(triggerDown, this.onDrillDownHander);\n  }\n  /**\n   * 初始化图例事件\n   */\n  initLegendEvent() {\n    const legend = this.options.legend;\n    if (!legend) return;\n    const onUpdateLegendData = () => {\n      this.updateLegendControl(legend);\n    };\n    this.fillAreaLayer.on('legend:color', onUpdateLegendData);\n  }\n  /**\n   * 重置钻取缓存数据\n   */\n  drillReset() {\n    this.drillStacks = [];\n  }\n  /**\n   * 获取当前已钻取层级数据\n   */\n  getCurrentDrillSteps() {\n    const steps = this.drillStacks.map(item => pick(item, ['level', 'adcode', 'granularity']));\n    return steps;\n  }\n  /**\n   * 实现 legend 配置项\n   */\n  getLegendOptions() {\n    const colorLegendItems = this.fillAreaLayer.getColorLegendItems();\n    if (colorLegendItems.length !== 0) {\n      return {\n        type: 'category',\n        items: colorLegendItems\n      };\n    }\n    return {};\n  }\n  /**\n   * 请求数据\n   */\n  fetchData(level, adcode, granularity) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const fileName = `${adcode}_${level}_${granularity}`;\n      const cacheArea = getCacheArea(fileName);\n      if (cacheArea) return cacheArea;\n      const {\n        url,\n        type,\n        extension\n      } = getGeoAreaConfig(this.options.geoArea);\n      let data;\n      const customFetchGeoData = this.options.customFetchGeoData;\n      if (customFetchGeoData) {\n        data = yield customFetchGeoData({\n          url,\n          level,\n          adcode,\n          granularity,\n          extension\n        });\n      } else {\n        const response = yield fetch(`${url}/${level}/${fileName}.${extension}`);\n        data = yield response.json();\n      }\n      if (type === 'topojson') {\n        data = topojson2geojson(data);\n      }\n      registerCacheArea(fileName, data);\n      return data;\n    });\n  }\n  /**\n   * 请求初始化区域数据\n   */\n  getInitDistrictData() {\n    return __awaiter(this, void 0, void 0, function* () {\n      var _a;\n      const fetchChinaBoundaryData = this.fetchData('country', '100000', 'boundary');\n      const geoData = (_a = this.options.source) === null || _a === void 0 ? void 0 : _a.joinBy.geoData;\n      try {\n        [this.chinaBoundaryData] = yield Promise.all([fetchChinaBoundaryData, this.getDistrictData(geoData)]);\n      } catch (err) {\n        throw new Error(`Failed to get china boundary data，${err}`);\n      }\n    });\n  }\n  /**\n   * 请求区域数据\n   */\n  getDistrictData(geoData) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const {\n        level,\n        adcode,\n        granularity = DEFAULT_AREA_GRANULARITY[level]\n      } = this.options.viewLevel;\n      const fetchCurrentDistrictData = geoData ? Promise.resolve(geoData) : this.fetchData(level, adcode, granularity);\n      try {\n        this.currentDistrictData = yield fetchCurrentDistrictData;\n        this.options.source = deepAssign({}, this.options.source, {\n          joinBy: {\n            geoData: this.currentDistrictData\n          }\n        });\n      } catch (err) {\n        throw new Error(`Failed to get district data，${err}`);\n      }\n    });\n  }\n  /**\n   * 向下钻取方法\n   */\n  drillDown(view, config = {}) {\n    const from = this.drillStacks.slice(-1)[0];\n    const {\n      level,\n      adcode,\n      granularity\n    } = view;\n    const downParams = {\n      nativeEvent: false,\n      from: {\n        level: from.level,\n        adcode: from.adcode,\n        granularity: from.granularity\n      },\n      to: {\n        level,\n        adcode,\n        granularity\n      }\n    };\n    // TODO: remove view\n    this.changeView(view, config).then(drillData => {\n      if (drillData) {\n        this.drillStacks.push(drillData);\n        this.emit('drilldown', downParams);\n      }\n    });\n  }\n  /**\n   * 向上钻取方法\n   */\n  drillUp(config = {}, level) {\n    // 已经上卷到最高层级\n    const drillStacksLength = this.drillStacks.length;\n    const isTopDrillStack = [0, 1].includes(drillStacksLength);\n    if (isTopDrillStack) {\n      return;\n    }\n    const customUpStackIndex = level ? this.drillStacks.findIndex(item => item.level === level) : -1;\n    const isCustomUp = customUpStackIndex !== -1;\n    const stacksIndex = isCustomUp ? customUpStackIndex : drillStacksLength - 2;\n    const _a = this.drillStacks[stacksIndex],\n      {\n        config: drillConfig\n      } = _a,\n      view = __rest(_a, [\"config\"]);\n    const mergeConfig = deepAssign({}, drillConfig, config);\n    const from = this.drillStacks[this.drillStacks.length - 1];\n    const upParams = {\n      nativeEvent: false,\n      from: {\n        level: from.level,\n        adcode: from.adcode,\n        granularity: from.granularity\n      },\n      to: {\n        level: view.level,\n        adcode: view.adcode,\n        granularity: view.granularity\n      }\n    };\n    this.changeView(view, mergeConfig).then(drillData => {\n      if (drillData) {\n        if (isCustomUp) {\n          this.drillStacks.splice(customUpStackIndex + 1);\n        } else {\n          this.drillStacks.pop();\n        }\n        this.emit('drillup', upParams);\n      }\n    });\n  }\n  /**\n   * 更新显示区域\n   */\n  changeView(view_1) {\n    return __awaiter(this, arguments, void 0, function* (view, config = {}) {\n      const {\n        level,\n        adcode,\n        granularity = DEFAULT_AREA_GRANULARITY[level]\n      } = view;\n      const geoData = yield this.fetchData(level, adcode, granularity);\n      if (!geoData.features.length) return;\n      const mergeConfig = deepAssign({}, getDrillStepDefaultConfig(this.options), config, {\n        viewLevel: {\n          level,\n          adcode,\n          granularity\n        },\n        source: {\n          joinBy: {\n            geoData\n          }\n        }\n      });\n      this.update(mergeConfig);\n      const drillData = {\n        level,\n        adcode,\n        granularity,\n        config: mergeConfig\n      };\n      return drillData;\n    });\n  }\n}\n/**\n * 默认配置项\n */\nChoropleth.DefaultOptions = DEFAULT_OPTIONS;\n/**\n * 地理数据地址\n */\nChoropleth.GeoDataUrl = GEO_DATA_URL;\n/**\n * 行政数据地址\n */\nChoropleth.GeoAreaUrl = GEO_AREA_URL;","map":{"version":3,"names":["Source","isEqual","pick","LayerGroup","Plot","AreaLayer","TextLayer","deepAssign","getCacheArea","registerCacheArea","DEFAULT_AREA_GRANULARITY","DEFAULT_OPTIONS","GEO_AREA_URL","GEO_DATA_URL","getDrillStepDefaultConfig","getGeoAreaConfig","isEqualDrillSteps","topojson2geojson","createCountryBoundaryLayer","Choropleth","constructor","type","PlotType","chinaBoundaryData","features","currentDistrictData","drillSteps","drillStacks","onDrillDownHander","event","steps","onDown","options","drill","properties","_a","feature","adcode","length","from","slice","depth","_b","level","granularity","drillConfig","__rest","downParams","nativeEvent","to","callback","config","view","mergeConfig","changeView","then","drillData","push","emit","onDrillUpHander","onUp","isTopDrillStack","lastIndex","upParams","pop","initSource","getInitDistrictData","source","createSource","render","inited","scene","setEnableRender","layerGroup","createLayers","loaded","onSceneLoaded","once","initLayersEvent","update","updateOption","map","lastOptions","updateMap","enabled","drillReset","initDrillEvent","viewLevel","geoData","_c","joinBy","getDistrictData","data","sourceConfig","changeData","updateLayers","updateComponents","_d","getDefaultOptions","DefaultOptions","parserSourceConfig","joinData","sourceCFG","sourceField","geoField","targetField","transforms","cfg","Object","assign","setData","fillAreaLayer","name","LayerOptionsKeys","chinaBorder","layers","forEach","layer","addLayer","label","labelLayer","createLabelLayer","plotConfig","chinaBoundaryLayer","chinaHkmBoundaryLayer","chinaDisputeBoundaryLayer","centroid","filter","visible","minZoom","maxZoom","zIndex","textLayer","parser","coordinates","updateCallback","on","off","fillAreaLayerConfig","removeCountryBoundaryLayer","removeLayer","updateLabelLayer","initLegendEvent","triggerUp","triggerDown","dillSteps","step","legend","onUpdateLegendData","updateLegendControl","getCurrentDrillSteps","item","getLegendOptions","colorLegendItems","getColorLegendItems","items","fetchData","fileName","cacheArea","url","extension","geoArea","customFetchGeoData","response","fetch","json","fetchChinaBoundaryData","Promise","all","err","Error","fetchCurrentDistrictData","resolve","drillDown","drillUp","drillStacksLength","includes","customUpStackIndex","findIndex","isCustomUp","stacksIndex","splice","view_1","GeoDataUrl","GeoAreaUrl"],"sources":["../../../../src/plots/choropleth/index.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}