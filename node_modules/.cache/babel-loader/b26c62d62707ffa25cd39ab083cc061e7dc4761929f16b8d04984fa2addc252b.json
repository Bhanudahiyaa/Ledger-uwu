{"ast":null,"code":"/**\n * @fileOverview fruchterman layout\n * @author shiwu.wyy@antfin.com\n */\nimport { Base } from \"./base\";\nimport { getEdgeTerminal, isNumber } from \"../util\";\nconst SPEED_DIVISOR = 800;\n/**\n * fruchterman 布局\n */\nexport class FruchtermanLayout extends Base {\n  constructor(options) {\n    super();\n    /** 停止迭代的最大迭代数 */\n    this.maxIteration = 1000;\n    /** 是否启动 worker */\n    this.workerEnabled = false;\n    /** 重力大小，影响图的紧凑程度 */\n    this.gravity = 10;\n    /** 速度 */\n    this.speed = 5;\n    /** 是否产生聚类力 */\n    this.clustering = false;\n    /** 聚类力大小 */\n    this.clusterGravity = 10;\n    this.nodes = [];\n    this.edges = [];\n    this.width = 300;\n    this.height = 300;\n    this.nodeMap = {};\n    this.nodeIdxMap = {};\n    /** 迭代结束的回调函数 */\n    this.onLayoutEnd = () => {};\n    /** 每次迭代结束的回调函数 */\n    this.tick = () => {};\n    this.updateCfg(options);\n  }\n  getDefaultCfg() {\n    return {\n      maxIteration: 1000,\n      gravity: 10,\n      speed: 1,\n      clustering: false,\n      clusterGravity: 10\n    };\n  }\n  /**\n   * 执行布局\n   */\n  execute() {\n    var _a, _b;\n    const self = this;\n    const nodes = self.nodes;\n    if (self.timeInterval !== undefined && typeof window !== \"undefined\") {\n      window.clearInterval(self.timeInterval);\n    }\n    if (!nodes || nodes.length === 0) {\n      (_a = self.onLayoutEnd) === null || _a === void 0 ? void 0 : _a.call(self);\n      return;\n    }\n    if (!self.width && typeof window !== \"undefined\") {\n      self.width = window.innerWidth;\n    }\n    if (!self.height && typeof window !== \"undefined\") {\n      self.height = window.innerHeight;\n    }\n    if (!self.center) {\n      self.center = [self.width / 2, self.height / 2];\n    }\n    const center = self.center;\n    if (nodes.length === 1) {\n      nodes[0].x = center[0];\n      nodes[0].y = center[1];\n      (_b = self.onLayoutEnd) === null || _b === void 0 ? void 0 : _b.call(self);\n      return;\n    }\n    const nodeMap = {};\n    const nodeIdxMap = {};\n    nodes.forEach((node, i) => {\n      if (!isNumber(node.x)) node.x = Math.random() * this.width;\n      if (!isNumber(node.y)) node.y = Math.random() * this.height;\n      nodeMap[node.id] = node;\n      nodeIdxMap[node.id] = i;\n    });\n    self.nodeMap = nodeMap;\n    self.nodeIdxMap = nodeIdxMap;\n    // layout\n    return self.run();\n  }\n  run() {\n    var _a;\n    const self = this;\n    const nodes = self.nodes;\n    if (!nodes) return;\n    const {\n      edges,\n      maxIteration,\n      workerEnabled,\n      clustering\n    } = self;\n    const clusterMap = {};\n    if (clustering) {\n      nodes.forEach(n => {\n        if (clusterMap[n.cluster] === undefined) {\n          clusterMap[n.cluster] = {\n            name: n.cluster,\n            cx: 0,\n            cy: 0,\n            count: 0\n          };\n        }\n      });\n    }\n    if (workerEnabled) {\n      for (let i = 0; i < maxIteration; i++) {\n        self.runOneStep(clusterMap);\n      }\n      (_a = self.onLayoutEnd) === null || _a === void 0 ? void 0 : _a.call(self);\n    } else {\n      if (typeof window === \"undefined\") return;\n      let iter = 0;\n      // interval for render the result after each iteration\n      this.timeInterval = window.setInterval(() => {\n        var _a;\n        self.runOneStep(clusterMap);\n        iter++;\n        if (iter >= maxIteration) {\n          (_a = self.onLayoutEnd) === null || _a === void 0 ? void 0 : _a.call(self);\n          window.clearInterval(self.timeInterval);\n        }\n      }, 0);\n    }\n    return {\n      nodes,\n      edges\n    };\n  }\n  runOneStep(clusterMap) {\n    var _a;\n    const self = this;\n    const nodes = self.nodes;\n    if (!nodes) return;\n    const {\n      edges,\n      center,\n      gravity,\n      speed,\n      clustering\n    } = self;\n    const area = self.height * self.width;\n    const maxDisplace = Math.sqrt(area) / 10;\n    const k2 = area / (nodes.length + 1);\n    const k = Math.sqrt(k2);\n    const displacements = [];\n    nodes.forEach((_, j) => {\n      displacements[j] = {\n        x: 0,\n        y: 0\n      };\n    });\n    self.applyCalculate(nodes, edges, displacements, k, k2);\n    // gravity for clusters\n    if (clustering) {\n      // re-compute the clustering centers\n      for (const key in clusterMap) {\n        clusterMap[key].cx = 0;\n        clusterMap[key].cy = 0;\n        clusterMap[key].count = 0;\n      }\n      nodes.forEach(n => {\n        const c = clusterMap[n.cluster];\n        if (isNumber(n.x)) {\n          c.cx += n.x;\n        }\n        if (isNumber(n.y)) {\n          c.cy += n.y;\n        }\n        c.count++;\n      });\n      for (const key in clusterMap) {\n        clusterMap[key].cx /= clusterMap[key].count;\n        clusterMap[key].cy /= clusterMap[key].count;\n      }\n      // compute the cluster gravity forces\n      const clusterGravity = self.clusterGravity || gravity;\n      nodes.forEach((n, j) => {\n        if (!isNumber(n.x) || !isNumber(n.y)) return;\n        const c = clusterMap[n.cluster];\n        const distLength = Math.sqrt((n.x - c.cx) * (n.x - c.cx) + (n.y - c.cy) * (n.y - c.cy));\n        const gravityForce = k * clusterGravity;\n        displacements[j].x -= gravityForce * (n.x - c.cx) / distLength;\n        displacements[j].y -= gravityForce * (n.y - c.cy) / distLength;\n      });\n    }\n    // gravity\n    nodes.forEach((n, j) => {\n      if (!isNumber(n.x) || !isNumber(n.y)) return;\n      const gravityForce = 0.01 * k * gravity;\n      displacements[j].x -= gravityForce * (n.x - center[0]);\n      displacements[j].y -= gravityForce * (n.y - center[1]);\n    });\n    // move\n    nodes.forEach((n, j) => {\n      if (isNumber(n.fx) && isNumber(n.fy)) {\n        n.x = n.fx;\n        n.y = n.fy;\n        return;\n      }\n      if (!isNumber(n.x) || !isNumber(n.y)) return;\n      const distLength = Math.sqrt(displacements[j].x * displacements[j].x + displacements[j].y * displacements[j].y);\n      if (distLength > 0) {\n        // && !n.isFixed()\n        const limitedDist = Math.min(maxDisplace * (speed / SPEED_DIVISOR), distLength);\n        n.x += displacements[j].x / distLength * limitedDist;\n        n.y += displacements[j].y / distLength * limitedDist;\n      }\n    });\n    (_a = self.tick) === null || _a === void 0 ? void 0 : _a.call(self);\n  }\n  applyCalculate(nodes, edges, displacements, k, k2) {\n    const self = this;\n    self.calRepulsive(nodes, displacements, k2);\n    if (edges) self.calAttractive(edges, displacements, k);\n  }\n  calRepulsive(nodes, displacements, k2) {\n    nodes.forEach((v, i) => {\n      displacements[i] = {\n        x: 0,\n        y: 0\n      };\n      nodes.forEach((u, j) => {\n        if (i === j) {\n          return;\n        }\n        if (!isNumber(v.x) || !isNumber(u.x) || !isNumber(v.y) || !isNumber(u.y)) {\n          return;\n        }\n        let vecX = v.x - u.x;\n        let vecY = v.y - u.y;\n        let vecLengthSqr = vecX * vecX + vecY * vecY;\n        if (vecLengthSqr === 0) {\n          vecLengthSqr = 1;\n          const sign = i > j ? 1 : -1;\n          vecX = 0.01 * sign;\n          vecY = 0.01 * sign;\n        }\n        const common = k2 / vecLengthSqr;\n        displacements[i].x += vecX * common;\n        displacements[i].y += vecY * common;\n      });\n    });\n  }\n  calAttractive(edges, displacements, k) {\n    edges.forEach(e => {\n      const source = getEdgeTerminal(e, 'source');\n      const target = getEdgeTerminal(e, 'target');\n      if (!source || !target) return;\n      const uIndex = this.nodeIdxMap[source];\n      const vIndex = this.nodeIdxMap[target];\n      if (uIndex === vIndex) {\n        return;\n      }\n      const u = this.nodeMap[source];\n      const v = this.nodeMap[target];\n      if (!isNumber(v.x) || !isNumber(u.x) || !isNumber(v.y) || !isNumber(u.y)) {\n        return;\n      }\n      const vecX = v.x - u.x;\n      const vecY = v.y - u.y;\n      const vecLength = Math.sqrt(vecX * vecX + vecY * vecY);\n      const common = vecLength * vecLength / k;\n      displacements[vIndex].x -= vecX / vecLength * common;\n      displacements[vIndex].y -= vecY / vecLength * common;\n      displacements[uIndex].x += vecX / vecLength * common;\n      displacements[uIndex].y += vecY / vecLength * common;\n    });\n  }\n  stop() {\n    if (this.timeInterval && typeof window !== \"undefined\") {\n      window.clearInterval(this.timeInterval);\n    }\n  }\n  destroy() {\n    const self = this;\n    self.stop();\n    self.tick = null;\n    self.nodes = null;\n    self.edges = null;\n    self.destroyed = true;\n  }\n  getType() {\n    return \"fruchterman\";\n  }\n}","map":{"version":3,"names":["Base","getEdgeTerminal","isNumber","SPEED_DIVISOR","FruchtermanLayout","constructor","options","maxIteration","workerEnabled","gravity","speed","clustering","clusterGravity","nodes","edges","width","height","nodeMap","nodeIdxMap","onLayoutEnd","tick","updateCfg","getDefaultCfg","execute","self","timeInterval","undefined","window","clearInterval","length","_a","call","innerWidth","innerHeight","center","x","y","_b","forEach","node","i","Math","random","id","run","clusterMap","n","cluster","name","cx","cy","count","runOneStep","iter","setInterval","area","maxDisplace","sqrt","k2","k","displacements","_","j","applyCalculate","key","c","distLength","gravityForce","fx","fy","limitedDist","min","calRepulsive","calAttractive","v","u","vecX","vecY","vecLengthSqr","sign","common","e","source","target","uIndex","vIndex","vecLength","stop","destroy","destroyed","getType"],"sources":["../../src/layout/fruchterman.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}