{"ast":null,"code":"/**\n * @fileOverview fruchterman layout\n * @author shiwu.wyy@antfin.com\n */\nimport { Base } from \"./base\";\nimport { isNumber, isFunction, isArray, getDegree, isObject, getEdgeTerminal } from \"../util\";\nconst proccessToFunc = (value, defaultV) => {\n  let func;\n  if (!value) {\n    func = d => {\n      return defaultV || 1;\n    };\n  } else if (isNumber(value)) {\n    func = d => {\n      return value;\n    };\n  } else {\n    func = value;\n  }\n  return func;\n};\n/**\n * graphin 中的 force 布局\n */\nexport class GForceLayout extends Base {\n  constructor(options) {\n    super();\n    /** 停止迭代的最大迭代数 */\n    this.maxIteration = 1000;\n    /** 是否启动 worker */\n    this.workerEnabled = false;\n    /** 弹簧引力系数 */\n    this.edgeStrength = 200;\n    /** 斥力系数 */\n    this.nodeStrength = 1000;\n    /** 库伦系数 */\n    this.coulombDisScale = 0.005;\n    /** 阻尼系数 */\n    this.damping = 0.9;\n    /** 最大速度 */\n    this.maxSpeed = 1000;\n    /** 一次迭代的平均移动距离小于该值时停止迭代 */\n    this.minMovement = 0.5;\n    /** 迭代中衰减 */\n    this.interval = 0.02;\n    /** 斥力的一个系数 */\n    this.factor = 1;\n    /** 理想边长 */\n    this.linkDistance = 1;\n    /** 重力大小 */\n    this.gravity = 10;\n    /** 是否防止重叠 */\n    this.preventOverlap = true;\n    /** 每次迭代结束的回调函数 */\n    this.tick = () => {};\n    this.nodes = [];\n    this.edges = [];\n    this.width = 300;\n    this.height = 300;\n    this.nodeMap = {};\n    this.nodeIdxMap = {};\n    this.updateCfg(options);\n  }\n  getDefaultCfg() {\n    return {\n      maxIteration: 500,\n      gravity: 10,\n      enableTick: true\n    };\n  }\n  /**\n   * 执行布局\n   */\n  execute() {\n    var _a, _b;\n    const self = this;\n    const nodes = self.nodes;\n    if (self.timeInterval !== undefined && typeof window !== \"undefined\") {\n      window.clearInterval(self.timeInterval);\n    }\n    if (!nodes || nodes.length === 0) {\n      (_a = self.onLayoutEnd) === null || _a === void 0 ? void 0 : _a.call(self);\n      return;\n    }\n    if (!self.width && typeof window !== \"undefined\") {\n      self.width = window.innerWidth;\n    }\n    if (!self.height && typeof window !== \"undefined\") {\n      self.height = window.innerHeight;\n    }\n    if (!self.center) {\n      self.center = [self.width / 2, self.height / 2];\n    }\n    const center = self.center;\n    if (nodes.length === 1) {\n      nodes[0].x = center[0];\n      nodes[0].y = center[1];\n      (_b = self.onLayoutEnd) === null || _b === void 0 ? void 0 : _b.call(self);\n      return;\n    }\n    const nodeMap = {};\n    const nodeIdxMap = {};\n    nodes.forEach((node, i) => {\n      if (!isNumber(node.x)) node.x = Math.random() * self.width;\n      if (!isNumber(node.y)) node.y = Math.random() * self.height;\n      nodeMap[node.id] = node;\n      nodeIdxMap[node.id] = i;\n    });\n    self.nodeMap = nodeMap;\n    self.nodeIdxMap = nodeIdxMap;\n    self.linkDistance = proccessToFunc(self.linkDistance, 1);\n    self.nodeStrength = proccessToFunc(self.nodeStrength, 1);\n    self.edgeStrength = proccessToFunc(self.edgeStrength, 1);\n    // node size function\n    const nodeSize = self.nodeSize;\n    let nodeSizeFunc;\n    if (self.preventOverlap) {\n      const nodeSpacing = self.nodeSpacing;\n      let nodeSpacingFunc;\n      if (isNumber(nodeSpacing)) {\n        nodeSpacingFunc = () => nodeSpacing;\n      } else if (isFunction(nodeSpacing)) {\n        nodeSpacingFunc = nodeSpacing;\n      } else {\n        nodeSpacingFunc = () => 0;\n      }\n      if (!nodeSize) {\n        nodeSizeFunc = d => {\n          if (d.size) {\n            if (isArray(d.size)) {\n              const res = d.size[0] > d.size[1] ? d.size[0] : d.size[1];\n              return res + nodeSpacingFunc(d);\n            }\n            if (isObject(d.size)) {\n              const res = d.size.width > d.size.height ? d.size.width : d.size.height;\n              return res + nodeSpacingFunc(d);\n            }\n            return d.size + nodeSpacingFunc(d);\n          }\n          return 10 + nodeSpacingFunc(d);\n        };\n      } else if (isArray(nodeSize)) {\n        nodeSizeFunc = d => {\n          const res = nodeSize[0] > nodeSize[1] ? nodeSize[0] : nodeSize[1];\n          return res + nodeSpacingFunc(d);\n        };\n      } else {\n        nodeSizeFunc = d => nodeSize + nodeSpacingFunc(d);\n      }\n    }\n    self.nodeSize = nodeSizeFunc;\n    const edges = self.edges;\n    self.degrees = getDegree(nodes.length, self.nodeIdxMap, edges);\n    if (!self.getMass) {\n      self.getMass = d => {\n        const mass = self.degrees[self.nodeIdxMap[d.id]] || 1;\n        return mass;\n      };\n    }\n    // layout\n    self.run();\n  }\n  run() {\n    var _a;\n    const self = this;\n    const {\n      maxIteration,\n      nodes,\n      workerEnabled,\n      minMovement\n    } = self;\n    if (!nodes) return;\n    if (workerEnabled) {\n      for (let i = 0; i < maxIteration; i++) {\n        const previousPos = self.runOneStep(i);\n        if (self.reachMoveThreshold(nodes, previousPos, minMovement)) {\n          break;\n        }\n      }\n      (_a = self.onLayoutEnd) === null || _a === void 0 ? void 0 : _a.call(self);\n    } else {\n      if (typeof window === \"undefined\") return;\n      let iter = 0;\n      // interval for render the result after each iteration\n      this.timeInterval = window.setInterval(() => {\n        var _a, _b;\n        if (!nodes) return;\n        const previousPos = self.runOneStep(iter) || [];\n        if (self.reachMoveThreshold(nodes, previousPos, minMovement)) {\n          (_a = self.onLayoutEnd) === null || _a === void 0 ? void 0 : _a.call(self);\n          window.clearInterval(self.timeInterval);\n        }\n        iter++;\n        if (iter >= maxIteration) {\n          (_b = self.onLayoutEnd) === null || _b === void 0 ? void 0 : _b.call(self);\n          window.clearInterval(self.timeInterval);\n        }\n      }, 0);\n    }\n  }\n  reachMoveThreshold(nodes, previousPos, minMovement) {\n    // whether to stop the iteration\n    let movement = 0;\n    nodes.forEach((node, j) => {\n      const vx = node.x - previousPos[j].x;\n      const vy = node.y - previousPos[j].y;\n      movement += Math.sqrt(vx * vx + vy * vy);\n    });\n    movement /= nodes.length;\n    return movement < minMovement;\n  }\n  runOneStep(iter) {\n    var _a;\n    const self = this;\n    const {\n      nodes,\n      edges\n    } = self;\n    const accArray = [];\n    const velArray = [];\n    if (!nodes) return;\n    nodes.forEach((_, i) => {\n      accArray[2 * i] = 0;\n      accArray[2 * i + 1] = 0;\n      velArray[2 * i] = 0;\n      velArray[2 * i + 1] = 0;\n    });\n    self.calRepulsive(accArray, nodes);\n    if (edges) self.calAttractive(accArray, edges);\n    self.calGravity(accArray, nodes);\n    const stepInterval = Math.max(0.02, self.interval - iter * 0.002);\n    self.updateVelocity(accArray, velArray, stepInterval, nodes);\n    const previousPos = [];\n    nodes.forEach(node => {\n      previousPos.push({\n        x: node.x,\n        y: node.y\n      });\n    });\n    self.updatePosition(velArray, stepInterval, nodes);\n    (_a = self.tick) === null || _a === void 0 ? void 0 : _a.call(self);\n    return previousPos;\n  }\n  calRepulsive(accArray, nodes) {\n    const self = this;\n    // const nodes = self.nodes;\n    const getMass = self.getMass;\n    const nodeStrength = self.nodeStrength;\n    const factor = self.factor;\n    const coulombDisScale = self.coulombDisScale;\n    const preventOverlap = self.preventOverlap;\n    const nodeSize = self.nodeSize;\n    nodes.forEach((ni, i) => {\n      const massi = getMass ? getMass(ni) : 1;\n      nodes.forEach((nj, j) => {\n        if (i >= j) return;\n        // if (!accArray[j]) accArray[j] = 0;\n        const vecX = ni.x - nj.x;\n        const vecY = ni.y - nj.y;\n        const vecLength = Math.sqrt(vecX * vecX + vecY * vecY) + 0.01;\n        const nVecLength = (vecLength + 0.1) * coulombDisScale;\n        const direX = vecX / vecLength;\n        const direY = vecY / vecLength;\n        const param = (nodeStrength(ni) + nodeStrength(nj)) / 2 * factor / (nVecLength * nVecLength);\n        const massj = getMass ? getMass(nj) : 1;\n        accArray[2 * i] += direX * param;\n        accArray[2 * i + 1] += direY * param;\n        accArray[2 * j] -= direX * param;\n        accArray[2 * j + 1] -= direY * param;\n        if (preventOverlap && vecLength < (nodeSize(ni) + nodeSize(nj)) / 2) {\n          const paramOverlap = (nodeStrength(ni) + nodeStrength(nj)) / 2 / (vecLength * vecLength);\n          accArray[2 * i] += direX * paramOverlap / massi;\n          accArray[2 * i + 1] += direY * paramOverlap / massi;\n          accArray[2 * j] -= direX * paramOverlap / massj;\n          accArray[2 * j + 1] -= direY * paramOverlap / massj;\n        }\n      });\n    });\n  }\n  calAttractive(accArray, edges) {\n    const self = this;\n    // const edges = self.edges;\n    const nodeMap = self.nodeMap;\n    const nodeIdxMap = self.nodeIdxMap;\n    const linkDistance = self.linkDistance;\n    const edgeStrength = self.edgeStrength;\n    const getMass = self.getMass;\n    edges.forEach((edge, i) => {\n      const source = getEdgeTerminal(edge, 'source');\n      const target = getEdgeTerminal(edge, 'target');\n      const sourceNode = nodeMap[source];\n      const targetNode = nodeMap[target];\n      const vecX = targetNode.x - sourceNode.x;\n      const vecY = targetNode.y - sourceNode.y;\n      const vecLength = Math.sqrt(vecX * vecX + vecY * vecY) + 0.01;\n      const direX = vecX / vecLength;\n      const direY = vecY / vecLength;\n      const length = linkDistance(edge) || 1;\n      const diff = length - vecLength;\n      const param = diff * edgeStrength(edge);\n      const sourceIdx = nodeIdxMap[source];\n      const targetIdx = nodeIdxMap[target];\n      const massSource = getMass ? getMass(sourceNode) : 1;\n      const massTarget = getMass ? getMass(targetNode) : 1;\n      accArray[2 * sourceIdx] -= direX * param / massSource;\n      accArray[2 * sourceIdx + 1] -= direY * param / massSource;\n      accArray[2 * targetIdx] += direX * param / massTarget;\n      accArray[2 * targetIdx + 1] += direY * param / massTarget;\n    });\n  }\n  calGravity(accArray, nodes) {\n    const self = this;\n    // const nodes = self.nodes;\n    const center = self.center;\n    const defaultGravity = self.gravity;\n    const degrees = self.degrees;\n    const nodeLength = nodes.length;\n    for (let i = 0; i < nodeLength; i++) {\n      const node = nodes[i];\n      let vecX = node.x - center[0];\n      let vecY = node.y - center[1];\n      let gravity = defaultGravity;\n      if (self.getCenter) {\n        const customCenterOpt = self.getCenter(node, degrees[i]);\n        if (customCenterOpt && isNumber(customCenterOpt[0]) && isNumber(customCenterOpt[1]) && isNumber(customCenterOpt[2])) {\n          vecX = node.x - customCenterOpt[0];\n          vecY = node.y - customCenterOpt[1];\n          gravity = customCenterOpt[2];\n        }\n      }\n      if (!gravity) continue;\n      accArray[2 * i] -= gravity * vecX;\n      accArray[2 * i + 1] -= gravity * vecY;\n    }\n  }\n  updateVelocity(accArray, velArray, stepInterval, nodes) {\n    const self = this;\n    const param = stepInterval * self.damping;\n    // const nodes = self.nodes;\n    nodes.forEach((node, i) => {\n      let vx = accArray[2 * i] * param || 0.01;\n      let vy = accArray[2 * i + 1] * param || 0.01;\n      const vLength = Math.sqrt(vx * vx + vy * vy);\n      if (vLength > self.maxSpeed) {\n        const param2 = self.maxSpeed / vLength;\n        vx = param2 * vx;\n        vy = param2 * vy;\n      }\n      velArray[2 * i] = vx;\n      velArray[2 * i + 1] = vy;\n    });\n  }\n  updatePosition(velArray, stepInterval, nodes) {\n    nodes.forEach((node, i) => {\n      if (isNumber(node.fx) && isNumber(node.fy)) {\n        node.x = node.fx;\n        node.y = node.fy;\n        return;\n      }\n      const distX = velArray[2 * i] * stepInterval;\n      const distY = velArray[2 * i + 1] * stepInterval;\n      node.x += distX;\n      node.y += distY;\n    });\n  }\n  stop() {\n    if (this.timeInterval && typeof window !== \"undefined\") {\n      window.clearInterval(this.timeInterval);\n    }\n  }\n  destroy() {\n    const self = this;\n    self.stop();\n    self.tick = null;\n    self.nodes = null;\n    self.edges = null;\n    self.destroyed = true;\n  }\n  getType() {\n    return \"gForce\";\n  }\n}","map":{"version":3,"names":["Base","isNumber","isFunction","isArray","getDegree","isObject","getEdgeTerminal","proccessToFunc","value","defaultV","func","d","GForceLayout","constructor","options","maxIteration","workerEnabled","edgeStrength","nodeStrength","coulombDisScale","damping","maxSpeed","minMovement","interval","factor","linkDistance","gravity","preventOverlap","tick","nodes","edges","width","height","nodeMap","nodeIdxMap","updateCfg","getDefaultCfg","enableTick","execute","self","timeInterval","undefined","window","clearInterval","length","_a","onLayoutEnd","call","innerWidth","innerHeight","center","x","y","_b","forEach","node","i","Math","random","id","nodeSize","nodeSizeFunc","nodeSpacing","nodeSpacingFunc","size","res","degrees","getMass","mass","run","previousPos","runOneStep","reachMoveThreshold","iter","setInterval","movement","j","vx","vy","sqrt","accArray","velArray","_","calRepulsive","calAttractive","calGravity","stepInterval","max","updateVelocity","push","updatePosition","ni","massi","nj","vecX","vecY","vecLength","nVecLength","direX","direY","param","massj","paramOverlap","edge","source","target","sourceNode","targetNode","diff","sourceIdx","targetIdx","massSource","massTarget","defaultGravity","nodeLength","getCenter","customCenterOpt","vLength","param2","fx","fy","distX","distY","stop","destroy","destroyed","getType"],"sources":["../../src/layout/gForce.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}