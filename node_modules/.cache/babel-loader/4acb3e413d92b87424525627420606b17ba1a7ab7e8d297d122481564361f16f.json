{"ast":null,"code":"import { __awaiter, __decorate, __metadata } from \"tslib\";\nimport { inject, injectable } from 'mana-syringe';\nimport { ICommandHandler, ICommandContextProvider } from '../../command/interface';\nimport { XFlowGroupCommands } from '../constant';\nimport { Disposable } from '../../common/disposable';\nimport { XFlowNodeCommands } from '../constant';\nexport var NsAddGroup;\n(function (NsAddGroup) {\n  /** Command: 用于注册named factory */\n  NsAddGroup.command = XFlowGroupCommands.ADD_GROUP;\n  /** hookName */\n  NsAddGroup.hookKey = 'addGroup';\n  NsAddGroup.GROUP_PADDING = 12;\n  NsAddGroup.GROUP_HEADER_HEIGHT = 40;\n})(NsAddGroup || (NsAddGroup = {}));\nlet AddGroupCommand = class AddGroupCommand {\n  constructor() {\n    this.getBBox = (node, nodeConfig, graph) => {\n      const {\n        groupHeaderHeight = NsAddGroup.GROUP_HEADER_HEIGHT,\n        groupPadding = NsAddGroup.GROUP_PADDING\n      } = nodeConfig;\n      const bbox = graph.getCellsBBox(node.children);\n      bbox.moveAndExpand({\n        x: -groupPadding,\n        y: -(groupPadding + groupHeaderHeight),\n        width: groupPadding * 2,\n        height: groupPadding * 2 + groupHeaderHeight\n      });\n      return bbox;\n    };\n    /** 执行Cmd */\n    this.execute = () => __awaiter(this, void 0, void 0, function* () {\n      const ctx = this.contextProvider();\n      const {\n        args,\n        hooks: runtimeHook\n      } = ctx.getArgs();\n      const hooks = ctx.getHooks();\n      const result = yield hooks.addGroup.call(args, handlerArgs => __awaiter(this, void 0, void 0, function* () {\n        const {\n          nodeConfig,\n          createService: createGroupService,\n          cellFactory,\n          commandService\n        } = handlerArgs;\n        const graph = yield ctx.getX6Graph();\n        const res = yield commandService.executeCommand(XFlowNodeCommands.ADD_NODE.id, {\n          cellFactory,\n          createNodeService: createGroupService,\n          nodeConfig\n        });\n        const {\n          nodeCell: groupCell\n        } = res.contextProvider().getResult();\n        const {\n          id: groupId\n        } = groupCell;\n        const {\n          groupChildren\n        } = nodeConfig;\n        if (groupChildren.length) {\n          groupChildren.forEach(nodeId => {\n            const child = graph.getCellById(nodeId);\n            if (child) {\n              child.setData(Object.assign(Object.assign({}, child.getData()), {\n                group: groupId,\n                isCollapsed: false\n              }));\n              child.prop('group', groupId);\n              groupCell.addChild(child);\n              graph.unselect(child);\n            }\n          });\n          const groupBBox = this.getBBox(groupCell, nodeConfig, graph);\n          groupCell.position(groupBBox.x, groupBBox.y);\n          groupCell.size(groupBBox.width, groupBBox.height);\n          groupCell.setZIndex(0);\n          groupCell.prop('isGroup', true);\n          groupCell.setData(Object.assign(Object.assign({}, groupCell.getData()), {\n            width: groupBBox.width,\n            height: groupBBox.height,\n            groupChildrenSize: {\n              width: groupBBox.width,\n              height: groupBBox.height\n            },\n            x: groupBBox.x,\n            y: groupBBox.y,\n            isGroup: true\n          }));\n          graph.select(groupCell);\n        }\n        if (nodeConfig.isCollapsed) {\n          yield commandService.executeCommand(XFlowGroupCommands.COLLAPSE_GROUP.id, {\n            nodeId: nodeConfig.id,\n            isCollapsed: nodeConfig.isCollapsed\n          });\n        }\n        /** add undo: delete node */\n        ctx.addUndo(Disposable.create(() => __awaiter(this, void 0, void 0, function* () {\n          commandService.executeCommand(XFlowGroupCommands.DEL_GROUP.id, {\n            nodeConfig\n          });\n        })));\n        return {\n          nodeConfig: nodeConfig,\n          nodeCell: groupCell\n        };\n      }), runtimeHook);\n      ctx.setResult(result);\n      return this;\n    });\n    /** undo cmd */\n    this.undo = () => __awaiter(this, void 0, void 0, function* () {\n      const ctx = this.contextProvider();\n      if (this.isUndoable()) {\n        ctx.undo();\n      }\n      return this;\n    });\n    /** redo cmd */\n    this.redo = () => __awaiter(this, void 0, void 0, function* () {\n      if (!this.isUndoable()) {\n        yield this.execute();\n      }\n      return this;\n    });\n  }\n  isUndoable() {\n    const ctx = this.contextProvider();\n    return ctx.isUndoable();\n  }\n};\n__decorate([inject(ICommandContextProvider), __metadata(\"design:type\", Object)], AddGroupCommand.prototype, \"contextProvider\", void 0);\nAddGroupCommand = __decorate([injectable({\n  token: {\n    token: ICommandHandler,\n    named: NsAddGroup.command.id\n  }\n})\n/** 创建节点命令 */], AddGroupCommand);\nexport { AddGroupCommand };","map":{"version":3,"names":["inject","injectable","ICommandHandler","ICommandContextProvider","XFlowGroupCommands","Disposable","XFlowNodeCommands","NsAddGroup","command","ADD_GROUP","hookKey","GROUP_PADDING","GROUP_HEADER_HEIGHT","AddGroupCommand","constructor","getBBox","node","nodeConfig","graph","groupHeaderHeight","groupPadding","bbox","getCellsBBox","children","moveAndExpand","x","y","width","height","execute","__awaiter","ctx","contextProvider","args","hooks","runtimeHook","getArgs","getHooks","result","addGroup","call","handlerArgs","createService","createGroupService","cellFactory","commandService","getX6Graph","res","executeCommand","ADD_NODE","id","createNodeService","nodeCell","groupCell","getResult","groupId","groupChildren","length","forEach","nodeId","child","getCellById","setData","Object","assign","getData","group","isCollapsed","prop","addChild","unselect","groupBBox","position","size","setZIndex","groupChildrenSize","isGroup","select","COLLAPSE_GROUP","addUndo","create","DEL_GROUP","setResult","undo","isUndoable","redo","__decorate","token","named"],"sources":["../../../src/command-contributions/group/group-add.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}