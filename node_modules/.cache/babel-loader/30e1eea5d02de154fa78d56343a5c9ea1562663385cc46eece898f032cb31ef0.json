{"ast":null,"code":"// src/tileset-manager/utils/lonlat-tile.ts\nimport { DEFAULT_EXTENT } from \"../const\";\nfunction osmLonLat2TileXY(lon, lat, zoom) {\n  const x = Math.floor((lon + 180) / 360 * Math.pow(2, zoom));\n  const y = Math.floor((1 - Math.log(Math.tan(lat * Math.PI / 180) + 1 / Math.cos(lat * Math.PI / 180)) / Math.PI) / 2 * Math.pow(2, zoom));\n  return [x, y];\n}\nfunction osmTileXY2LonLat(x, y, zoom) {\n  const lon = x / Math.pow(2, zoom) * 360 - 180;\n  const n = Math.PI - 2 * Math.PI * y / Math.pow(2, zoom);\n  const lat = 180 / Math.PI * Math.atan(0.5 * (Math.exp(n) - Math.exp(-n)));\n  return [lon, lat];\n}\nvar tileToBounds = (x, y, z) => {\n  const [minLng, maxLat] = osmTileXY2LonLat(x, y, z);\n  const [maxLng, minLat] = osmTileXY2LonLat(x + 1, y + 1, z);\n  return [minLng, minLat, maxLng, maxLat];\n};\nfunction getTileIndices({\n  zoom,\n  latLonBounds,\n  maxZoom = Infinity,\n  minZoom = 0,\n  zoomOffset = 0,\n  extent = DEFAULT_EXTENT\n}) {\n  let z = Math.ceil(zoom) + zoomOffset;\n  if (Number.isFinite(minZoom) && z < minZoom) {\n    return [];\n  }\n  if (Number.isFinite(maxZoom) && z > maxZoom) {\n    z = maxZoom;\n  }\n  const [minLng, minLat, maxLng, maxLat] = latLonBounds;\n  const bounds = [Math.max(minLng, extent[0]), Math.max(minLat, extent[1]), Math.min(maxLng, extent[2]), Math.min(maxLat, extent[3])];\n  const indices = [];\n  const [minX, maxY] = osmLonLat2TileXY(bounds[0], bounds[1], z);\n  const [maxX, minY] = osmLonLat2TileXY(bounds[2], bounds[3], z);\n  for (let x = minX; x <= maxX; x++) {\n    for (let y = minY; y <= maxY; y++) {\n      indices.push({\n        x,\n        y,\n        z\n      });\n    }\n  }\n  const centerX = (maxX + minX) / 2;\n  const centerY = (maxY + minY) / 2;\n  const distance = (x, y) => Math.abs(x - centerX) + Math.abs(y - centerY);\n  indices.sort((a, b) => distance(a.x, a.y) - distance(b.x, b.y));\n  return indices;\n}\nvar getTileWarpXY = (x, y, z, wrap = true) => {\n  const scale = Math.pow(2, z);\n  const maxIndex = scale - 1;\n  const distance = scale;\n  let warpX = x;\n  const warpY = y;\n  if (wrap) {\n    if (warpX < 0) {\n      warpX = warpX + distance;\n    } else if (warpX > maxIndex) {\n      warpX = warpX % distance;\n    }\n  }\n  return {\n    warpX,\n    warpY\n  };\n};\nexport { getTileIndices, getTileWarpXY, osmLonLat2TileXY, osmTileXY2LonLat, tileToBounds };","map":{"version":3,"names":["DEFAULT_EXTENT","osmLonLat2TileXY","lon","lat","zoom","x","Math","floor","pow","y","log","tan","PI","cos","osmTileXY2LonLat","n","atan","exp","tileToBounds","z","minLng","maxLat","maxLng","minLat","getTileIndices","latLonBounds","maxZoom","Infinity","minZoom","zoomOffset","extent","ceil","Number","isFinite","bounds","max","min","indices","minX","maxY","maxX","minY","push","centerX","centerY","distance","abs","sort","a","b","getTileWarpXY","wrap","scale","maxIndex","warpX","warpY"],"sources":["/Users/bhanudahiya/Desktop/ledger-IQ/node_modules/@antv/l7-utils/es/tileset-manager/utils/lonlat-tile.js"],"sourcesContent":["// src/tileset-manager/utils/lonlat-tile.ts\nimport { DEFAULT_EXTENT } from \"../const\";\nfunction osmLonLat2TileXY(lon, lat, zoom) {\n  const x = Math.floor((lon + 180) / 360 * Math.pow(2, zoom));\n  const y = Math.floor(\n    (1 - Math.log(Math.tan(lat * Math.PI / 180) + 1 / Math.cos(lat * Math.PI / 180)) / Math.PI) / 2 * Math.pow(2, zoom)\n  );\n  return [x, y];\n}\nfunction osmTileXY2LonLat(x, y, zoom) {\n  const lon = x / Math.pow(2, zoom) * 360 - 180;\n  const n = Math.PI - 2 * Math.PI * y / Math.pow(2, zoom);\n  const lat = 180 / Math.PI * Math.atan(0.5 * (Math.exp(n) - Math.exp(-n)));\n  return [lon, lat];\n}\nvar tileToBounds = (x, y, z) => {\n  const [minLng, maxLat] = osmTileXY2LonLat(x, y, z);\n  const [maxLng, minLat] = osmTileXY2LonLat(x + 1, y + 1, z);\n  return [minLng, minLat, maxLng, maxLat];\n};\nfunction getTileIndices({\n  zoom,\n  latLonBounds,\n  maxZoom = Infinity,\n  minZoom = 0,\n  zoomOffset = 0,\n  extent = DEFAULT_EXTENT\n}) {\n  let z = Math.ceil(zoom) + zoomOffset;\n  if (Number.isFinite(minZoom) && z < minZoom) {\n    return [];\n  }\n  if (Number.isFinite(maxZoom) && z > maxZoom) {\n    z = maxZoom;\n  }\n  const [minLng, minLat, maxLng, maxLat] = latLonBounds;\n  const bounds = [\n    Math.max(minLng, extent[0]),\n    Math.max(minLat, extent[1]),\n    Math.min(maxLng, extent[2]),\n    Math.min(maxLat, extent[3])\n  ];\n  const indices = [];\n  const [minX, maxY] = osmLonLat2TileXY(bounds[0], bounds[1], z);\n  const [maxX, minY] = osmLonLat2TileXY(bounds[2], bounds[3], z);\n  for (let x = minX; x <= maxX; x++) {\n    for (let y = minY; y <= maxY; y++) {\n      indices.push({ x, y, z });\n    }\n  }\n  const centerX = (maxX + minX) / 2;\n  const centerY = (maxY + minY) / 2;\n  const distance = (x, y) => Math.abs(x - centerX) + Math.abs(y - centerY);\n  indices.sort((a, b) => distance(a.x, a.y) - distance(b.x, b.y));\n  return indices;\n}\nvar getTileWarpXY = (x, y, z, wrap = true) => {\n  const scale = Math.pow(2, z);\n  const maxIndex = scale - 1;\n  const distance = scale;\n  let warpX = x;\n  const warpY = y;\n  if (wrap) {\n    if (warpX < 0) {\n      warpX = warpX + distance;\n    } else if (warpX > maxIndex) {\n      warpX = warpX % distance;\n    }\n  }\n  return { warpX, warpY };\n};\nexport {\n  getTileIndices,\n  getTileWarpXY,\n  osmLonLat2TileXY,\n  osmTileXY2LonLat,\n  tileToBounds\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}