{"ast":null,"code":"import React, { useState, useEffect } from 'react';\nimport { DefaultNodeConfig } from '../../../flowchart-node-panel';\nimport { FlowchartFormWrapper } from '../../form-wrapper';\nimport { InputFiled, ColorPicker, Position, InputNumberFiled, Size } from './fields';\nimport { PREFIX } from './constants';\nconst NodeComponent = props => {\n  const {\n    config,\n    plugin = {}\n  } = props;\n  const {\n    updateNode\n  } = plugin;\n  const [nodeConfig, setNodeConfig] = useState(Object.assign(Object.assign({}, DefaultNodeConfig), config));\n  const onNodeConfigChange = (key, value) => {\n    setNodeConfig(Object.assign(Object.assign({}, nodeConfig), {\n      [key]: value\n    }));\n    updateNode({\n      [key]: value\n    });\n  };\n  useEffect(() => {\n    setNodeConfig(Object.assign(Object.assign({}, DefaultNodeConfig), config));\n  }, [config]);\n  return React.createElement(\"div\", {\n    className: `${PREFIX}-panel-body`\n  }, React.createElement(\"div\", {\n    className: `${PREFIX}-panel-group`\n  }, React.createElement(\"h5\", null, \"\\u5185\\u5BB9\"), React.createElement(InputFiled, {\n    label: \"\\u6807\\u9898\",\n    value: nodeConfig.label,\n    onChange: value => {\n      onNodeConfigChange('label', value);\n    }\n  })), React.createElement(\"div\", {\n    className: `${PREFIX}-panel-group`\n  }, React.createElement(\"h5\", null, \"\\u6837\\u5F0F\"), React.createElement(Position, {\n    x: nodeConfig.x,\n    y: nodeConfig.y,\n    onChange: (key, value) => {\n      onNodeConfigChange(key, value);\n    }\n  }), React.createElement(Size, {\n    width: nodeConfig.width,\n    height: nodeConfig.height,\n    onChange: (key, value) => {\n      onNodeConfigChange(key, value);\n    }\n  }), React.createElement(ColorPicker, {\n    label: \"\\u586B\\u5145\",\n    value: nodeConfig.fill,\n    onChange: value => {\n      onNodeConfigChange('fill', value);\n    }\n  }), React.createElement(ColorPicker, {\n    label: \"\\u8FB9\\u6846\",\n    value: nodeConfig.stroke,\n    onChange: value => {\n      onNodeConfigChange('stroke', value);\n    }\n  }), React.createElement(\"div\", {\n    className: `${PREFIX}-node-text-style`\n  }, React.createElement(InputNumberFiled, {\n    label: \"\\u5B57\\u53F7\",\n    value: nodeConfig.fontSize,\n    width: 68,\n    onChange: value => {\n      onNodeConfigChange('fontSize', value);\n    }\n  }), React.createElement(ColorPicker, {\n    value: nodeConfig.fontFill,\n    onChange: value => {\n      onNodeConfigChange('fontFill', value);\n    }\n  }))));\n};\nexport const NodeService = props => {\n  return React.createElement(FlowchartFormWrapper, Object.assign({}, props), (config, plugin) => React.createElement(NodeComponent, Object.assign({}, props, {\n    plugin: plugin,\n    config: config\n  })));\n};","map":{"version":3,"names":["React","useState","useEffect","DefaultNodeConfig","FlowchartFormWrapper","InputFiled","ColorPicker","Position","InputNumberFiled","Size","PREFIX","NodeComponent","props","config","plugin","updateNode","nodeConfig","setNodeConfig","Object","assign","onNodeConfigChange","key","value","createElement","className","label","onChange","x","y","width","height","fill","stroke","fontSize","fontFill","NodeService"],"sources":["../../../../src/flowchart-editor-panel/control-map-service/components/node.tsx"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}