{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { AttributeType, gl } from '@antv/l7-core';\nimport BaseModel from \"../../core/BaseModel\";\nimport { SizeUnitType } from \"../../core/interface\";\nimport { PointFillTriangulation } from \"../../core/triangulation\";\n/* babel-plugin-inline-import '../shaders/fillImage/fillImage_frag.glsl' */\nconst pointFillFrag = \"in vec2 v_uv;// \\u672C\\u8EAB\\u7684 uv \\u5750\\u6807\\nin vec2 v_Iconuv;\\nin float v_opacity;\\nout vec4 outputColor;\\n\\nuniform sampler2D u_texture;\\nlayout(std140) uniform commonUniform {\\n  vec2 u_textSize;\\n  float u_heightfixed: 0.0;\\n  float u_raisingHeight: 0.0;\\n  float u_size_unit;\\n};\\n\\n#pragma include \\\"scene_uniforms\\\"\\n#pragma include \\\"sdf_2d\\\"\\n#pragma include \\\"picking\\\"\\n\\nvoid main() {\\n  vec2 pos = v_Iconuv / u_textSize + v_uv / u_textSize * 64.;\\n  outputColor = texture(SAMPLER_2D(u_texture), pos);\\n  outputColor.a *= v_opacity;\\n  outputColor = filterColor(outputColor);\\n}\\n\";\n/* babel-plugin-inline-import '../shaders/fillImage/fillImage_vert.glsl' */\nconst pointFillVert = \"layout(location = ATTRIBUTE_LOCATION_POSITION) in vec3 a_Position;\\nlayout(location = ATTRIBUTE_LOCATION_POSITION_64LOW) in vec2 a_Position64Low;\\nlayout(location = ATTRIBUTE_LOCATION_COLOR) in vec4 a_Color;\\nlayout(location = ATTRIBUTE_LOCATION_SIZE) in float a_Size;\\nlayout(location = ATTRIBUTE_LOCATION_EXTRUDE) in vec3 a_Extrude;\\nlayout(location = ATTRIBUTE_LOCATION_UV) in vec2 a_Uv;\\n\\nlayout(std140) uniform commonUniform {\\n  vec2 u_textSize;\\n  float u_heightfixed;\\n  float u_raisingHeight;\\n  float u_size_unit;\\n};\\n\\nout vec2 v_uv;\\nout vec2 v_Iconuv;\\nout float v_opacity;\\n\\n#pragma include \\\"projection\\\"\\n#pragma include \\\"picking\\\"\\n#pragma include \\\"rotation_2d\\\"\\n\\nvoid main() {\\n  vec3 extrude = a_Extrude;\\n  v_uv = (a_Extrude.xy + 1.0) / 2.0;\\n  v_uv.y = 1.0 - v_uv.y;\\n  v_Iconuv = a_Uv;\\n  v_opacity = opacity;\\n  float newSize = a_Size;\\n  if (u_size_unit == 1.0) {\\n    newSize = newSize * u_PixelsPerMeter.z;\\n  }\\n\\n  // vec2 offset = (u_RotateMatrix * extrude.xy * (a_Size) + textrueOffsets);\\n  vec2 offset = extrude.xy * newSize + offsets;\\n\\n  offset = rotate_matrix(offset, rotation);\\n\\n  offset = project_pixel(offset);\\n\\n  vec4 project_pos = project_position(vec4(a_Position.xy, 0.0, 1.0), a_Position64Low);\\n  gl_Position = project_common_position_to_clipspace(vec4(project_pos.xy + offset, 0.0, 1.0));\\n\\n  setPickingColor(a_PickingColor);\\n}\\n\";\nexport default class FillImageModel extends BaseModel {\n  constructor(...args) {\n    super(...args);\n    _defineProperty(this, \"meter2coord\", 1);\n    _defineProperty(this, \"texture\", void 0);\n    _defineProperty(this, \"isMeter\", false);\n    _defineProperty(this, \"radian\", 0);\n    _defineProperty(this, \"updateTexture\", () => {\n      const {\n        createTexture2D\n      } = this.rendererService;\n      if (this.texture) {\n        this.texture.update({\n          data: this.iconService.getCanvas(),\n          mag: 'linear',\n          min: 'linear mipmap nearest',\n          mipmap: true\n        });\n        // 更新完纹理后在更新的图层的时候需要更新所有的图层\n        this.layerService.throttleRenderLayers();\n        return;\n      }\n      this.texture = createTexture2D({\n        data: this.iconService.getCanvas(),\n        mag: gl.LINEAR,\n        min: gl.LINEAR_MIPMAP_LINEAR,\n        premultiplyAlpha: false,\n        width: 1024,\n        height: this.iconService.canvasHeight || 128,\n        mipmap: true\n      });\n      this.textures = [this.texture];\n    });\n  }\n  get attributeLocation() {\n    return Object.assign(super.attributeLocation, {\n      MAX: super.attributeLocation.MAX,\n      SIZE: 9,\n      EXTRUDE: 10,\n      UV: 11\n    });\n  }\n  // 旋转的弧度\n  getCommonUniformsInfo() {\n    const {\n      raisingHeight = 0.0,\n      heightfixed = false,\n      unit = 'pixel'\n    } = this.layer.getLayerConfig();\n    if (this.rendererService.getDirty()) {\n      var _this$texture;\n      (_this$texture = this.texture) === null || _this$texture === void 0 || _this$texture.bind();\n    }\n    const commonOptions = {\n      u_textSize: [1024, this.iconService.canvasHeight || 128],\n      u_heightfixed: Number(heightfixed),\n      u_raisingHeight: Number(raisingHeight),\n      u_size_unit: SizeUnitType[unit]\n    }; //2+1+1+1\n    const commonBufferInfo = this.getUniformsBufferInfo(commonOptions);\n    return commonBufferInfo;\n  }\n  getAttribute() {\n    return this.styleAttributeService.createAttributesAndIndices(this.layer.getEncodedData(), PointFillTriangulation);\n  }\n  initModels() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      _this.iconService.on('imageUpdate', _this.updateTexture);\n      _this.updateTexture();\n      return _this.buildModels();\n    })();\n  }\n  buildModels() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      _this2.initUniformsBuffer();\n      const model = yield _this2.layer.buildLayerModel({\n        moduleName: 'pointFillImage',\n        vertexShader: pointFillVert,\n        fragmentShader: pointFillFrag,\n        triangulation: PointFillTriangulation,\n        depth: {\n          enable: false\n        },\n        defines: _this2.getDefines(),\n        inject: _this2.getInject(),\n        cull: {\n          enable: true,\n          face: gl.FRONT\n        }\n      });\n      return [model];\n    })();\n  }\n  clearModels() {\n    var _this$texture2;\n    this.iconService.off('imageUpdate', this.updateTexture);\n    (_this$texture2 = this.texture) === null || _this$texture2 === void 0 || _this$texture2.destroy();\n  }\n\n  // overwrite baseModel func\n  registerBuiltinAttributes() {\n    // 注册 Position 属性 64 位地位部分，经纬度数据开启双精度，避免大于 20层级以上出现数据偏移\n    this.registerPosition64LowAttribute();\n    this.styleAttributeService.registerStyleAttribute({\n      name: 'uv',\n      type: AttributeType.Attribute,\n      descriptor: {\n        name: 'a_Uv',\n        shaderLocation: this.attributeLocation.UV,\n        buffer: {\n          // give the WebGL driver a hint that this buffer may change\n          usage: gl.DYNAMIC_DRAW,\n          data: [],\n          type: gl.FLOAT\n        },\n        size: 2,\n        update: feature => {\n          const iconMap = this.iconService.getIconMap();\n          const {\n            shape\n          } = feature;\n          const {\n            x,\n            y\n          } = iconMap[shape] || {\n            x: -64,\n            y: -64\n          };\n          return [x, y];\n        }\n      }\n    });\n    this.styleAttributeService.registerStyleAttribute({\n      name: 'extrude',\n      type: AttributeType.Attribute,\n      descriptor: {\n        name: 'a_Extrude',\n        shaderLocation: this.attributeLocation.EXTRUDE,\n        buffer: {\n          // give the WebGL driver a hint that this buffer may change\n          usage: gl.DYNAMIC_DRAW,\n          data: [],\n          type: gl.FLOAT\n        },\n        size: 3,\n        update: (feature, featureIdx, vertex, attributeIdx) => {\n          const extrude = [1, 1, 0, -1, 1, 0, -1, -1, 0, 1, -1, 0];\n          const extrudeIndex = attributeIdx % 4 * 3;\n          return [extrude[extrudeIndex], extrude[extrudeIndex + 1], extrude[extrudeIndex + 2]];\n        }\n      }\n    });\n\n    // point layer size;\n    this.styleAttributeService.registerStyleAttribute({\n      name: 'size',\n      type: AttributeType.Attribute,\n      descriptor: {\n        name: 'a_Size',\n        shaderLocation: this.attributeLocation.SIZE,\n        buffer: {\n          // give the WebGL driver a hint that this buffer may change\n          usage: gl.DYNAMIC_DRAW,\n          data: [],\n          type: gl.FLOAT\n        },\n        size: 1,\n        update: feature => {\n          const {\n            size = 5\n          } = feature;\n          return Array.isArray(size) ? [size[0]] : [size];\n        }\n      }\n    });\n  }\n}","map":{"version":3,"names":["_asyncToGenerator","_defineProperty","AttributeType","gl","BaseModel","SizeUnitType","PointFillTriangulation","pointFillFrag","pointFillVert","FillImageModel","constructor","args","createTexture2D","rendererService","texture","update","data","iconService","getCanvas","mag","min","mipmap","layerService","throttleRenderLayers","LINEAR","LINEAR_MIPMAP_LINEAR","premultiplyAlpha","width","height","canvasHeight","textures","attributeLocation","Object","assign","MAX","SIZE","EXTRUDE","UV","getCommonUniformsInfo","raisingHeight","heightfixed","unit","layer","getLayerConfig","getDirty","_this$texture","bind","commonOptions","u_textSize","u_heightfixed","Number","u_raisingHeight","u_size_unit","commonBufferInfo","getUniformsBufferInfo","getAttribute","styleAttributeService","createAttributesAndIndices","getEncodedData","initModels","_this","on","updateTexture","buildModels","_this2","initUniformsBuffer","model","buildLayerModel","moduleName","vertexShader","fragmentShader","triangulation","depth","enable","defines","getDefines","inject","getInject","cull","face","FRONT","clearModels","_this$texture2","off","destroy","registerBuiltinAttributes","registerPosition64LowAttribute","registerStyleAttribute","name","type","Attribute","descriptor","shaderLocation","buffer","usage","DYNAMIC_DRAW","FLOAT","size","feature","iconMap","getIconMap","shape","x","y","featureIdx","vertex","attributeIdx","extrude","extrudeIndex","Array","isArray"],"sources":["/Users/bhanudahiya/Desktop/ledger-IQ/node_modules/@antv/l7-layers/es/point/models/fillImage.js"],"sourcesContent":["import _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { AttributeType, gl } from '@antv/l7-core';\nimport BaseModel from \"../../core/BaseModel\";\nimport { SizeUnitType } from \"../../core/interface\";\nimport { PointFillTriangulation } from \"../../core/triangulation\";\n/* babel-plugin-inline-import '../shaders/fillImage/fillImage_frag.glsl' */\nconst pointFillFrag = \"in vec2 v_uv;// \\u672C\\u8EAB\\u7684 uv \\u5750\\u6807\\nin vec2 v_Iconuv;\\nin float v_opacity;\\nout vec4 outputColor;\\n\\nuniform sampler2D u_texture;\\nlayout(std140) uniform commonUniform {\\n  vec2 u_textSize;\\n  float u_heightfixed: 0.0;\\n  float u_raisingHeight: 0.0;\\n  float u_size_unit;\\n};\\n\\n#pragma include \\\"scene_uniforms\\\"\\n#pragma include \\\"sdf_2d\\\"\\n#pragma include \\\"picking\\\"\\n\\nvoid main() {\\n  vec2 pos = v_Iconuv / u_textSize + v_uv / u_textSize * 64.;\\n  outputColor = texture(SAMPLER_2D(u_texture), pos);\\n  outputColor.a *= v_opacity;\\n  outputColor = filterColor(outputColor);\\n}\\n\";\n/* babel-plugin-inline-import '../shaders/fillImage/fillImage_vert.glsl' */\nconst pointFillVert = \"layout(location = ATTRIBUTE_LOCATION_POSITION) in vec3 a_Position;\\nlayout(location = ATTRIBUTE_LOCATION_POSITION_64LOW) in vec2 a_Position64Low;\\nlayout(location = ATTRIBUTE_LOCATION_COLOR) in vec4 a_Color;\\nlayout(location = ATTRIBUTE_LOCATION_SIZE) in float a_Size;\\nlayout(location = ATTRIBUTE_LOCATION_EXTRUDE) in vec3 a_Extrude;\\nlayout(location = ATTRIBUTE_LOCATION_UV) in vec2 a_Uv;\\n\\nlayout(std140) uniform commonUniform {\\n  vec2 u_textSize;\\n  float u_heightfixed;\\n  float u_raisingHeight;\\n  float u_size_unit;\\n};\\n\\nout vec2 v_uv;\\nout vec2 v_Iconuv;\\nout float v_opacity;\\n\\n#pragma include \\\"projection\\\"\\n#pragma include \\\"picking\\\"\\n#pragma include \\\"rotation_2d\\\"\\n\\nvoid main() {\\n  vec3 extrude = a_Extrude;\\n  v_uv = (a_Extrude.xy + 1.0) / 2.0;\\n  v_uv.y = 1.0 - v_uv.y;\\n  v_Iconuv = a_Uv;\\n  v_opacity = opacity;\\n  float newSize = a_Size;\\n  if (u_size_unit == 1.0) {\\n    newSize = newSize * u_PixelsPerMeter.z;\\n  }\\n\\n  // vec2 offset = (u_RotateMatrix * extrude.xy * (a_Size) + textrueOffsets);\\n  vec2 offset = extrude.xy * newSize + offsets;\\n\\n  offset = rotate_matrix(offset, rotation);\\n\\n  offset = project_pixel(offset);\\n\\n  vec4 project_pos = project_position(vec4(a_Position.xy, 0.0, 1.0), a_Position64Low);\\n  gl_Position = project_common_position_to_clipspace(vec4(project_pos.xy + offset, 0.0, 1.0));\\n\\n  setPickingColor(a_PickingColor);\\n}\\n\";\nexport default class FillImageModel extends BaseModel {\n  constructor(...args) {\n    super(...args);\n    _defineProperty(this, \"meter2coord\", 1);\n    _defineProperty(this, \"texture\", void 0);\n    _defineProperty(this, \"isMeter\", false);\n    _defineProperty(this, \"radian\", 0);\n    _defineProperty(this, \"updateTexture\", () => {\n      const {\n        createTexture2D\n      } = this.rendererService;\n      if (this.texture) {\n        this.texture.update({\n          data: this.iconService.getCanvas(),\n          mag: 'linear',\n          min: 'linear mipmap nearest',\n          mipmap: true\n        });\n        // 更新完纹理后在更新的图层的时候需要更新所有的图层\n        this.layerService.throttleRenderLayers();\n        return;\n      }\n      this.texture = createTexture2D({\n        data: this.iconService.getCanvas(),\n        mag: gl.LINEAR,\n        min: gl.LINEAR_MIPMAP_LINEAR,\n        premultiplyAlpha: false,\n        width: 1024,\n        height: this.iconService.canvasHeight || 128,\n        mipmap: true\n      });\n      this.textures = [this.texture];\n    });\n  }\n  get attributeLocation() {\n    return Object.assign(super.attributeLocation, {\n      MAX: super.attributeLocation.MAX,\n      SIZE: 9,\n      EXTRUDE: 10,\n      UV: 11\n    });\n  }\n  // 旋转的弧度\n  getCommonUniformsInfo() {\n    const {\n      raisingHeight = 0.0,\n      heightfixed = false,\n      unit = 'pixel'\n    } = this.layer.getLayerConfig();\n    if (this.rendererService.getDirty()) {\n      var _this$texture;\n      (_this$texture = this.texture) === null || _this$texture === void 0 || _this$texture.bind();\n    }\n    const commonOptions = {\n      u_textSize: [1024, this.iconService.canvasHeight || 128],\n      u_heightfixed: Number(heightfixed),\n      u_raisingHeight: Number(raisingHeight),\n      u_size_unit: SizeUnitType[unit]\n    }; //2+1+1+1\n    const commonBufferInfo = this.getUniformsBufferInfo(commonOptions);\n    return commonBufferInfo;\n  }\n  getAttribute() {\n    return this.styleAttributeService.createAttributesAndIndices(this.layer.getEncodedData(), PointFillTriangulation);\n  }\n  initModels() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      _this.iconService.on('imageUpdate', _this.updateTexture);\n      _this.updateTexture();\n      return _this.buildModels();\n    })();\n  }\n  buildModels() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      _this2.initUniformsBuffer();\n      const model = yield _this2.layer.buildLayerModel({\n        moduleName: 'pointFillImage',\n        vertexShader: pointFillVert,\n        fragmentShader: pointFillFrag,\n        triangulation: PointFillTriangulation,\n        depth: {\n          enable: false\n        },\n        defines: _this2.getDefines(),\n        inject: _this2.getInject(),\n        cull: {\n          enable: true,\n          face: gl.FRONT\n        }\n      });\n      return [model];\n    })();\n  }\n  clearModels() {\n    var _this$texture2;\n    this.iconService.off('imageUpdate', this.updateTexture);\n    (_this$texture2 = this.texture) === null || _this$texture2 === void 0 || _this$texture2.destroy();\n  }\n\n  // overwrite baseModel func\n  registerBuiltinAttributes() {\n    // 注册 Position 属性 64 位地位部分，经纬度数据开启双精度，避免大于 20层级以上出现数据偏移\n    this.registerPosition64LowAttribute();\n    this.styleAttributeService.registerStyleAttribute({\n      name: 'uv',\n      type: AttributeType.Attribute,\n      descriptor: {\n        name: 'a_Uv',\n        shaderLocation: this.attributeLocation.UV,\n        buffer: {\n          // give the WebGL driver a hint that this buffer may change\n          usage: gl.DYNAMIC_DRAW,\n          data: [],\n          type: gl.FLOAT\n        },\n        size: 2,\n        update: feature => {\n          const iconMap = this.iconService.getIconMap();\n          const {\n            shape\n          } = feature;\n          const {\n            x,\n            y\n          } = iconMap[shape] || {\n            x: -64,\n            y: -64\n          };\n          return [x, y];\n        }\n      }\n    });\n    this.styleAttributeService.registerStyleAttribute({\n      name: 'extrude',\n      type: AttributeType.Attribute,\n      descriptor: {\n        name: 'a_Extrude',\n        shaderLocation: this.attributeLocation.EXTRUDE,\n        buffer: {\n          // give the WebGL driver a hint that this buffer may change\n          usage: gl.DYNAMIC_DRAW,\n          data: [],\n          type: gl.FLOAT\n        },\n        size: 3,\n        update: (feature, featureIdx, vertex, attributeIdx) => {\n          const extrude = [1, 1, 0, -1, 1, 0, -1, -1, 0, 1, -1, 0];\n          const extrudeIndex = attributeIdx % 4 * 3;\n          return [extrude[extrudeIndex], extrude[extrudeIndex + 1], extrude[extrudeIndex + 2]];\n        }\n      }\n    });\n\n    // point layer size;\n    this.styleAttributeService.registerStyleAttribute({\n      name: 'size',\n      type: AttributeType.Attribute,\n      descriptor: {\n        name: 'a_Size',\n        shaderLocation: this.attributeLocation.SIZE,\n        buffer: {\n          // give the WebGL driver a hint that this buffer may change\n          usage: gl.DYNAMIC_DRAW,\n          data: [],\n          type: gl.FLOAT\n        },\n        size: 1,\n        update: feature => {\n          const {\n            size = 5\n          } = feature;\n          return Array.isArray(size) ? [size[0]] : [size];\n        }\n      }\n    });\n  }\n}"],"mappings":"AAAA,OAAOA,iBAAiB,MAAM,6CAA6C;AAC3E,OAAOC,eAAe,MAAM,2CAA2C;AACvE,SAASC,aAAa,EAAEC,EAAE,QAAQ,eAAe;AACjD,OAAOC,SAAS,MAAM,sBAAsB;AAC5C,SAASC,YAAY,QAAQ,sBAAsB;AACnD,SAASC,sBAAsB,QAAQ,0BAA0B;AACjE;AACA,MAAMC,aAAa,GAAG,ylBAAylB;AAC/mB;AACA,MAAMC,aAAa,GAAG,62CAA62C;AACn4C,eAAe,MAAMC,cAAc,SAASL,SAAS,CAAC;EACpDM,WAAWA,CAAC,GAAGC,IAAI,EAAE;IACnB,KAAK,CAAC,GAAGA,IAAI,CAAC;IACdV,eAAe,CAAC,IAAI,EAAE,aAAa,EAAE,CAAC,CAAC;IACvCA,eAAe,CAAC,IAAI,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC;IACxCA,eAAe,CAAC,IAAI,EAAE,SAAS,EAAE,KAAK,CAAC;IACvCA,eAAe,CAAC,IAAI,EAAE,QAAQ,EAAE,CAAC,CAAC;IAClCA,eAAe,CAAC,IAAI,EAAE,eAAe,EAAE,MAAM;MAC3C,MAAM;QACJW;MACF,CAAC,GAAG,IAAI,CAACC,eAAe;MACxB,IAAI,IAAI,CAACC,OAAO,EAAE;QAChB,IAAI,CAACA,OAAO,CAACC,MAAM,CAAC;UAClBC,IAAI,EAAE,IAAI,CAACC,WAAW,CAACC,SAAS,CAAC,CAAC;UAClCC,GAAG,EAAE,QAAQ;UACbC,GAAG,EAAE,uBAAuB;UAC5BC,MAAM,EAAE;QACV,CAAC,CAAC;QACF;QACA,IAAI,CAACC,YAAY,CAACC,oBAAoB,CAAC,CAAC;QACxC;MACF;MACA,IAAI,CAACT,OAAO,GAAGF,eAAe,CAAC;QAC7BI,IAAI,EAAE,IAAI,CAACC,WAAW,CAACC,SAAS,CAAC,CAAC;QAClCC,GAAG,EAAEhB,EAAE,CAACqB,MAAM;QACdJ,GAAG,EAAEjB,EAAE,CAACsB,oBAAoB;QAC5BC,gBAAgB,EAAE,KAAK;QACvBC,KAAK,EAAE,IAAI;QACXC,MAAM,EAAE,IAAI,CAACX,WAAW,CAACY,YAAY,IAAI,GAAG;QAC5CR,MAAM,EAAE;MACV,CAAC,CAAC;MACF,IAAI,CAACS,QAAQ,GAAG,CAAC,IAAI,CAAChB,OAAO,CAAC;IAChC,CAAC,CAAC;EACJ;EACA,IAAIiB,iBAAiBA,CAAA,EAAG;IACtB,OAAOC,MAAM,CAACC,MAAM,CAAC,KAAK,CAACF,iBAAiB,EAAE;MAC5CG,GAAG,EAAE,KAAK,CAACH,iBAAiB,CAACG,GAAG;MAChCC,IAAI,EAAE,CAAC;MACPC,OAAO,EAAE,EAAE;MACXC,EAAE,EAAE;IACN,CAAC,CAAC;EACJ;EACA;EACAC,qBAAqBA,CAAA,EAAG;IACtB,MAAM;MACJC,aAAa,GAAG,GAAG;MACnBC,WAAW,GAAG,KAAK;MACnBC,IAAI,GAAG;IACT,CAAC,GAAG,IAAI,CAACC,KAAK,CAACC,cAAc,CAAC,CAAC;IAC/B,IAAI,IAAI,CAAC9B,eAAe,CAAC+B,QAAQ,CAAC,CAAC,EAAE;MACnC,IAAIC,aAAa;MACjB,CAACA,aAAa,GAAG,IAAI,CAAC/B,OAAO,MAAM,IAAI,IAAI+B,aAAa,KAAK,KAAK,CAAC,IAAIA,aAAa,CAACC,IAAI,CAAC,CAAC;IAC7F;IACA,MAAMC,aAAa,GAAG;MACpBC,UAAU,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC/B,WAAW,CAACY,YAAY,IAAI,GAAG,CAAC;MACxDoB,aAAa,EAAEC,MAAM,CAACV,WAAW,CAAC;MAClCW,eAAe,EAAED,MAAM,CAACX,aAAa,CAAC;MACtCa,WAAW,EAAE/C,YAAY,CAACoC,IAAI;IAChC,CAAC,CAAC,CAAC;IACH,MAAMY,gBAAgB,GAAG,IAAI,CAACC,qBAAqB,CAACP,aAAa,CAAC;IAClE,OAAOM,gBAAgB;EACzB;EACAE,YAAYA,CAAA,EAAG;IACb,OAAO,IAAI,CAACC,qBAAqB,CAACC,0BAA0B,CAAC,IAAI,CAACf,KAAK,CAACgB,cAAc,CAAC,CAAC,EAAEpD,sBAAsB,CAAC;EACnH;EACAqD,UAAUA,CAAA,EAAG;IACX,IAAIC,KAAK,GAAG,IAAI;IAChB,OAAO5D,iBAAiB,CAAC,aAAa;MACpC4D,KAAK,CAAC3C,WAAW,CAAC4C,EAAE,CAAC,aAAa,EAAED,KAAK,CAACE,aAAa,CAAC;MACxDF,KAAK,CAACE,aAAa,CAAC,CAAC;MACrB,OAAOF,KAAK,CAACG,WAAW,CAAC,CAAC;IAC5B,CAAC,CAAC,CAAC,CAAC;EACN;EACAA,WAAWA,CAAA,EAAG;IACZ,IAAIC,MAAM,GAAG,IAAI;IACjB,OAAOhE,iBAAiB,CAAC,aAAa;MACpCgE,MAAM,CAACC,kBAAkB,CAAC,CAAC;MAC3B,MAAMC,KAAK,GAAG,MAAMF,MAAM,CAACtB,KAAK,CAACyB,eAAe,CAAC;QAC/CC,UAAU,EAAE,gBAAgB;QAC5BC,YAAY,EAAE7D,aAAa;QAC3B8D,cAAc,EAAE/D,aAAa;QAC7BgE,aAAa,EAAEjE,sBAAsB;QACrCkE,KAAK,EAAE;UACLC,MAAM,EAAE;QACV,CAAC;QACDC,OAAO,EAAEV,MAAM,CAACW,UAAU,CAAC,CAAC;QAC5BC,MAAM,EAAEZ,MAAM,CAACa,SAAS,CAAC,CAAC;QAC1BC,IAAI,EAAE;UACJL,MAAM,EAAE,IAAI;UACZM,IAAI,EAAE5E,EAAE,CAAC6E;QACX;MACF,CAAC,CAAC;MACF,OAAO,CAACd,KAAK,CAAC;IAChB,CAAC,CAAC,CAAC,CAAC;EACN;EACAe,WAAWA,CAAA,EAAG;IACZ,IAAIC,cAAc;IAClB,IAAI,CAACjE,WAAW,CAACkE,GAAG,CAAC,aAAa,EAAE,IAAI,CAACrB,aAAa,CAAC;IACvD,CAACoB,cAAc,GAAG,IAAI,CAACpE,OAAO,MAAM,IAAI,IAAIoE,cAAc,KAAK,KAAK,CAAC,IAAIA,cAAc,CAACE,OAAO,CAAC,CAAC;EACnG;;EAEA;EACAC,yBAAyBA,CAAA,EAAG;IAC1B;IACA,IAAI,CAACC,8BAA8B,CAAC,CAAC;IACrC,IAAI,CAAC9B,qBAAqB,CAAC+B,sBAAsB,CAAC;MAChDC,IAAI,EAAE,IAAI;MACVC,IAAI,EAAEvF,aAAa,CAACwF,SAAS;MAC7BC,UAAU,EAAE;QACVH,IAAI,EAAE,MAAM;QACZI,cAAc,EAAE,IAAI,CAAC7D,iBAAiB,CAACM,EAAE;QACzCwD,MAAM,EAAE;UACN;UACAC,KAAK,EAAE3F,EAAE,CAAC4F,YAAY;UACtB/E,IAAI,EAAE,EAAE;UACRyE,IAAI,EAAEtF,EAAE,CAAC6F;QACX,CAAC;QACDC,IAAI,EAAE,CAAC;QACPlF,MAAM,EAAEmF,OAAO,IAAI;UACjB,MAAMC,OAAO,GAAG,IAAI,CAAClF,WAAW,CAACmF,UAAU,CAAC,CAAC;UAC7C,MAAM;YACJC;UACF,CAAC,GAAGH,OAAO;UACX,MAAM;YACJI,CAAC;YACDC;UACF,CAAC,GAAGJ,OAAO,CAACE,KAAK,CAAC,IAAI;YACpBC,CAAC,EAAE,CAAC,EAAE;YACNC,CAAC,EAAE,CAAC;UACN,CAAC;UACD,OAAO,CAACD,CAAC,EAAEC,CAAC,CAAC;QACf;MACF;IACF,CAAC,CAAC;IACF,IAAI,CAAC/C,qBAAqB,CAAC+B,sBAAsB,CAAC;MAChDC,IAAI,EAAE,SAAS;MACfC,IAAI,EAAEvF,aAAa,CAACwF,SAAS;MAC7BC,UAAU,EAAE;QACVH,IAAI,EAAE,WAAW;QACjBI,cAAc,EAAE,IAAI,CAAC7D,iBAAiB,CAACK,OAAO;QAC9CyD,MAAM,EAAE;UACN;UACAC,KAAK,EAAE3F,EAAE,CAAC4F,YAAY;UACtB/E,IAAI,EAAE,EAAE;UACRyE,IAAI,EAAEtF,EAAE,CAAC6F;QACX,CAAC;QACDC,IAAI,EAAE,CAAC;QACPlF,MAAM,EAAEA,CAACmF,OAAO,EAAEM,UAAU,EAAEC,MAAM,EAAEC,YAAY,KAAK;UACrD,MAAMC,OAAO,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;UACxD,MAAMC,YAAY,GAAGF,YAAY,GAAG,CAAC,GAAG,CAAC;UACzC,OAAO,CAACC,OAAO,CAACC,YAAY,CAAC,EAAED,OAAO,CAACC,YAAY,GAAG,CAAC,CAAC,EAAED,OAAO,CAACC,YAAY,GAAG,CAAC,CAAC,CAAC;QACtF;MACF;IACF,CAAC,CAAC;;IAEF;IACA,IAAI,CAACpD,qBAAqB,CAAC+B,sBAAsB,CAAC;MAChDC,IAAI,EAAE,MAAM;MACZC,IAAI,EAAEvF,aAAa,CAACwF,SAAS;MAC7BC,UAAU,EAAE;QACVH,IAAI,EAAE,QAAQ;QACdI,cAAc,EAAE,IAAI,CAAC7D,iBAAiB,CAACI,IAAI;QAC3C0D,MAAM,EAAE;UACN;UACAC,KAAK,EAAE3F,EAAE,CAAC4F,YAAY;UACtB/E,IAAI,EAAE,EAAE;UACRyE,IAAI,EAAEtF,EAAE,CAAC6F;QACX,CAAC;QACDC,IAAI,EAAE,CAAC;QACPlF,MAAM,EAAEmF,OAAO,IAAI;UACjB,MAAM;YACJD,IAAI,GAAG;UACT,CAAC,GAAGC,OAAO;UACX,OAAOW,KAAK,CAACC,OAAO,CAACb,IAAI,CAAC,GAAG,CAACA,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAACA,IAAI,CAAC;QACjD;MACF;IACF,CAAC,CAAC;EACJ;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}