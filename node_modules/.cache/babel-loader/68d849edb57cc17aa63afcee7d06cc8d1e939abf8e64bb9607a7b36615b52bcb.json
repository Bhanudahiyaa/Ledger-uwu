{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Base } from './base';\nimport { SizeSensor } from '../util';\nexport class SizeManager extends Base {\n  hasScroller() {\n    return this.graph.scroller.widget != null;\n  }\n  getContainer() {\n    return this.hasScroller() ? this.graph.scroller.widget.container : this.graph.container;\n  }\n  init() {\n    const autoResize = this.options.autoResize;\n    if (autoResize) {\n      const target = typeof autoResize === 'boolean' ? this.getContainer() : autoResize;\n      SizeSensor.bind(target, () => {\n        const container = this.getContainer();\n        // container is border-box\n        const width = container.offsetWidth;\n        const height = container.offsetHeight;\n        this.resize(width, height);\n      });\n    }\n  }\n  resize(width, height) {\n    if (this.hasScroller()) {\n      this.resizeScroller(width, height);\n    } else {\n      this.resizeGraph(width, height);\n    }\n  }\n  resizeGraph(width, height) {\n    this.graph.transform.resize(width, height);\n  }\n  resizeScroller(width, height) {\n    this.graph.scroller.resize(width, height);\n  }\n  resizePage(width, height) {\n    const instance = this.graph.scroller.widget;\n    if (instance) {\n      instance.updatePageSize(width, height);\n    }\n  }\n  dispose() {\n    SizeSensor.clear(this.getContainer());\n  }\n}\n__decorate([Base.dispose()], SizeManager.prototype, \"dispose\", null);","map":{"version":3,"names":["Base","SizeSensor","SizeManager","hasScroller","graph","scroller","widget","getContainer","container","init","autoResize","options","target","bind","width","offsetWidth","height","offsetHeight","resize","resizeScroller","resizeGraph","transform","resizePage","instance","updatePageSize","dispose","clear","__decorate"],"sources":["/Users/bhanudahiya/Desktop/ledger-IQ/node_modules/@antv/x6/src/graph/size.ts"],"sourcesContent":["import { Base } from './base'\nimport { SizeSensor } from '../util'\n\nexport class SizeManager extends Base {\n  protected hasScroller() {\n    return this.graph.scroller.widget != null\n  }\n\n  protected getContainer() {\n    return this.hasScroller()\n      ? this.graph.scroller.widget!.container!\n      : this.graph.container\n  }\n\n  protected init() {\n    const autoResize = this.options.autoResize\n    if (autoResize) {\n      const target =\n        typeof autoResize === 'boolean'\n          ? this.getContainer()\n          : (autoResize as Element)\n\n      SizeSensor.bind(target, () => {\n        const container = this.getContainer()\n        // container is border-box\n        const width = container.offsetWidth\n        const height = container.offsetHeight\n        this.resize(width, height)\n      })\n    }\n  }\n\n  resize(width?: number, height?: number) {\n    if (this.hasScroller()) {\n      this.resizeScroller(width, height)\n    } else {\n      this.resizeGraph(width, height)\n    }\n  }\n\n  resizeGraph(width?: number, height?: number) {\n    this.graph.transform.resize(width, height)\n  }\n\n  resizeScroller(width?: number, height?: number) {\n    this.graph.scroller.resize(width, height)\n  }\n\n  resizePage(width?: number, height?: number) {\n    const instance = this.graph.scroller.widget\n    if (instance) {\n      instance.updatePageSize(width, height)\n    }\n  }\n\n  @Base.dispose()\n  dispose() {\n    SizeSensor.clear(this.getContainer())\n  }\n}\n"],"mappings":";;;;;;;AAAA,SAASA,IAAI,QAAQ,QAAQ;AAC7B,SAASC,UAAU,QAAQ,SAAS;AAEpC,OAAM,MAAOC,WAAY,SAAQF,IAAI;EACzBG,WAAWA,CAAA;IACnB,OAAO,IAAI,CAACC,KAAK,CAACC,QAAQ,CAACC,MAAM,IAAI,IAAI;EAC3C;EAEUC,YAAYA,CAAA;IACpB,OAAO,IAAI,CAACJ,WAAW,EAAE,GACrB,IAAI,CAACC,KAAK,CAACC,QAAQ,CAACC,MAAO,CAACE,SAAU,GACtC,IAAI,CAACJ,KAAK,CAACI,SAAS;EAC1B;EAEUC,IAAIA,CAAA;IACZ,MAAMC,UAAU,GAAG,IAAI,CAACC,OAAO,CAACD,UAAU;IAC1C,IAAIA,UAAU,EAAE;MACd,MAAME,MAAM,GACV,OAAOF,UAAU,KAAK,SAAS,GAC3B,IAAI,CAACH,YAAY,EAAE,GAClBG,UAAsB;MAE7BT,UAAU,CAACY,IAAI,CAACD,MAAM,EAAE,MAAK;QAC3B,MAAMJ,SAAS,GAAG,IAAI,CAACD,YAAY,EAAE;QACrC;QACA,MAAMO,KAAK,GAAGN,SAAS,CAACO,WAAW;QACnC,MAAMC,MAAM,GAAGR,SAAS,CAACS,YAAY;QACrC,IAAI,CAACC,MAAM,CAACJ,KAAK,EAAEE,MAAM,CAAC;MAC5B,CAAC,CAAC;;EAEN;EAEAE,MAAMA,CAACJ,KAAc,EAAEE,MAAe;IACpC,IAAI,IAAI,CAACb,WAAW,EAAE,EAAE;MACtB,IAAI,CAACgB,cAAc,CAACL,KAAK,EAAEE,MAAM,CAAC;KACnC,MAAM;MACL,IAAI,CAACI,WAAW,CAACN,KAAK,EAAEE,MAAM,CAAC;;EAEnC;EAEAI,WAAWA,CAACN,KAAc,EAAEE,MAAe;IACzC,IAAI,CAACZ,KAAK,CAACiB,SAAS,CAACH,MAAM,CAACJ,KAAK,EAAEE,MAAM,CAAC;EAC5C;EAEAG,cAAcA,CAACL,KAAc,EAAEE,MAAe;IAC5C,IAAI,CAACZ,KAAK,CAACC,QAAQ,CAACa,MAAM,CAACJ,KAAK,EAAEE,MAAM,CAAC;EAC3C;EAEAM,UAAUA,CAACR,KAAc,EAAEE,MAAe;IACxC,MAAMO,QAAQ,GAAG,IAAI,CAACnB,KAAK,CAACC,QAAQ,CAACC,MAAM;IAC3C,IAAIiB,QAAQ,EAAE;MACZA,QAAQ,CAACC,cAAc,CAACV,KAAK,EAAEE,MAAM,CAAC;;EAE1C;EAGAS,OAAOA,CAAA;IACLxB,UAAU,CAACyB,KAAK,CAAC,IAAI,CAACnB,YAAY,EAAE,CAAC;EACvC;;AAFAoB,UAAA,EADC3B,IAAI,CAACyB,OAAO,EAAE,C,yCAGd","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}