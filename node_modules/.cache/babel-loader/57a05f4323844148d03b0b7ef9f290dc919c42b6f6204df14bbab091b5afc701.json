{"ast":null,"code":"import { __rest } from \"tslib\";\nimport React, { useState } from 'react';\nimport { useXflowPrefixCls } from '@antv/xflow-core';\nimport { DoubleRightOutlined, DoubleLeftOutlined } from '@ant-design/icons';\nimport { get } from 'lodash';\nimport { WorkspacePanel } from '../base-panel';\nimport { registerCustomNode } from './utils';\nimport { NodePanelBody } from './panel-body';\n// import { NodePanelHeader } from '../canvas-node-tree-panel/panel-header'\nimport { NodePanelHeader } from './panel-header';\nimport { usePanelLyaoutStyle } from '../canvas-node-tree-panel/utils';\nimport { usePanelData } from './service';\nimport { CONTAINER_CLASS, PANEL_HEADER_HEIGHT } from './constants';\nexport { setGroupRender } from './group-panel';\nexport * from './constants';\nexport * from './utils';\nexport * from './interface';\nexport const NodePanelMain = props => {\n  const {\n      prefixClz,\n      position = {\n        width: 240,\n        top: 0,\n        bottom: 0,\n        left: 0\n      },\n      showHeader = true\n    } = props,\n    rest = __rest(props, [\"prefixClz\", \"position\", \"showHeader\"]);\n  const {\n    width = 200\n  } = position;\n  const {\n    headerStyle,\n    bodyStyle\n  } = usePanelLyaoutStyle(props);\n  const {\n    state,\n    onKeywordChange\n  } = usePanelData(props);\n  return React.createElement(React.Fragment, null, showHeader && React.createElement(WorkspacePanel, Object.assign({}, rest, {\n    position: {\n      top: 0,\n      left: 0,\n      height: PANEL_HEADER_HEIGHT,\n      width\n    }\n  }), React.createElement(NodePanelHeader, Object.assign({}, props, {\n    state: state,\n    style: headerStyle,\n    onKeywordChange: onKeywordChange\n  }))), React.createElement(WorkspacePanel, Object.assign({\n    className: `${CONTAINER_CLASS}-nodes`\n  }, rest, {\n    position: Object.assign(Object.assign({}, position), {\n      top: showHeader ? PANEL_HEADER_HEIGHT : 0\n    })\n  }), React.createElement(NodePanelBody, Object.assign({}, props, {\n    state: state,\n    style: bodyStyle\n  }))));\n};\nexport const FlowchartNodePanel = props => {\n  registerCustomNode(get(props, 'registerNode'));\n  const prefixClz = useXflowPrefixCls('node-panel');\n  const [collpased, setCollpased] = useState(false);\n  const {\n      show = true,\n      position = {\n        width: 240,\n        top: 40,\n        bottom: 0,\n        left: 0\n      }\n    } = props,\n    rest = __rest(props, [\"show\", \"position\"]);\n  if (!show) {\n    return null;\n  }\n  const {\n    width = 200,\n    left\n  } = position;\n  return React.createElement(WorkspacePanel, {\n    className: CONTAINER_CLASS,\n    position: Object.assign(Object.assign({}, position), {\n      left: !collpased ? left : -width\n    })\n  }, React.createElement(\"div\", {\n    className: `${CONTAINER_CLASS}-wrapper`\n  }, React.createElement(WorkspacePanel, Object.assign({\n    className: prefixClz\n  }, rest, {\n    position: {\n      top: 0,\n      bottom: 0,\n      left: 0,\n      right: 0\n    }\n  }), React.createElement(NodePanelMain, Object.assign({}, props, {\n    prefixClz: prefixClz,\n    position: position\n  }))), React.createElement(\"div\", {\n    className: `${CONTAINER_CLASS}-icon`,\n    style: {\n      top: 21,\n      right: !collpased ? -10 : -20,\n      borderRadius: !collpased ? '50%' : '0 50% 50% 0',\n      borderLeft: !collpased ? '' : 'none'\n    },\n    onClick: () => {\n      setCollpased(!collpased);\n    }\n  }, collpased ? React.createElement(DoubleRightOutlined, null) : React.createElement(DoubleLeftOutlined, null))));\n};","map":{"version":3,"names":["React","useState","useXflowPrefixCls","DoubleRightOutlined","DoubleLeftOutlined","get","WorkspacePanel","registerCustomNode","NodePanelBody","NodePanelHeader","usePanelLyaoutStyle","usePanelData","CONTAINER_CLASS","PANEL_HEADER_HEIGHT","setGroupRender","NodePanelMain","props","prefixClz","position","width","top","bottom","left","showHeader","rest","__rest","headerStyle","bodyStyle","state","onKeywordChange","createElement","Fragment","Object","assign","height","style","className","FlowchartNodePanel","collpased","setCollpased","show","right","borderRadius","borderLeft","onClick"],"sources":["../../src/flowchart-node-panel/index.tsx"],"sourcesContent":[null],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,iBAAiB,QAAQ,kBAAkB;AACpD,SAASC,mBAAmB,EAAEC,kBAAkB,QAAQ,mBAAmB;AAC3E,SAASC,GAAG,QAAQ,QAAQ;AAC5B,SAASC,cAAc,QAAQ,eAAe;AAG9C,SAASC,kBAAkB,QAAQ,SAAS;AAC5C,SAASC,aAAa,QAAQ,cAAc;AAC5C;AACA,SAASC,eAAe,QAAQ,gBAAgB;AAChD,SAASC,mBAAmB,QAAQ,iCAAiC;AACrE,SAASC,YAAY,QAAQ,WAAW;AACxC,SAASC,eAAe,EAAEC,mBAAmB,QAAQ,aAAa;AAClE,SAASC,cAAc,QAAQ,eAAe;AAC9C,cAAc,aAAa;AAC3B,cAAc,SAAS;AACvB,cAAc,aAAa;AAE3B,OAAO,MAAMC,aAAa,GAAqBC,KAAK,IAAG;EACrD,MAAM;MACJC,SAAS;MACTC,QAAQ,GAAG;QAAEC,KAAK,EAAE,GAAG;QAAEC,GAAG,EAAE,CAAC;QAAEC,MAAM,EAAE,CAAC;QAAEC,IAAI,EAAE;MAAC,CAAE;MACrDC,UAAU,GAAG;IAAI,IAEfP,KAAK;IADJQ,IAAI,GAAAC,MAAA,CACLT,KAAK,EALH,uCAKL,CAAQ;EACT,MAAM;IAAEG,KAAK,GAAG;EAAG,CAAE,GAAGD,QAAQ;EAChC,MAAM;IAAEQ,WAAW;IAAEC;EAAS,CAAE,GAAGjB,mBAAmB,CAACM,KAAoB,CAAC;EAC5E,MAAM;IAAEY,KAAK;IAAEC;EAAe,CAAE,GAAGlB,YAAY,CAACK,KAAK,CAAC;EAEtD,OACEhB,KAAA,CAAA8B,aAAA,CAAA9B,KAAA,CAAA+B,QAAA,QACGR,UAAU,IACTvB,KAAA,CAAA8B,aAAA,CAACxB,cAAc,EAAA0B,MAAA,CAAAC,MAAA,KACTT,IAAI;IACRN,QAAQ,EAAE;MACRE,GAAG,EAAE,CAAC;MACNE,IAAI,EAAE,CAAC;MACPY,MAAM,EAAErB,mBAAmB;MAC3BM;;EACD,IAEDnB,KAAA,CAAA8B,aAAA,CAACrB,eAAe,EAAAuB,MAAA,CAAAC,MAAA,KACVjB,KAAK;IACTY,KAAK,EAAEA,KAAK;IACZO,KAAK,EAAET,WAAW;IAClBG,eAAe,EAAEA;EAAe,GAChC,CAEL,EACD7B,KAAA,CAAA8B,aAAA,CAACxB,cAAc,EAAA0B,MAAA,CAAAC,MAAA;IACbG,SAAS,EAAE,GAAGxB,eAAe;EAAQ,GACjCY,IAAI;IACRN,QAAQ,EAAAc,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KACHf,QAAQ;MACXE,GAAG,EAAEG,UAAU,GAAGV,mBAAmB,GAAG;IAAC;EAAA,IAG3Cb,KAAA,CAAA8B,aAAA,CAACtB,aAAa,EAAAwB,MAAA,CAAAC,MAAA,KAAKjB,KAAK;IAAEY,KAAK,EAAEA,KAAK;IAAEO,KAAK,EAAER;EAAS,GAAI,CAC7C,CAChB;AAEP,CAAC;AAED,OAAO,MAAMU,kBAAkB,GAAqBrB,KAAK,IAAG;EAC1DT,kBAAkB,CAACF,GAAG,CAACW,KAAK,EAAE,cAAc,CAAC,CAAC;EAC9C,MAAMC,SAAS,GAAGf,iBAAiB,CAAC,YAAY,CAAC;EACjD,MAAM,CAACoC,SAAS,EAAEC,YAAY,CAAC,GAAGtC,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM;MAAEuC,IAAI,GAAG,IAAI;MAAEtB,QAAQ,GAAG;QAAEC,KAAK,EAAE,GAAG;QAAEC,GAAG,EAAE,EAAE;QAAEC,MAAM,EAAE,CAAC;QAAEC,IAAI,EAAE;MAAC;IAAE,IAAcN,KAAK;IAAdQ,IAAI,GAAAC,MAAA,CAAKT,KAAK,EAAxF,oBAAgF,CAAQ;EAC9F,IAAI,CAACwB,IAAI,EAAE;IACT,OAAO,IAAI;;EAEb,MAAM;IAAErB,KAAK,GAAG,GAAG;IAAEG;EAAI,CAAE,GAAGJ,QAAQ;EAEtC,OACElB,KAAA,CAAA8B,aAAA,CAACxB,cAAc;IACb8B,SAAS,EAAExB,eAAe;IAC1BM,QAAQ,EAAAc,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KACHf,QAAQ;MACXI,IAAI,EAAE,CAACgB,SAAS,GAAGhB,IAAI,GAAG,CAACH;IAAK;EAAA,GAGlCnB,KAAA,CAAA8B,aAAA;IAAKM,SAAS,EAAE,GAAGxB,eAAe;EAAU,GAC1CZ,KAAA,CAAA8B,aAAA,CAACxB,cAAc,EAAA0B,MAAA,CAAAC,MAAA;IACbG,SAAS,EAAEnB;EAAS,GAChBO,IAAI;IACRN,QAAQ,EAAE;MACRE,GAAG,EAAE,CAAC;MACNC,MAAM,EAAE,CAAC;MACTC,IAAI,EAAE,CAAC;MACPmB,KAAK,EAAE;;EACR,IAEDzC,KAAA,CAAA8B,aAAA,CAACf,aAAa,EAAAiB,MAAA,CAAAC,MAAA,KAAKjB,KAAK;IAAEC,SAAS,EAAEA,SAAS;IAAEC,QAAQ,EAAEA;EAAQ,GAAI,CACvD,EACjBlB,KAAA,CAAA8B,aAAA;IACEM,SAAS,EAAE,GAAGxB,eAAe,OAAO;IACpCuB,KAAK,EAAE;MACLf,GAAG,EAAE,EAAE;MACPqB,KAAK,EAAE,CAACH,SAAS,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE;MAC7BI,YAAY,EAAE,CAACJ,SAAS,GAAG,KAAK,GAAG,aAAa;MAChDK,UAAU,EAAE,CAACL,SAAS,GAAG,EAAE,GAAG;KAC/B;IACDM,OAAO,EAAEA,CAAA,KAAK;MACZL,YAAY,CAAC,CAACD,SAAS,CAAC;IAC1B;EAAC,GAEAA,SAAS,GAAGtC,KAAA,CAAA8B,aAAA,CAAC3B,mBAAmB,OAAG,GAAGH,KAAA,CAAA8B,aAAA,CAAC1B,kBAAkB,OAAG,CACzD,CACF,CACS;AAErB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}