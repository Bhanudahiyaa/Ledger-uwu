{"ast":null,"code":"import { Config } from '../global/config';\nimport { StringExt, FunctionExt } from '../util';\nexport var LocalStorage;\n(function (LocalStorage) {\n  const prefix = `${Config.prefixCls}.storage`;\n  function insert(collection, doc, cb) {\n    const id = doc.id || StringExt.uniqueId('doc-');\n    const index = loadIndex(collection);\n    index.keys.push(id);\n    setItem(docKey(collection, id), doc);\n    setItem(indexKey(collection), index);\n    callback(cb, null, Object.assign(Object.assign({}, doc), {\n      id\n    }));\n  }\n  LocalStorage.insert = insert;\n  function find(collection, query, cb) {\n    const index = loadIndex(collection);\n    const docs = [];\n    if (query == null) {\n      index.keys.forEach(id => {\n        const doc = getItem(docKey(collection, id));\n        if (!doc) {\n          callback(cb, new Error(`No document found for an ID '${id}' from index.`));\n        } else {\n          docs.push(doc);\n        }\n      });\n      callback(cb, null, docs);\n    } else if (query.id) {\n      const doc = getItem(docKey(collection, query.id));\n      callback(cb, null, doc ? [doc] : []);\n    } else {\n      callback(cb, null, []);\n    }\n  }\n  LocalStorage.find = find;\n  function remove(collection, query, cb) {\n    const index = loadIndex(collection);\n    if (query == null) {\n      index.keys.forEach(id => {\n        localStorage.removeItem(docKey(collection, id));\n      });\n      localStorage.removeItem(indexKey(collection));\n      callback(cb, null);\n    } else if (query.id) {\n      const idx = index.keys.indexOf(query.id);\n      if (idx >= 0) {\n        index.keys.splice(idx, 1);\n      }\n      localStorage.removeItem(docKey(collection, query.id));\n      setItem(indexKey(collection), index);\n      callback(cb, null);\n    }\n  }\n  LocalStorage.remove = remove;\n  // util\n  // ----\n  function callback(cb, err, ret) {\n    if (cb) {\n      FunctionExt.defer(() => {\n        cb(err, ret);\n      });\n    }\n  }\n  function setItem(key, item) {\n    localStorage.setItem(key, JSON.stringify(item));\n  }\n  function getItem(key) {\n    const item = localStorage.getItem(key);\n    return item ? JSON.parse(item) : null;\n  }\n  function loadIndex(collection) {\n    const index = getItem(indexKey(collection));\n    if (index) {\n      if (index.keys == null) {\n        index.keys = [];\n      }\n      return index;\n    }\n    return {\n      keys: []\n    };\n  }\n  function docKey(collection, id) {\n    return `${prefix}.${collection}.docs.${id}`;\n  }\n  function indexKey(collection) {\n    return `${prefix}.${collection}.index`;\n  }\n})(LocalStorage || (LocalStorage = {}));","map":{"version":3,"names":["Config","StringExt","FunctionExt","LocalStorage","prefix","prefixCls","insert","collection","doc","cb","id","uniqueId","index","loadIndex","keys","push","setItem","docKey","indexKey","callback","Object","assign","find","query","docs","forEach","getItem","Error","remove","localStorage","removeItem","idx","indexOf","splice","err","ret","defer","key","item","JSON","stringify","parse"],"sources":["/Users/bhanudahiya/Desktop/ledger-IQ/node_modules/@antv/x6/src/common/localstorage.ts"],"sourcesContent":["import { Config } from '../global/config'\nimport { StringExt, FunctionExt } from '../util'\n\nexport namespace LocalStorage {\n  const prefix = `${Config.prefixCls}.storage`\n\n  export function insert<T>(collection: string, doc: T, cb: Types.Callback) {\n    const id = (doc as any).id || StringExt.uniqueId('doc-')\n    const index = loadIndex(collection)\n\n    index.keys.push(id)\n\n    setItem(docKey(collection, id), doc)\n    setItem(indexKey(collection), index)\n    callback(cb, null, { ...doc, id })\n  }\n\n  export function find<T>(\n    collection: string,\n    query: Types.Query,\n    cb: Types.Callback,\n  ) {\n    const index = loadIndex(collection)\n    const docs: T[] = []\n\n    if (query == null) {\n      index.keys.forEach((id) => {\n        const doc = getItem<T>(docKey(collection, id))\n        if (!doc) {\n          callback(\n            cb,\n            new Error(`No document found for an ID '${id}' from index.`),\n          )\n        } else {\n          docs.push(doc)\n        }\n      })\n\n      callback(cb, null, docs)\n    } else if (query.id) {\n      const doc = getItem(docKey(collection, query.id))\n      callback(cb, null, doc ? [doc] : [])\n    } else {\n      callback(cb, null, [])\n    }\n  }\n\n  export function remove(\n    collection: string,\n    query: Types.Query,\n    cb: Types.Callback,\n  ) {\n    const index = loadIndex(collection)\n\n    if (query == null) {\n      index.keys.forEach((id) => {\n        localStorage.removeItem(docKey(collection, id))\n      })\n\n      localStorage.removeItem(indexKey(collection))\n      callback(cb, null)\n    } else if (query.id) {\n      const idx = index.keys.indexOf(query.id)\n      if (idx >= 0) {\n        index.keys.splice(idx, 1)\n      }\n      localStorage.removeItem(docKey(collection, query.id))\n      setItem(indexKey(collection), index)\n      callback(cb, null)\n    }\n  }\n\n  // util\n  // ----\n  function callback<T>(cb: Types.Callback, err: Error | null, ret?: T) {\n    if (cb) {\n      FunctionExt.defer(() => {\n        cb(err, ret)\n      })\n    }\n  }\n\n  function setItem<T>(key: string, item: T) {\n    localStorage.setItem(key, JSON.stringify(item))\n  }\n\n  function getItem<T>(key: string): T | null {\n    const item = localStorage.getItem(key)\n    return item ? JSON.parse(item) : null\n  }\n\n  function loadIndex(collection: string) {\n    const index = getItem<Types.Index>(indexKey(collection))\n    if (index) {\n      if (index.keys == null) {\n        index.keys = []\n      }\n      return index\n    }\n    return { keys: [] }\n  }\n\n  function docKey(collection: string, id: string) {\n    return `${prefix}.${collection}.docs.${id}`\n  }\n\n  function indexKey(collection: string) {\n    return `${prefix}.${collection}.index`\n  }\n}\n\nnamespace Types {\n  export interface Index {\n    keys: string[]\n  }\n\n  export type Callback = <T>(err: Error | null, ret?: T) => any\n\n  export type Query = { id: string } | null | undefined\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}