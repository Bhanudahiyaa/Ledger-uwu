{"ast":null,"code":"var __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\n\n// src/device/DeviceModel.ts\nimport { BlendFactor, BlendMode, ChannelWriteMask, CompareFunction, CullMode, Format, StencilOp, TransparentBlack, VertexStepMode, ViewportOrigin } from \"@antv/g-device-api\";\nimport { gl } from \"@antv/l7-core\";\nimport { lodashUtil } from \"@antv/l7-utils\";\nimport DeviceFramebuffer from \"./DeviceFramebuffer\";\nimport DeviceTexture2D from \"./DeviceTexture2D\";\nimport { blendEquationMap, blendFuncMap, cullFaceMap, depthFuncMap, primitiveMap, sizeFormatMap, stencilFuncMap, stencilOpMap } from \"./constants\";\nvar {\n  isPlainObject,\n  isTypedArray,\n  isNil\n} = lodashUtil;\nvar DeviceModel = class {\n  constructor(device, options, service) {\n    this.device = device;\n    this.options = options;\n    this.service = service;\n    this.destroyed = false;\n    this.uniforms = {};\n    this.vertexBuffers = [];\n    const {\n      vs,\n      fs,\n      attributes,\n      uniforms,\n      count,\n      elements,\n      diagnosticDerivativeUniformityEnabled\n    } = options;\n    this.options = options;\n    const diagnosticDerivativeUniformityHeader = diagnosticDerivativeUniformityEnabled ? \"\" : this.service[\"viewportOrigin\"] === ViewportOrigin.UPPER_LEFT ? \"diagnostic(off,derivative_uniformity);\" : \"\";\n    this.program = service.renderCache.createProgram({\n      vertex: {\n        glsl: vs\n      },\n      fragment: {\n        glsl: fs,\n        postprocess: fs2 => diagnosticDerivativeUniformityHeader + fs2\n      }\n    });\n    if (uniforms) {\n      this.uniforms = this.extractUniforms(uniforms);\n    }\n    const vertexBufferDescriptors = [];\n    let inferredCount = 0;\n    Object.keys(attributes).forEach(name => {\n      const attribute = attributes[name];\n      const buffer = attribute.get();\n      this.vertexBuffers.push(buffer.get());\n      const {\n        offset = 0,\n        stride = 0,\n        // TODO: normalized\n        size = 1,\n        divisor = 0,\n        shaderLocation = 0\n      } = attribute[\"attribute\"];\n      vertexBufferDescriptors.push({\n        arrayStride: stride || size * 4,\n        // TODO: L7 hasn't use instanced array for now.\n        stepMode: VertexStepMode.VERTEX,\n        attributes: [{\n          format: sizeFormatMap[size],\n          shaderLocation,\n          offset,\n          divisor\n        }]\n      });\n      inferredCount = buffer[\"size\"] / size;\n    });\n    if (!count) {\n      this.options.count = inferredCount;\n    }\n    if (elements) {\n      this.indexBuffer = elements.get();\n    }\n    const inputLayout = service.renderCache.createInputLayout({\n      vertexBufferDescriptors,\n      indexBufferFormat: elements ? Format.U32_R : null,\n      program: this.program\n    });\n    this.inputLayout = inputLayout;\n    this.pipeline = this.createPipeline(options);\n  }\n  createPipeline(options, pick) {\n    var _a;\n    const {\n      primitive = gl.TRIANGLES,\n      depth,\n      cull,\n      blend,\n      stencil\n    } = options;\n    const depthParams = this.initDepthDrawParams({\n      depth\n    });\n    const depthEnabled = !!(depthParams && depthParams.enable);\n    const cullParams = this.initCullDrawParams({\n      cull\n    });\n    const cullEnabled = !!(cullParams && cullParams.enable);\n    const blendParams = this.getBlendDrawParams({\n      blend\n    });\n    const blendEnabled = !!(blendParams && blendParams.enable);\n    const stencilParams = this.getStencilDrawParams({\n      stencil\n    });\n    const stencilEnabled = !!(stencilParams && stencilParams.enable);\n    const pipeline = this.device.createRenderPipeline({\n      inputLayout: this.inputLayout,\n      program: this.program,\n      topology: primitiveMap[primitive],\n      colorAttachmentFormats: [Format.U8_RGBA_RT],\n      depthStencilAttachmentFormat: Format.D24_S8,\n      megaStateDescriptor: {\n        attachmentsState: [pick ? {\n          channelWriteMask: ChannelWriteMask.ALL,\n          rgbBlendState: {\n            blendMode: BlendMode.ADD,\n            blendSrcFactor: BlendFactor.ONE,\n            blendDstFactor: BlendFactor.ZERO\n          },\n          alphaBlendState: {\n            blendMode: BlendMode.ADD,\n            blendSrcFactor: BlendFactor.ONE,\n            blendDstFactor: BlendFactor.ZERO\n          }\n        } : {\n          channelWriteMask: stencilEnabled && stencilParams.opFront.zpass === StencilOp.REPLACE ? ChannelWriteMask.NONE : ChannelWriteMask.ALL,\n          rgbBlendState: {\n            blendMode: blendEnabled && blendParams.equation.rgb || BlendMode.ADD,\n            blendSrcFactor: blendEnabled && blendParams.func.srcRGB || BlendFactor.SRC_ALPHA,\n            blendDstFactor: blendEnabled && blendParams.func.dstRGB || BlendFactor.ONE_MINUS_SRC_ALPHA\n          },\n          alphaBlendState: {\n            blendMode: blendEnabled && blendParams.equation.alpha || BlendMode.ADD,\n            blendSrcFactor: blendEnabled && blendParams.func.srcAlpha || BlendFactor.ONE,\n            blendDstFactor: blendEnabled && blendParams.func.dstAlpha || BlendFactor.ONE\n          }\n        }],\n        blendConstant: blendEnabled ? TransparentBlack : void 0,\n        depthWrite: depthEnabled,\n        depthCompare: depthEnabled && depthParams.func || CompareFunction.LESS,\n        cullMode: cullEnabled && cullParams.face || CullMode.NONE,\n        stencilWrite: stencilEnabled,\n        stencilFront: {\n          compare: stencilEnabled ? stencilParams.func.cmp : CompareFunction.ALWAYS,\n          passOp: stencilParams.opFront.zpass,\n          failOp: stencilParams.opFront.fail,\n          depthFailOp: stencilParams.opFront.zfail,\n          mask: stencilParams.opFront.mask\n        },\n        stencilBack: {\n          compare: stencilEnabled ? stencilParams.func.cmp : CompareFunction.ALWAYS,\n          passOp: stencilParams.opBack.zpass,\n          failOp: stencilParams.opBack.fail,\n          depthFailOp: stencilParams.opBack.zfail,\n          mask: stencilParams.opBack.mask\n        }\n      }\n    });\n    if (stencilEnabled && !isNil((_a = stencil == null ? void 0 : stencil.func) == null ? void 0 : _a.ref)) {\n      pipeline.stencilFuncReference = stencil.func.ref;\n    }\n    return pipeline;\n  }\n  updateAttributesAndElements() {}\n  /**\n   * No need to implement this method, you should update data on `Attribute` like this:\n   *\n   * @example\n   * ```ts\n   * attribute.updateBuffer({\n   *   data: [],\n   *   offset: 0,\n   * });\n   * ```\n   */\n  updateAttributes() {}\n  addUniforms(uniforms) {\n    this.uniforms = __spreadValues(__spreadValues({}, this.uniforms), this.extractUniforms(uniforms));\n  }\n  draw(options, pick) {\n    const mergedOptions = __spreadValues(__spreadValues({}, this.options), options);\n    const {\n      count = 0,\n      instances,\n      elements,\n      uniforms = {},\n      uniformBuffers,\n      textures\n    } = mergedOptions;\n    this.uniforms = __spreadValues(__spreadValues({}, this.uniforms), this.extractUniforms(uniforms));\n    const {\n      renderPass,\n      currentFramebuffer,\n      width,\n      height\n    } = this.service;\n    this.pipeline = this.createPipeline(mergedOptions, pick);\n    const device = this.service[\"device\"];\n    const tmpHeight = device[\"swapChainHeight\"];\n    device[\"swapChainHeight\"] = (currentFramebuffer == null ? void 0 : currentFramebuffer[\"height\"]) || height;\n    renderPass.setViewport(0, 0, (currentFramebuffer == null ? void 0 : currentFramebuffer[\"width\"]) || width, (currentFramebuffer == null ? void 0 : currentFramebuffer[\"height\"]) || height);\n    device[\"swapChainHeight\"] = tmpHeight;\n    renderPass.setPipeline(this.pipeline);\n    if (!isNil(this.pipeline.stencilFuncReference)) {\n      renderPass.setStencilReference(this.pipeline.stencilFuncReference);\n    }\n    renderPass.setVertexInput(this.inputLayout, this.vertexBuffers.map(buffer => ({\n      buffer\n    })), elements ? {\n      buffer: this.indexBuffer,\n      offset: 0\n    } : null);\n    if (uniformBuffers) {\n      this.bindings = device.createBindings({\n        pipeline: this.pipeline,\n        uniformBufferBindings: uniformBuffers.map((uniformBuffer, i) => {\n          const buffer = uniformBuffer;\n          return {\n            binding: i,\n            buffer: buffer.get(),\n            size: buffer[\"size\"]\n          };\n        }),\n        samplerBindings: textures == null ? void 0 : textures.map(t => ({\n          texture: t[\"texture\"],\n          sampler: t[\"sampler\"]\n        }))\n      });\n    }\n    if (this.bindings) {\n      renderPass.setBindings(this.bindings);\n      Object.keys(this.uniforms).forEach(uniformName => {\n        const uniform = this.uniforms[uniformName];\n        if (uniform instanceof DeviceTexture2D) {\n          this.uniforms[uniformName] = uniform.get();\n        } else if (uniform instanceof DeviceFramebuffer) {\n          this.uniforms[uniformName] = uniform.get()[\"texture\"];\n        }\n      });\n      this.program.setUniformsLegacy(this.uniforms);\n    }\n    if (elements) {\n      const indexCount = elements[\"count\"];\n      if (indexCount === 0) {\n        renderPass.draw(count, instances);\n      } else {\n        renderPass.drawIndexed(indexCount, instances);\n      }\n    } else {\n      renderPass.draw(count, instances);\n    }\n  }\n  destroy() {\n    var _a, _b, _c;\n    (_a = this.vertexBuffers) == null ? void 0 : _a.forEach(buffer => buffer.destroy());\n    (_b = this.indexBuffer) == null ? void 0 : _b.destroy();\n    (_c = this.bindings) == null ? void 0 : _c.destroy();\n    this.pipeline.destroy();\n    this.destroyed = true;\n  }\n  initDepthDrawParams({\n    depth\n  }) {\n    if (depth) {\n      return {\n        enable: depth.enable === void 0 ? true : !!depth.enable,\n        mask: depth.mask === void 0 ? true : !!depth.mask,\n        func: depthFuncMap[depth.func || gl.LESS],\n        range: depth.range || [0, 1]\n      };\n    }\n  }\n  getBlendDrawParams({\n    blend\n  }) {\n    const {\n      enable,\n      func,\n      equation,\n      color = [0, 0, 0, 0]\n    } = blend || {};\n    return {\n      enable: !!enable,\n      func: {\n        srcRGB: blendFuncMap[func && func.srcRGB || gl.SRC_ALPHA],\n        srcAlpha: blendFuncMap[func && func.srcAlpha || gl.SRC_ALPHA],\n        dstRGB: blendFuncMap[func && func.dstRGB || gl.ONE_MINUS_SRC_ALPHA],\n        dstAlpha: blendFuncMap[func && func.dstAlpha || gl.ONE_MINUS_SRC_ALPHA]\n      },\n      equation: {\n        rgb: blendEquationMap[equation && equation.rgb || gl.FUNC_ADD],\n        alpha: blendEquationMap[equation && equation.alpha || gl.FUNC_ADD]\n      },\n      color\n    };\n  }\n  /**\n   * @see https://github.com/regl-project/regl/blob/gh-pages/API.md#stencil\n   */\n  getStencilDrawParams({\n    stencil\n  }) {\n    const {\n      enable,\n      mask = 4294967295,\n      func = {\n        cmp: gl.ALWAYS,\n        ref: 0,\n        mask: 4294967295\n      },\n      opFront = {\n        fail: gl.KEEP,\n        zfail: gl.KEEP,\n        zpass: gl.KEEP\n      },\n      opBack = {\n        fail: gl.KEEP,\n        zfail: gl.KEEP,\n        zpass: gl.KEEP\n      }\n    } = stencil || {};\n    return {\n      enable: !!enable,\n      mask,\n      func: __spreadProps(__spreadValues({}, func), {\n        cmp: stencilFuncMap[func.cmp]\n      }),\n      opFront: {\n        fail: stencilOpMap[opFront.fail],\n        zfail: stencilOpMap[opFront.zfail],\n        zpass: stencilOpMap[opFront.zpass],\n        mask: func.mask\n      },\n      opBack: {\n        fail: stencilOpMap[opBack.fail],\n        zfail: stencilOpMap[opBack.zfail],\n        zpass: stencilOpMap[opBack.zpass],\n        mask: func.mask\n      }\n    };\n  }\n  /**\n   * @see https://github.com/regl-project/regl/blob/gh-pages/API.md#culling\n   */\n  initCullDrawParams({\n    cull\n  }) {\n    if (cull) {\n      const {\n        enable,\n        face = gl.BACK\n      } = cull;\n      return {\n        enable: !!enable,\n        face: cullFaceMap[face]\n      };\n    }\n  }\n  /**\n   * 考虑结构体命名, eg:\n   * a: { b: 1 }  ->  'a.b'\n   * a: [ { b: 1 } ] -> 'a[0].b'\n   */\n  extractUniforms(uniforms) {\n    const extractedUniforms = {};\n    Object.keys(uniforms).forEach(uniformName => {\n      this.extractUniformsRecursively(uniformName, uniforms[uniformName], extractedUniforms, \"\");\n    });\n    return extractedUniforms;\n  }\n  extractUniformsRecursively(uniformName, uniformValue, uniforms, prefix) {\n    if (uniformValue === null || typeof uniformValue === \"number\" ||\n    // u_A: 1\n    typeof uniformValue === \"boolean\" ||\n    // u_A: false\n    Array.isArray(uniformValue) && typeof uniformValue[0] === \"number\" ||\n    // u_A: [1, 2, 3]\n    isTypedArray(uniformValue) ||\n    // u_A: Float32Array\n    // @ts-ignore\n    uniformValue === \"\" || \"resize\" in uniformValue) {\n      uniforms[`${prefix && prefix + \".\"}${uniformName}`] = uniformValue;\n      return;\n    }\n    if (isPlainObject(uniformValue)) {\n      Object.keys(uniformValue).forEach(childName => {\n        this.extractUniformsRecursively(childName,\n        // @ts-ignore\n        uniformValue[childName], uniforms, `${prefix && prefix + \".\"}${uniformName}`);\n      });\n    }\n    if (Array.isArray(uniformValue)) {\n      uniformValue.forEach((child, idx) => {\n        Object.keys(child).forEach(childName => {\n          this.extractUniformsRecursively(childName,\n          // @ts-ignore\n          child[childName], uniforms, `${prefix && prefix + \".\"}${uniformName}[${idx}]`);\n        });\n      });\n    }\n  }\n};\nexport { DeviceModel as default };","map":{"version":3,"names":["__defProp","Object","defineProperty","__defProps","defineProperties","__getOwnPropDescs","getOwnPropertyDescriptors","__getOwnPropSymbols","getOwnPropertySymbols","__hasOwnProp","prototype","hasOwnProperty","__propIsEnum","propertyIsEnumerable","__defNormalProp","obj","key","value","enumerable","configurable","writable","__spreadValues","a","b","prop","call","__spreadProps","BlendFactor","BlendMode","ChannelWriteMask","CompareFunction","CullMode","Format","StencilOp","TransparentBlack","VertexStepMode","ViewportOrigin","gl","lodashUtil","DeviceFramebuffer","DeviceTexture2D","blendEquationMap","blendFuncMap","cullFaceMap","depthFuncMap","primitiveMap","sizeFormatMap","stencilFuncMap","stencilOpMap","isPlainObject","isTypedArray","isNil","DeviceModel","constructor","device","options","service","destroyed","uniforms","vertexBuffers","vs","fs","attributes","count","elements","diagnosticDerivativeUniformityEnabled","diagnosticDerivativeUniformityHeader","UPPER_LEFT","program","renderCache","createProgram","vertex","glsl","fragment","postprocess","fs2","extractUniforms","vertexBufferDescriptors","inferredCount","keys","forEach","name","attribute","buffer","get","push","offset","stride","size","divisor","shaderLocation","arrayStride","stepMode","VERTEX","format","indexBuffer","inputLayout","createInputLayout","indexBufferFormat","U32_R","pipeline","createPipeline","pick","_a","primitive","TRIANGLES","depth","cull","blend","stencil","depthParams","initDepthDrawParams","depthEnabled","enable","cullParams","initCullDrawParams","cullEnabled","blendParams","getBlendDrawParams","blendEnabled","stencilParams","getStencilDrawParams","stencilEnabled","createRenderPipeline","topology","colorAttachmentFormats","U8_RGBA_RT","depthStencilAttachmentFormat","D24_S8","megaStateDescriptor","attachmentsState","channelWriteMask","ALL","rgbBlendState","blendMode","ADD","blendSrcFactor","ONE","blendDstFactor","ZERO","alphaBlendState","opFront","zpass","REPLACE","NONE","equation","rgb","func","srcRGB","SRC_ALPHA","dstRGB","ONE_MINUS_SRC_ALPHA","alpha","srcAlpha","dstAlpha","blendConstant","depthWrite","depthCompare","LESS","cullMode","face","stencilWrite","stencilFront","compare","cmp","ALWAYS","passOp","failOp","fail","depthFailOp","zfail","mask","stencilBack","opBack","ref","stencilFuncReference","updateAttributesAndElements","updateAttributes","addUniforms","draw","mergedOptions","instances","uniformBuffers","textures","renderPass","currentFramebuffer","width","height","tmpHeight","setViewport","setPipeline","setStencilReference","setVertexInput","map","bindings","createBindings","uniformBufferBindings","uniformBuffer","i","binding","samplerBindings","t","texture","sampler","setBindings","uniformName","uniform","setUniformsLegacy","indexCount","drawIndexed","destroy","_b","_c","range","color","FUNC_ADD","KEEP","BACK","extractedUniforms","extractUniformsRecursively","uniformValue","prefix","Array","isArray","childName","child","idx","default"],"sources":["/Users/bhanudahiya/Desktop/ledger-IQ/node_modules/@antv/l7-renderer/es/device/DeviceModel.js"],"sourcesContent":["var __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\n\n// src/device/DeviceModel.ts\nimport {\n  BlendFactor,\n  BlendMode,\n  ChannelWriteMask,\n  CompareFunction,\n  CullMode,\n  Format,\n  StencilOp,\n  TransparentBlack,\n  VertexStepMode,\n  ViewportOrigin\n} from \"@antv/g-device-api\";\nimport { gl } from \"@antv/l7-core\";\nimport { lodashUtil } from \"@antv/l7-utils\";\nimport DeviceFramebuffer from \"./DeviceFramebuffer\";\nimport DeviceTexture2D from \"./DeviceTexture2D\";\nimport {\n  blendEquationMap,\n  blendFuncMap,\n  cullFaceMap,\n  depthFuncMap,\n  primitiveMap,\n  sizeFormatMap,\n  stencilFuncMap,\n  stencilOpMap\n} from \"./constants\";\nvar { isPlainObject, isTypedArray, isNil } = lodashUtil;\nvar DeviceModel = class {\n  constructor(device, options, service) {\n    this.device = device;\n    this.options = options;\n    this.service = service;\n    this.destroyed = false;\n    this.uniforms = {};\n    this.vertexBuffers = [];\n    const { vs, fs, attributes, uniforms, count, elements, diagnosticDerivativeUniformityEnabled } = options;\n    this.options = options;\n    const diagnosticDerivativeUniformityHeader = diagnosticDerivativeUniformityEnabled ? \"\" : this.service[\"viewportOrigin\"] === ViewportOrigin.UPPER_LEFT ? \"diagnostic(off,derivative_uniformity);\" : \"\";\n    this.program = service.renderCache.createProgram({\n      vertex: {\n        glsl: vs\n      },\n      fragment: {\n        glsl: fs,\n        postprocess: (fs2) => diagnosticDerivativeUniformityHeader + fs2\n      }\n    });\n    if (uniforms) {\n      this.uniforms = this.extractUniforms(uniforms);\n    }\n    const vertexBufferDescriptors = [];\n    let inferredCount = 0;\n    Object.keys(attributes).forEach((name) => {\n      const attribute = attributes[name];\n      const buffer = attribute.get();\n      this.vertexBuffers.push(buffer.get());\n      const {\n        offset = 0,\n        stride = 0,\n        // TODO: normalized\n        size = 1,\n        divisor = 0,\n        shaderLocation = 0\n      } = attribute[\"attribute\"];\n      vertexBufferDescriptors.push({\n        arrayStride: stride || size * 4,\n        // TODO: L7 hasn't use instanced array for now.\n        stepMode: VertexStepMode.VERTEX,\n        attributes: [\n          {\n            format: sizeFormatMap[size],\n            shaderLocation,\n            offset,\n            divisor\n          }\n        ]\n      });\n      inferredCount = buffer[\"size\"] / size;\n    });\n    if (!count) {\n      this.options.count = inferredCount;\n    }\n    if (elements) {\n      this.indexBuffer = elements.get();\n    }\n    const inputLayout = service.renderCache.createInputLayout({\n      vertexBufferDescriptors,\n      indexBufferFormat: elements ? Format.U32_R : null,\n      program: this.program\n    });\n    this.inputLayout = inputLayout;\n    this.pipeline = this.createPipeline(options);\n  }\n  createPipeline(options, pick) {\n    var _a;\n    const { primitive = gl.TRIANGLES, depth, cull, blend, stencil } = options;\n    const depthParams = this.initDepthDrawParams({ depth });\n    const depthEnabled = !!(depthParams && depthParams.enable);\n    const cullParams = this.initCullDrawParams({ cull });\n    const cullEnabled = !!(cullParams && cullParams.enable);\n    const blendParams = this.getBlendDrawParams({ blend });\n    const blendEnabled = !!(blendParams && blendParams.enable);\n    const stencilParams = this.getStencilDrawParams({ stencil });\n    const stencilEnabled = !!(stencilParams && stencilParams.enable);\n    const pipeline = this.device.createRenderPipeline({\n      inputLayout: this.inputLayout,\n      program: this.program,\n      topology: primitiveMap[primitive],\n      colorAttachmentFormats: [Format.U8_RGBA_RT],\n      depthStencilAttachmentFormat: Format.D24_S8,\n      megaStateDescriptor: {\n        attachmentsState: [\n          pick ? {\n            channelWriteMask: ChannelWriteMask.ALL,\n            rgbBlendState: {\n              blendMode: BlendMode.ADD,\n              blendSrcFactor: BlendFactor.ONE,\n              blendDstFactor: BlendFactor.ZERO\n            },\n            alphaBlendState: {\n              blendMode: BlendMode.ADD,\n              blendSrcFactor: BlendFactor.ONE,\n              blendDstFactor: BlendFactor.ZERO\n            }\n          } : {\n            channelWriteMask: stencilEnabled && stencilParams.opFront.zpass === StencilOp.REPLACE ? ChannelWriteMask.NONE : ChannelWriteMask.ALL,\n            rgbBlendState: {\n              blendMode: blendEnabled && blendParams.equation.rgb || BlendMode.ADD,\n              blendSrcFactor: blendEnabled && blendParams.func.srcRGB || BlendFactor.SRC_ALPHA,\n              blendDstFactor: blendEnabled && blendParams.func.dstRGB || BlendFactor.ONE_MINUS_SRC_ALPHA\n            },\n            alphaBlendState: {\n              blendMode: blendEnabled && blendParams.equation.alpha || BlendMode.ADD,\n              blendSrcFactor: blendEnabled && blendParams.func.srcAlpha || BlendFactor.ONE,\n              blendDstFactor: blendEnabled && blendParams.func.dstAlpha || BlendFactor.ONE\n            }\n          }\n        ],\n        blendConstant: blendEnabled ? TransparentBlack : void 0,\n        depthWrite: depthEnabled,\n        depthCompare: depthEnabled && depthParams.func || CompareFunction.LESS,\n        cullMode: cullEnabled && cullParams.face || CullMode.NONE,\n        stencilWrite: stencilEnabled,\n        stencilFront: {\n          compare: stencilEnabled ? stencilParams.func.cmp : CompareFunction.ALWAYS,\n          passOp: stencilParams.opFront.zpass,\n          failOp: stencilParams.opFront.fail,\n          depthFailOp: stencilParams.opFront.zfail,\n          mask: stencilParams.opFront.mask\n        },\n        stencilBack: {\n          compare: stencilEnabled ? stencilParams.func.cmp : CompareFunction.ALWAYS,\n          passOp: stencilParams.opBack.zpass,\n          failOp: stencilParams.opBack.fail,\n          depthFailOp: stencilParams.opBack.zfail,\n          mask: stencilParams.opBack.mask\n        }\n      }\n    });\n    if (stencilEnabled && !isNil((_a = stencil == null ? void 0 : stencil.func) == null ? void 0 : _a.ref)) {\n      pipeline.stencilFuncReference = stencil.func.ref;\n    }\n    return pipeline;\n  }\n  updateAttributesAndElements() {\n  }\n  /**\n   * No need to implement this method, you should update data on `Attribute` like this:\n   *\n   * @example\n   * ```ts\n   * attribute.updateBuffer({\n   *   data: [],\n   *   offset: 0,\n   * });\n   * ```\n   */\n  updateAttributes() {\n  }\n  addUniforms(uniforms) {\n    this.uniforms = __spreadValues(__spreadValues({}, this.uniforms), this.extractUniforms(uniforms));\n  }\n  draw(options, pick) {\n    const mergedOptions = __spreadValues(__spreadValues({}, this.options), options);\n    const {\n      count = 0,\n      instances,\n      elements,\n      uniforms = {},\n      uniformBuffers,\n      textures\n    } = mergedOptions;\n    this.uniforms = __spreadValues(__spreadValues({}, this.uniforms), this.extractUniforms(uniforms));\n    const { renderPass, currentFramebuffer, width, height } = this.service;\n    this.pipeline = this.createPipeline(mergedOptions, pick);\n    const device = this.service[\"device\"];\n    const tmpHeight = device[\"swapChainHeight\"];\n    device[\"swapChainHeight\"] = (currentFramebuffer == null ? void 0 : currentFramebuffer[\"height\"]) || height;\n    renderPass.setViewport(\n      0,\n      0,\n      (currentFramebuffer == null ? void 0 : currentFramebuffer[\"width\"]) || width,\n      (currentFramebuffer == null ? void 0 : currentFramebuffer[\"height\"]) || height\n    );\n    device[\"swapChainHeight\"] = tmpHeight;\n    renderPass.setPipeline(this.pipeline);\n    if (!isNil(this.pipeline.stencilFuncReference)) {\n      renderPass.setStencilReference(this.pipeline.stencilFuncReference);\n    }\n    renderPass.setVertexInput(\n      this.inputLayout,\n      this.vertexBuffers.map((buffer) => ({\n        buffer\n      })),\n      elements ? {\n        buffer: this.indexBuffer,\n        offset: 0\n      } : null\n    );\n    if (uniformBuffers) {\n      this.bindings = device.createBindings({\n        pipeline: this.pipeline,\n        uniformBufferBindings: uniformBuffers.map((uniformBuffer, i) => {\n          const buffer = uniformBuffer;\n          return {\n            binding: i,\n            buffer: buffer.get(),\n            size: buffer[\"size\"]\n          };\n        }),\n        samplerBindings: textures == null ? void 0 : textures.map((t) => ({\n          texture: t[\"texture\"],\n          sampler: t[\"sampler\"]\n        }))\n      });\n    }\n    if (this.bindings) {\n      renderPass.setBindings(this.bindings);\n      Object.keys(this.uniforms).forEach((uniformName) => {\n        const uniform = this.uniforms[uniformName];\n        if (uniform instanceof DeviceTexture2D) {\n          this.uniforms[uniformName] = uniform.get();\n        } else if (uniform instanceof DeviceFramebuffer) {\n          this.uniforms[uniformName] = uniform.get()[\"texture\"];\n        }\n      });\n      this.program.setUniformsLegacy(this.uniforms);\n    }\n    if (elements) {\n      const indexCount = elements[\"count\"];\n      if (indexCount === 0) {\n        renderPass.draw(count, instances);\n      } else {\n        renderPass.drawIndexed(indexCount, instances);\n      }\n    } else {\n      renderPass.draw(count, instances);\n    }\n  }\n  destroy() {\n    var _a, _b, _c;\n    (_a = this.vertexBuffers) == null ? void 0 : _a.forEach((buffer) => buffer.destroy());\n    (_b = this.indexBuffer) == null ? void 0 : _b.destroy();\n    (_c = this.bindings) == null ? void 0 : _c.destroy();\n    this.pipeline.destroy();\n    this.destroyed = true;\n  }\n  initDepthDrawParams({ depth }) {\n    if (depth) {\n      return {\n        enable: depth.enable === void 0 ? true : !!depth.enable,\n        mask: depth.mask === void 0 ? true : !!depth.mask,\n        func: depthFuncMap[depth.func || gl.LESS],\n        range: depth.range || [0, 1]\n      };\n    }\n  }\n  getBlendDrawParams({ blend }) {\n    const { enable, func, equation, color = [0, 0, 0, 0] } = blend || {};\n    return {\n      enable: !!enable,\n      func: {\n        srcRGB: blendFuncMap[func && func.srcRGB || gl.SRC_ALPHA],\n        srcAlpha: blendFuncMap[func && func.srcAlpha || gl.SRC_ALPHA],\n        dstRGB: blendFuncMap[func && func.dstRGB || gl.ONE_MINUS_SRC_ALPHA],\n        dstAlpha: blendFuncMap[func && func.dstAlpha || gl.ONE_MINUS_SRC_ALPHA]\n      },\n      equation: {\n        rgb: blendEquationMap[equation && equation.rgb || gl.FUNC_ADD],\n        alpha: blendEquationMap[equation && equation.alpha || gl.FUNC_ADD]\n      },\n      color\n    };\n  }\n  /**\n   * @see https://github.com/regl-project/regl/blob/gh-pages/API.md#stencil\n   */\n  getStencilDrawParams({ stencil }) {\n    const {\n      enable,\n      mask = 4294967295,\n      func = {\n        cmp: gl.ALWAYS,\n        ref: 0,\n        mask: 4294967295\n      },\n      opFront = {\n        fail: gl.KEEP,\n        zfail: gl.KEEP,\n        zpass: gl.KEEP\n      },\n      opBack = {\n        fail: gl.KEEP,\n        zfail: gl.KEEP,\n        zpass: gl.KEEP\n      }\n    } = stencil || {};\n    return {\n      enable: !!enable,\n      mask,\n      func: __spreadProps(__spreadValues({}, func), {\n        cmp: stencilFuncMap[func.cmp]\n      }),\n      opFront: {\n        fail: stencilOpMap[opFront.fail],\n        zfail: stencilOpMap[opFront.zfail],\n        zpass: stencilOpMap[opFront.zpass],\n        mask: func.mask\n      },\n      opBack: {\n        fail: stencilOpMap[opBack.fail],\n        zfail: stencilOpMap[opBack.zfail],\n        zpass: stencilOpMap[opBack.zpass],\n        mask: func.mask\n      }\n    };\n  }\n  /**\n   * @see https://github.com/regl-project/regl/blob/gh-pages/API.md#culling\n   */\n  initCullDrawParams({ cull }) {\n    if (cull) {\n      const { enable, face = gl.BACK } = cull;\n      return {\n        enable: !!enable,\n        face: cullFaceMap[face]\n      };\n    }\n  }\n  /**\n   * 考虑结构体命名, eg:\n   * a: { b: 1 }  ->  'a.b'\n   * a: [ { b: 1 } ] -> 'a[0].b'\n   */\n  extractUniforms(uniforms) {\n    const extractedUniforms = {};\n    Object.keys(uniforms).forEach((uniformName) => {\n      this.extractUniformsRecursively(uniformName, uniforms[uniformName], extractedUniforms, \"\");\n    });\n    return extractedUniforms;\n  }\n  extractUniformsRecursively(uniformName, uniformValue, uniforms, prefix) {\n    if (uniformValue === null || typeof uniformValue === \"number\" || // u_A: 1\n    typeof uniformValue === \"boolean\" || // u_A: false\n    Array.isArray(uniformValue) && typeof uniformValue[0] === \"number\" || // u_A: [1, 2, 3]\n    isTypedArray(uniformValue) || // u_A: Float32Array\n    // @ts-ignore\n    uniformValue === \"\" || \"resize\" in uniformValue) {\n      uniforms[`${prefix && prefix + \".\"}${uniformName}`] = uniformValue;\n      return;\n    }\n    if (isPlainObject(uniformValue)) {\n      Object.keys(uniformValue).forEach((childName) => {\n        this.extractUniformsRecursively(\n          childName,\n          // @ts-ignore\n          uniformValue[childName],\n          uniforms,\n          `${prefix && prefix + \".\"}${uniformName}`\n        );\n      });\n    }\n    if (Array.isArray(uniformValue)) {\n      uniformValue.forEach((child, idx) => {\n        Object.keys(child).forEach((childName) => {\n          this.extractUniformsRecursively(\n            childName,\n            // @ts-ignore\n            child[childName],\n            uniforms,\n            `${prefix && prefix + \".\"}${uniformName}[${idx}]`\n          );\n        });\n      });\n    }\n  }\n};\nexport {\n  DeviceModel as default\n};\n"],"mappings":"AAAA,IAAIA,SAAS,GAAGC,MAAM,CAACC,cAAc;AACrC,IAAIC,UAAU,GAAGF,MAAM,CAACG,gBAAgB;AACxC,IAAIC,iBAAiB,GAAGJ,MAAM,CAACK,yBAAyB;AACxD,IAAIC,mBAAmB,GAAGN,MAAM,CAACO,qBAAqB;AACtD,IAAIC,YAAY,GAAGR,MAAM,CAACS,SAAS,CAACC,cAAc;AAClD,IAAIC,YAAY,GAAGX,MAAM,CAACS,SAAS,CAACG,oBAAoB;AACxD,IAAIC,eAAe,GAAGA,CAACC,GAAG,EAAEC,GAAG,EAAEC,KAAK,KAAKD,GAAG,IAAID,GAAG,GAAGf,SAAS,CAACe,GAAG,EAAEC,GAAG,EAAE;EAAEE,UAAU,EAAE,IAAI;EAAEC,YAAY,EAAE,IAAI;EAAEC,QAAQ,EAAE,IAAI;EAAEH;AAAM,CAAC,CAAC,GAAGF,GAAG,CAACC,GAAG,CAAC,GAAGC,KAAK;AAC/J,IAAII,cAAc,GAAGA,CAACC,CAAC,EAAEC,CAAC,KAAK;EAC7B,KAAK,IAAIC,IAAI,IAAID,CAAC,KAAKA,CAAC,GAAG,CAAC,CAAC,CAAC,EAC5B,IAAId,YAAY,CAACgB,IAAI,CAACF,CAAC,EAAEC,IAAI,CAAC,EAC5BV,eAAe,CAACQ,CAAC,EAAEE,IAAI,EAAED,CAAC,CAACC,IAAI,CAAC,CAAC;EACrC,IAAIjB,mBAAmB,EACrB,KAAK,IAAIiB,IAAI,IAAIjB,mBAAmB,CAACgB,CAAC,CAAC,EAAE;IACvC,IAAIX,YAAY,CAACa,IAAI,CAACF,CAAC,EAAEC,IAAI,CAAC,EAC5BV,eAAe,CAACQ,CAAC,EAAEE,IAAI,EAAED,CAAC,CAACC,IAAI,CAAC,CAAC;EACrC;EACF,OAAOF,CAAC;AACV,CAAC;AACD,IAAII,aAAa,GAAGA,CAACJ,CAAC,EAAEC,CAAC,KAAKpB,UAAU,CAACmB,CAAC,EAAEjB,iBAAiB,CAACkB,CAAC,CAAC,CAAC;;AAEjE;AACA,SACEI,WAAW,EACXC,SAAS,EACTC,gBAAgB,EAChBC,eAAe,EACfC,QAAQ,EACRC,MAAM,EACNC,SAAS,EACTC,gBAAgB,EAChBC,cAAc,EACdC,cAAc,QACT,oBAAoB;AAC3B,SAASC,EAAE,QAAQ,eAAe;AAClC,SAASC,UAAU,QAAQ,gBAAgB;AAC3C,OAAOC,iBAAiB,MAAM,qBAAqB;AACnD,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,SACEC,gBAAgB,EAChBC,YAAY,EACZC,WAAW,EACXC,YAAY,EACZC,YAAY,EACZC,aAAa,EACbC,cAAc,EACdC,YAAY,QACP,aAAa;AACpB,IAAI;EAAEC,aAAa;EAAEC,YAAY;EAAEC;AAAM,CAAC,GAAGb,UAAU;AACvD,IAAIc,WAAW,GAAG,MAAM;EACtBC,WAAWA,CAACC,MAAM,EAAEC,OAAO,EAAEC,OAAO,EAAE;IACpC,IAAI,CAACF,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACC,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACC,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACC,SAAS,GAAG,KAAK;IACtB,IAAI,CAACC,QAAQ,GAAG,CAAC,CAAC;IAClB,IAAI,CAACC,aAAa,GAAG,EAAE;IACvB,MAAM;MAAEC,EAAE;MAAEC,EAAE;MAAEC,UAAU;MAAEJ,QAAQ;MAAEK,KAAK;MAAEC,QAAQ;MAAEC;IAAsC,CAAC,GAAGV,OAAO;IACxG,IAAI,CAACA,OAAO,GAAGA,OAAO;IACtB,MAAMW,oCAAoC,GAAGD,qCAAqC,GAAG,EAAE,GAAG,IAAI,CAACT,OAAO,CAAC,gBAAgB,CAAC,KAAKpB,cAAc,CAAC+B,UAAU,GAAG,wCAAwC,GAAG,EAAE;IACtM,IAAI,CAACC,OAAO,GAAGZ,OAAO,CAACa,WAAW,CAACC,aAAa,CAAC;MAC/CC,MAAM,EAAE;QACNC,IAAI,EAAEZ;MACR,CAAC;MACDa,QAAQ,EAAE;QACRD,IAAI,EAAEX,EAAE;QACRa,WAAW,EAAGC,GAAG,IAAKT,oCAAoC,GAAGS;MAC/D;IACF,CAAC,CAAC;IACF,IAAIjB,QAAQ,EAAE;MACZ,IAAI,CAACA,QAAQ,GAAG,IAAI,CAACkB,eAAe,CAAClB,QAAQ,CAAC;IAChD;IACA,MAAMmB,uBAAuB,GAAG,EAAE;IAClC,IAAIC,aAAa,GAAG,CAAC;IACrB7E,MAAM,CAAC8E,IAAI,CAACjB,UAAU,CAAC,CAACkB,OAAO,CAAEC,IAAI,IAAK;MACxC,MAAMC,SAAS,GAAGpB,UAAU,CAACmB,IAAI,CAAC;MAClC,MAAME,MAAM,GAAGD,SAAS,CAACE,GAAG,CAAC,CAAC;MAC9B,IAAI,CAACzB,aAAa,CAAC0B,IAAI,CAACF,MAAM,CAACC,GAAG,CAAC,CAAC,CAAC;MACrC,MAAM;QACJE,MAAM,GAAG,CAAC;QACVC,MAAM,GAAG,CAAC;QACV;QACAC,IAAI,GAAG,CAAC;QACRC,OAAO,GAAG,CAAC;QACXC,cAAc,GAAG;MACnB,CAAC,GAAGR,SAAS,CAAC,WAAW,CAAC;MAC1BL,uBAAuB,CAACQ,IAAI,CAAC;QAC3BM,WAAW,EAAEJ,MAAM,IAAIC,IAAI,GAAG,CAAC;QAC/B;QACAI,QAAQ,EAAEzD,cAAc,CAAC0D,MAAM;QAC/B/B,UAAU,EAAE,CACV;UACEgC,MAAM,EAAEhD,aAAa,CAAC0C,IAAI,CAAC;UAC3BE,cAAc;UACdJ,MAAM;UACNG;QACF,CAAC;MAEL,CAAC,CAAC;MACFX,aAAa,GAAGK,MAAM,CAAC,MAAM,CAAC,GAAGK,IAAI;IACvC,CAAC,CAAC;IACF,IAAI,CAACzB,KAAK,EAAE;MACV,IAAI,CAACR,OAAO,CAACQ,KAAK,GAAGe,aAAa;IACpC;IACA,IAAId,QAAQ,EAAE;MACZ,IAAI,CAAC+B,WAAW,GAAG/B,QAAQ,CAACoB,GAAG,CAAC,CAAC;IACnC;IACA,MAAMY,WAAW,GAAGxC,OAAO,CAACa,WAAW,CAAC4B,iBAAiB,CAAC;MACxDpB,uBAAuB;MACvBqB,iBAAiB,EAAElC,QAAQ,GAAGhC,MAAM,CAACmE,KAAK,GAAG,IAAI;MACjD/B,OAAO,EAAE,IAAI,CAACA;IAChB,CAAC,CAAC;IACF,IAAI,CAAC4B,WAAW,GAAGA,WAAW;IAC9B,IAAI,CAACI,QAAQ,GAAG,IAAI,CAACC,cAAc,CAAC9C,OAAO,CAAC;EAC9C;EACA8C,cAAcA,CAAC9C,OAAO,EAAE+C,IAAI,EAAE;IAC5B,IAAIC,EAAE;IACN,MAAM;MAAEC,SAAS,GAAGnE,EAAE,CAACoE,SAAS;MAAEC,KAAK;MAAEC,IAAI;MAAEC,KAAK;MAAEC;IAAQ,CAAC,GAAGtD,OAAO;IACzE,MAAMuD,WAAW,GAAG,IAAI,CAACC,mBAAmB,CAAC;MAAEL;IAAM,CAAC,CAAC;IACvD,MAAMM,YAAY,GAAG,CAAC,EAAEF,WAAW,IAAIA,WAAW,CAACG,MAAM,CAAC;IAC1D,MAAMC,UAAU,GAAG,IAAI,CAACC,kBAAkB,CAAC;MAAER;IAAK,CAAC,CAAC;IACpD,MAAMS,WAAW,GAAG,CAAC,EAAEF,UAAU,IAAIA,UAAU,CAACD,MAAM,CAAC;IACvD,MAAMI,WAAW,GAAG,IAAI,CAACC,kBAAkB,CAAC;MAAEV;IAAM,CAAC,CAAC;IACtD,MAAMW,YAAY,GAAG,CAAC,EAAEF,WAAW,IAAIA,WAAW,CAACJ,MAAM,CAAC;IAC1D,MAAMO,aAAa,GAAG,IAAI,CAACC,oBAAoB,CAAC;MAAEZ;IAAQ,CAAC,CAAC;IAC5D,MAAMa,cAAc,GAAG,CAAC,EAAEF,aAAa,IAAIA,aAAa,CAACP,MAAM,CAAC;IAChE,MAAMb,QAAQ,GAAG,IAAI,CAAC9C,MAAM,CAACqE,oBAAoB,CAAC;MAChD3B,WAAW,EAAE,IAAI,CAACA,WAAW;MAC7B5B,OAAO,EAAE,IAAI,CAACA,OAAO;MACrBwD,QAAQ,EAAE/E,YAAY,CAAC2D,SAAS,CAAC;MACjCqB,sBAAsB,EAAE,CAAC7F,MAAM,CAAC8F,UAAU,CAAC;MAC3CC,4BAA4B,EAAE/F,MAAM,CAACgG,MAAM;MAC3CC,mBAAmB,EAAE;QACnBC,gBAAgB,EAAE,CAChB5B,IAAI,GAAG;UACL6B,gBAAgB,EAAEtG,gBAAgB,CAACuG,GAAG;UACtCC,aAAa,EAAE;YACbC,SAAS,EAAE1G,SAAS,CAAC2G,GAAG;YACxBC,cAAc,EAAE7G,WAAW,CAAC8G,GAAG;YAC/BC,cAAc,EAAE/G,WAAW,CAACgH;UAC9B,CAAC;UACDC,eAAe,EAAE;YACfN,SAAS,EAAE1G,SAAS,CAAC2G,GAAG;YACxBC,cAAc,EAAE7G,WAAW,CAAC8G,GAAG;YAC/BC,cAAc,EAAE/G,WAAW,CAACgH;UAC9B;QACF,CAAC,GAAG;UACFR,gBAAgB,EAAET,cAAc,IAAIF,aAAa,CAACqB,OAAO,CAACC,KAAK,KAAK7G,SAAS,CAAC8G,OAAO,GAAGlH,gBAAgB,CAACmH,IAAI,GAAGnH,gBAAgB,CAACuG,GAAG;UACpIC,aAAa,EAAE;YACbC,SAAS,EAAEf,YAAY,IAAIF,WAAW,CAAC4B,QAAQ,CAACC,GAAG,IAAItH,SAAS,CAAC2G,GAAG;YACpEC,cAAc,EAAEjB,YAAY,IAAIF,WAAW,CAAC8B,IAAI,CAACC,MAAM,IAAIzH,WAAW,CAAC0H,SAAS;YAChFX,cAAc,EAAEnB,YAAY,IAAIF,WAAW,CAAC8B,IAAI,CAACG,MAAM,IAAI3H,WAAW,CAAC4H;UACzE,CAAC;UACDX,eAAe,EAAE;YACfN,SAAS,EAAEf,YAAY,IAAIF,WAAW,CAAC4B,QAAQ,CAACO,KAAK,IAAI5H,SAAS,CAAC2G,GAAG;YACtEC,cAAc,EAAEjB,YAAY,IAAIF,WAAW,CAAC8B,IAAI,CAACM,QAAQ,IAAI9H,WAAW,CAAC8G,GAAG;YAC5EC,cAAc,EAAEnB,YAAY,IAAIF,WAAW,CAAC8B,IAAI,CAACO,QAAQ,IAAI/H,WAAW,CAAC8G;UAC3E;QACF,CAAC,CACF;QACDkB,aAAa,EAAEpC,YAAY,GAAGrF,gBAAgB,GAAG,KAAK,CAAC;QACvD0H,UAAU,EAAE5C,YAAY;QACxB6C,YAAY,EAAE7C,YAAY,IAAIF,WAAW,CAACqC,IAAI,IAAIrH,eAAe,CAACgI,IAAI;QACtEC,QAAQ,EAAE3C,WAAW,IAAIF,UAAU,CAAC8C,IAAI,IAAIjI,QAAQ,CAACiH,IAAI;QACzDiB,YAAY,EAAEvC,cAAc;QAC5BwC,YAAY,EAAE;UACZC,OAAO,EAAEzC,cAAc,GAAGF,aAAa,CAAC2B,IAAI,CAACiB,GAAG,GAAGtI,eAAe,CAACuI,MAAM;UACzEC,MAAM,EAAE9C,aAAa,CAACqB,OAAO,CAACC,KAAK;UACnCyB,MAAM,EAAE/C,aAAa,CAACqB,OAAO,CAAC2B,IAAI;UAClCC,WAAW,EAAEjD,aAAa,CAACqB,OAAO,CAAC6B,KAAK;UACxCC,IAAI,EAAEnD,aAAa,CAACqB,OAAO,CAAC8B;QAC9B,CAAC;QACDC,WAAW,EAAE;UACXT,OAAO,EAAEzC,cAAc,GAAGF,aAAa,CAAC2B,IAAI,CAACiB,GAAG,GAAGtI,eAAe,CAACuI,MAAM;UACzEC,MAAM,EAAE9C,aAAa,CAACqD,MAAM,CAAC/B,KAAK;UAClCyB,MAAM,EAAE/C,aAAa,CAACqD,MAAM,CAACL,IAAI;UACjCC,WAAW,EAAEjD,aAAa,CAACqD,MAAM,CAACH,KAAK;UACvCC,IAAI,EAAEnD,aAAa,CAACqD,MAAM,CAACF;QAC7B;MACF;IACF,CAAC,CAAC;IACF,IAAIjD,cAAc,IAAI,CAACvE,KAAK,CAAC,CAACoD,EAAE,GAAGM,OAAO,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,OAAO,CAACsC,IAAI,KAAK,IAAI,GAAG,KAAK,CAAC,GAAG5C,EAAE,CAACuE,GAAG,CAAC,EAAE;MACtG1E,QAAQ,CAAC2E,oBAAoB,GAAGlE,OAAO,CAACsC,IAAI,CAAC2B,GAAG;IAClD;IACA,OAAO1E,QAAQ;EACjB;EACA4E,2BAA2BA,CAAA,EAAG,CAC9B;EACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEC,gBAAgBA,CAAA,EAAG,CACnB;EACAC,WAAWA,CAACxH,QAAQ,EAAE;IACpB,IAAI,CAACA,QAAQ,GAAGrC,cAAc,CAACA,cAAc,CAAC,CAAC,CAAC,EAAE,IAAI,CAACqC,QAAQ,CAAC,EAAE,IAAI,CAACkB,eAAe,CAAClB,QAAQ,CAAC,CAAC;EACnG;EACAyH,IAAIA,CAAC5H,OAAO,EAAE+C,IAAI,EAAE;IAClB,MAAM8E,aAAa,GAAG/J,cAAc,CAACA,cAAc,CAAC,CAAC,CAAC,EAAE,IAAI,CAACkC,OAAO,CAAC,EAAEA,OAAO,CAAC;IAC/E,MAAM;MACJQ,KAAK,GAAG,CAAC;MACTsH,SAAS;MACTrH,QAAQ;MACRN,QAAQ,GAAG,CAAC,CAAC;MACb4H,cAAc;MACdC;IACF,CAAC,GAAGH,aAAa;IACjB,IAAI,CAAC1H,QAAQ,GAAGrC,cAAc,CAACA,cAAc,CAAC,CAAC,CAAC,EAAE,IAAI,CAACqC,QAAQ,CAAC,EAAE,IAAI,CAACkB,eAAe,CAAClB,QAAQ,CAAC,CAAC;IACjG,MAAM;MAAE8H,UAAU;MAAEC,kBAAkB;MAAEC,KAAK;MAAEC;IAAO,CAAC,GAAG,IAAI,CAACnI,OAAO;IACtE,IAAI,CAAC4C,QAAQ,GAAG,IAAI,CAACC,cAAc,CAAC+E,aAAa,EAAE9E,IAAI,CAAC;IACxD,MAAMhD,MAAM,GAAG,IAAI,CAACE,OAAO,CAAC,QAAQ,CAAC;IACrC,MAAMoI,SAAS,GAAGtI,MAAM,CAAC,iBAAiB,CAAC;IAC3CA,MAAM,CAAC,iBAAiB,CAAC,GAAG,CAACmI,kBAAkB,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,kBAAkB,CAAC,QAAQ,CAAC,KAAKE,MAAM;IAC1GH,UAAU,CAACK,WAAW,CACpB,CAAC,EACD,CAAC,EACD,CAACJ,kBAAkB,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,kBAAkB,CAAC,OAAO,CAAC,KAAKC,KAAK,EAC5E,CAACD,kBAAkB,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,kBAAkB,CAAC,QAAQ,CAAC,KAAKE,MAC1E,CAAC;IACDrI,MAAM,CAAC,iBAAiB,CAAC,GAAGsI,SAAS;IACrCJ,UAAU,CAACM,WAAW,CAAC,IAAI,CAAC1F,QAAQ,CAAC;IACrC,IAAI,CAACjD,KAAK,CAAC,IAAI,CAACiD,QAAQ,CAAC2E,oBAAoB,CAAC,EAAE;MAC9CS,UAAU,CAACO,mBAAmB,CAAC,IAAI,CAAC3F,QAAQ,CAAC2E,oBAAoB,CAAC;IACpE;IACAS,UAAU,CAACQ,cAAc,CACvB,IAAI,CAAChG,WAAW,EAChB,IAAI,CAACrC,aAAa,CAACsI,GAAG,CAAE9G,MAAM,KAAM;MAClCA;IACF,CAAC,CAAC,CAAC,EACHnB,QAAQ,GAAG;MACTmB,MAAM,EAAE,IAAI,CAACY,WAAW;MACxBT,MAAM,EAAE;IACV,CAAC,GAAG,IACN,CAAC;IACD,IAAIgG,cAAc,EAAE;MAClB,IAAI,CAACY,QAAQ,GAAG5I,MAAM,CAAC6I,cAAc,CAAC;QACpC/F,QAAQ,EAAE,IAAI,CAACA,QAAQ;QACvBgG,qBAAqB,EAAEd,cAAc,CAACW,GAAG,CAAC,CAACI,aAAa,EAAEC,CAAC,KAAK;UAC9D,MAAMnH,MAAM,GAAGkH,aAAa;UAC5B,OAAO;YACLE,OAAO,EAAED,CAAC;YACVnH,MAAM,EAAEA,MAAM,CAACC,GAAG,CAAC,CAAC;YACpBI,IAAI,EAAEL,MAAM,CAAC,MAAM;UACrB,CAAC;QACH,CAAC,CAAC;QACFqH,eAAe,EAAEjB,QAAQ,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,QAAQ,CAACU,GAAG,CAAEQ,CAAC,KAAM;UAChEC,OAAO,EAAED,CAAC,CAAC,SAAS,CAAC;UACrBE,OAAO,EAAEF,CAAC,CAAC,SAAS;QACtB,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ;IACA,IAAI,IAAI,CAACP,QAAQ,EAAE;MACjBV,UAAU,CAACoB,WAAW,CAAC,IAAI,CAACV,QAAQ,CAAC;MACrCjM,MAAM,CAAC8E,IAAI,CAAC,IAAI,CAACrB,QAAQ,CAAC,CAACsB,OAAO,CAAE6H,WAAW,IAAK;QAClD,MAAMC,OAAO,GAAG,IAAI,CAACpJ,QAAQ,CAACmJ,WAAW,CAAC;QAC1C,IAAIC,OAAO,YAAYtK,eAAe,EAAE;UACtC,IAAI,CAACkB,QAAQ,CAACmJ,WAAW,CAAC,GAAGC,OAAO,CAAC1H,GAAG,CAAC,CAAC;QAC5C,CAAC,MAAM,IAAI0H,OAAO,YAAYvK,iBAAiB,EAAE;UAC/C,IAAI,CAACmB,QAAQ,CAACmJ,WAAW,CAAC,GAAGC,OAAO,CAAC1H,GAAG,CAAC,CAAC,CAAC,SAAS,CAAC;QACvD;MACF,CAAC,CAAC;MACF,IAAI,CAAChB,OAAO,CAAC2I,iBAAiB,CAAC,IAAI,CAACrJ,QAAQ,CAAC;IAC/C;IACA,IAAIM,QAAQ,EAAE;MACZ,MAAMgJ,UAAU,GAAGhJ,QAAQ,CAAC,OAAO,CAAC;MACpC,IAAIgJ,UAAU,KAAK,CAAC,EAAE;QACpBxB,UAAU,CAACL,IAAI,CAACpH,KAAK,EAAEsH,SAAS,CAAC;MACnC,CAAC,MAAM;QACLG,UAAU,CAACyB,WAAW,CAACD,UAAU,EAAE3B,SAAS,CAAC;MAC/C;IACF,CAAC,MAAM;MACLG,UAAU,CAACL,IAAI,CAACpH,KAAK,EAAEsH,SAAS,CAAC;IACnC;EACF;EACA6B,OAAOA,CAAA,EAAG;IACR,IAAI3G,EAAE,EAAE4G,EAAE,EAAEC,EAAE;IACd,CAAC7G,EAAE,GAAG,IAAI,CAAC5C,aAAa,KAAK,IAAI,GAAG,KAAK,CAAC,GAAG4C,EAAE,CAACvB,OAAO,CAAEG,MAAM,IAAKA,MAAM,CAAC+H,OAAO,CAAC,CAAC,CAAC;IACrF,CAACC,EAAE,GAAG,IAAI,CAACpH,WAAW,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGoH,EAAE,CAACD,OAAO,CAAC,CAAC;IACvD,CAACE,EAAE,GAAG,IAAI,CAAClB,QAAQ,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGkB,EAAE,CAACF,OAAO,CAAC,CAAC;IACpD,IAAI,CAAC9G,QAAQ,CAAC8G,OAAO,CAAC,CAAC;IACvB,IAAI,CAACzJ,SAAS,GAAG,IAAI;EACvB;EACAsD,mBAAmBA,CAAC;IAAEL;EAAM,CAAC,EAAE;IAC7B,IAAIA,KAAK,EAAE;MACT,OAAO;QACLO,MAAM,EAAEP,KAAK,CAACO,MAAM,KAAK,KAAK,CAAC,GAAG,IAAI,GAAG,CAAC,CAACP,KAAK,CAACO,MAAM;QACvD0D,IAAI,EAAEjE,KAAK,CAACiE,IAAI,KAAK,KAAK,CAAC,GAAG,IAAI,GAAG,CAAC,CAACjE,KAAK,CAACiE,IAAI;QACjDxB,IAAI,EAAEvG,YAAY,CAAC8D,KAAK,CAACyC,IAAI,IAAI9G,EAAE,CAACyH,IAAI,CAAC;QACzCuD,KAAK,EAAE3G,KAAK,CAAC2G,KAAK,IAAI,CAAC,CAAC,EAAE,CAAC;MAC7B,CAAC;IACH;EACF;EACA/F,kBAAkBA,CAAC;IAAEV;EAAM,CAAC,EAAE;IAC5B,MAAM;MAAEK,MAAM;MAAEkC,IAAI;MAAEF,QAAQ;MAAEqE,KAAK,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;IAAE,CAAC,GAAG1G,KAAK,IAAI,CAAC,CAAC;IACpE,OAAO;MACLK,MAAM,EAAE,CAAC,CAACA,MAAM;MAChBkC,IAAI,EAAE;QACJC,MAAM,EAAE1G,YAAY,CAACyG,IAAI,IAAIA,IAAI,CAACC,MAAM,IAAI/G,EAAE,CAACgH,SAAS,CAAC;QACzDI,QAAQ,EAAE/G,YAAY,CAACyG,IAAI,IAAIA,IAAI,CAACM,QAAQ,IAAIpH,EAAE,CAACgH,SAAS,CAAC;QAC7DC,MAAM,EAAE5G,YAAY,CAACyG,IAAI,IAAIA,IAAI,CAACG,MAAM,IAAIjH,EAAE,CAACkH,mBAAmB,CAAC;QACnEG,QAAQ,EAAEhH,YAAY,CAACyG,IAAI,IAAIA,IAAI,CAACO,QAAQ,IAAIrH,EAAE,CAACkH,mBAAmB;MACxE,CAAC;MACDN,QAAQ,EAAE;QACRC,GAAG,EAAEzG,gBAAgB,CAACwG,QAAQ,IAAIA,QAAQ,CAACC,GAAG,IAAI7G,EAAE,CAACkL,QAAQ,CAAC;QAC9D/D,KAAK,EAAE/G,gBAAgB,CAACwG,QAAQ,IAAIA,QAAQ,CAACO,KAAK,IAAInH,EAAE,CAACkL,QAAQ;MACnE,CAAC;MACDD;IACF,CAAC;EACH;EACA;AACF;AACA;EACE7F,oBAAoBA,CAAC;IAAEZ;EAAQ,CAAC,EAAE;IAChC,MAAM;MACJI,MAAM;MACN0D,IAAI,GAAG,UAAU;MACjBxB,IAAI,GAAG;QACLiB,GAAG,EAAE/H,EAAE,CAACgI,MAAM;QACdS,GAAG,EAAE,CAAC;QACNH,IAAI,EAAE;MACR,CAAC;MACD9B,OAAO,GAAG;QACR2B,IAAI,EAAEnI,EAAE,CAACmL,IAAI;QACb9C,KAAK,EAAErI,EAAE,CAACmL,IAAI;QACd1E,KAAK,EAAEzG,EAAE,CAACmL;MACZ,CAAC;MACD3C,MAAM,GAAG;QACPL,IAAI,EAAEnI,EAAE,CAACmL,IAAI;QACb9C,KAAK,EAAErI,EAAE,CAACmL,IAAI;QACd1E,KAAK,EAAEzG,EAAE,CAACmL;MACZ;IACF,CAAC,GAAG3G,OAAO,IAAI,CAAC,CAAC;IACjB,OAAO;MACLI,MAAM,EAAE,CAAC,CAACA,MAAM;MAChB0D,IAAI;MACJxB,IAAI,EAAEzH,aAAa,CAACL,cAAc,CAAC,CAAC,CAAC,EAAE8H,IAAI,CAAC,EAAE;QAC5CiB,GAAG,EAAErH,cAAc,CAACoG,IAAI,CAACiB,GAAG;MAC9B,CAAC,CAAC;MACFvB,OAAO,EAAE;QACP2B,IAAI,EAAExH,YAAY,CAAC6F,OAAO,CAAC2B,IAAI,CAAC;QAChCE,KAAK,EAAE1H,YAAY,CAAC6F,OAAO,CAAC6B,KAAK,CAAC;QAClC5B,KAAK,EAAE9F,YAAY,CAAC6F,OAAO,CAACC,KAAK,CAAC;QAClC6B,IAAI,EAAExB,IAAI,CAACwB;MACb,CAAC;MACDE,MAAM,EAAE;QACNL,IAAI,EAAExH,YAAY,CAAC6H,MAAM,CAACL,IAAI,CAAC;QAC/BE,KAAK,EAAE1H,YAAY,CAAC6H,MAAM,CAACH,KAAK,CAAC;QACjC5B,KAAK,EAAE9F,YAAY,CAAC6H,MAAM,CAAC/B,KAAK,CAAC;QACjC6B,IAAI,EAAExB,IAAI,CAACwB;MACb;IACF,CAAC;EACH;EACA;AACF;AACA;EACExD,kBAAkBA,CAAC;IAAER;EAAK,CAAC,EAAE;IAC3B,IAAIA,IAAI,EAAE;MACR,MAAM;QAAEM,MAAM;QAAE+C,IAAI,GAAG3H,EAAE,CAACoL;MAAK,CAAC,GAAG9G,IAAI;MACvC,OAAO;QACLM,MAAM,EAAE,CAAC,CAACA,MAAM;QAChB+C,IAAI,EAAErH,WAAW,CAACqH,IAAI;MACxB,CAAC;IACH;EACF;EACA;AACF;AACA;AACA;AACA;EACEpF,eAAeA,CAAClB,QAAQ,EAAE;IACxB,MAAMgK,iBAAiB,GAAG,CAAC,CAAC;IAC5BzN,MAAM,CAAC8E,IAAI,CAACrB,QAAQ,CAAC,CAACsB,OAAO,CAAE6H,WAAW,IAAK;MAC7C,IAAI,CAACc,0BAA0B,CAACd,WAAW,EAAEnJ,QAAQ,CAACmJ,WAAW,CAAC,EAAEa,iBAAiB,EAAE,EAAE,CAAC;IAC5F,CAAC,CAAC;IACF,OAAOA,iBAAiB;EAC1B;EACAC,0BAA0BA,CAACd,WAAW,EAAEe,YAAY,EAAElK,QAAQ,EAAEmK,MAAM,EAAE;IACtE,IAAID,YAAY,KAAK,IAAI,IAAI,OAAOA,YAAY,KAAK,QAAQ;IAAI;IACjE,OAAOA,YAAY,KAAK,SAAS;IAAI;IACrCE,KAAK,CAACC,OAAO,CAACH,YAAY,CAAC,IAAI,OAAOA,YAAY,CAAC,CAAC,CAAC,KAAK,QAAQ;IAAI;IACtE1K,YAAY,CAAC0K,YAAY,CAAC;IAAI;IAC9B;IACAA,YAAY,KAAK,EAAE,IAAI,QAAQ,IAAIA,YAAY,EAAE;MAC/ClK,QAAQ,CAAC,GAAGmK,MAAM,IAAIA,MAAM,GAAG,GAAG,GAAGhB,WAAW,EAAE,CAAC,GAAGe,YAAY;MAClE;IACF;IACA,IAAI3K,aAAa,CAAC2K,YAAY,CAAC,EAAE;MAC/B3N,MAAM,CAAC8E,IAAI,CAAC6I,YAAY,CAAC,CAAC5I,OAAO,CAAEgJ,SAAS,IAAK;QAC/C,IAAI,CAACL,0BAA0B,CAC7BK,SAAS;QACT;QACAJ,YAAY,CAACI,SAAS,CAAC,EACvBtK,QAAQ,EACR,GAAGmK,MAAM,IAAIA,MAAM,GAAG,GAAG,GAAGhB,WAAW,EACzC,CAAC;MACH,CAAC,CAAC;IACJ;IACA,IAAIiB,KAAK,CAACC,OAAO,CAACH,YAAY,CAAC,EAAE;MAC/BA,YAAY,CAAC5I,OAAO,CAAC,CAACiJ,KAAK,EAAEC,GAAG,KAAK;QACnCjO,MAAM,CAAC8E,IAAI,CAACkJ,KAAK,CAAC,CAACjJ,OAAO,CAAEgJ,SAAS,IAAK;UACxC,IAAI,CAACL,0BAA0B,CAC7BK,SAAS;UACT;UACAC,KAAK,CAACD,SAAS,CAAC,EAChBtK,QAAQ,EACR,GAAGmK,MAAM,IAAIA,MAAM,GAAG,GAAG,GAAGhB,WAAW,IAAIqB,GAAG,GAChD,CAAC;QACH,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ;EACF;AACF,CAAC;AACD,SACE9K,WAAW,IAAI+K,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}