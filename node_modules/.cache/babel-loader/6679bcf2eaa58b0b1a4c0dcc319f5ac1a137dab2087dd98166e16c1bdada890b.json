{"ast":null,"code":"import { __awaiter, __decorate, __metadata } from \"tslib\";\nimport { inject, injectable, postConstruct } from 'mana-syringe';\nimport { ICommandHandler, ICommandContextProvider } from '../../command/interface';\nimport { XFlowEdgeCommands } from '../constant';\nexport var NsHighlightEdge;\n(function (NsHighlightEdge) {\n  NsHighlightEdge.command = XFlowEdgeCommands.HIGHLIGHT_EDGE;\n  NsHighlightEdge.hookKey = 'highlightEdge';\n})(NsHighlightEdge || (NsHighlightEdge = {}));\nlet HighlightEdgeCommand = class HighlightEdgeCommand {\n  constructor() {\n    this.execute = () => __awaiter(this, void 0, void 0, function* () {\n      const {\n        args,\n        hooks: runtimeHook\n      } = this.ctx.getArgs();\n      const hooks = this.ctx.getHooks();\n      const result = yield hooks.highlightEdge.call(args, handlerArgs => __awaiter(this, void 0, void 0, function* () {\n        var _a, _b;\n        const x6Graph = yield this.ctx.getX6Graph();\n        const {\n          edgeId,\n          strokeColor,\n          strokeWidth\n        } = handlerArgs;\n        const allEdges = x6Graph.getEdges();\n        /** 需要高亮的连线 */\n        const highlightEdge = allEdges.find(edge => edge.id === edgeId);\n        /** 不需要高亮的连线 */\n        const otherEdges = allEdges.filter(edge => edge.id !== edgeId);\n        if (!highlightEdge) {\n          console.error(edgeId, 'this edgeId is not exist');\n        } else {\n          const oldAttr = highlightEdge.getAttrs();\n          if (((_a = oldAttr === null || oldAttr === void 0 ? void 0 : oldAttr.line) === null || _a === void 0 ? void 0 : _a.stroke) === strokeColor && ((_b = oldAttr === null || oldAttr === void 0 ? void 0 : oldAttr.line) === null || _b === void 0 ? void 0 : _b.strokeWidth) === strokeWidth) {\n            /** 连线已经高亮, 不需要重复操作 */\n          } else {\n            /** 高亮选中的连线 */\n            highlightEdge === null || highlightEdge === void 0 ? void 0 : highlightEdge.setAttrs({\n              line: {\n                stroke: strokeColor,\n                strokeWidth: strokeWidth || 2\n              }\n            });\n            /** 其余连线取消高亮状态 */\n            otherEdges.forEach(edge => {\n              edge.setAttrs({\n                line: oldAttr === null || oldAttr === void 0 ? void 0 : oldAttr.line\n              });\n            });\n            /** 高亮的连线默认前置在画布最前方 */\n            handlerArgs.commandService.executeCommand(XFlowEdgeCommands.FRONT_EDGE.id, {\n              edgeId\n            });\n          }\n        }\n        return {};\n      }), runtimeHook);\n      this.ctx.setResult(result);\n      return this;\n    });\n    this.undo = () => __awaiter(this, void 0, void 0, function* () {\n      this.ctx.undo();\n      return this;\n    });\n    this.redo = () => __awaiter(this, void 0, void 0, function* () {\n      if (!this.ctx.isUndoable) {\n        yield this.execute();\n      }\n      return this;\n    });\n  }\n  init() {\n    this.ctx = this.contextProvider();\n  }\n  isUndoable() {\n    return this.ctx.isUndoable();\n  }\n};\n__decorate([inject(ICommandContextProvider), __metadata(\"design:type\", Object)], HighlightEdgeCommand.prototype, \"contextProvider\", void 0);\n__decorate([postConstruct(), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", []), __metadata(\"design:returntype\", void 0)], HighlightEdgeCommand.prototype, \"init\", null);\nHighlightEdgeCommand = __decorate([injectable({\n  token: {\n    token: ICommandHandler,\n    named: NsHighlightEdge.command.id\n  }\n})\n/** 连线高亮 */], HighlightEdgeCommand);\nexport { HighlightEdgeCommand };","map":{"version":3,"names":["inject","injectable","postConstruct","ICommandHandler","ICommandContextProvider","XFlowEdgeCommands","NsHighlightEdge","command","HIGHLIGHT_EDGE","hookKey","HighlightEdgeCommand","constructor","execute","__awaiter","args","hooks","runtimeHook","ctx","getArgs","getHooks","result","highlightEdge","call","handlerArgs","x6Graph","getX6Graph","edgeId","strokeColor","strokeWidth","allEdges","getEdges","find","edge","id","otherEdges","filter","console","error","oldAttr","getAttrs","_a","line","stroke","_b","setAttrs","forEach","commandService","executeCommand","FRONT_EDGE","setResult","undo","redo","isUndoable","init","contextProvider","__decorate","token","named"],"sources":["../../../src/command-contributions/edge/edge-highlight.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}