{"ast":null,"code":"import { ToolsView } from '../../view/tool';\nimport { Point } from '../../geometry';\nimport { Dom, FunctionExt } from '../../util';\nexport class CellEditor extends ToolsView.ToolItem {\n  constructor() {\n    super(...arguments);\n    this.labelIndex = -1;\n    this.distance = 0.5;\n  }\n  render() {\n    this.createElement();\n    this.updateEditor();\n    this.autoFocus();\n    this.delegateDocumentEvents(this.options.documentEvents);\n    return this;\n  }\n  createElement() {\n    const {\n      cell\n    } = this;\n    const classNames = [this.prefixClassName(`${cell.isEdge() ? 'edge' : 'node'}-tool-editor`), this.prefixClassName('cell-tool-editor')];\n    this.editor = ToolsView.createElement('div', false);\n    this.addClass(classNames, this.editor);\n    this.editor.contentEditable = 'true';\n    this.container.appendChild(this.editor);\n  }\n  updateEditor() {\n    const {\n      graph,\n      cell,\n      editor\n    } = this;\n    const style = editor.style;\n    // set tool position\n    let pos = new Point();\n    let minWidth = 20;\n    if (cell.isNode()) {\n      pos = cell.getBBox().center;\n      minWidth = cell.size().width - 4;\n    } else if (cell.isEdge()) {\n      const e = this.options.event;\n      const target = e.target;\n      const parent = target.parentElement;\n      const isEdgeLabel = parent && Dom.hasClass(parent, this.prefixClassName('edge-label'));\n      if (isEdgeLabel) {\n        const index = parent.getAttribute('data-index') || '0';\n        this.labelIndex = parseInt(index, 10);\n        const matrix = parent.getAttribute('transform');\n        const {\n          translation\n        } = Dom.parseTransformString(matrix);\n        pos = new Point(translation.tx, translation.ty);\n        minWidth = Dom.getBBox(target).width;\n      } else {\n        if (!this.options.labelAddable) {\n          return this;\n        }\n        pos = graph.clientToLocal(Point.create(e.clientX, e.clientY));\n        const view = this.cellView;\n        const d = view.path.closestPointLength(pos);\n        this.distance = d;\n      }\n    }\n    pos = graph.localToGraph(pos);\n    style.left = `${pos.x}px`;\n    style.top = `${pos.y}px`;\n    style.minWidth = `${minWidth}px`;\n    // set tool transform\n    const scale = graph.scale();\n    style.transform = `scale(${scale.sx}, ${scale.sy}) translate(-50%, -50%)`;\n    // set font style\n    const attrs = this.options.attrs;\n    style.fontSize = `${attrs.fontSize}px`;\n    style.fontFamily = attrs.fontFamily;\n    style.color = attrs.color;\n    style.backgroundColor = attrs.backgroundColor;\n    // set init value\n    const getText = this.options.getText;\n    let text;\n    if (typeof getText === 'function') {\n      text = FunctionExt.call(getText, this.cellView, {\n        cell: this.cell,\n        index: this.labelIndex\n      });\n    }\n    editor.innerText = text || '';\n    return this;\n  }\n  onDocumentMouseDown(e) {\n    if (e.target !== this.editor) {\n      const cell = this.cell;\n      const value = this.editor.innerText.replace(/\\n$/, '') || '';\n      // set value\n      const setText = this.options.setText;\n      if (typeof setText === 'function') {\n        FunctionExt.call(setText, this.cellView, {\n          cell: this.cell,\n          value,\n          index: this.labelIndex,\n          distance: this.distance\n        });\n      }\n      // remove tool\n      cell.removeTool(cell.isEdge() ? 'edge-editor' : 'node-editor');\n      this.undelegateDocumentEvents();\n    }\n  }\n  onDblClick(e) {\n    e.stopPropagation();\n  }\n  onMouseDown(e) {\n    e.stopPropagation();\n  }\n  autoFocus() {\n    setTimeout(() => {\n      this.editor.focus();\n      this.selectText();\n    });\n  }\n  selectText() {\n    if (window.getSelection) {\n      const range = document.createRange();\n      const selection = window.getSelection();\n      range.selectNodeContents(this.editor);\n      selection.removeAllRanges();\n      selection.addRange(range);\n    }\n  }\n}\n(function (CellEditor) {\n  CellEditor.config({\n    tagName: 'div',\n    isSVGElement: false,\n    events: {\n      dblclick: 'onDblClick',\n      mousedown: 'onMouseDown'\n    },\n    documentEvents: {\n      mousedown: 'onDocumentMouseDown'\n    }\n  });\n})(CellEditor || (CellEditor = {}));\n(function (CellEditor) {\n  CellEditor.NodeEditor = CellEditor.define({\n    attrs: {\n      fontSize: 14,\n      fontFamily: 'Arial, helvetica, sans-serif',\n      color: '#000',\n      backgroundColor: '#fff'\n    },\n    getText({\n      cell\n    }) {\n      return cell.attr('text/text');\n    },\n    setText({\n      cell,\n      value\n    }) {\n      cell.attr('text/text', value);\n    }\n  });\n  CellEditor.EdgeEditor = CellEditor.define({\n    attrs: {\n      fontSize: 14,\n      fontFamily: 'Arial, helvetica, sans-serif',\n      color: '#000',\n      backgroundColor: '#fff'\n    },\n    labelAddable: true,\n    getText({\n      cell,\n      index\n    }) {\n      if (index === -1) {\n        return '';\n      }\n      return cell.prop(`labels/${index}/attrs/label/text`);\n    },\n    setText({\n      cell,\n      value,\n      index,\n      distance\n    }) {\n      const edge = cell;\n      if (index === -1) {\n        edge.appendLabel({\n          position: {\n            distance: distance\n          },\n          attrs: {\n            label: {\n              text: value\n            }\n          }\n        });\n      } else {\n        if (value) {\n          edge.prop(`labels/${index}/attrs/label/text`, value);\n        } else if (typeof index === 'number') {\n          edge.removeLabelAt(index);\n        }\n      }\n    }\n  });\n})(CellEditor || (CellEditor = {}));","map":{"version":3,"names":["ToolsView","Point","Dom","FunctionExt","CellEditor","ToolItem","constructor","labelIndex","distance","render","createElement","updateEditor","autoFocus","delegateDocumentEvents","options","documentEvents","cell","classNames","prefixClassName","isEdge","editor","addClass","contentEditable","container","appendChild","graph","style","pos","minWidth","isNode","getBBox","center","size","width","e","event","target","parent","parentElement","isEdgeLabel","hasClass","index","getAttribute","parseInt","matrix","translation","parseTransformString","tx","ty","labelAddable","clientToLocal","create","clientX","clientY","view","cellView","d","path","closestPointLength","localToGraph","left","x","top","y","scale","transform","sx","sy","attrs","fontSize","fontFamily","color","backgroundColor","getText","text","call","innerText","onDocumentMouseDown","value","replace","setText","removeTool","undelegateDocumentEvents","onDblClick","stopPropagation","onMouseDown","setTimeout","focus","selectText","window","getSelection","range","document","createRange","selection","selectNodeContents","removeAllRanges","addRange","config","tagName","isSVGElement","events","dblclick","mousedown","NodeEditor","define","attr","EdgeEditor","prop","edge","appendLabel","position","label","removeLabelAt"],"sources":["/Users/bhanudahiya/Desktop/ledger-IQ/node_modules/@antv/x6/src/registry/tool/editor.ts"],"sourcesContent":["import { ToolsView } from '../../view/tool'\nimport { Cell, Edge } from '../../model'\nimport { CellView, NodeView, EdgeView } from '../../view'\nimport { Point } from '../../geometry'\nimport { Dom, FunctionExt } from '../../util'\n\nexport class CellEditor extends ToolsView.ToolItem<\n  NodeView | EdgeView,\n  CellEditor.CellEditorOptions & { event: JQuery.MouseEventBase }\n> {\n  private editor: HTMLDivElement\n  private labelIndex = -1\n  private distance = 0.5\n\n  render() {\n    this.createElement()\n    this.updateEditor()\n    this.autoFocus()\n    this.delegateDocumentEvents(this.options.documentEvents!)\n\n    return this\n  }\n\n  createElement() {\n    const { cell } = this\n    const classNames = [\n      this.prefixClassName(`${cell.isEdge() ? 'edge' : 'node'}-tool-editor`),\n      this.prefixClassName('cell-tool-editor'),\n    ]\n    this.editor = ToolsView.createElement('div', false) as HTMLDivElement\n    this.addClass(classNames, this.editor)\n    this.editor.contentEditable = 'true'\n    this.container.appendChild(this.editor)\n  }\n\n  updateEditor() {\n    const { graph, cell, editor } = this\n    const style = editor.style\n\n    // set tool position\n    let pos = new Point()\n    let minWidth = 20\n    if (cell.isNode()) {\n      pos = cell.getBBox().center\n      minWidth = cell.size().width - 4\n    } else if (cell.isEdge()) {\n      const e = this.options.event\n      const target = e.target\n      const parent = target.parentElement\n      const isEdgeLabel =\n        parent && Dom.hasClass(parent, this.prefixClassName('edge-label'))\n      if (isEdgeLabel) {\n        const index = parent.getAttribute('data-index') || '0'\n        this.labelIndex = parseInt(index, 10)\n        const matrix = parent.getAttribute('transform')\n        const { translation } = Dom.parseTransformString(matrix)\n        pos = new Point(translation.tx, translation.ty)\n        minWidth = Dom.getBBox(target).width\n      } else {\n        if (!this.options.labelAddable) {\n          return this\n        }\n        pos = graph.clientToLocal(Point.create(e.clientX, e.clientY))\n        const view = this.cellView as EdgeView\n        const d = view.path.closestPointLength(pos)\n        this.distance = d\n      }\n    }\n    pos = graph.localToGraph(pos)\n    style.left = `${pos.x}px`\n    style.top = `${pos.y}px`\n    style.minWidth = `${minWidth}px`\n\n    // set tool transform\n    const scale = graph.scale()\n    style.transform = `scale(${scale.sx}, ${scale.sy}) translate(-50%, -50%)`\n\n    // set font style\n    const attrs = this.options.attrs\n    style.fontSize = `${attrs.fontSize}px`\n    style.fontFamily = attrs.fontFamily\n    style.color = attrs.color\n    style.backgroundColor = attrs.backgroundColor\n\n    // set init value\n    const getText = this.options.getText\n    let text\n    if (typeof getText === 'function') {\n      text = FunctionExt.call(getText, this.cellView, {\n        cell: this.cell,\n        index: this.labelIndex,\n      })\n    }\n    editor.innerText = text || ''\n\n    return this\n  }\n\n  onDocumentMouseDown(e: JQuery.MouseDownEvent) {\n    if (e.target !== this.editor) {\n      const cell = this.cell\n      const value = this.editor.innerText.replace(/\\n$/, '') || ''\n      // set value\n      const setText = this.options.setText\n      if (typeof setText === 'function') {\n        FunctionExt.call(setText, this.cellView, {\n          cell: this.cell,\n          value,\n          index: this.labelIndex,\n          distance: this.distance,\n        })\n      }\n      // remove tool\n      cell.removeTool(cell.isEdge() ? 'edge-editor' : 'node-editor')\n      this.undelegateDocumentEvents()\n    }\n  }\n\n  onDblClick(e: JQuery.DoubleClickEvent) {\n    e.stopPropagation()\n  }\n\n  onMouseDown(e: JQuery.MouseDownEvent) {\n    e.stopPropagation()\n  }\n\n  autoFocus() {\n    setTimeout(() => {\n      this.editor.focus()\n      this.selectText()\n    })\n  }\n\n  selectText() {\n    if (window.getSelection) {\n      const range = document.createRange()\n      const selection = window.getSelection()!\n      range.selectNodeContents(this.editor)\n      selection.removeAllRanges()\n      selection.addRange(range)\n    }\n  }\n}\n\nexport namespace CellEditor {\n  export interface CellEditorOptions extends ToolsView.ToolItem.Options {\n    attrs: {\n      fontSize: number\n      fontFamily: string\n      color: string\n      backgroundColor: string\n    }\n    labelAddable?: boolean\n    getText: (\n      this: CellView,\n      args: {\n        cell: Cell\n        index?: number\n      },\n    ) => string\n    setText: (\n      this: CellView,\n      args: {\n        cell: Cell\n        value: string\n        index?: number\n        distance?: number\n      },\n    ) => void\n  }\n}\n\nexport namespace CellEditor {\n  CellEditor.config({\n    tagName: 'div',\n    isSVGElement: false,\n    events: {\n      dblclick: 'onDblClick',\n      mousedown: 'onMouseDown',\n    },\n    documentEvents: {\n      mousedown: 'onDocumentMouseDown',\n    },\n  })\n}\n\nexport namespace CellEditor {\n  export const NodeEditor = CellEditor.define<CellEditorOptions>({\n    attrs: {\n      fontSize: 14,\n      fontFamily: 'Arial, helvetica, sans-serif',\n      color: '#000',\n      backgroundColor: '#fff',\n    },\n    getText({ cell }) {\n      return cell.attr('text/text')\n    },\n    setText({ cell, value }) {\n      cell.attr('text/text', value)\n    },\n  })\n\n  export const EdgeEditor = CellEditor.define<CellEditorOptions>({\n    attrs: {\n      fontSize: 14,\n      fontFamily: 'Arial, helvetica, sans-serif',\n      color: '#000',\n      backgroundColor: '#fff',\n    },\n    labelAddable: true,\n    getText({ cell, index }) {\n      if (index === -1) {\n        return ''\n      }\n      return cell.prop(`labels/${index}/attrs/label/text`)\n    },\n    setText({ cell, value, index, distance }) {\n      const edge = cell as Edge\n      if (index === -1) {\n        edge.appendLabel({\n          position: {\n            distance: distance!,\n          },\n          attrs: {\n            label: {\n              text: value,\n            },\n          },\n        })\n      } else {\n        if (value) {\n          edge.prop(`labels/${index}/attrs/label/text`, value)\n        } else if (typeof index === 'number') {\n          edge.removeLabelAt(index)\n        }\n      }\n    },\n  })\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}