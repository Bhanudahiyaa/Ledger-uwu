{"ast":null,"code":"// src/device/utils/HashMap.ts\nfunction hashCodeNumberUpdate(hash, v = 0) {\n  hash += v;\n  hash += hash << 10;\n  hash += hash >>> 6;\n  return hash >>> 0;\n}\nfunction hashCodeNumberFinish(hash) {\n  hash += hash << 3;\n  hash ^= hash >>> 11;\n  hash += hash << 15;\n  return hash >>> 0;\n}\nfunction nullHashFunc() {\n  return 0;\n}\nvar HashBucket = class {\n  constructor() {\n    this.keys = [];\n    this.values = [];\n  }\n};\nvar HashMap = class {\n  constructor(keyEqualFunc, keyHashFunc) {\n    this.keyEqualFunc = keyEqualFunc;\n    this.keyHashFunc = keyHashFunc;\n    this.buckets = /* @__PURE__ */new Map();\n  }\n  findBucketIndex(bucket, k) {\n    for (let i = 0; i < bucket.keys.length; i++) if (this.keyEqualFunc(k, bucket.keys[i])) return i;\n    return -1;\n  }\n  findBucket(k) {\n    const bw = this.keyHashFunc(k);\n    return this.buckets.get(bw);\n  }\n  get(k) {\n    const bucket = this.findBucket(k);\n    if (bucket === void 0) return null;\n    const bi = this.findBucketIndex(bucket, k);\n    if (bi < 0) return null;\n    return bucket.values[bi];\n  }\n  add(k, v) {\n    const bw = this.keyHashFunc(k);\n    if (this.buckets.get(bw) === void 0) this.buckets.set(bw, new HashBucket());\n    const bucket = this.buckets.get(bw);\n    bucket.keys.push(k);\n    bucket.values.push(v);\n  }\n  delete(k) {\n    const bucket = this.findBucket(k);\n    if (bucket === void 0) return;\n    const bi = this.findBucketIndex(bucket, k);\n    if (bi === -1) return;\n    bucket.keys.splice(bi, 1);\n    bucket.values.splice(bi, 1);\n  }\n  clear() {\n    this.buckets.clear();\n  }\n  size() {\n    let acc = 0;\n    for (const bucket of this.buckets.values()) acc += bucket.values.length;\n    return acc;\n  }\n  *values() {\n    for (const bucket of this.buckets.values()) for (let j = bucket.values.length - 1; j >= 0; j--) yield bucket.values[j];\n  }\n};\nexport { HashMap, hashCodeNumberFinish, hashCodeNumberUpdate, nullHashFunc };","map":{"version":3,"names":["hashCodeNumberUpdate","hash","v","hashCodeNumberFinish","nullHashFunc","HashBucket","constructor","keys","values","HashMap","keyEqualFunc","keyHashFunc","buckets","Map","findBucketIndex","bucket","k","i","length","findBucket","bw","get","bi","add","set","push","delete","splice","clear","size","acc","j"],"sources":["/Users/bhanudahiya/Desktop/ledger-IQ/node_modules/@antv/l7-renderer/es/device/utils/HashMap.js"],"sourcesContent":["// src/device/utils/HashMap.ts\nfunction hashCodeNumberUpdate(hash, v = 0) {\n  hash += v;\n  hash += hash << 10;\n  hash += hash >>> 6;\n  return hash >>> 0;\n}\nfunction hashCodeNumberFinish(hash) {\n  hash += hash << 3;\n  hash ^= hash >>> 11;\n  hash += hash << 15;\n  return hash >>> 0;\n}\nfunction nullHashFunc() {\n  return 0;\n}\nvar HashBucket = class {\n  constructor() {\n    this.keys = [];\n    this.values = [];\n  }\n};\nvar HashMap = class {\n  constructor(keyEqualFunc, keyHashFunc) {\n    this.keyEqualFunc = keyEqualFunc;\n    this.keyHashFunc = keyHashFunc;\n    this.buckets = /* @__PURE__ */ new Map();\n  }\n  findBucketIndex(bucket, k) {\n    for (let i = 0; i < bucket.keys.length; i++)\n      if (this.keyEqualFunc(k, bucket.keys[i]))\n        return i;\n    return -1;\n  }\n  findBucket(k) {\n    const bw = this.keyHashFunc(k);\n    return this.buckets.get(bw);\n  }\n  get(k) {\n    const bucket = this.findBucket(k);\n    if (bucket === void 0)\n      return null;\n    const bi = this.findBucketIndex(bucket, k);\n    if (bi < 0)\n      return null;\n    return bucket.values[bi];\n  }\n  add(k, v) {\n    const bw = this.keyHashFunc(k);\n    if (this.buckets.get(bw) === void 0)\n      this.buckets.set(bw, new HashBucket());\n    const bucket = this.buckets.get(bw);\n    bucket.keys.push(k);\n    bucket.values.push(v);\n  }\n  delete(k) {\n    const bucket = this.findBucket(k);\n    if (bucket === void 0)\n      return;\n    const bi = this.findBucketIndex(bucket, k);\n    if (bi === -1)\n      return;\n    bucket.keys.splice(bi, 1);\n    bucket.values.splice(bi, 1);\n  }\n  clear() {\n    this.buckets.clear();\n  }\n  size() {\n    let acc = 0;\n    for (const bucket of this.buckets.values())\n      acc += bucket.values.length;\n    return acc;\n  }\n  *values() {\n    for (const bucket of this.buckets.values())\n      for (let j = bucket.values.length - 1; j >= 0; j--)\n        yield bucket.values[j];\n  }\n};\nexport {\n  HashMap,\n  hashCodeNumberFinish,\n  hashCodeNumberUpdate,\n  nullHashFunc\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}