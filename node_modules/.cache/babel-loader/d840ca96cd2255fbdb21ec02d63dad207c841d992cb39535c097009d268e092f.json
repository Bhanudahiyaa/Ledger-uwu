{"ast":null,"code":"import { __awaiter, __decorate, __metadata } from \"tslib\";\nimport { inject, injectable, postConstruct } from 'mana-syringe';\nimport { StringExt } from '@antv/x6';\nimport { ICommandHandler, ICommandContextProvider } from '../../command/interface';\nimport { XFlowEdgeCommands } from '../constant';\nimport { Disposable } from '../../common/disposable';\nexport var NsAddEdge;\n(function (NsAddEdge) {\n  /** Command: 用于注册named factory */\n  NsAddEdge.command = XFlowEdgeCommands.ADD_EDGE;\n  /** hookName */\n  NsAddEdge.hookKey = 'addEdge';\n  /** edge id 类型 */\n  NsAddEdge.createEdgeId = edge => {\n    if (StringExt.isString(edge.source)) {\n      return `${edge.source}:${edge.sourcePortId}-${edge.target}:${edge.targetPortId}`;\n    }\n    if (isX6EdgeConfig(edge)) {\n      const x6EdgeConfig = edge;\n      return `${x6EdgeConfig.source.cell}:${x6EdgeConfig.source.port}-${x6EdgeConfig.target.cell}:${x6EdgeConfig.target.port}`;\n    }\n    if (isX6EdgePlainConfig(edge)) {\n      const x6EdgeConfig = edge;\n      return `${x6EdgeConfig.sourceCell}:${x6EdgeConfig.sourcePort}-${x6EdgeConfig.targetCell}:${x6EdgeConfig.targetPort}`;\n    }\n  };\n  function isX6EdgeConfig(edge) {\n    return edge.source && edge.source.cell && StringExt.isString(edge.source.cell);\n  }\n  NsAddEdge.isX6EdgeConfig = isX6EdgeConfig;\n  function isX6EdgePlainConfig(edge) {\n    return edge.sourceCell && StringExt.isString(edge.sourceCell);\n  }\n  NsAddEdge.isX6EdgePlainConfig = isX6EdgePlainConfig;\n})(NsAddEdge || (NsAddEdge = {}));\nlet AddEdgeCommand = class AddEdgeCommand {\n  constructor() {\n    /** 处理edgeConfig的兜底逻辑 */\n    this.processEdgeConfig = (args, edge) => __awaiter(this, void 0, void 0, function* () {\n      /** 处理edgeConfig没有返回id的问题 */\n      if (!edge.id) {\n        const {\n          createIdService = NsAddEdge.createEdgeId\n        } = args;\n        edge.id = yield createIdService(edge);\n      }\n      /** 处理xflow edge 和x6 edge的字段差异  */\n      if (edge.sourcePortId && !edge.sourcePort) {\n        edge.sourcePort = edge.sourcePortId;\n        edge.targetPort = edge.targetPortId;\n      }\n      return edge;\n    });\n    /** 执行Cmd */\n    this.execute = () => __awaiter(this, void 0, void 0, function* () {\n      const {\n        args,\n        hooks: runtimeHook\n      } = this.ctx.getArgs();\n      const hooks = this.ctx.getHooks();\n      const result = yield hooks.addEdge.call(/** 执行 hooks pipeline处理args */\n      args, /** 执行 callback */\n      handlerArgs => __awaiter(this, void 0, void 0, function* () {\n        const {\n          cellFactory,\n          createEdgeService,\n          commandService,\n          options\n        } = handlerArgs;\n        const graph = yield this.ctx.getX6Graph();\n        let rawEdge = handlerArgs.edgeConfig;\n        // 通过createEdgeService来获取 id/是否可以添加的信息，如果返回的nodeid为空则不添加到画布\n        if (createEdgeService) {\n          const res = yield createEdgeService(handlerArgs);\n          if (typeof res === 'boolean') {\n            return {\n              err: 'createEdgeService rejected'\n            };\n          }\n          rawEdge = res;\n        }\n        const edgeConfig = yield this.processEdgeConfig(handlerArgs, rawEdge);\n        let edgeCell;\n        const eventOptions = Object.assign(Object.assign({}, options), {\n          isCommand: true\n        });\n        if (cellFactory) {\n          const cell = yield cellFactory(edgeConfig, this);\n          edgeCell = graph.addEdge(cell, eventOptions);\n        } else {\n          edgeCell = graph.addEdge(Object.assign(Object.assign({}, edgeConfig), {\n            /** 由于X6的实现是React节点挂在label上的, 所以必须要给label设置值 */\n            label: (edgeConfig === null || edgeConfig === void 0 ? void 0 : edgeConfig.label) || edgeConfig,\n            data: Object.assign({}, edgeConfig)\n          }), eventOptions);\n        }\n        /** 创建 undo */\n        const undo = Disposable.create(() => {\n          commandService.executeCommand(XFlowEdgeCommands.DEL_EDGE.id, {\n            x6Edge: edgeCell\n          });\n        });\n        /** add undo */\n        this.ctx.addUndo(undo);\n        return {\n          edgeConfig: edgeConfig,\n          edgeCell\n        };\n      }), runtimeHook);\n      this.ctx.setResult(result);\n      return this;\n    });\n    /** undo cmd */\n    this.undo = () => __awaiter(this, void 0, void 0, function* () {\n      this.ctx.undo();\n      return this;\n    });\n    /** redo cmd */\n    this.redo = () => __awaiter(this, void 0, void 0, function* () {\n      if (!this.isUndoable) {\n        yield this.execute();\n      }\n      return this;\n    });\n  }\n  init() {\n    this.ctx = this.contextProvider();\n  }\n  isUndoable() {\n    return this.ctx.isUndoable();\n  }\n};\n__decorate([inject(ICommandContextProvider), __metadata(\"design:type\", Object)], AddEdgeCommand.prototype, \"contextProvider\", void 0);\n__decorate([postConstruct(), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", []), __metadata(\"design:returntype\", void 0)], AddEdgeCommand.prototype, \"init\", null);\nAddEdgeCommand = __decorate([injectable({\n  token: {\n    token: ICommandHandler,\n    named: NsAddEdge.command.id\n  }\n})\n/** 创建节点命令 */], AddEdgeCommand);\nexport { AddEdgeCommand };","map":{"version":3,"names":["inject","injectable","postConstruct","StringExt","ICommandHandler","ICommandContextProvider","XFlowEdgeCommands","Disposable","NsAddEdge","command","ADD_EDGE","hookKey","createEdgeId","edge","isString","source","sourcePortId","target","targetPortId","isX6EdgeConfig","x6EdgeConfig","cell","port","isX6EdgePlainConfig","sourceCell","sourcePort","targetCell","targetPort","AddEdgeCommand","constructor","processEdgeConfig","args","__awaiter","id","createIdService","execute","hooks","runtimeHook","ctx","getArgs","getHooks","result","addEdge","call","handlerArgs","cellFactory","createEdgeService","commandService","options","graph","getX6Graph","rawEdge","edgeConfig","res","err","edgeCell","eventOptions","Object","assign","isCommand","label","data","undo","create","executeCommand","DEL_EDGE","x6Edge","addUndo","setResult","redo","isUndoable","init","contextProvider","__decorate","token","named"],"sources":["../../../src/command-contributions/edge/edge-add.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}