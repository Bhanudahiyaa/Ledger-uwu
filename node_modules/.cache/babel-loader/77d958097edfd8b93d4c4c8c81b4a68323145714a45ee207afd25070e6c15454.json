{"ast":null,"code":"var __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\n\n// src/parser/geojson.ts\nimport { getCoords } from \"@turf/invariant\";\nimport { flattenEach } from \"@turf/meta\";\nimport { geojsonRewind } from \"../utils/util\";\nfunction djb2hash(field) {\n  const str = field.toString();\n  let hash = 5381;\n  let i = str.length;\n  while (i) {\n    hash = hash * 33 ^ str.charCodeAt(--i);\n  }\n  return hash >>> 0;\n}\nfunction getFeatureID(feature, key) {\n  if (key === void 0) {\n    return null;\n  }\n  if (!isNaN(feature.properties[key] * 1)) {\n    return feature.properties[key] * 1;\n  }\n  if (feature.properties && feature.properties[key]) {\n    return djb2hash(feature.properties[key] + \"\") % 1000019;\n  }\n  return null;\n}\nfunction geoJSON(data, cfg) {\n  const resultData = [];\n  const featureKeys = {};\n  if (!data.features) {\n    data.features = [];\n    return {\n      dataArray: []\n    };\n  }\n  data.features = data.features.filter(item => {\n    const geometry = item.geometry;\n    return item != null && geometry && geometry.type && geometry.coordinates && geometry.coordinates.length > 0;\n  });\n  data = geojsonRewind(data);\n  if (data.features.length === 0) {\n    return {\n      dataArray: [],\n      featureKeys\n    };\n  }\n  flattenEach(data, (currentFeature, featureIndex) => {\n    let featureId = getFeatureID(currentFeature, cfg == null ? void 0 : cfg.featureId);\n    if (featureId === null) {\n      featureId = featureIndex;\n    }\n    const sortedID = featureId;\n    const coord = getCoords(currentFeature);\n    const dataItem = __spreadProps(__spreadValues({}, currentFeature.properties), {\n      coordinates: coord,\n      _id: sortedID\n    });\n    resultData.push(dataItem);\n  });\n  return {\n    dataArray: resultData,\n    featureKeys\n  };\n}\nexport { geoJSON as default };","map":{"version":3,"names":["__defProp","Object","defineProperty","__defProps","defineProperties","__getOwnPropDescs","getOwnPropertyDescriptors","__getOwnPropSymbols","getOwnPropertySymbols","__hasOwnProp","prototype","hasOwnProperty","__propIsEnum","propertyIsEnumerable","__defNormalProp","obj","key","value","enumerable","configurable","writable","__spreadValues","a","b","prop","call","__spreadProps","getCoords","flattenEach","geojsonRewind","djb2hash","field","str","toString","hash","i","length","charCodeAt","getFeatureID","feature","isNaN","properties","geoJSON","data","cfg","resultData","featureKeys","features","dataArray","filter","item","geometry","type","coordinates","currentFeature","featureIndex","featureId","sortedID","coord","dataItem","_id","push","default"],"sources":["/Users/bhanudahiya/Desktop/ledger-IQ/node_modules/@antv/l7-source/es/parser/geojson.js"],"sourcesContent":["var __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\n\n// src/parser/geojson.ts\nimport { getCoords } from \"@turf/invariant\";\nimport { flattenEach } from \"@turf/meta\";\nimport { geojsonRewind } from \"../utils/util\";\nfunction djb2hash(field) {\n  const str = field.toString();\n  let hash = 5381;\n  let i = str.length;\n  while (i) {\n    hash = hash * 33 ^ str.charCodeAt(--i);\n  }\n  return hash >>> 0;\n}\nfunction getFeatureID(feature, key) {\n  if (key === void 0) {\n    return null;\n  }\n  if (!isNaN(feature.properties[key] * 1)) {\n    return feature.properties[key] * 1;\n  }\n  if (feature.properties && feature.properties[key]) {\n    return djb2hash(feature.properties[key] + \"\") % 1000019;\n  }\n  return null;\n}\nfunction geoJSON(data, cfg) {\n  const resultData = [];\n  const featureKeys = {};\n  if (!data.features) {\n    data.features = [];\n    return {\n      dataArray: []\n    };\n  }\n  data.features = data.features.filter((item) => {\n    const geometry = item.geometry;\n    return item != null && geometry && geometry.type && geometry.coordinates && geometry.coordinates.length > 0;\n  });\n  data = geojsonRewind(data);\n  if (data.features.length === 0) {\n    return {\n      dataArray: [],\n      featureKeys\n    };\n  }\n  flattenEach(data, (currentFeature, featureIndex) => {\n    let featureId = getFeatureID(currentFeature, cfg == null ? void 0 : cfg.featureId);\n    if (featureId === null) {\n      featureId = featureIndex;\n    }\n    const sortedID = featureId;\n    const coord = getCoords(currentFeature);\n    const dataItem = __spreadProps(__spreadValues({}, currentFeature.properties), {\n      coordinates: coord,\n      _id: sortedID\n    });\n    resultData.push(dataItem);\n  });\n  return {\n    dataArray: resultData,\n    featureKeys\n  };\n}\nexport {\n  geoJSON as default\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}