{"ast":null,"code":"import { isFunction, isObject, isString, isNumber, isBoolean, isArray } from '@antv/util';\n/**\n * 获得映射函数\n * @param mappingFields\n * @param callback\n */\nexport function getMappingFunction(mappingFields, callback) {\n  return (...args) => {\n    const params = {};\n    mappingFields.forEach((f, index) => {\n      params[f] = args[index];\n    });\n    delete params['undefined'];\n    return callback(params);\n  };\n}\nexport class MappingLayer {\n  static shape(layer, shape) {\n    /**\n     * shape 的几种情况\n     * layer.shape('cicle');\n     * layer.shape('shape', ['cicle', 'square']);\n     * layer.shape('x', (x) => 'cicle');\n     * layer.shape('x*y', (x, y) => 'cicle');\n     */\n    if (isString(shape)) {\n      layer.shape(shape);\n    } else if (isFunction(shape)) {\n      // TODO: shape mappingFields\n      const mappingFields = [];\n      layer.shape(mappingFields.join('*'), getMappingFunction(mappingFields, shape));\n    } else if (isObject(shape)) {\n      const field = shape.field ? shape.field : '';\n      if (isFunction(shape.value)) {\n        const mappingFields = isArray(field) ? field : field.split('*');\n        layer.shape(field, getMappingFunction(mappingFields, shape.value));\n      } else {\n        layer.shape(field, shape.value);\n      }\n      // scale\n      if (isString(field) && shape.scale) {\n        MappingLayer.scale(layer, field, shape.scale);\n      }\n    }\n  }\n  static size(layer, size) {\n    /**\n     * size 的几种情况\n     * layer.size(10);\n     * layer.size('size', [10, 20]);\n     * layer.size('x', (x) => 10);\n     * layer.size('x*y', (x, y) => 10);\n     */\n    if (isNumber(size)) {\n      layer.size(size);\n    } else if (isArray(size)) {\n      layer.size(size);\n    } else if (isFunction(size)) {\n      // TODO: size mappingFields\n      const mappingFields = [];\n      layer.size(mappingFields.join('*'), getMappingFunction(mappingFields, size));\n    } else if (isObject(size)) {\n      const field = size.field ? size.field : '';\n      if (isFunction(size.value)) {\n        const mappingFields = isArray(field) ? field : field.split('*');\n        layer.size(field, getMappingFunction(mappingFields, size.value));\n      } else {\n        layer.size(field, size.value);\n      }\n      // scale\n      if (isString(field) && size.scale) {\n        MappingLayer.scale(layer, field, size.scale);\n      }\n    }\n  }\n  static color(layer, color) {\n    /**\n     * color 的几种情况\n     * layer.color('red');\n     * layer.color('color', ['red', 'blue']);\n     * layer.color('x', (x) => 'red');\n     * layer.color('x*y', (x, y) => 'red');\n     */\n    if (isString(color)) {\n      layer.color(color);\n    } else if (isFunction(color)) {\n      // TODO: color mappingFields\n      const mappingFields = [];\n      layer.color(mappingFields.join('*'), getMappingFunction(mappingFields, color));\n    } else if (isObject(color)) {\n      const field = color.field ? color.field : '';\n      if (isFunction(color.value)) {\n        const mappingFields = isArray(field) ? field : field.split('*');\n        layer.color(field, getMappingFunction(mappingFields, color.value));\n      } else {\n        layer.color(field, color.value);\n      }\n      // scale\n      if (isString(field) && color.scale) {\n        MappingLayer.scale(layer, field, color.scale);\n      }\n    }\n  }\n  static style(layer, style) {\n    style && layer.style(style);\n  }\n  static state(layer, state) {\n    const {\n      active,\n      select\n    } = state;\n    active && layer.active(active);\n    select && layer.select(select);\n  }\n  static rotate(layer, rotate) {\n    /**\n     * rotate 的几种情况\n     * layer.rotate(45);\n     * layer.rotate('rotate', [45, 90]);\n     * layer.rotate('x', (x) => 45);\n     * layer.rotate('x*y', (x, y) => 45);\n     */\n    if (isString(rotate)) {\n      // TODO: L7 rotate\n      // layer.rotate(rotate);\n    } else if (isFunction(rotate)) {\n      // TODO: rotate isFunction\n    } else if (isObject(rotate)) {\n      // TODO: L7 rotate\n    }\n  }\n  static texture(layer, texture) {\n    /**\n     * texture 的几种情况\n     * layer.texture('plane');\n     */\n    if (isString(texture)) {\n      layer.texture(texture);\n    }\n  }\n  static animate(layer, animate) {\n    /**\n     * animate 的几种情况\n     * layer.animate(true);\n     * layer.animate({rings: 10});\n     */\n    if (isBoolean(animate) || isObject(animate)) {\n      layer.animate(animate);\n    }\n  }\n  static scale(layer, field, cfg) {\n    /**\n     * scale 的几种情况\n     * layer.scale('name', {type: 'cat'});\n     * layer.scale({name: {type: 'cat'}, value: {type: 'linear'}});\n     */\n    layer.scale(field, cfg);\n  }\n  static filter(layer, filter) {\n    /**\n     * scale 的几种情况\n     * layer.filter('name', ({ name }) => name === 'name');\n     */\n    const field = filter.field ? filter.field : '';\n    const mappingFields = isArray(field) ? field : field.split('*');\n    layer.filter(mappingFields.join('*'), getMappingFunction(mappingFields, filter.value));\n  }\n}","map":{"version":3,"names":["isFunction","isObject","isString","isNumber","isBoolean","isArray","getMappingFunction","mappingFields","callback","args","params","forEach","f","index","MappingLayer","shape","layer","join","field","value","split","scale","size","color","style","state","active","select","rotate","texture","animate","cfg","filter"],"sources":["../../../../src/adaptor/layer/index.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}