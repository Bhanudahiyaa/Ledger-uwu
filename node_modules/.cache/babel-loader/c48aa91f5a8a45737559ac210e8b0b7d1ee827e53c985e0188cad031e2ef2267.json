{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { createLayerContainer } from '@antv/l7-core';\nimport { EventEmitter } from 'eventemitter3';\nimport PolygonLayer from \"../../polygon\";\nimport { isNeedMask } from \"./util\";\nexport default class Tile extends EventEmitter {\n  constructor(sourceTile, parent) {\n    super();\n    _defineProperty(this, \"x\", void 0);\n    _defineProperty(this, \"y\", void 0);\n    _defineProperty(this, \"z\", void 0);\n    _defineProperty(this, \"key\", void 0);\n    _defineProperty(this, \"parent\", void 0);\n    _defineProperty(this, \"sourceTile\", void 0);\n    _defineProperty(this, \"visible\", true);\n    _defineProperty(this, \"layers\", []);\n    _defineProperty(this, \"isLoaded\", false);\n    _defineProperty(this, \"tileMaskLayers\", []);\n    _defineProperty(this, \"tileMask\", void 0);\n    this.parent = parent;\n    this.sourceTile = sourceTile;\n    this.x = sourceTile.x;\n    this.y = sourceTile.y;\n    this.z = sourceTile.z;\n    this.key = `${this.x}_${this.y}_${this.z}`;\n  }\n  getLayers() {\n    return this.layers;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  styleUpdate(...arg) {\n    return;\n  }\n  lnglatInBounds(lnglat) {\n    const [minLng, minLat, maxLng, maxLat] = this.sourceTile.bounds;\n    const {\n      lng,\n      lat\n    } = lnglat;\n    return lng >= minLng && lng <= maxLng && lat >= minLat && lat <= maxLat;\n  }\n  getLayerOptions() {\n    var _options$maskLayers;\n    const options = this.parent.getLayerConfig();\n    return _objectSpread(_objectSpread({}, options), {}, {\n      textAllowOverlap: true,\n      // 文本允许重叠\n      autoFit: false,\n      maskLayers: this.getMaskLayer(),\n      tileMask: isNeedMask(this.parent.type),\n      mask: options.mask || ((_options$maskLayers = options.maskLayers) === null || _options$maskLayers === void 0 ? void 0 : _options$maskLayers.length) !== 0 && options.enableMask\n    });\n  }\n  // 获取Mask 图层\n  getMaskLayer() {\n    const {\n      maskLayers\n    } = this.parent.getLayerConfig();\n    const layers = [];\n    maskLayers === null || maskLayers === void 0 || maskLayers.forEach(layer => {\n      if (!layer.tileLayer) {\n        // 非瓦片图层返回图层本身，瓦片图层返回对应的行列号图层\n        layers.push(layer);\n        return layer;\n      }\n      const tileLayer = layer.tileLayer;\n      const tile = tileLayer.getTile(this.sourceTile.key);\n      const l = tile === null || tile === void 0 ? void 0 : tile.getLayers()[0];\n      if (l) {\n        layers.push(l);\n      }\n    });\n    return layers;\n  }\n  addTileMask() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const mask = new PolygonLayer({\n        name: 'mask',\n        visible: true,\n        enablePicking: false\n      }).source({\n        type: 'FeatureCollection',\n        features: [_this.sourceTile.bboxPolygon]\n      }, {\n        parser: {\n          type: 'geojson',\n          featureId: 'id'\n        }\n      }).shape('fill').color('#0f0').style({\n        opacity: 0.5\n      });\n      const container = createLayerContainer(_this.parent.container);\n      mask.setContainer(container);\n      yield mask.init();\n      _this.tileMask = mask;\n      const mainLayer = _this.getMainLayer();\n      if (mainLayer !== undefined) {\n        mainLayer.tileMask = mask;\n      }\n      return mask;\n    })();\n  }\n  // 全局 Mask\n  addMask(layer, mask) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      const container = createLayerContainer(_this2.parent.container);\n      mask.setContainer(container);\n      yield mask.init();\n      layer.addMask(mask);\n      _this2.tileMaskLayers.push(mask);\n    })();\n  }\n  addLayer(layer) {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      // set flag\n      layer.isTileLayer = true;\n      const container = createLayerContainer(_this3.parent.container);\n      layer.setContainer(container);\n      _this3.layers.push(layer);\n      yield layer.init();\n    })();\n  }\n  updateVisible(value) {\n    this.visible = value;\n    this.updateOptions('visible', value);\n  }\n  updateOptions(key, value) {\n    this.layers.forEach(l => {\n      l.updateLayerConfig({\n        [key]: value\n      });\n    });\n  }\n\n  /**\n   * 一个 Tile 可能有多个 layer，但是在发生拾取、点击事件的时候只有一个生效\n   */\n  getMainLayer() {\n    return this.layers[0];\n  }\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  getFeatures(sourceLayer) {\n    return [];\n  }\n\n  /**\n   * 在一个 Tile 中可能存在一个相同 ID 的 feature\n   * @param id\n   * @returns\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  getFeatureById(id) {\n    return [];\n  }\n  destroy() {\n    var _this$tileMask;\n    (_this$tileMask = this.tileMask) === null || _this$tileMask === void 0 || _this$tileMask.destroy();\n    this.layers.forEach(layer => layer.destroy());\n  }\n}","map":{"version":3,"names":["_asyncToGenerator","_objectSpread","_defineProperty","createLayerContainer","EventEmitter","PolygonLayer","isNeedMask","Tile","constructor","sourceTile","parent","x","y","z","key","getLayers","layers","styleUpdate","arg","lnglatInBounds","lnglat","minLng","minLat","maxLng","maxLat","bounds","lng","lat","getLayerOptions","_options$maskLayers","options","getLayerConfig","textAllowOverlap","autoFit","maskLayers","getMaskLayer","tileMask","type","mask","length","enableMask","forEach","layer","tileLayer","push","tile","getTile","l","addTileMask","_this","name","visible","enablePicking","source","features","bboxPolygon","parser","featureId","shape","color","style","opacity","container","setContainer","init","mainLayer","getMainLayer","undefined","addMask","_this2","tileMaskLayers","addLayer","_this3","isTileLayer","updateVisible","value","updateOptions","updateLayerConfig","getFeatures","sourceLayer","getFeatureById","id","destroy","_this$tileMask"],"sources":["/Users/bhanudahiya/Desktop/ledger-IQ/node_modules/@antv/l7-layers/es/tile/tile/Tile.js"],"sourcesContent":["import _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { createLayerContainer } from '@antv/l7-core';\nimport { EventEmitter } from 'eventemitter3';\nimport PolygonLayer from \"../../polygon\";\nimport { isNeedMask } from \"./util\";\nexport default class Tile extends EventEmitter {\n  constructor(sourceTile, parent) {\n    super();\n    _defineProperty(this, \"x\", void 0);\n    _defineProperty(this, \"y\", void 0);\n    _defineProperty(this, \"z\", void 0);\n    _defineProperty(this, \"key\", void 0);\n    _defineProperty(this, \"parent\", void 0);\n    _defineProperty(this, \"sourceTile\", void 0);\n    _defineProperty(this, \"visible\", true);\n    _defineProperty(this, \"layers\", []);\n    _defineProperty(this, \"isLoaded\", false);\n    _defineProperty(this, \"tileMaskLayers\", []);\n    _defineProperty(this, \"tileMask\", void 0);\n    this.parent = parent;\n    this.sourceTile = sourceTile;\n    this.x = sourceTile.x;\n    this.y = sourceTile.y;\n    this.z = sourceTile.z;\n    this.key = `${this.x}_${this.y}_${this.z}`;\n  }\n  getLayers() {\n    return this.layers;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  styleUpdate(...arg) {\n    return;\n  }\n  lnglatInBounds(lnglat) {\n    const [minLng, minLat, maxLng, maxLat] = this.sourceTile.bounds;\n    const {\n      lng,\n      lat\n    } = lnglat;\n    return lng >= minLng && lng <= maxLng && lat >= minLat && lat <= maxLat;\n  }\n  getLayerOptions() {\n    var _options$maskLayers;\n    const options = this.parent.getLayerConfig();\n    return _objectSpread(_objectSpread({}, options), {}, {\n      textAllowOverlap: true,\n      // 文本允许重叠\n      autoFit: false,\n      maskLayers: this.getMaskLayer(),\n      tileMask: isNeedMask(this.parent.type),\n      mask: options.mask || ((_options$maskLayers = options.maskLayers) === null || _options$maskLayers === void 0 ? void 0 : _options$maskLayers.length) !== 0 && options.enableMask\n    });\n  }\n  // 获取Mask 图层\n  getMaskLayer() {\n    const {\n      maskLayers\n    } = this.parent.getLayerConfig();\n    const layers = [];\n    maskLayers === null || maskLayers === void 0 || maskLayers.forEach(layer => {\n      if (!layer.tileLayer) {\n        // 非瓦片图层返回图层本身，瓦片图层返回对应的行列号图层\n        layers.push(layer);\n        return layer;\n      }\n      const tileLayer = layer.tileLayer;\n      const tile = tileLayer.getTile(this.sourceTile.key);\n      const l = tile === null || tile === void 0 ? void 0 : tile.getLayers()[0];\n      if (l) {\n        layers.push(l);\n      }\n    });\n    return layers;\n  }\n  addTileMask() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const mask = new PolygonLayer({\n        name: 'mask',\n        visible: true,\n        enablePicking: false\n      }).source({\n        type: 'FeatureCollection',\n        features: [_this.sourceTile.bboxPolygon]\n      }, {\n        parser: {\n          type: 'geojson',\n          featureId: 'id'\n        }\n      }).shape('fill').color('#0f0').style({\n        opacity: 0.5\n      });\n      const container = createLayerContainer(_this.parent.container);\n      mask.setContainer(container);\n      yield mask.init();\n      _this.tileMask = mask;\n      const mainLayer = _this.getMainLayer();\n      if (mainLayer !== undefined) {\n        mainLayer.tileMask = mask;\n      }\n      return mask;\n    })();\n  }\n  // 全局 Mask\n  addMask(layer, mask) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      const container = createLayerContainer(_this2.parent.container);\n      mask.setContainer(container);\n      yield mask.init();\n      layer.addMask(mask);\n      _this2.tileMaskLayers.push(mask);\n    })();\n  }\n  addLayer(layer) {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      // set flag\n      layer.isTileLayer = true;\n      const container = createLayerContainer(_this3.parent.container);\n      layer.setContainer(container);\n      _this3.layers.push(layer);\n      yield layer.init();\n    })();\n  }\n  updateVisible(value) {\n    this.visible = value;\n    this.updateOptions('visible', value);\n  }\n  updateOptions(key, value) {\n    this.layers.forEach(l => {\n      l.updateLayerConfig({\n        [key]: value\n      });\n    });\n  }\n\n  /**\n   * 一个 Tile 可能有多个 layer，但是在发生拾取、点击事件的时候只有一个生效\n   */\n  getMainLayer() {\n    return this.layers[0];\n  }\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  getFeatures(sourceLayer) {\n    return [];\n  }\n\n  /**\n   * 在一个 Tile 中可能存在一个相同 ID 的 feature\n   * @param id\n   * @returns\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  getFeatureById(id) {\n    return [];\n  }\n  destroy() {\n    var _this$tileMask;\n    (_this$tileMask = this.tileMask) === null || _this$tileMask === void 0 || _this$tileMask.destroy();\n    this.layers.forEach(layer => layer.destroy());\n  }\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}