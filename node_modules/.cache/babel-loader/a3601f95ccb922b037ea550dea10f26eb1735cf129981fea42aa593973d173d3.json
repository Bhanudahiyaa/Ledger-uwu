{"ast":null,"code":"var __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\n\n// src/lineAtOffset/index.ts\nimport { arcLineAtOffset } from \"./arc\";\nimport { greatCircleLineAtOffset } from \"./greatCircle\";\nimport { pathLineAtOffset } from \"./line\";\nfunction lineAtOffset(source, option) {\n  const {\n    featureId\n  } = option;\n  let features = source.data.dataArray;\n  if (typeof featureId === \"number\") {\n    features = features.filter(({\n      id\n    }) => id === featureId);\n  }\n  return features.map(feature => {\n    const position = getLineOffsetPosition(feature, option);\n    return __spreadValues(__spreadValues({}, feature), position);\n  });\n}\nfunction lineAtOffsetAsyc(source, option) {\n  return new Promise(resolve => {\n    if (source.inited) {\n      resolve(lineAtOffset(source, option));\n    } else {\n      source.once(\"update\", () => {\n        resolve(lineAtOffset(source, option));\n      });\n    }\n  });\n}\nfunction getLineOffsetPosition(feature, option) {\n  const {\n    offset,\n    shape,\n    thetaOffset,\n    segmentNumber = 30,\n    autoFit = true\n  } = option;\n  const {\n    coordinates\n  } = feature;\n  if (shape === \"line\") {\n    return pathLineAtOffset(coordinates, offset);\n  }\n  const source = coordinates[0];\n  const target = coordinates[1];\n  const linetheatOffset = typeof thetaOffset === \"string\" ? feature[thetaOffset] || 0 : thetaOffset;\n  let calFunc;\n  switch (shape) {\n    case \"arc\":\n      calFunc = arcLineAtOffset;\n      break;\n    case \"greatcircle\":\n      calFunc = greatCircleLineAtOffset;\n      break;\n    default:\n      calFunc = arcLineAtOffset;\n  }\n  const [lng, lat, height] = calFunc(source, target, offset, linetheatOffset, segmentNumber, autoFit);\n  return {\n    lng,\n    lat,\n    height\n  };\n}\nexport { lineAtOffset, lineAtOffsetAsyc };","map":{"version":3,"names":["__defProp","Object","defineProperty","__getOwnPropSymbols","getOwnPropertySymbols","__hasOwnProp","prototype","hasOwnProperty","__propIsEnum","propertyIsEnumerable","__defNormalProp","obj","key","value","enumerable","configurable","writable","__spreadValues","a","b","prop","call","arcLineAtOffset","greatCircleLineAtOffset","pathLineAtOffset","lineAtOffset","source","option","featureId","features","data","dataArray","filter","id","map","feature","position","getLineOffsetPosition","lineAtOffsetAsyc","Promise","resolve","inited","once","offset","shape","thetaOffset","segmentNumber","autoFit","coordinates","target","linetheatOffset","calFunc","lng","lat","height"],"sources":["/Users/bhanudahiya/Desktop/ledger-IQ/node_modules/@antv/l7-utils/es/lineAtOffset/index.js"],"sourcesContent":["var __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\n\n// src/lineAtOffset/index.ts\nimport { arcLineAtOffset } from \"./arc\";\nimport { greatCircleLineAtOffset } from \"./greatCircle\";\nimport { pathLineAtOffset } from \"./line\";\nfunction lineAtOffset(source, option) {\n  const { featureId } = option;\n  let features = source.data.dataArray;\n  if (typeof featureId === \"number\") {\n    features = features.filter(({ id }) => id === featureId);\n  }\n  return features.map((feature) => {\n    const position = getLineOffsetPosition(feature, option);\n    return __spreadValues(__spreadValues({}, feature), position);\n  });\n}\nfunction lineAtOffsetAsyc(source, option) {\n  return new Promise((resolve) => {\n    if (source.inited) {\n      resolve(lineAtOffset(source, option));\n    } else {\n      source.once(\"update\", () => {\n        resolve(lineAtOffset(source, option));\n      });\n    }\n  });\n}\nfunction getLineOffsetPosition(feature, option) {\n  const { offset, shape, thetaOffset, segmentNumber = 30, autoFit = true } = option;\n  const { coordinates } = feature;\n  if (shape === \"line\") {\n    return pathLineAtOffset(coordinates, offset);\n  }\n  const source = coordinates[0];\n  const target = coordinates[1];\n  const linetheatOffset = typeof thetaOffset === \"string\" ? feature[thetaOffset] || 0 : thetaOffset;\n  let calFunc;\n  switch (shape) {\n    case \"arc\":\n      calFunc = arcLineAtOffset;\n      break;\n    case \"greatcircle\":\n      calFunc = greatCircleLineAtOffset;\n      break;\n    default:\n      calFunc = arcLineAtOffset;\n  }\n  const [lng, lat, height] = calFunc(\n    source,\n    target,\n    offset,\n    linetheatOffset,\n    segmentNumber,\n    autoFit\n  );\n  return {\n    lng,\n    lat,\n    height\n  };\n}\nexport {\n  lineAtOffset,\n  lineAtOffsetAsyc\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}