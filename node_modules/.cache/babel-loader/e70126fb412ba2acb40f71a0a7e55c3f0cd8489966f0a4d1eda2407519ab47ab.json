{"ast":null,"code":"import { __awaiter, __decorate, __metadata } from \"tslib\";\nimport { inject, injectable, postConstruct } from 'mana-syringe';\nimport { ICommandHandler, ICommandContextProvider } from '../../command/interface';\nimport { XFlowEdgeCommands, XFlowNodeCommands } from '../constant';\nexport var NsHighlightNode;\n(function (NsHighlightNode) {\n  NsHighlightNode.command = XFlowNodeCommands.HIGHLIGHT_NODE;\n  NsHighlightNode.hookKey = 'highlightNode';\n})(NsHighlightNode || (NsHighlightNode = {}));\nlet HighlightNodeCommand = class HighlightNodeCommand {\n  constructor() {\n    this.execute = () => __awaiter(this, void 0, void 0, function* () {\n      const {\n        args,\n        hooks: runtimeHook\n      } = this.ctx.getArgs();\n      const hooks = this.ctx.getHooks();\n      const result = yield hooks.highlightNode.call(args, handlerArgs => __awaiter(this, void 0, void 0, function* () {\n        const x6Graph = yield this.ctx.getX6Graph();\n        const {\n          nodeId,\n          stroke,\n          strokeWidth\n        } = handlerArgs;\n        const x6Node = x6Graph === null || x6Graph === void 0 ? void 0 : x6Graph.getCellById(nodeId);\n        if (!x6Node) {\n          console.error(nodeId, 'this nodeId is not exist');\n          return {\n            err: 'this nodeId is not exist'\n          };\n        } else {\n          /** 高亮节点 */\n          x6Node === null || x6Node === void 0 ? void 0 : x6Node.setAttrs({\n            body: {\n              stroke: stroke || '#7c68fc',\n              strokeWidth: strokeWidth || 2\n            }\n          });\n          /** 节点关联的连线, 联动高亮 */\n          if (handlerArgs === null || handlerArgs === void 0 ? void 0 : handlerArgs.isHighlightRelatedLines) {\n            const {\n              edgeStroke,\n              edgeStrokeWidth\n            } = handlerArgs;\n            const allEdges = x6Graph === null || x6Graph === void 0 ? void 0 : x6Graph.getEdges();\n            allEdges.forEach(x6Edge => {\n              const x6EdgeData = x6Edge === null || x6Edge === void 0 ? void 0 : x6Edge.getData();\n              handlerArgs === null || handlerArgs === void 0 ? void 0 : handlerArgs.commandService.executeCommand(XFlowEdgeCommands.HIGHLIGHT_EDGE.id, {\n                edgeId: x6EdgeData === null || x6EdgeData === void 0 ? void 0 : x6EdgeData.id,\n                strokeColor: edgeStroke,\n                strokeWidth: edgeStrokeWidth\n              });\n            });\n          }\n        }\n        return {\n          err: null\n        };\n      }), runtimeHook);\n      this.ctx.setResult(result);\n      return this;\n    });\n    this.undo = () => __awaiter(this, void 0, void 0, function* () {\n      this.ctx.undo();\n      return this;\n    });\n    this.redo = () => __awaiter(this, void 0, void 0, function* () {\n      if (!this.ctx.isUndoable) {\n        yield this.execute();\n      }\n      return this;\n    });\n  }\n  init() {\n    this.ctx = this.contextProvider();\n  }\n  isUndoable() {\n    return this.ctx.isUndoable();\n  }\n};\n__decorate([inject(ICommandContextProvider), __metadata(\"design:type\", Object)], HighlightNodeCommand.prototype, \"contextProvider\", void 0);\n__decorate([postConstruct(), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", []), __metadata(\"design:returntype\", void 0)], HighlightNodeCommand.prototype, \"init\", null);\nHighlightNodeCommand = __decorate([injectable({\n  token: {\n    token: ICommandHandler,\n    named: NsHighlightNode.command.id\n  }\n})\n/** 节点高亮 */], HighlightNodeCommand);\nexport { HighlightNodeCommand };","map":{"version":3,"names":["inject","injectable","postConstruct","ICommandHandler","ICommandContextProvider","XFlowEdgeCommands","XFlowNodeCommands","NsHighlightNode","command","HIGHLIGHT_NODE","hookKey","HighlightNodeCommand","constructor","execute","__awaiter","args","hooks","runtimeHook","ctx","getArgs","getHooks","result","highlightNode","call","handlerArgs","x6Graph","getX6Graph","nodeId","stroke","strokeWidth","x6Node","getCellById","console","error","err","setAttrs","body","isHighlightRelatedLines","edgeStroke","edgeStrokeWidth","allEdges","getEdges","forEach","x6Edge","x6EdgeData","getData","commandService","executeCommand","HIGHLIGHT_EDGE","id","edgeId","strokeColor","setResult","undo","redo","isUndoable","init","contextProvider","__decorate","token","named"],"sources":["../../../src/command-contributions/node/node-highlight.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}