{"ast":null,"code":"import { PassType } from \"../IMultiPassRenderer\";\nimport BaseNormalPass from \"./BaseNormalPass\";\n\n/**\n * RenderPass，负责输出到后续 PostProcessor 的 readFBO 中\n */\nexport default class RenderPass extends BaseNormalPass {\n  getType() {\n    return PassType.Normal;\n  }\n  getName() {\n    return 'render';\n  }\n  init(layer, config) {\n    super.init(layer, config);\n  }\n  render(layer) {\n    const {\n      useFramebuffer,\n      clear\n    } = this.rendererService;\n    const readFBO = layer.multiPassRenderer.getPostProcessor().getReadFBO();\n    useFramebuffer(readFBO, () => {\n      clear({\n        color: [0, 0, 0, 0],\n        depth: 1,\n        stencil: 0,\n        framebuffer: readFBO\n      });\n      // render to post processor\n      layer.multiPassRenderer.setRenderFlag(false);\n      // layer.render();\n\n      layer.models.forEach(model => {\n        model.draw({\n          uniforms: layer.layerModel.getUninforms()\n        });\n      });\n      layer.multiPassRenderer.setRenderFlag(true);\n    });\n  }\n}","map":{"version":3,"names":["PassType","BaseNormalPass","RenderPass","getType","Normal","getName","init","layer","config","render","useFramebuffer","clear","rendererService","readFBO","multiPassRenderer","getPostProcessor","getReadFBO","color","depth","stencil","framebuffer","setRenderFlag","models","forEach","model","draw","uniforms","layerModel","getUninforms"],"sources":["/Users/bhanudahiya/Desktop/ledger-IQ/node_modules/@antv/l7-core/es/services/renderer/passes/RenderPass.js"],"sourcesContent":["import { PassType } from \"../IMultiPassRenderer\";\nimport BaseNormalPass from \"./BaseNormalPass\";\n\n/**\n * RenderPass，负责输出到后续 PostProcessor 的 readFBO 中\n */\nexport default class RenderPass extends BaseNormalPass {\n  getType() {\n    return PassType.Normal;\n  }\n  getName() {\n    return 'render';\n  }\n  init(layer, config) {\n    super.init(layer, config);\n  }\n  render(layer) {\n    const {\n      useFramebuffer,\n      clear\n    } = this.rendererService;\n    const readFBO = layer.multiPassRenderer.getPostProcessor().getReadFBO();\n    useFramebuffer(readFBO, () => {\n      clear({\n        color: [0, 0, 0, 0],\n        depth: 1,\n        stencil: 0,\n        framebuffer: readFBO\n      });\n      // render to post processor\n      layer.multiPassRenderer.setRenderFlag(false);\n      // layer.render();\n\n      layer.models.forEach(model => {\n        model.draw({\n          uniforms: layer.layerModel.getUninforms()\n        });\n      });\n      layer.multiPassRenderer.setRenderFlag(true);\n    });\n  }\n}"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,uBAAuB;AAChD,OAAOC,cAAc,MAAM,kBAAkB;;AAE7C;AACA;AACA;AACA,eAAe,MAAMC,UAAU,SAASD,cAAc,CAAC;EACrDE,OAAOA,CAAA,EAAG;IACR,OAAOH,QAAQ,CAACI,MAAM;EACxB;EACAC,OAAOA,CAAA,EAAG;IACR,OAAO,QAAQ;EACjB;EACAC,IAAIA,CAACC,KAAK,EAAEC,MAAM,EAAE;IAClB,KAAK,CAACF,IAAI,CAACC,KAAK,EAAEC,MAAM,CAAC;EAC3B;EACAC,MAAMA,CAACF,KAAK,EAAE;IACZ,MAAM;MACJG,cAAc;MACdC;IACF,CAAC,GAAG,IAAI,CAACC,eAAe;IACxB,MAAMC,OAAO,GAAGN,KAAK,CAACO,iBAAiB,CAACC,gBAAgB,CAAC,CAAC,CAACC,UAAU,CAAC,CAAC;IACvEN,cAAc,CAACG,OAAO,EAAE,MAAM;MAC5BF,KAAK,CAAC;QACJM,KAAK,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;QACnBC,KAAK,EAAE,CAAC;QACRC,OAAO,EAAE,CAAC;QACVC,WAAW,EAAEP;MACf,CAAC,CAAC;MACF;MACAN,KAAK,CAACO,iBAAiB,CAACO,aAAa,CAAC,KAAK,CAAC;MAC5C;;MAEAd,KAAK,CAACe,MAAM,CAACC,OAAO,CAACC,KAAK,IAAI;QAC5BA,KAAK,CAACC,IAAI,CAAC;UACTC,QAAQ,EAAEnB,KAAK,CAACoB,UAAU,CAACC,YAAY,CAAC;QAC1C,CAAC,CAAC;MACJ,CAAC,CAAC;MACFrB,KAAK,CAACO,iBAAiB,CAACO,aAAa,CAAC,IAAI,CAAC;IAC7C,CAAC,CAAC;EACJ;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}